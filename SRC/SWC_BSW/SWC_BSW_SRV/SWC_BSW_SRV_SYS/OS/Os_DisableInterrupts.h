/*
 * This is Os_DisableInterrupts.h, auto-generated for:
 *   Project: HCU_PATAC_OS
 *   Target:  TriCoreHighTec
 *   Variant: TC23x
 *   Version: 5.0.9
 */

/*
 * Include this header in order to allow any configured interrupt to be
 * disabled or enabled
 */
#ifndef OS_DISABLEINTERRUPTS_H
#define OS_DISABLEINTERRUPTS_H

/* -- Start expansion of <_tc23x.h> -- */
/**************************************************************************
**
** This file contains SFR descriptions for TC23x
** Generated at 2015-02-04 17:28:28 +0000
** from tc23x_um_sfrs_MCSFR.xml, UM_V1.1 supplied by Infineon
**
**************************************************************************/
#ifndef Os_TC23x_DEFS_H
#define Os_TC23x_DEFS_H
/* [MISRA 2004 Rule 18.4] Unions */ /*lint -save -e960 (range safe) */
typedef signed int signed_sfr_access_type;
typedef unsigned int unsigned_sfr_access_type;
#ifdef __TASKING__
typedef unsigned __sfrbit32 sfr_bitfield;
#else
typedef unsigned int sfr_bitfield;
#endif
typedef volatile union
{
	struct
	{
     sfr_bitfield ASI : 5; /* Address Space Identifier */
    /* const */ sfr_bitfield RES : 27; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_TASK_ASI_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield DAC : 10; /* Data Access Cacheability Segments 9H-0H */
    /* const */ sfr_bitfield DAC_10 : 1; /* Data Access Cacheability Segments AH */
     sfr_bitfield DAC_11 : 2; /* Data Access Cacheability Segments CH,BH */
    /* const */ sfr_bitfield DAC_13 : 3; /* Data Access Cacheability Segments FH,EH,DH */
    /* const */ sfr_bitfield RES : 16; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_PMA0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CAC : 10; /* Code Access Cacheability Segments 9H-0H */
    /* const */ sfr_bitfield CAC_10 : 1; /* Code Access Cacheability Segments AH */
     sfr_bitfield CAC_11 : 1; /* Code Access Cacheability Segments BH */
    /* const */ sfr_bitfield CAC_12 : 1; /* Code Access Cacheability Segments CH */
     sfr_bitfield CAC_13 : 1; /* Code Access Cacheability Segments DH */
    /* const */ sfr_bitfield CAC_14 : 2; /* Code Access Cacheability Segments FH,EH */
    /* const */ sfr_bitfield RES : 16; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_PMA1_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield PSI : 16; /* Peripheral Space Identifier Segments FH-0H */
    /* const */ sfr_bitfield RES : 16; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_PMA2_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PC : 1; /* Instruction Cache Memory SIST Mode Access Control */
    /* const */ sfr_bitfield RES : 1; /* Reserved */
     sfr_bitfield PT : 1; /* Program Tag Memory SIST Mode Access Control */
    /* const */ sfr_bitfield RES_3 : 5; /* Reserved */
     sfr_bitfield DC : 1; /* Data Cache Memory SIST Mode Access Control */
    /* const */ sfr_bitfield RES_9 : 1; /* Reserved */
     sfr_bitfield DT : 1; /* Data Tag Memory SIST Mode Access Control */
    /* const */ sfr_bitfield RES_11 : 5; /* Reserved */
    /* const */ sfr_bitfield RES_16 : 8; /* Reserved */
     sfr_bitfield IODT : 1; /* In-Order Data Transactions */
    /* const */ sfr_bitfield RES_25 : 7; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_SMACON_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield TA : 32; /* Transaction Address */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_DIEAR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield IED : 1; /* Integrity Error Detected */
    /* const */ sfr_bitfield IE_T : 1; /* Integrity Error - Tag Memory */
    /* const */ sfr_bitfield IE_C : 1; /* Integrity Error - Cache Memory */
    /* const */ sfr_bitfield IE_S : 1; /* Integrity Error - Scratchpad Memory */
    /* const */ sfr_bitfield IE_BI : 1; /* Integrity Error - Bus Integrity */
    /* const */ sfr_bitfield E_INFO : 6; /* Error Information */
    /* const */ sfr_bitfield IE_DUAL : 1; /* Dual Bit Error Detected */
    /* const */ sfr_bitfield IE_SP : 1; /* Safety Protection Error Detected */
    /* const */ sfr_bitfield IE_BS : 1; /* Bus Slave Access Indicator */
    /* const */ sfr_bitfield RES : 18; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_DIETR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PCINV : 1; /* Program Cache Invalidate */
     sfr_bitfield PBINV : 1; /* Program Buffer Invalidate */
    /* const */ sfr_bitfield RES : 30; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_PCON1_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield PCACHE_SZE : 16; /* Program Cache Size (ICACHE) in KBytes */
    /* const */ sfr_bitfield PSCRATCH_SZE : 16; /* Program Scratch Size in KBytes */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_PCON2_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield RES : 1; /* Reserved */
     sfr_bitfield PCBYP : 1; /* Program Cache Bypass */
    /* const */ sfr_bitfield RES_2 : 30; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_PCON0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield FRE : 1; /* Fetch Range Error */
    /* const */ sfr_bitfield RES : 1; /* Reserved */
     sfr_bitfield FBE : 1; /* Fetch Bus Error */
    /* const */ sfr_bitfield RES_3 : 9; /* Reserved */
     sfr_bitfield FPE : 1; /* Fetch Peripheral Error */
    /* const */ sfr_bitfield RES_13 : 1; /* Reserved */
     sfr_bitfield FME : 1; /* Fetch MSIST Error */
    /* const */ sfr_bitfield RES_15 : 17; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_PSTR_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield RES : 1; /* Reserved */
     sfr_bitfield DCBYP : 1; /* Data Cache Bypass */
    /* const */ sfr_bitfield RES_2 : 30; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_DCON0_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield DCACHE_SZE : 16; /* Data Cache Size */
    /* const */ sfr_bitfield DSCRATCH_SZE : 16; /* Data Scratch Size */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_DCON2_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield SRE : 1; /* Scratch Range Error */
     sfr_bitfield GAE : 1; /* Global Address Error */
     sfr_bitfield LBE : 1; /* Load Bus Error */
    /* const */ sfr_bitfield RES : 3; /* Reserved */
     sfr_bitfield CRE : 1; /* Cache Refill Error */
    /* const */ sfr_bitfield RES_7 : 7; /* Reserved */
     sfr_bitfield DTME : 1; /* DTAG MSIST Error */
     sfr_bitfield LOE : 1; /* Load Overlay Error */
     sfr_bitfield SDE : 1; /* Segment Difference Error */
     sfr_bitfield SCE : 1; /* Segment Crossing Error */
     sfr_bitfield CAC : 1; /* CSFR Access Error */
     sfr_bitfield MPE : 1; /* Memory Protection Error */
     sfr_bitfield CLE : 1; /* Context Location Error */
    /* const */ sfr_bitfield RES_21 : 3; /* Reserved */
     sfr_bitfield ALN : 1; /* Alignment Error */
    /* const */ sfr_bitfield RES_25 : 7; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_DSTR_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield RES : 3; /* Reserved */
     sfr_bitfield SBE : 1; /* Store Bus Error */
    /* const */ sfr_bitfield RES_4 : 5; /* Reserved */
     sfr_bitfield CWE : 1; /* Cache Writeback Error */
     sfr_bitfield CFE : 1; /* Cache Flush Error */
    /* const */ sfr_bitfield RES_11 : 3; /* Reserved */
     sfr_bitfield SOE : 1; /* Store Overlay Error */
     sfr_bitfield SME : 1; /* Store MIST Error */
    /* const */ sfr_bitfield RES_16 : 16; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_DATR_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield ERROR_ADDRESS : 32; /* Error Address */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_DEADD_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield IED : 1; /* Integrity Error Detected */
    /* const */ sfr_bitfield IE_T : 1; /* Integrity Error - Tag Memory */
    /* const */ sfr_bitfield IE_C : 1; /* Integrity Error - Cache Memory */
    /* const */ sfr_bitfield IE_S : 1; /* Integrity Error - Scratchpad Memory */
    /* const */ sfr_bitfield IE_BI : 1; /* Integrity Error - Bus Interface */
    /* const */ sfr_bitfield E_INFO : 6; /* Error Information */
    /* const */ sfr_bitfield IE_DUAL : 1; /* Integrity Error - Dual Error Detected */
    /* const */ sfr_bitfield IE_SP : 1; /* Safety Protection Error Detected */
    /* const */ sfr_bitfield IE_BS : 1; /* Bus Slave Access Indicator */
    /* const */ sfr_bitfield RES : 18; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_PIETR_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield RES : 3; /* Reserved */
     sfr_bitfield RM : 1; /* Rounding Mode Compatibility */
     sfr_bitfield SP : 1; /* SYSCON Safety Protection Mode Compatibility */
    /* const */ sfr_bitfield RES_5 : 27; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_COMPAT_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield TST : 1; /* Trap Status */
     sfr_bitfield TCL : 1; /* Trap Clear */
    /* const */ sfr_bitfield RES : 6; /* Reserved */
    /* const */ sfr_bitfield RM : 2; /* Captured Rounding Mode */
    /* const */ sfr_bitfield RES_10 : 8; /* Reserved */
     sfr_bitfield FXE : 1; /* FX Trap Enable */
     sfr_bitfield FUE : 1; /* FU Trap Enable */
     sfr_bitfield FZE : 1; /* FZ Trap Enable */
     sfr_bitfield FVE : 1; /* FV Trap Enable */
     sfr_bitfield FIE : 1; /* FI Trap Enable */
    /* const */ sfr_bitfield RES_23 : 3; /* Reserved */
    /* const */ sfr_bitfield FX : 1; /* Captured FX */
    /* const */ sfr_bitfield FU : 1; /* Captured FU */
    /* const */ sfr_bitfield FZ : 1; /* Captured FZ */
    /* const */ sfr_bitfield FV : 1; /* Captured FV */
    /* const */ sfr_bitfield FI : 1; /* Captured FI */
    /* const */ sfr_bitfield RES_31 : 1; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_FPU_TRAP_CON_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield PC : 32; /* Captured Program Counter */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_FPU_TRAP_PC_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield OPC : 8; /* Captured Opcode */
    /* const */ sfr_bitfield FMT : 1; /* Captured Instruction Format */
    /* const */ sfr_bitfield RES : 7; /* Reserved */
    /* const */ sfr_bitfield DREG : 4; /* Captured Destination Register */
    /* const */ sfr_bitfield RES_20 : 12; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_FPU_TRAP_OPC_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield SRC1 : 32; /* Captured SRC1 Operand */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_FPU_TRAP_SRC1_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield SRC2 : 32; /* Captured SRC2 Operand */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_FPU_TRAP_SRC2_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield SRC3 : 32; /* Captured SRC3 Operand */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_FPU_TRAP_SRC3_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield RES : 3; /* Reserved */
     sfr_bitfield LOWBND : 29; /* DPRy Lower Boundary Address */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_DPR0_L_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield RES : 3; /* Reserved */
     sfr_bitfield UPPBND : 29; /* DPRy Upper Boundary Address */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_DPR0_U_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield RES : 3; /* Reserved */
     sfr_bitfield LOWBND : 29; /* CPRy Lower Boundary Address */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_CPR0_L_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield RES : 3; /* Reserved */
     sfr_bitfield UPPBND : 29; /* CPR0_m Upper Boundary Address */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_CPR0_U_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield RE : 16; /* Read Enable Range Select */
    /* const */ sfr_bitfield RES : 16; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_DPRE_0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield WE : 16; /* Write Enable Range Select */
    /* const */ sfr_bitfield RES : 16; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_DPWE_0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield XE : 8; /* Execute Enable Range select */
    /* const */ sfr_bitfield RES : 24; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_CPXE_0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield Timer : 32; /* Temporal Protection Timer */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_TPS_TIMER0_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield TEXP0 : 1; /* Timer0 Expired Flag */
    /* const */ sfr_bitfield TEXP1 : 1; /* Timer1 Expired Flag */
    /* const */ sfr_bitfield TEXP2 : 1; /* Timer1 Expired Flag */
    /* const */ sfr_bitfield RES : 13; /* Reserved */
    /* const */ sfr_bitfield TTRAP : 1; /* Temporal Protection Trap */
    /* const */ sfr_bitfield RES_17 : 15; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_TPS_CON_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield DE : 1; /* Debug Enable */
     sfr_bitfield HALT : 2; /* CPU Halt Request / Status Field */
    /* const */ sfr_bitfield SIH : 1; /* Suspend-in Halt */
     sfr_bitfield SUSP : 1; /* Current State of the Core Suspend-Out Signal */
    /* const */ sfr_bitfield RES : 1; /* Reserved */
    /* const */ sfr_bitfield PREVSUSP : 1; /* Previous State of Core Suspend-Out Signal */
     sfr_bitfield PEVT : 1; /* Posted Event */
    /* const */ sfr_bitfield EVTSRC : 5; /* Event Source */
    /* const */ sfr_bitfield RES_13 : 19; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_DBGSR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield EVTA : 3; /* Event Associated */
     sfr_bitfield BBM : 1; /* Break Before Make (BBM) or Break After Make (BAM) Selection */
     sfr_bitfield BOD : 1; /* Breakout Disable */
     sfr_bitfield SUSP : 1; /* CDC Suspend-Out Signal State */
     sfr_bitfield CNT : 2; /* Counter */
    /* const */ sfr_bitfield RES : 24; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_EXEVT_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield EVTA : 3; /* Event Associated */
     sfr_bitfield BBM : 1; /* Break Before Make (BBM) or Break After Make (BAM) Selection */
     sfr_bitfield BOD : 1; /* Breakout Disable */
     sfr_bitfield SUSP : 1; /* CDC Suspend-Out Signal State */
     sfr_bitfield CNT : 2; /* Counter */
    /* const */ sfr_bitfield RES : 4; /* Reserved */
     sfr_bitfield TYP : 1; /* Input Selection */
     sfr_bitfield RNG : 1; /* Compare Type */
    /* const */ sfr_bitfield RES_14 : 1; /* Reserved */
     sfr_bitfield ASI_EN : 1; /* Enable ASI Comparison */
     sfr_bitfield ASI : 5; /* Address Space Identifier */
    /* const */ sfr_bitfield RES_21 : 6; /* Reserved */
     sfr_bitfield AST : 1; /* Address Store */
     sfr_bitfield ALD : 1; /* Address Load */
    /* const */ sfr_bitfield RES_29 : 3; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_TR0EVT_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ADDR : 32; /* Comparison Address */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_TR0ADR_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield T0 : 1; /* Trigger-0 */
    /* const */ sfr_bitfield T1 : 1; /* Trigger-1 */
    /* const */ sfr_bitfield T2 : 1; /* Trigger-2 */
    /* const */ sfr_bitfield T3 : 1; /* Trigger-3 */
    /* const */ sfr_bitfield T4 : 1; /* Trigger-4 */
    /* const */ sfr_bitfield T5 : 1; /* Trigger-5 */
    /* const */ sfr_bitfield T6 : 1; /* Trigger-6 */
    /* const */ sfr_bitfield T7 : 1; /* Trigger-7 */
    /* const */ sfr_bitfield RES : 24; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_TRIG_ACC_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield RES : 1; /* Reserved */
     sfr_bitfield DMSValue : 31; /* Debug Monitor Start Address */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_DMS_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield RES : 6; /* Reserved */
     sfr_bitfield DCXValue : 26; /* Debug Context Save Area Pointer */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_DCX_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield DTA : 1; /* Debug Trap Active Bit */
    /* const */ sfr_bitfield RES : 31; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_DBGTCR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CM : 1; /* Counter Mode */
     sfr_bitfield CE : 1; /* Count Enable */
     sfr_bitfield M1 : 3; /* M1CNT Configuration */
     sfr_bitfield M2 : 3; /* M2CNT Configuration */
     sfr_bitfield M3 : 3; /* M3CNT Configuration */
    /* const */ sfr_bitfield RES : 21; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_CCTRL_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CountValue : 31; /* Count Value */
     sfr_bitfield SOvf : 1; /* Sticky Overflow Bit */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_CCNT_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PCXO : 16; /* Previous Context Pointer Offset Field */
     sfr_bitfield PCXS : 4; /* Previous Context Pointer Segment Address */
     sfr_bitfield UL : 1; /* Upper or Lower Context Tag */
     sfr_bitfield PIE : 1; /* Previous Interrupt Enable */
     sfr_bitfield PCPN : 10; /* Previous CPU Priority Number */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_PCXI_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CDC : 7; /* Call Depth Counter */
     sfr_bitfield CDE : 1; /* Call Depth Count Enable */
     sfr_bitfield GW : 1; /* Global Address Register Write Permission */
     sfr_bitfield IS : 1; /* Interrupt Stack Control */
     sfr_bitfield IO : 2; /* Access Privilege Level Control (I/O Privilege) */
     sfr_bitfield PRS : 2; /* Protection Register Set */
     sfr_bitfield S : 1; /* Safe Task Identifier */
    /* const */ sfr_bitfield RES : 12; /* Reserved */
     sfr_bitfield SAV : 1; /* Sticky Advance Overflow Flag */
     sfr_bitfield AV : 1; /* Advance Overflow Flag */
     sfr_bitfield SV : 1; /* Sticky Overflow Flag */
     sfr_bitfield V : 1; /* Overflow Flag */
     sfr_bitfield C : 1; /* Carry Flag */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_PSW_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield RES : 1; /* Reserved */
    /* const */ sfr_bitfield PC : 31; /* Program Counter */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_PC_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield FCDSF : 1; /* Free Context List Depleted Sticky Flag */
     sfr_bitfield PROTEN : 1; /* Memory Protection Enable */
     sfr_bitfield TPROTEN : 1; /* Temporal Protection Enable */
     sfr_bitfield IS : 1; /* Initial State */
     sfr_bitfield IT : 1; /* Initial State */
    /* const */ sfr_bitfield RES : 27; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_SYSCON_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CORE_ID : 3; /* Core Identification Number */
    /* const */ sfr_bitfield RES : 29; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_CORE_ID_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield MOD_REV : 8; /* Revision Number */
    /* const */ sfr_bitfield MOD_32B : 8; /* 32-Bit Module Enable */
    /* const */ sfr_bitfield MOD : 16; /* Module Identification Number */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_CPU_ID_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield CID : 3; /* Customer ID */
    /* const */ sfr_bitfield RES : 29; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_CUS_ID_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield VSS : 1; /* Vector Spacing Select */
     sfr_bitfield BIV : 31; /* Base Address of Interrupt Vector Table */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_BIV_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield RES : 1; /* Reserved */
     sfr_bitfield BTV : 31; /* Base Address of Trap Vector Table */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_BTV_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ISP : 32; /* Interrupt Stack Pointer */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_ISP_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CCPN : 10; /* Current CPU Priority Number */
    /* const */ sfr_bitfield RES : 5; /* Reserved */
     sfr_bitfield IE : 1; /* Global Interrupt Enable Bit */
    /* const */ sfr_bitfield PIPN : 10; /* Pending Interrupt Priority Number */
    /* const */ sfr_bitfield RES_26 : 6; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_ICR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield FCXO : 16; /* FCX Offset Address Field */
     sfr_bitfield FCXS : 4; /* FCX Segment Address Field */
    /* const */ sfr_bitfield RES : 12; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_FCX_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield LCXO : 16; /* LCX Offset Field */
     sfr_bitfield LCXS : 4; /* LCX Segment Address */
    /* const */ sfr_bitfield RES : 12; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_LCX_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield DATA : 32; /* Data Register */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_D0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ADDR : 32; /* Address Register */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_A0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ADFLIP : 8; /* Address ECC Bit Flip */
     sfr_bitfield ADTYPE : 2; /* Type of error */
    /* const */ sfr_bitfield RES : 21; /* Reserved */
     sfr_bitfield AE : 1; /* Activate Error Enable */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_SEGEN_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield RES : 5; /* Reserved */
     sfr_bitfield ADDR : 27; /* Region Lower Address */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_SPROT_RGNLA0_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield RES : 5; /* Reserved */
     sfr_bitfield ADDR : 27; /* Region Upper Address */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_SPROT_RGNUA0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield EN : 32; /* Access Enable for Master TAG ID n (n = 0-31) */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_SPROT_RGNACCENA0_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield RES : 32; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_SPROT_RGNACCENB0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield EN : 32; /* Access Enable for Master TAG ID n (n= 0-31) */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CPU0_SPROT_ACCENA_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield MOD_REV : 8; /* Module Revision Number */
    /* const */ sfr_bitfield MOD_TYPE : 8; /* Module Type */
    /* const */ sfr_bitfield MOD_NUMBER : 16; /* Module Number Value */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} XBAR_ID_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield SCI0 : 1; /* SCI Debug Trigger Event Status */
     sfr_bitfield resv1 : 3; /* reserved */
     sfr_bitfield SCI4 : 1; /* SCI Debug Trigger Event Status */
     sfr_bitfield resv5 : 1; /* reserved */
     sfr_bitfield SCI6 : 1; /* SCI Debug Trigger Event Status */
     sfr_bitfield SCI7 : 1; /* SCI Debug Trigger Event Status */
     sfr_bitfield resv8 : 7; /* reserved */
     sfr_bitfield SCID : 1; /* Default Slave Debug Trigger Event Status */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} XBAR_DBSAT_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield SCSCI0 : 1; /* Starvation Error from SCI0 Status */
     sfr_bitfield resv1 : 3; /* reserved */
     sfr_bitfield SCSCI4 : 1; /* Starvation Error from SCI4 Status */
     sfr_bitfield resv5 : 1; /* reserved */
     sfr_bitfield SCSCI6 : 1; /* Starvation Error from SCI6 Status */
     sfr_bitfield SCSCI7 : 1; /* Starvation Error from SCI7 Status */
     sfr_bitfield resv8 : 7; /* reserved */
     sfr_bitfield SCSCID : 1; /* Starvation Error from Default Slave Status */
     sfr_bitfield PRSCI0 : 1; /* Protocol Error from SCI0 Status */
     sfr_bitfield resv17 : 3; /* reserved */
     sfr_bitfield PRSCI4 : 1; /* Protocol Error from SCI4 Status */
     sfr_bitfield resv21 : 1; /* reserved */
     sfr_bitfield PRSCI6 : 1; /* Protocol Error from SCI6 Status */
     sfr_bitfield PRSCI7 : 1; /* Protocol Error from SCI7 Status */
     sfr_bitfield resv24 : 7; /* reserved */
     sfr_bitfield PRSCID : 1; /* Protocol Error from Default Slave Status */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} XBAR_INTSAT_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield IDSCI0 : 1; /* Transaction ID Error from SCI0 Status */
     sfr_bitfield resv1 : 3; /* reserved */
     sfr_bitfield IDCSCI4 : 1; /* Transaction ID Error from SCI4 Status */
     sfr_bitfield resv5 : 1; /* reserved */
     sfr_bitfield IDSCI6 : 1; /* Transaction ID Error from SCI6 Status */
     sfr_bitfield IDSCI7 : 1; /* Transaction ID Error from SCI7 Status */
     sfr_bitfield resv8 : 7; /* reserved */
     sfr_bitfield IDSCID : 1; /* Transaction ID Error from Default Slave Status */
     sfr_bitfield IDMCI0 : 1; /* Transaction ID Error from MCI0 Status */
     sfr_bitfield resv17 : 4; /* reserved */
     sfr_bitfield IDMCI5 : 1; /* Transaction ID Error from MCI5 Status */
     sfr_bitfield resv22 : 6; /* reserved */
     sfr_bitfield IDMCI12 : 1; /* Transaction ID Error from MCI12 Status */
     sfr_bitfield IDMCI13 : 1; /* Transaction ID Error from MCI13 Status */
     sfr_bitfield resv30 : 2; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} XBAR_IDINTSAT_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ENSCI0 : 1; /* Enable ID Error from SCI0 */
     sfr_bitfield resv1 : 3; /* reserved */
     sfr_bitfield ENSCI4 : 1; /* Enable ID Error from SCI4 */
     sfr_bitfield resv5 : 1; /* reserved */
     sfr_bitfield ENSCI6 : 1; /* Enable ID Error from SCI6 */
     sfr_bitfield ENSCI7 : 1; /* Enable ID Error from SCI7 */
     sfr_bitfield resv8 : 7; /* reserved */
     sfr_bitfield ENSCID : 1; /* Enable ID Error from Default Slave */
     sfr_bitfield ENMCI0 : 1; /* Enable ID Error from MCI0 */
     sfr_bitfield resv17 : 4; /* reserved */
     sfr_bitfield ENMCI5 : 1; /* Enable ID Error from MCI5 */
     sfr_bitfield resv22 : 6; /* reserved */
     sfr_bitfield ENMCI12 : 1; /* Enable ID Error from MCI12 */
     sfr_bitfield ENMCI13 : 1; /* Enable ID Error from MCI13 */
     sfr_bitfield resv30 : 2; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} XBAR_IDINTEN_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 3; /* reserved */
     sfr_bitfield WFWD : 1; /* Wait for FPI Write Data */
     sfr_bitfield resv4 : 2; /* reserved */
     sfr_bitfield FREQDISF : 1; /* Disable Fast Request Feature for FPI to SRI Transactions */
     sfr_bitfield resv7 : 2; /* reserved */
     sfr_bitfield NODELTR : 1; /* Control Signal for deferred transactions */
     sfr_bitfield NORMW : 1; /* Control Signal for deferred transactions */
     sfr_bitfield resv11 : 2; /* reserved */
     sfr_bitfield MAX_WS : 7; /* FPI-Bus Wait State Retry Ratio */
     sfr_bitfield resv20 : 12; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} XBAR_EXTCOND_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PRERREN : 1; /* SRI Protocol Error Enable */
     sfr_bitfield SCERREN : 1; /* SRI Starvation Error Enable */
     sfr_bitfield SETPRINT : 1; /* Set SRI Protocol Interrupt */
     sfr_bitfield SETSCINT : 1; /* Set SRI Starvation Interrupt */
     sfr_bitfield INTACK : 1; /* Interrupt Acknowledge */
     sfr_bitfield resv5 : 15; /* reserved */
     sfr_bitfield SPC : 12; /* Starvation Protection Counter Reload Value */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} XBAR_ARBCON0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 32; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} XBAR_PRIOH0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield MASTER0 : 4; /* Master 0 Priority */
     sfr_bitfield resv4 : 16; /* reserved */
     sfr_bitfield MASTER5 : 4; /* Master 5 Priority */
     sfr_bitfield MASTER6 : 4; /* Master 6 Priority */
     sfr_bitfield MASTER7 : 4; /* Master 7 Priority */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} XBAR_PRIOLD_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield ADDR : 32; /* Transaction Address */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} XBAR_ERRADDRD_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield RD : 1; /* Read Indication Status */
    /* const */ sfr_bitfield WR : 1; /* Write Indication Status */
    /* const */ sfr_bitfield SVM : 1; /* Supervisor Mode Indication Status */
     sfr_bitfield resv3 : 1; /* reserved */
    /* const */ sfr_bitfield OPC : 4; /* Operation Code */
    /* const */ sfr_bitfield TR_ID : 8; /* Transaction ID */
    /* const */ sfr_bitfield ADDR_ECC : 8; /* SRI Address Phase ECC */
    /* const */ sfr_bitfield MCI_SBS : 8; /* MCI Sideband Signals [7:0] */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} XBAR_ERR0_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield DBEN : 1; /* Status of OCDS Enable Signal */
    /* const */ sfr_bitfield DBSAT : 1; /* Debug (OCDS) Trigger Status */
     sfr_bitfield REARM : 1; /* Rearm Debug (OCDS) Trigger */
     sfr_bitfield SETDBEVT : 1; /* Set Debug Event */
     sfr_bitfield resv4 : 12; /* reserved */
     sfr_bitfield RDEN : 1; /* Read Trigger Enable */
     sfr_bitfield WREN : 1; /* Write Trigger Enable */
     sfr_bitfield SVMEN : 1; /* SVM Trigger Enable */
     sfr_bitfield ADDEN : 1; /* Address Trigger Enable */
     sfr_bitfield ERREN : 1; /* Error Trigger Enable */
     sfr_bitfield resv21 : 2; /* reserved */
     sfr_bitfield MASEN : 1; /* Master Trigger Enable */
     sfr_bitfield MASTER : 6; /* Master TAG ID Trigger Selector */
     sfr_bitfield resv30 : 2; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} XBAR_DBCON0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 2; /* reserved */
     sfr_bitfield ADDRESS : 30; /* Debug Address Boundary */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} XBAR_DBADDD_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 2; /* reserved */
     sfr_bitfield ADDRESS : 19; /* Debug Address Boundary */
     sfr_bitfield resv21 : 2; /* reserved */
     sfr_bitfield ADDRESS_23 : 1; /* Debug Address Boundary */
     sfr_bitfield resv24 : 3; /* reserved */
     sfr_bitfield ADDRESS_27 : 1; /* Debug Address Boundary */
    /* const */ sfr_bitfield ONE : 3; /* Reserved */
     sfr_bitfield ADDRESS_31 : 1; /* Debug Address Boundary */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} XBAR_DBADD0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 2; /* reserved */
     sfr_bitfield ADDRESS : 29; /* Debug Address Boundary */
    /* const */ sfr_bitfield ONE : 1; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} XBAR_DBADD4_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 2; /* reserved */
     sfr_bitfield ADDRESS : 25; /* Debug Address Boundary */
     sfr_bitfield resv27 : 1; /* reserved */
     sfr_bitfield ADDRESS_28 : 3; /* Debug Address Boundary */
    /* const */ sfr_bitfield ONE : 1; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} XBAR_DBADD6_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 2; /* reserved */
     sfr_bitfield ADDRESS : 19; /* Debug Address Boundary */
     sfr_bitfield resv21 : 8; /* reserved */
     sfr_bitfield ADDRESS_29 : 1; /* Debug Address Boundary */
     sfr_bitfield resv30 : 1; /* reserved */
    /* const */ sfr_bitfield ONE : 1; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} XBAR_DBADD7_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ADDRESS : 32; /* Debug Address Boundary */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} XBAR_DBMADDD_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 2; /* reserved */
     sfr_bitfield ADDRESS : 19; /* Debug Address Boundary */
    /* const */ sfr_bitfield ONE : 2; /* Reserved */
     sfr_bitfield ADDRESS_23 : 1; /* Debug Address Boundary */
    /* const */ sfr_bitfield ONE_24 : 3; /* Reserved */
     sfr_bitfield ADDRESS_27 : 1; /* Debug Address Boundary */
    /* const */ sfr_bitfield ONE_28 : 3; /* Reserved */
     sfr_bitfield ADDRESS_31 : 1; /* Debug Address Boundary */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} XBAR_DBMADD0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 2; /* reserved */
     sfr_bitfield ADDRESS : 25; /* Debug Address Boundary */
    /* const */ sfr_bitfield ONE : 1; /* Reserved */
     sfr_bitfield ADDRESS_28 : 3; /* Debug Address Boundary */
    /* const */ sfr_bitfield ONE_31 : 1; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} XBAR_DBMADD6_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 2; /* reserved */
     sfr_bitfield ADDRESS : 19; /* Debug Address Boundary */
    /* const */ sfr_bitfield ONE : 8; /* Reserved */
     sfr_bitfield ADDRESS_29 : 1; /* Debug Address Boundary */
    /* const */ sfr_bitfield ONE_30 : 2; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} XBAR_DBMADD7_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield EN0 : 1; /* Access Enable for Master TAG ID 0 */
     sfr_bitfield EN1 : 1; /* Access Enable for Master TAG ID 1 */
     sfr_bitfield EN2 : 1; /* Access Enable for Master TAG ID 2 */
     sfr_bitfield EN3 : 1; /* Access Enable for Master TAG ID 3 */
     sfr_bitfield EN4 : 1; /* Access Enable for Master TAG ID 4 */
     sfr_bitfield EN5 : 1; /* Access Enable for Master TAG ID 5 */
     sfr_bitfield EN6 : 1; /* Access Enable for Master TAG ID 6 */
     sfr_bitfield EN7 : 1; /* Access Enable for Master TAG ID 7 */
     sfr_bitfield EN8 : 1; /* Access Enable for Master TAG ID 8 */
     sfr_bitfield EN9 : 1; /* Access Enable for Master TAG ID 9 */
     sfr_bitfield EN10 : 1; /* Access Enable for Master TAG ID 10 */
     sfr_bitfield EN11 : 1; /* Access Enable for Master TAG ID 11 */
     sfr_bitfield EN12 : 1; /* Access Enable for Master TAG ID 12 */
     sfr_bitfield EN13 : 1; /* Access Enable for Master TAG ID 13 */
     sfr_bitfield EN14 : 1; /* Access Enable for Master TAG ID 14 */
     sfr_bitfield EN15 : 1; /* Access Enable for Master TAG ID 15 */
     sfr_bitfield EN16 : 1; /* Access Enable for Master TAG ID 16 */
     sfr_bitfield EN17 : 1; /* Access Enable for Master TAG ID 17 */
     sfr_bitfield EN18 : 1; /* Access Enable for Master TAG ID 18 */
     sfr_bitfield EN19 : 1; /* Access Enable for Master TAG ID 19 */
     sfr_bitfield EN20 : 1; /* Access Enable for Master TAG ID 20 */
     sfr_bitfield EN21 : 1; /* Access Enable for Master TAG ID 21 */
     sfr_bitfield EN22 : 1; /* Access Enable for Master TAG ID 22 */
     sfr_bitfield EN23 : 1; /* Access Enable for Master TAG ID 23 */
     sfr_bitfield EN24 : 1; /* Access Enable for Master TAG ID 24 */
     sfr_bitfield EN25 : 1; /* Access Enable for Master TAG ID 25 */
     sfr_bitfield EN26 : 1; /* Access Enable for Master TAG ID 26 */
     sfr_bitfield EN27 : 1; /* Access Enable for Master TAG ID 27 */
     sfr_bitfield EN28 : 1; /* Access Enable for Master TAG ID 28 */
     sfr_bitfield EN29 : 1; /* Access Enable for Master TAG ID 29 */
     sfr_bitfield EN30 : 1; /* Access Enable for Master TAG ID 30 */
     sfr_bitfield EN31 : 1; /* Access Enable for Master TAG ID 31 */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} XBAR_ACCEN0_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield MOD_REV : 8; /* Module Revision Number */
    /* const */ sfr_bitfield MOD_NUMBER : 8; /* Module Number Value */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SBCU_ID_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield TOUT : 16; /* SBCU Bus Time-Out Value */
     sfr_bitfield DBG : 1; /* SBCU Debug Trace Enable */
     sfr_bitfield resv17 : 2; /* reserved */
    /* const */ sfr_bitfield ONE : 1; /* Reserved */
     sfr_bitfield resv20 : 4; /* reserved */
     sfr_bitfield SPC : 8; /* Starvation Period Control */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SBCU_CON_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield RESERVED8 : 4; /* Reserved */
    /* const */ sfr_bitfield RESERVED9 : 4; /* Reserved */
    /* const */ sfr_bitfield RESERVEDA : 4; /* Reserved */
    /* const */ sfr_bitfield RESERVEDB : 4; /* Reserved */
     sfr_bitfield HSMRMI : 4; /* Master 12 Priority */
     sfr_bitfield HSMCMI : 4; /* Master 13 Priority */
    /* const */ sfr_bitfield RESERVEDE : 4; /* Reserved */
     sfr_bitfield DMAL : 4; /* Master 15 Priority */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SBCU_PRIOH_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield DMAH : 4; /* Master 0 Priority */
    /* const */ sfr_bitfield RESERVED1 : 4; /* Reserved */
    /* const */ sfr_bitfield RESERVED2 : 4; /* Reserved */
    /* const */ sfr_bitfield RESERVED3 : 4; /* Reserved */
    /* const */ sfr_bitfield RESERVED4 : 4; /* Reserved */
     sfr_bitfield DMAM : 4; /* Master 5 Priority */
    /* const */ sfr_bitfield RESERVED6 : 4; /* Reserved */
     sfr_bitfield CPU0 : 4; /* Master 7 Priority */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SBCU_PRIOL_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ERRCNT : 14; /* FPI Bus Error Counter */
     sfr_bitfield TOUT : 1; /* State of FPI Bus Time-Out Signal */
     sfr_bitfield RDY : 1; /* State of FPI Bus Ready Signal */
     sfr_bitfield ABT : 1; /* State of FPI Bus Abort Signal */
     sfr_bitfield ACK : 2; /* State of FPI Bus Acknowledge Signals */
     sfr_bitfield SVM : 1; /* State of FPI Bus Supervisor Mode Signal */
     sfr_bitfield WRN : 1; /* State of FPI Bus Write Signal */
     sfr_bitfield RDN : 1; /* State of FPI Bus Read Signal */
     sfr_bitfield TAG : 6; /* FPI Bus Master Tag Number Signals */
     sfr_bitfield OPC : 4; /* FPI Bus Operation Code Signals */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SBCU_ECON_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield FPIADR : 32; /* Captured FPI Bus Address */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SBCU_EADD_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield FPIDAT : 32; /* Captured FPI Bus Data */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SBCU_EDAT_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield EO : 1; /* Status of SBCU Debug Support Enable */
    /* const */ sfr_bitfield OA : 1; /* Status of SBCU Breakpoint Logic */
     sfr_bitfield resv2 : 2; /* reserved */
     sfr_bitfield RA : 1; /* Rearm SBCU Breakpoint Logic */
     sfr_bitfield resv5 : 7; /* reserved */
     sfr_bitfield CONCOM0 : 1; /* Grant and Address Trigger Relation */
     sfr_bitfield CONCOM1 : 1; /* Address 1 and Address 2 Trigger Relation */
     sfr_bitfield CONCOM2 : 1; /* Address and Signal Trigger Relation */
     sfr_bitfield resv15 : 1; /* reserved */
     sfr_bitfield ONG : 1; /* Grant Trigger Enable */
     sfr_bitfield resv17 : 3; /* reserved */
     sfr_bitfield ONA1 : 2; /* Address 1 Trigger Control */
     sfr_bitfield resv22 : 2; /* reserved */
     sfr_bitfield ONA2 : 2; /* Address 2 Trigger Control */
     sfr_bitfield resv26 : 2; /* reserved */
     sfr_bitfield ONBOS0 : 1; /* Opcode Signal Status Trigger Condition */
     sfr_bitfield ONBOS1 : 1; /* Supervisor Mode Signal Trigger Condition */
     sfr_bitfield ONBOS2 : 1; /* Write Signal Trigger Condition */
     sfr_bitfield ONBOS3 : 1; /* Read Signal Trigger Condition */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SBCU_DBCNTL_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield DMAH : 1; /* Cerberus Grant Trigger Enable, High Priority */
     sfr_bitfield ONE : 4; /* Reserved */
     sfr_bitfield DMAM : 1; /* DMA Grant Trigger Enable, Medium Priority */
     sfr_bitfield ONE_6 : 1; /* Reserved */
     sfr_bitfield CPU0 : 1; /* CPU0 Grant Trigger Enable */
     sfr_bitfield ONE_8 : 4; /* Reserved */
     sfr_bitfield HSMRMI : 1; /* HSM Register Master Interface Grant Trigger Enable */
     sfr_bitfield HSMCMI : 1; /* HSM Cache Master Interface Grant Trigger Enable */
     sfr_bitfield ONE_14 : 1; /* Reserved */
     sfr_bitfield DMAL : 1; /* DMA Grant Trigger Enable, Low Priority */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SBCU_DBGRNT_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ADR1 : 32; /* Debug Trigger Address 1 */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SBCU_DBADR1_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ADR2 : 32; /* Debug Trigger Address 2 */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SBCU_DBADR2_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield OPC : 4; /* Opcode for Signal Status Debug Trigger */
     sfr_bitfield SVM : 1; /* SVM Signal for Status Debug Trigger */
     sfr_bitfield resv5 : 3; /* reserved */
     sfr_bitfield WR : 1; /* Write Signal for Status Debug Trigger */
     sfr_bitfield resv9 : 3; /* reserved */
     sfr_bitfield RD : 1; /* Write Signal for Status Debug Trigger */
     sfr_bitfield resv13 : 19; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SBCU_DBBOS_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield DMAH : 1; /* High-Priority DMA FPI Bus Master Status */
     sfr_bitfield ONE : 4; /* Reserved */
     sfr_bitfield DMAM : 1; /* Medium-Priority DMA FPI Bus Master Status */
     sfr_bitfield ONE_6 : 1; /* Reserved */
     sfr_bitfield CPU0 : 1; /* CPU0 FPI Bus Master Status */
     sfr_bitfield ONE_8 : 4; /* Reserved */
     sfr_bitfield HSMRMI : 1; /* HSM Register FPI Bus Master Interface Status */
     sfr_bitfield HSMCMI : 1; /* HSM Cache FPI Bus Master Interface Status */
     sfr_bitfield ONE_14 : 1; /* Reserved */
     sfr_bitfield DMAL : 1; /* Low-Priority DMA FPI Bus Master Status */
     sfr_bitfield DMACHNR : 8; /* DMA-FPI Channel Grant Status */
     sfr_bitfield ONE_24 : 8; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SBCU_DBGNTT_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield FPIADR : 32; /* FPI Bus Address Status */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SBCU_DBADRT_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield FPIOPC : 4; /* FPI Bus Opcode Status */
    /* const */ sfr_bitfield FPISVM : 1; /* FPI Bus Supervisor Mode Status */
    /* const */ sfr_bitfield FPIACK : 2; /* FPI Bus Acknowledge Status */
    /* const */ sfr_bitfield FPIRDY : 1; /* FPI Bus Ready Status */
    /* const */ sfr_bitfield FPIWR : 1; /* FPI Bus Write Indication Status */
    /* const */ sfr_bitfield FPIRST : 2; /* FPI Bus Reset Status */
    /* const */ sfr_bitfield FPIOPS : 1; /* FPI Bus OCDS Suspend Status */
    /* const */ sfr_bitfield FPIRD : 1; /* FPI Bus Read Indication Status */
    /* const */ sfr_bitfield FPIABORT : 1; /* FPI Bus Abort Status */
    /* const */ sfr_bitfield FPITOUT : 1; /* FPI Bus Time-out Status */
    /* const */ sfr_bitfield ENDINIT : 1; /* FPI Bus Endinit Status */
    /* const */ sfr_bitfield FPITAG : 6; /* FPI Bus Master TAG Status */
     sfr_bitfield resv22 : 10; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SBCU_DBBOST_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield FPIDATA : 32; /* FPI Bus Data Status */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SBCU_DBDAT_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield TRIG0 : 1; /* General Purpose Service Request Trigger 0 */
     sfr_bitfield TRIG1 : 1; /* General Purpose Service Request Trigger 1 */
     sfr_bitfield TRIG2 : 1; /* General Purpose Service Request Trigger 2 */
     sfr_bitfield TRIG3 : 1; /* General Purpose Service Request Trigger 3 */
     sfr_bitfield resv4 : 28; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} INT_SRB0_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield PN : 8; /* Latest Winner Priority Number */
     sfr_bitfield resv8 : 2; /* reserved */
    /* const */ sfr_bitfield ECC : 6; /* Latest Winner ECC */
    /* const */ sfr_bitfield ID : 10; /* Latest Winner Index Number */
     sfr_bitfield resv26 : 5; /* reserved */
    /* const */ sfr_bitfield STAT : 1; /* LWSR Register Status */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} INT_LWSR0_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield PN : 8; /* Last Acknowledged Service Request Priority Number */
     sfr_bitfield resv8 : 2; /* reserved */
    /* const */ sfr_bitfield ECC : 6; /* Last Acknowledged Interrupt ECC */
    /* const */ sfr_bitfield ID : 10; /* Last Acknowledged Interrupt SRN Index Number */
     sfr_bitfield resv26 : 6; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} INT_LASR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PN : 8; /* Service Request Priority Number */
     sfr_bitfield resv8 : 2; /* reserved */
     sfr_bitfield ECC : 6; /* Service Request ECC */
     sfr_bitfield ID : 10; /* Service Request Node Index Number */
     sfr_bitfield resv26 : 4; /* reserved */
     sfr_bitfield EOV : 1; /* Error Overflow Bit */
     sfr_bitfield STAT : 1; /* Error Status Bit */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} INT_ECR0_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield OTGB0 : 16; /* Status of OTGB0 */
    /* const */ sfr_bitfield OTGB1 : 16; /* Status of OTGB1 */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} INT_OOBS_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield TGS : 2; /* Trigger Set for OTGB0/1 */
     sfr_bitfield TGB : 1; /* OTGB0/1 Bus Select */
     sfr_bitfield resv3 : 29; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} INT_OSSIC_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield TGS : 2; /* Trigger Set Select for OTGB0/1 Overlay */
     sfr_bitfield resv2 : 6; /* reserved */
     sfr_bitfield OBS : 2; /* Overlay Byte Select */
     sfr_bitfield resv10 : 22; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} INT_OIXTS_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield MIRQ : 10; /* SRN Index for Missed Interrupt Trigger */
     sfr_bitfield resv10 : 22; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} INT_OIXMS_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield IRQ0 : 10; /* SRN Index for Interrupt Trigger 0 */
     sfr_bitfield resv10 : 6; /* reserved */
     sfr_bitfield IRQ1 : 10; /* SRN Index for Interrupt Trigger 1 */
     sfr_bitfield resv26 : 6; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} INT_OIXS0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield IRQ2 : 10; /* SRN Index for Interrupt Trigger 2 */
     sfr_bitfield resv10 : 6; /* reserved */
     sfr_bitfield IRQ3 : 10; /* SRN Index for Interrupt Trigger 3 */
     sfr_bitfield resv26 : 6; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} INT_OIXS1_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield TOS0 : 2; /* Type of Service for Observation on OTGB0 */
     sfr_bitfield resv2 : 5; /* reserved */
     sfr_bitfield OE0 : 1; /* Output Enable for OTGB0 */
     sfr_bitfield TOS1 : 2; /* Type of Service for Observation on OTGB1 */
     sfr_bitfield resv10 : 5; /* reserved */
     sfr_bitfield OE1 : 1; /* Output Enable for OTGB1 */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} INT_OIT_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield OTGB0 : 16; /* Bitwise Posedge Sensitivity for OTGB0 */
     sfr_bitfield OTGB1 : 16; /* Bitwise Posedge Sensitivity for OTGB1 */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} INT_OMISP_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield OTGB0 : 16; /* Bitwise Negedge Sensitivity for OTGB0 */
     sfr_bitfield OTGB1 : 16; /* Bitwise Negedge Sensitivity for OTGB1 */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} INT_OMISN_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield SRPN : 8; /* Service Request Priority Number */
     sfr_bitfield resv8 : 2; /* reserved */
     sfr_bitfield SRE : 1; /* Service Request Enable */
     sfr_bitfield TOS : 1; /* Type of Service Control */
     sfr_bitfield resv12 : 4; /* reserved */
     sfr_bitfield ECC : 5; /* ECC */
     sfr_bitfield resv21 : 3; /* reserved */
    /* const */ sfr_bitfield SRR : 1; /* Service Request Flag */
     sfr_bitfield CLRR : 1; /* Request Clear Bit */
     sfr_bitfield SETR : 1; /* Request Set Bit */
    /* const */ sfr_bitfield IOV : 1; /* Interrupt Trigger Overflow Bit */
     sfr_bitfield IOVCLR : 1; /* Interrupt Trigger Overflow Clear Bit */
    /* const */ sfr_bitfield SWS : 1; /* SW Sticky Bit */
     sfr_bitfield SWSCLR : 1; /* SW Sticky Clear Bit */
     sfr_bitfield resv31 : 1; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SRC_CPU0SBSRC_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield DISR : 1; /* Module Disable Request Bit */
    /* const */ sfr_bitfield DISS : 1; /* Module Disable Status Bit */
    /* const */ sfr_bitfield RES : 1; /* Reserved */
     sfr_bitfield EDIS : 1; /* Sleep Mode Enable Control */
    /* const */ sfr_bitfield RES_4 : 28; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} DMA_CLC_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield RES : 2; /* Reserved */
     sfr_bitfield INTERR : 1; /* Internal ECC Error */
    /* const */ sfr_bitfield RES_3 : 1; /* Reserved */
     sfr_bitfield RMWERR : 1; /* Internal Read Modify Write Error */
    /* const */ sfr_bitfield RES_5 : 1; /* Reserved */
     sfr_bitfield DATAERR : 1; /* SPB Data Phase ECC Error */
    /* const */ sfr_bitfield RES_7 : 1; /* Reserved */
     sfr_bitfield PMIC : 1; /* Protection Bit for Memory Integrity Control Bit */
     sfr_bitfield ERRDIS : 1; /* ECC Error Disable */
    /* const */ sfr_bitfield RES_10 : 22; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} DMA_MEMCON_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield RES : 16; /* Reserved */
     sfr_bitfield ESER : 1; /* Enable Move Engine x Source Error */
     sfr_bitfield EDER : 1; /* Enable Move Engine x Destination Error */
    /* const */ sfr_bitfield RES_18 : 6; /* Reserved */
     sfr_bitfield ERER : 1; /* Enable Move Engine x RAM Error */
    /* const */ sfr_bitfield RES_25 : 1; /* Reserved */
     sfr_bitfield ELER : 1; /* Enable Move Engine x DMA Linked List Error */
    /* const */ sfr_bitfield RES_27 : 5; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} DMA_EER0_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield LEC : 7; /* Move Engine x Last Error Channel */
    /* const */ sfr_bitfield RES : 9; /* Reserved */
    /* const */ sfr_bitfield SER : 1; /* Move Engine x Source Error */
    /* const */ sfr_bitfield DER : 1; /* Move Engine x Destination Error */
    /* const */ sfr_bitfield RES_18 : 2; /* Reserved */
    /* const */ sfr_bitfield SPBER : 1; /* Move Engine x SPB Bus Error */
    /* const */ sfr_bitfield SRIER : 1; /* Move Engine x SRI Bus Error */
    /* const */ sfr_bitfield RES_22 : 2; /* Reserved */
    /* const */ sfr_bitfield RAMER : 1; /* Move Engine x RAM Error */
    /* const */ sfr_bitfield SLLER : 1; /* Move Engine x Safe Linked List Error */
    /* const */ sfr_bitfield DLLER : 1; /* Move Engine x DMA Linked List Error */
    /* const */ sfr_bitfield RES_27 : 5; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} DMA_ERRSR0_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield RES : 16; /* Reserved */
     sfr_bitfield CSER : 1; /* Clear Move Engine x Source Error */
     sfr_bitfield CDER : 1; /* Clear Move Engine x Destination Error */
    /* const */ sfr_bitfield RES_18 : 2; /* Reserved */
     sfr_bitfield CSPBER : 1; /* Clear SPB Error */
     sfr_bitfield CSRIER : 1; /* Clear SRI Error */
    /* const */ sfr_bitfield RES_22 : 2; /* Reserved */
     sfr_bitfield CRAMER : 1; /* Clear RAM Error */
     sfr_bitfield CSLLER : 1; /* Clear SLL Error */
     sfr_bitfield CDLLER : 1; /* Clear DLL Error */
    /* const */ sfr_bitfield RES_27 : 5; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} DMA_CLRE0_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield RS : 1; /* Move Engine x Read Status */
    /* const */ sfr_bitfield RES : 3; /* Reserved */
    /* const */ sfr_bitfield WS : 1; /* Move Engine x Write Status */
    /* const */ sfr_bitfield RES_5 : 11; /* Reserved */
    /* const */ sfr_bitfield CH : 7; /* Active Channel z in Move Engine x */
    /* const */ sfr_bitfield RES_23 : 9; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} DMA_ME0SR_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield RD00 : 8; /* Read Value for Move Engine x */
    /* const */ sfr_bitfield RD01 : 8; /* Read Value for Move Engine x */
    /* const */ sfr_bitfield RD02 : 8; /* Read Value for Move Engine x */
    /* const */ sfr_bitfield RD03 : 8; /* Read Value for Move Engine x */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} DMA_ME00R_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield RD10 : 8; /* Read Value for Move Engine x */
    /* const */ sfr_bitfield RD11 : 8; /* Read Value for Move Engine x */
    /* const */ sfr_bitfield RD12 : 8; /* Read Value for Move Engine x */
    /* const */ sfr_bitfield RD13 : 8; /* Read Value for Move Engine x */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} DMA_ME01R_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield RD20 : 8; /* Read Value for Move Engine x */
    /* const */ sfr_bitfield RD21 : 8; /* Read Value for Move Engine x */
    /* const */ sfr_bitfield RD22 : 8; /* Read Value for Move Engine x */
    /* const */ sfr_bitfield RD23 : 8; /* Read Value for Move Engine x */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} DMA_ME02R_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield RD30 : 8; /* Read Value for Move Engine x */
    /* const */ sfr_bitfield RD31 : 8; /* Read Value for Move Engine x */
    /* const */ sfr_bitfield RD32 : 8; /* Read Value for Move Engine x */
    /* const */ sfr_bitfield RD33 : 8; /* Read Value for Move Engine x */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} DMA_ME03R_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield RD40 : 8; /* Read Value for Move Engine x */
    /* const */ sfr_bitfield RD41 : 8; /* Read Value for Move Engine x */
    /* const */ sfr_bitfield RD42 : 8; /* Read Value for Move Engine x */
    /* const */ sfr_bitfield RD43 : 8; /* Read Value for Move Engine x */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} DMA_ME04R_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield RD50 : 8; /* Read Value for Move Engine x */
    /* const */ sfr_bitfield RD51 : 8; /* Read Value for Move Engine x */
    /* const */ sfr_bitfield RD52 : 8; /* Read Value for Move Engine x */
    /* const */ sfr_bitfield RD53 : 8; /* Read Value for Move Engine x */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} DMA_ME05R_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield RD60 : 8; /* Read Value for Move Engine x */
    /* const */ sfr_bitfield RD61 : 8; /* Read Value for Move Engine x */
    /* const */ sfr_bitfield RD62 : 8; /* Read Value for Move Engine x */
    /* const */ sfr_bitfield RD63 : 8; /* Read Value for Move Engine x */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} DMA_ME06R_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield RD70 : 8; /* Read Value for Move Engine x */
    /* const */ sfr_bitfield RD71 : 8; /* Read Value for Move Engine x */
    /* const */ sfr_bitfield RD72 : 8; /* Read Value for Move Engine x */
    /* const */ sfr_bitfield RD73 : 8; /* Read Value for Move Engine x */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} DMA_ME07R_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield TCOUNT : 14; /* Transfer Count Status */
    /* const */ sfr_bitfield RES : 1; /* Reserved */
    /* const */ sfr_bitfield LXO : 1; /* Old Value of Pattern Detection */
    /* const */ sfr_bitfield WRPS : 1; /* Wrap Source Buffer */
    /* const */ sfr_bitfield WRPD : 1; /* Wrap Destination Buffer */
    /* const */ sfr_bitfield ICH : 1; /* Interrupt from Channel */
    /* const */ sfr_bitfield IPM : 1; /* Pattern Detection from Channel */
    /* const */ sfr_bitfield RES_20 : 2; /* Reserved */
    /* const */ sfr_bitfield BUFFER : 1; /* DMA Double Buffering Active Buffer */
    /* const */ sfr_bitfield FROZEN : 1; /* DMA Double Buffering Frozen Buffer */
    /* const */ sfr_bitfield RES_24 : 8; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} DMA_ME0CHSR_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield SHADR : 32; /* Shadowed Address */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} DMA_ME0SHADR_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield TREL : 14; /* Transfer Reload Value */
    /* const */ sfr_bitfield RES : 2; /* Reserved */
    /* const */ sfr_bitfield BLKM : 3; /* Block Mode */
    /* const */ sfr_bitfield RROAT : 1; /* Reset Request Only After Transaction */
    /* const */ sfr_bitfield CHMODE : 1; /* Channel Operation Mode */
    /* const */ sfr_bitfield CHDW : 3; /* Channel Data Width */
    /* const */ sfr_bitfield PATSEL : 3; /* Pattern Select */
    /* const */ sfr_bitfield RES_27 : 1; /* Reserved */
    /* const */ sfr_bitfield PRSEL : 1; /* Peripheral Request Select */
    /* const */ sfr_bitfield RES_29 : 1; /* Reserved */
    /* const */ sfr_bitfield DMAPRIO : 2; /* DMA Priority */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} DMA_ME0CHCR_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield SMF : 3; /* Source Address Modification Factor */
    /* const */ sfr_bitfield INCS : 1; /* Increment of Source Address */
    /* const */ sfr_bitfield DMF : 3; /* Destination Address Modification Factor */
    /* const */ sfr_bitfield INCD : 1; /* Increment of Destination Address */
    /* const */ sfr_bitfield CBLS : 4; /* Circular Buffer Length Source */
    /* const */ sfr_bitfield CBLD : 4; /* Circular Buffer Length Destination */
    /* const */ sfr_bitfield SHCT : 4; /* Shadow Control */
    /* const */ sfr_bitfield SCBE : 1; /* Source Circular Buffer Enable */
    /* const */ sfr_bitfield DCBE : 1; /* Destination Circular Buffer Enable */
    /* const */ sfr_bitfield STAMP : 1; /* Time Stamp */
    /* const */ sfr_bitfield ETRL : 1; /* Enable Transaction Request Lost Interrupt */
    /* const */ sfr_bitfield WRPSE : 1; /* Wrap Source Enable */
    /* const */ sfr_bitfield WRPDE : 1; /* Wrap Destination Enable */
    /* const */ sfr_bitfield INTCT : 2; /* Interrupt Control */
    /* const */ sfr_bitfield IRDV : 4; /* Interrupt Raise Detect Value */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} DMA_ME0ADICR_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield DADR : 32; /* Destination Address */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} DMA_ME0DADR_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield SADR : 32; /* Source Start Address */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} DMA_ME0SADR_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield SDCRC : 32; /* Source and Destination Address CRC */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} DMA_ME0SDCRC_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield RDCRC : 32; /* Read Data CRC */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} DMA_ME0RDCRC_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield TGS : 4; /* Trigger Set () for OTGB0/1 */
    /* const */ sfr_bitfield RES : 3; /* Reserved */
     sfr_bitfield BS : 1; /* OTGB0/1 Bus Select */
    /* const */ sfr_bitfield RES_8 : 24; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} DMA_OTSS_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield SIT : 1; /* Set Error Interrupt Service Request */
    /* const */ sfr_bitfield RES : 31; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} DMA_ERRINTR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PAT00 : 8; /* Pattern for Move Engine */
     sfr_bitfield PAT01 : 8; /* Pattern for Move Engine */
     sfr_bitfield PAT02 : 8; /* Pattern for Move Engine */
     sfr_bitfield PAT03 : 8; /* Pattern for Move Engine */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} DMA_PRR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PAT10 : 8; /* Pattern for Move Engine */
     sfr_bitfield PAT11 : 8; /* Pattern for Move Engine */
     sfr_bitfield PAT12 : 8; /* Pattern for Move Engine */
     sfr_bitfield PAT13 : 8; /* Pattern for Move Engine */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} DMA_PRR1_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield COUNT : 32; /* Timestamp Count */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} DMA_TIME_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield MODE : 1; /* Hardware Resource Supervisor Mode */
    /* const */ sfr_bitfield RES : 31; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} DMA_MODE0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield HRP : 2; /* Hardware Resource Partition y */
    /* const */ sfr_bitfield RES : 30; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} DMA_HRR000_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield SUSEN : 1; /* Channel Suspend Enable for DMA Channel z */
    /* const */ sfr_bitfield RES : 31; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} DMA_SUSENR000_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield SUSAC : 1; /* Channel Suspend Mode or Frozen State Active for DMA Channel z */
    /* const */ sfr_bitfield RES : 31; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} DMA_SUSACR000_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield RST : 1; /* DMA Channel Reset */
    /* const */ sfr_bitfield HTRE : 1; /* Hardware Transaction Request Enable State */
    /* const */ sfr_bitfield TRL : 1; /* Transaction/Transfer Request Lost of DMA Channel */
    /* const */ sfr_bitfield CH : 1; /* Transaction Request State */
    /* const */ sfr_bitfield RES : 4; /* Reserved */
     sfr_bitfield HLTREQ : 1; /* Halt Request */
    /* const */ sfr_bitfield HLTACK : 1; /* Halt Acknowledge */
    /* const */ sfr_bitfield RES_10 : 6; /* Reserved */
     sfr_bitfield ECH : 1; /* Enable Hardware Transfer Request */
     sfr_bitfield DCH : 1; /* Disable Hardware Transfer Request */
     sfr_bitfield CTL : 1; /* Clear Transaction Request Lost for DMA Channel z */
    /* const */ sfr_bitfield RES_19 : 5; /* Reserved */
     sfr_bitfield HLTCLR : 1; /* Clear Halt Request and Acknowledge */
    /* const */ sfr_bitfield RES_25 : 7; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} DMA_TSR000_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield SADR : 32; /* Source Address */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} DMA_SADR000_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield TCOUNT : 14; /* Transfer Count Status */
    /* const */ sfr_bitfield RES : 1; /* Reserved */
    /* const */ sfr_bitfield LXO : 1; /* Old Value of Pattern Detection */
    /* const */ sfr_bitfield WRPS : 1; /* Wrap Source Buffer */
    /* const */ sfr_bitfield WRPD : 1; /* Wrap Destination Buffer */
    /* const */ sfr_bitfield ICH : 1; /* Interrupt from Channel */
    /* const */ sfr_bitfield IPM : 1; /* Pattern Detection from Channel */
    /* const */ sfr_bitfield RES_20 : 2; /* Reserved */
    /* const */ sfr_bitfield BUFFER : 1; /* DMA Double Buffering Active Buffer */
     sfr_bitfield FROZEN : 1; /* DMA Double Buffering Frozen Buffer */
     sfr_bitfield SWB : 1; /* DMA Double Buffering Switch Buffer */
     sfr_bitfield CWRP : 1; /* Clear Wrap Buffer Interrupt z */
     sfr_bitfield CICH : 1; /* Clear Interrupt for DMA Channel z */
     sfr_bitfield SIT : 1; /* Set Interrupt Trigger for DMA Channel z */
    /* const */ sfr_bitfield RES_28 : 3; /* Reserved */
     sfr_bitfield SCH : 1; /* Set Transaction Request for DMA Channel */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} DMA_CHCSR000_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield FABUSY : 1; /* Flash Array Busy */
    /* const */ sfr_bitfield D0BUSY : 1; /* Data Flash Bank 0 Busy */
    /* const */ sfr_bitfield RES1 : 1; /* Reserved for Data Flash Bank 1 Busy */
    /* const */ sfr_bitfield P0BUSY : 1; /* Program Flash PF0 Busy */
    /* const */ sfr_bitfield RES4 : 1; /* Reserved for Program Flash PF1 Busy */
    /* const */ sfr_bitfield RES5 : 1; /* Reserved for Program Flash PF2 Busy */
    /* const */ sfr_bitfield RES6 : 1; /* Reserved for Program Flash PF3 Busy */
     sfr_bitfield PROG : 1; /* Programming State */
     sfr_bitfield ERASE : 1; /* Erase State */
    /* const */ sfr_bitfield PFPAGE : 1; /* Program Flash in Page Mode */
    /* const */ sfr_bitfield DFPAGE : 1; /* Data Flash in Page Mode */
     sfr_bitfield OPER : 1; /* Flash Operation Error */
     sfr_bitfield SQER : 1; /* Command Sequence Error */
     sfr_bitfield PROER : 1; /* Protection Error */
     sfr_bitfield PFSBER : 1; /* PFlash Single-Bit Error and Correction */
     sfr_bitfield PFDBER : 1; /* PFlash Double-Bit Error */
     sfr_bitfield PFMBER : 1; /* PFlash Uncorrectable Error */
     sfr_bitfield RES17 : 1; /* Reserved */
     sfr_bitfield DFSBER : 1; /* DFlash Single-Bit Error */
     sfr_bitfield DFDBER : 1; /* DFlash Double-Bit Error */
     sfr_bitfield DFTBER : 1; /* DFlash Triple-Bit Error */
     sfr_bitfield DFMBER : 1; /* DFlash Uncorrectable Error */
     sfr_bitfield SRIADDERR : 1; /* SRI Bus Address ECC Error */
     sfr_bitfield resv23 : 1; /* reserved */
     sfr_bitfield RES : 1; /* Reserved */
     sfr_bitfield PVER : 1; /* Program Verify Error */
     sfr_bitfield EVER : 1; /* Erase Verify Error */
     sfr_bitfield SPND : 1; /* Operation Suspended */
    /* const */ sfr_bitfield SLM : 1; /* Flash Sleep Mode */
     sfr_bitfield resv29 : 1; /* reserved */
    /* const */ sfr_bitfield ORIER : 1; /* Original Error */
     sfr_bitfield resv31 : 1; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} FLASH0_FSR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield WSPFLASH : 4; /* Wait States for read access to PFlash */
     sfr_bitfield WSECPF : 2; /* Wait States for Error Correction of PFlash */
     sfr_bitfield WSDFLASH : 6; /* Wait States for read access to DFlash */
     sfr_bitfield WSECDF : 3; /* Wait State for Error Correction of DFlash */
     sfr_bitfield IDLE : 1; /* Dynamic Flash Idle */
     sfr_bitfield ESLDIS : 1; /* External Sleep Request Disable */
     sfr_bitfield SLEEP : 1; /* Flash SLEEP */
     sfr_bitfield NSAFECC : 1; /* Non-Safety PFlash ECC */
     sfr_bitfield STALL : 1; /* Stall SRI */
    /* const */ sfr_bitfield RES21 : 2; /* Reserved */
    /* const */ sfr_bitfield RES23 : 2; /* Reserved */
     sfr_bitfield VOPERM : 1; /* Verify and Operation Error Interrupt Mask */
     sfr_bitfield SQERM : 1; /* Command Sequence Error Interrupt Mask */
     sfr_bitfield PROERM : 1; /* Protection Error Interrupt Mask */
     sfr_bitfield resv27 : 3; /* reserved */
     sfr_bitfield PR5V : 1; /* Programming Supply 5V */
     sfr_bitfield EOBM : 1; /* End of Busy Interrupt Mask */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} FLASH0_FCON_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield PROINP : 1; /* PFlash Protection */
    /* const */ sfr_bitfield PRODISP : 1; /* PFlash Protection Disabled */
    /* const */ sfr_bitfield PROIND : 1; /* DFlash Protection */
    /* const */ sfr_bitfield PRODISD : 1; /* DFlash Protection Disabled */
    /* const */ sfr_bitfield PROINHSMCOTP : 1; /* HSM OTP Protection */
    /* const */ sfr_bitfield RES5 : 1; /* Reserved */
    /* const */ sfr_bitfield PROINOTP : 1; /* OTP and Write-Once Protection */
    /* const */ sfr_bitfield RES7 : 1; /* Reserved */
    /* const */ sfr_bitfield PROINDBG : 1; /* Debug Interface Password Protection */
    /* const */ sfr_bitfield PRODISDBG : 1; /* Debug Interface Password Protection Disabled */
    /* const */ sfr_bitfield PROINHSM : 1; /* HSM Configuration */
     sfr_bitfield resv11 : 5; /* reserved */
     sfr_bitfield DCFP : 1; /* Disable Code Fetch from PFlash Memory for CPU0 PMI */
     sfr_bitfield DDFP : 1; /* Disable Read from PFlash for CPU0 DMI */
     sfr_bitfield DDFPX : 1; /* Disable Read from PFlash for Other Masters */
     sfr_bitfield resv19 : 1; /* reserved */
     sfr_bitfield DDFD : 1; /* Disable Data Fetch from DFlash Memory */
     sfr_bitfield resv21 : 1; /* reserved */
     sfr_bitfield ENPE : 2; /* Enable Program/Erase */
     sfr_bitfield resv24 : 8; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} FLASH0_FPRO_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield S0L : 1; /* PFlash p Sector 0 Locked for Write Protection */
    /* const */ sfr_bitfield S1L : 1; /* PFlash p Sector 1 Locked for Write Protection */
    /* const */ sfr_bitfield S2L : 1; /* PFlash p Sector 2 Locked for Write Protection */
    /* const */ sfr_bitfield S3L : 1; /* PFlash p Sector 3 Locked for Write Protection */
    /* const */ sfr_bitfield S4L : 1; /* PFlash p Sector 4 Locked for Write Protection */
    /* const */ sfr_bitfield S5L : 1; /* PFlash p Sector 5 Locked for Write Protection */
    /* const */ sfr_bitfield S6L : 1; /* PFlash p Sector 6 Locked for Write Protection */
    /* const */ sfr_bitfield S7L : 1; /* PFlash p Sector 7 Locked for Write Protection */
    /* const */ sfr_bitfield S8L : 1; /* PFlash p Sector 8 Locked for Write Protection */
    /* const */ sfr_bitfield S9L : 1; /* PFlash p Sector 9 Locked for Write Protection */
    /* const */ sfr_bitfield S10L : 1; /* PFlash p Sector 10 Locked for Write Protection */
    /* const */ sfr_bitfield S11L : 1; /* PFlash p Sector 11 Locked for Write Protection */
    /* const */ sfr_bitfield S12L : 1; /* PFlash p Sector 12 Locked for Write Protection */
    /* const */ sfr_bitfield S13L : 1; /* PFlash p Sector 13 Locked for Write Protection */
    /* const */ sfr_bitfield S14L : 1; /* PFlash p Sector 14 Locked for Write Protection */
    /* const */ sfr_bitfield S15L : 1; /* PFlash p Sector 15 Locked for Write Protection */
    /* const */ sfr_bitfield S16L : 1; /* PFlash p Sector 16 Locked for Write Protection */
    /* const */ sfr_bitfield S17L : 1; /* PFlash p Sector 17 Locked for Write Protection */
    /* const */ sfr_bitfield S18L : 1; /* PFlash p Sector 18 Locked for Write Protection */
    /* const */ sfr_bitfield S19L : 1; /* PFlash p Sector 19 Locked for Write Protection */
    /* const */ sfr_bitfield S20L : 1; /* PFlash p Sector 20 Locked for Write Protection */
    /* const */ sfr_bitfield S21L : 1; /* PFlash p Sector 21 Locked for Write Protection */
    /* const */ sfr_bitfield S22L : 1; /* PFlash p Sector 22 Locked for Write Protection */
    /* const */ sfr_bitfield S23L : 1; /* PFlash p Sector 23 Locked for Write Protection */
    /* const */ sfr_bitfield S24L : 1; /* PFlash p Sector 24 Locked for Write Protection */
    /* const */ sfr_bitfield S25L : 1; /* PFlash p Sector 25 Locked for Write Protection */
    /* const */ sfr_bitfield S26L : 1; /* PFlash p Sector 26 Locked for Write Protection */
    /* const */ sfr_bitfield RES : 4; /* Reserved */
    /* const */ sfr_bitfield RPRO : 1; /* Read Protection Configuration */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} FLASH0_PROCONP0_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield L : 1; /* DF_EEPROM Locked for Write Protection */
    /* const */ sfr_bitfield NSAFECC : 1; /* Non-Safety PFlash ECC */
    /* const */ sfr_bitfield RAMIN : 2; /* RAM Initialization by SSW Control */
    /* const */ sfr_bitfield RAMINSEL : 4; /* RAM Initialization Selection */
    /* const */ sfr_bitfield RES8 : 1; /* Reserved */
    /* const */ sfr_bitfield RES9 : 1; /* Reserved */
    /* const */ sfr_bitfield RES10 : 1; /* Reserved */
    /* const */ sfr_bitfield RES11 : 1; /* Reserved */
    /* const */ sfr_bitfield RES12 : 1; /* Reserved */
    /* const */ sfr_bitfield RES13 : 1; /* Reserved */
    /* const */ sfr_bitfield RES14 : 1; /* Reserved */
    /* const */ sfr_bitfield RES15 : 1; /* Reserved */
    /* const */ sfr_bitfield ESR0CNT : 12; /* ESR0 Prolongation Counter */
    /* const */ sfr_bitfield RES29 : 2; /* Reserved */
    /* const */ sfr_bitfield RES30 : 1; /* Reserved */
    /* const */ sfr_bitfield RPRO : 1; /* Read Protection Configuration */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} FLASH0_PROCOND_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield S0ROM : 1; /* PFlash p Sector 0 Locked Forever */
    /* const */ sfr_bitfield S1ROM : 1; /* PFlash p Sector 1 Locked Forever */
    /* const */ sfr_bitfield S2ROM : 1; /* PFlash p Sector 2 Locked Forever */
    /* const */ sfr_bitfield S3ROM : 1; /* PFlash p Sector 3 Locked Forever */
    /* const */ sfr_bitfield S4ROM : 1; /* PFlash p Sector 4 Locked Forever */
    /* const */ sfr_bitfield S5ROM : 1; /* PFlash p Sector 5 Locked Forever */
    /* const */ sfr_bitfield S6ROM : 1; /* PFlash p Sector 6 Locked Forever */
    /* const */ sfr_bitfield S7ROM : 1; /* PFlash p Sector 7 Locked Forever */
    /* const */ sfr_bitfield S8ROM : 1; /* PFlash p Sector 8 Locked Forever */
    /* const */ sfr_bitfield S9ROM : 1; /* PFlash p Sector 9 Locked Forever */
    /* const */ sfr_bitfield S10ROM : 1; /* PFlash p Sector 10 Locked Forever */
    /* const */ sfr_bitfield S11ROM : 1; /* PFlash p Sector 11 Locked Forever */
    /* const */ sfr_bitfield S12ROM : 1; /* PFlash p Sector 12 Locked Forever */
    /* const */ sfr_bitfield S13ROM : 1; /* PFlash p Sector 13 Locked Forever */
    /* const */ sfr_bitfield S14ROM : 1; /* PFlash p Sector 14 Locked Forever */
    /* const */ sfr_bitfield S15ROM : 1; /* PFlash p Sector 15 Locked Forever */
    /* const */ sfr_bitfield S16ROM : 1; /* PFlash p Sector 16 Locked Forever */
    /* const */ sfr_bitfield S17ROM : 1; /* PFlash p Sector 17 Locked Forever */
    /* const */ sfr_bitfield S18ROM : 1; /* PFlash p Sector 18 Locked Forever */
    /* const */ sfr_bitfield S19ROM : 1; /* PFlash p Sector 19 Locked Forever */
    /* const */ sfr_bitfield S20ROM : 1; /* PFlash p Sector 20 Locked Forever */
    /* const */ sfr_bitfield S21ROM : 1; /* PFlash p Sector 21 Locked Forever */
    /* const */ sfr_bitfield S22ROM : 1; /* PFlash p Sector 22 Locked Forever */
    /* const */ sfr_bitfield S23ROM : 1; /* PFlash p Sector 23 Locked Forever */
    /* const */ sfr_bitfield S24ROM : 1; /* PFlash p Sector 24 Locked Forever */
    /* const */ sfr_bitfield S25ROM : 1; /* PFlash p Sector 25 Locked Forever */
    /* const */ sfr_bitfield S26ROM : 1; /* PFlash p Sector 26 Locked Forever */
    /* const */ sfr_bitfield RES : 2; /* Reserved */
    /* const */ sfr_bitfield BML : 2; /* Boot Mode Lock */
    /* const */ sfr_bitfield TP : 1; /* Tuning Protection */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} FLASH0_PROCONOTP0_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield S0WOP : 1; /* PFlash p Sector 0 Configured for Write-Once Protection */
    /* const */ sfr_bitfield S1WOP : 1; /* PFlash p Sector 1 Configured for Write-Once Protection */
    /* const */ sfr_bitfield S2WOP : 1; /* PFlash p Sector 2 Configured for Write-Once Protection */
    /* const */ sfr_bitfield S3WOP : 1; /* PFlash p Sector 3 Configured for Write-Once Protection */
    /* const */ sfr_bitfield S4WOP : 1; /* PFlash p Sector 4 Configured for Write-Once Protection */
    /* const */ sfr_bitfield S5WOP : 1; /* PFlash p Sector 5 Configured for Write-Once Protection */
    /* const */ sfr_bitfield S6WOP : 1; /* PFlash p Sector 6 Configured for Write-Once Protection */
    /* const */ sfr_bitfield S7WOP : 1; /* PFlash p Sector 7 Configured for Write-Once Protection */
    /* const */ sfr_bitfield S8WOP : 1; /* PFlash p Sector 8 Configured for Write-Once Protection */
    /* const */ sfr_bitfield S9WOP : 1; /* PFlash p Sector 9 Configured for Write-Once Protection */
    /* const */ sfr_bitfield S10WOP : 1; /* PFlash p Sector 10 Configured for Write-Once Protection */
    /* const */ sfr_bitfield S11WOP : 1; /* PFlash p Sector 11 Configured for Write-Once Protection */
    /* const */ sfr_bitfield S12WOP : 1; /* PFlash p Sector 12 Configured for Write-Once Protection */
    /* const */ sfr_bitfield S13WOP : 1; /* PFlash p Sector 13 Configured for Write-Once Protection */
    /* const */ sfr_bitfield S14WOP : 1; /* PFlash p Sector 14 Configured for Write-Once Protection */
    /* const */ sfr_bitfield S15WOP : 1; /* PFlash p Sector 15 Configured for Write-Once Protection */
    /* const */ sfr_bitfield S16WOP : 1; /* PFlash p Sector 16 Configured for Write-Once Protection */
    /* const */ sfr_bitfield S17WOP : 1; /* PFlash p Sector 17 Configured for Write-Once Protection */
    /* const */ sfr_bitfield S18WOP : 1; /* PFlash p Sector 18 Configured for Write-Once Protection */
    /* const */ sfr_bitfield S19WOP : 1; /* PFlash p Sector 19 Configured for Write-Once Protection */
    /* const */ sfr_bitfield S20WOP : 1; /* PFlash p Sector 20 Configured for Write-Once Protection */
    /* const */ sfr_bitfield S21WOP : 1; /* PFlash p Sector 21 Configured for Write-Once Protection */
    /* const */ sfr_bitfield S22WOP : 1; /* PFlash p Sector 22 Configured for Write-Once Protection */
    /* const */ sfr_bitfield S23WOP : 1; /* PFlash p Sector 23 Configured for Write-Once Protection */
    /* const */ sfr_bitfield S24WOP : 1; /* PFlash p Sector 24 Configured for Write-Once Protection */
    /* const */ sfr_bitfield S25WOP : 1; /* PFlash p Sector 25 Configured for Write-Once Protection */
    /* const */ sfr_bitfield S26WOP : 1; /* PFlash p Sector 26 Configured for Write-Once Protection */
    /* const */ sfr_bitfield RES : 4; /* Reserved */
    /* const */ sfr_bitfield DATM : 1; /* Disable ATM */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} FLASH0_PROCONWOP0_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield OCDSDIS : 1; /* OCDS Disabled */
    /* const */ sfr_bitfield DBGIFLCK : 1; /* Debug Interface Locked */
    /* const */ sfr_bitfield EDM : 2; /* Entered Debug Mode */
    /* const */ sfr_bitfield RES : 12; /* Reserved */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} FLASH0_PROCONDBG_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield HSMBOOTEN : 1; /* HSM Boot Enable */
    /* const */ sfr_bitfield SSWWAIT : 1; /* SSW Wait */
    /* const */ sfr_bitfield HSMDX : 1; /* HSM Data Sectors Exclusive */
    /* const */ sfr_bitfield HSM6X : 1; /* HSM Code Sector 6 Exclusive */
    /* const */ sfr_bitfield HSM16X : 1; /* HSM Code Sector 16 Exclusive */
    /* const */ sfr_bitfield HSM17X : 1; /* HSM Code Sector 17 Exclusive */
    /* const */ sfr_bitfield S6ROM : 1; /* HSM Code Sector 6 Locked Forever */
    /* const */ sfr_bitfield HSMENPINS : 2; /* Enable HSM Forcing of Pins HSM1/2 */
    /* const */ sfr_bitfield HSMENRES : 2; /* Enable HSM Triggering Resets */
    /* const */ sfr_bitfield DESTDBG : 2; /* Destructive Debug Entry */
    /* const */ sfr_bitfield BLKFLAN : 1; /* Block Flash Analysis */
    /* const */ sfr_bitfield BOOTSEL : 2; /* Boot Sector Selection */
    /* const */ sfr_bitfield S16ROM : 1; /* HSM Code Sector 16 Locked Forever */
    /* const */ sfr_bitfield S17ROM : 1; /* HSM Code Sector 17 Locked Forever */
     sfr_bitfield resv18 : 14; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} FLASH0_PROCONHSMCOTP_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield HSMDBGDIS : 1; /* HSM Debug Disable */
    /* const */ sfr_bitfield DBGIFLCK : 1; /* Debug Interface Locked */
    /* const */ sfr_bitfield TSTIFLCK : 1; /* Test Interface Locked */
    /* const */ sfr_bitfield HSMTSTDIS : 1; /* HSM Test Disable */
    /* const */ sfr_bitfield RES15 : 12; /* Reserved */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} FLASH0_PROCONHSM_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield TAG : 6; /* Master Tag */
     sfr_bitfield resv6 : 26; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} FLASH0_RDBCFG00_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield STRT : 1; /* Start Request */
     sfr_bitfield STP : 1; /* Stop */
    /* const */ sfr_bitfield BUSY : 1; /* Flash Read Busy */
    /* const */ sfr_bitfield DONE : 1; /* Flash Read Done */
    /* const */ sfr_bitfield ERR : 1; /* Error */
     sfr_bitfield resv5 : 3; /* reserved */
     sfr_bitfield EOBM : 1; /* End of Busy Interrupt Mask */
     sfr_bitfield resv9 : 7; /* reserved */
     sfr_bitfield CNT : 16; /* Count */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} FLASH0_RRCT_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield DATA : 32; /* Read Data */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} FLASH0_RRD0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 3; /* reserved */
     sfr_bitfield ADD : 29; /* Address */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} FLASH0_RRAD_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield WCODE : 22; /* Error Correction Write Code */
     sfr_bitfield resv22 : 8; /* reserved */
     sfr_bitfield DECENCDIS : 1; /* DF_EEPROM ECC Encoding Disable */
     sfr_bitfield PECENCDIS : 1; /* PFlash ECC Encoding Disable */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} FLASH0_ECCW_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield RCODE : 22; /* Error Correction Read Code */
    /* const */ sfr_bitfield RES : 2; /* Reserved */
     sfr_bitfield resv24 : 6; /* reserved */
     sfr_bitfield EDCERRINJ : 1; /* EDC Error Injection */
     sfr_bitfield ECCORDIS : 1; /* ECC Correction Disable */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} FLASH0_ECCRP0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 2; /* reserved */
    /* const */ sfr_bitfield D1BUSY : 1; /* Data Flash Bank 1 Busy */
     sfr_bitfield resv3 : 4; /* reserved */
     sfr_bitfield PROG : 1; /* Programming State */
     sfr_bitfield ERASE : 1; /* Erase State */
     sfr_bitfield resv9 : 1; /* reserved */
    /* const */ sfr_bitfield DFPAGE : 1; /* Data Flash in Page Mode */
     sfr_bitfield OPER : 1; /* Flash Operation Error */
     sfr_bitfield SQER : 1; /* Command Sequence Error */
     sfr_bitfield resv13 : 12; /* reserved */
     sfr_bitfield PVER : 1; /* Program Verify Error */
     sfr_bitfield EVER : 1; /* Erase Verify Error */
     sfr_bitfield SPND : 1; /* Operation Suspended */
     sfr_bitfield resv28 : 4; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} FLASH0_HSMFSR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield LCKHSMUCB : 2; /* Lock Access to UCB_HSMCFG */
     sfr_bitfield resv2 : 22; /* reserved */
     sfr_bitfield VOPERM : 1; /* Verify and Operation Error Interrupt Mask */
     sfr_bitfield SQERM : 1; /* Command Sequence Error Interrupt Mask */
     sfr_bitfield resv26 : 5; /* reserved */
     sfr_bitfield EOBM : 1; /* End of Busy Interrupt Mask */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} FLASH0_HSMFCON_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 1; /* reserved */
     sfr_bitfield SELD1 : 1; /* HSM DFLASH Bank Selection */
     sfr_bitfield resv2 : 1; /* reserved */
     sfr_bitfield SPND : 1; /* Suspend */
     sfr_bitfield SPNDERR : 1; /* Suspend Error */
     sfr_bitfield resv5 : 27; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} FLASH0_HSMMARD_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield SELP0 : 1; /* PFLASH Bank PF0 Selection */
     sfr_bitfield RES1 : 1; /* Reserved */
     sfr_bitfield RES2 : 1; /* Reserved */
     sfr_bitfield RES3 : 1; /* Reserved */
     sfr_bitfield resv4 : 11; /* reserved */
     sfr_bitfield TRAPDIS : 1; /* PFLASH Uncorrectable Bit Error Trap Disable */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} FLASH0_MARP_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield HMARGIN : 1; /* Hard Margin Selection */
     sfr_bitfield SELD0 : 1; /* DFLASH Bank Selection */
     sfr_bitfield resv2 : 1; /* reserved */
     sfr_bitfield SPND : 1; /* Suspend */
     sfr_bitfield SPNDERR : 1; /* Suspend Error */
     sfr_bitfield resv5 : 10; /* reserved */
     sfr_bitfield TRAPDIS : 1; /* DFLASH Uncorrectable Bit Error Trap Disable */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} FLASH0_MARD_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield SEL : 6; /* Select Bit-Errors */
     sfr_bitfield resv6 : 2; /* reserved */
     sfr_bitfield CLR : 1; /* Clear */
     sfr_bitfield DIS : 1; /* Disable */
     sfr_bitfield resv10 : 22; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} FLASH0_CBABCFG0_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield VLD0 : 1; /* Filling Level */
    /* const */ sfr_bitfield VLD1 : 1; /* Filling Level */
    /* const */ sfr_bitfield VLD2 : 1; /* Filling Level */
    /* const */ sfr_bitfield VLD3 : 1; /* Filling Level */
    /* const */ sfr_bitfield VLD4 : 1; /* Filling Level */
    /* const */ sfr_bitfield VLD5 : 1; /* Filling Level */
    /* const */ sfr_bitfield VLD6 : 1; /* Filling Level */
    /* const */ sfr_bitfield VLD7 : 1; /* Filling Level */
    /* const */ sfr_bitfield VLD8 : 1; /* Filling Level */
    /* const */ sfr_bitfield VLD9 : 1; /* Filling Level */
     sfr_bitfield resv10 : 22; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} FLASH0_CBABSTAT0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 5; /* reserved */
    /* const */ sfr_bitfield ADDR : 19; /* Address */
    /* const */ sfr_bitfield ERR : 6; /* Error Type */
    /* const */ sfr_bitfield VLD : 1; /* Valid */
     sfr_bitfield CLR : 1; /* Clear */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} FLASH0_CBABTOP0_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield VLD0 : 1; /* Filling Level */
     sfr_bitfield resv1 : 31; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} FLASH0_UBABSTAT0_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield STATUS : 8; /* Status */
     sfr_bitfield resv8 : 24; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} FLASH0_COMM0_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield STATUS : 8; /* Status */
     sfr_bitfield DATA : 8; /* Data */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} FLASH0_COMM1_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield DISR : 1; /* LMU Disable Request Bit */
    /* const */ sfr_bitfield DISS : 1; /* LMU Disable Status Bit */
    /* const */ sfr_bitfield RES : 30; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} LMU_CLC_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield ID_VALUE : 32; /* Module Identification Value */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} LMU_MODID_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield OLDAEN : 1; /* Online Data Acquisition Enabled */
     sfr_bitfield POLDAEN : 1; /* Protection Bit for OLDAEN */
     sfr_bitfield resv2 : 1; /* reserved */
     sfr_bitfield ERERR : 1; /* EMEM Read Error */
     sfr_bitfield resv4 : 1; /* reserved */
     sfr_bitfield EWERR : 1; /* EMEM Write Error */
     sfr_bitfield DATAERR : 1; /* SRI Data Phase ECC Error */
     sfr_bitfield ADDERR : 1; /* SRI Address Phase ECC Error */
     sfr_bitfield resv8 : 4; /* reserved */
     sfr_bitfield WSTATES : 4; /* EMEM Wait States */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} LMU_MEMCON_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield TAG1 : 6; /* Master Tag ID 1 */
     sfr_bitfield resv6 : 2; /* reserved */
     sfr_bitfield TAG2 : 6; /* Master Tag ID 2 */
     sfr_bitfield resv14 : 8; /* reserved */
     sfr_bitfield EREN : 1; /* EMEM Read Buffer Enable */
     sfr_bitfield EPEN : 1; /* EMEM Prefetch Enable */
     sfr_bitfield resv24 : 6; /* reserved */
     sfr_bitfield EN1 : 1; /* TAG1 Field Enable */
     sfr_bitfield EN2 : 1; /* TAG2 Field Enable */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} LMU_BUFCON0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield SHOVEN0 : 1; /* Shadow Overlay Enable 0 */
     sfr_bitfield SHOVEN1 : 1; /* Shadow Overlay Enable 1 */
     sfr_bitfield SHOVEN2 : 1; /* Shadow Overlay Enable 2 */
     sfr_bitfield SHOVEN3 : 1; /* Shadow Overlay Enable 3 */
     sfr_bitfield SHOVEN4 : 1; /* Shadow Overlay Enable 4 */
     sfr_bitfield SHOVEN5 : 1; /* Shadow Overlay Enable 5 */
     sfr_bitfield SHOVEN6 : 1; /* Shadow Overlay Enable 6 */
     sfr_bitfield SHOVEN7 : 1; /* Shadow Overlay Enable 7 */
     sfr_bitfield resv8 : 24; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} OVC0_OSEL_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 5; /* reserved */
     sfr_bitfield OBASE : 17; /* Overlay Block Base Address */
     sfr_bitfield resv22 : 2; /* reserved */
     sfr_bitfield OMEM : 3; /* Overlay Memory Select */
     sfr_bitfield resv27 : 4; /* reserved */
     sfr_bitfield OVEN : 1; /* Overlay Enabled */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} OVC0_RABR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 5; /* reserved */
     sfr_bitfield TBASE : 23; /* Target Base */
     sfr_bitfield resv28 : 4; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} OVC0_OTAR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 5; /* reserved */
     sfr_bitfield OMASK : 12; /* Overlay Address Mask */
    /* const */ sfr_bitfield ONE : 11; /* Fixed “1” Values */
     sfr_bitfield resv28 : 4; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} OVC0_OMASK0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield DISR : 1; /* Module Disable Request Bit */
    /* const */ sfr_bitfield DISS : 1; /* Module Disable Status Bit */
     sfr_bitfield Resvd : 1; /* Resvd */
     sfr_bitfield EDIS : 1; /* Sleep Mode Enable Control */
     sfr_bitfield resv4 : 4; /* reserved */
     sfr_bitfield Reserved : 8; /* Reserved */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} MTU_CLC_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield MODREV : 8; /* Module Revision Number */
    /* const */ sfr_bitfield MODTYPE : 8; /* Module Type */
    /* const */ sfr_bitfield MODNUMBER : 16; /* Module Number */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} MTU_ID_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield Res : 1; /* Reserved in this Product */
     sfr_bitfield Res_1 : 1; /* Reserved in this Product */
    /* const */ sfr_bitfield Res_2 : 1; /* Reservedin this Product */
     sfr_bitfield Res_3 : 1; /* Reserved in this Product */
    /* const */ sfr_bitfield Res_4 : 28; /* Reservedin this Product */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} MTU_RES0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield Res : 3; /* Reserved in this Product */
    /* const */ sfr_bitfield Res_3 : 29; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} MTU_RES1_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield Res : 7; /* Reserved */
     sfr_bitfield Res_7 : 1; /* Reserved in this Product */
    /* const */ sfr_bitfield Res_8 : 24; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} MTU_RES2_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield Res : 32; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} MTU_RES3_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ACCSTYPE : 8; /* Access type */
    /* const */ sfr_bitfield Res : 4; /* Reserved */
     sfr_bitfield NUMACCS : 4; /* Number of accesses per address */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} MC0_CONFIG0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ACCSPAT : 8; /* Access pattern */
     sfr_bitfield SELFASTB : 4; /* Select Fast Bit */
     sfr_bitfield AG_MOD : 4; /* Address Generator Mode */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} MC0_CONFIG1_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield START : 1; /* START */
     sfr_bitfield RESUME : 1; /* Resume failed test */
     sfr_bitfield ESTF : 1; /* Enable Sticky Fail Bit */
     sfr_bitfield DIR : 1; /* Direction Select */
     sfr_bitfield DINIT : 1; /* Data Initialization Enable */
     sfr_bitfield RCADR : 1; /* Fast Row / Fast Column Addressing Scheme Select */
     sfr_bitfield ROWTOG : 1; /* Row toggling */
     sfr_bitfield BITTOG : 1; /* Bit toggling */
     sfr_bitfield GP_BASE : 1; /* Galpat Base */
     sfr_bitfield FAILDMP : 1; /* Fail bitmap dump */
    /* const */ sfr_bitfield Res4 : 5; /* Reserved */
    /* const */ sfr_bitfield Res : 1; /* Reserved */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} MC0_MCONTROL_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield DONE : 1; /* DONE */
    /* const */ sfr_bitfield FAIL : 1; /* FAIL */
    /* const */ sfr_bitfield FDA : 1; /* Fail Dump Available */
    /* const */ sfr_bitfield SFAIL : 1; /* Sticky Fail Bit */
    /* const */ sfr_bitfield Res : 12; /* Reserved */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} MC0_MSTATUS_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ADDR : 15; /* Address */
     sfr_bitfield RAEN : 1; /* Range Enable */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} MC0_RANGE_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield REV_ID : 16; /* Revision Identifier */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} MC0_REVID_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CENE : 1; /* Correctable Error Notification Enable */
     sfr_bitfield UENE : 1; /* Uncorrectable Error Notification Enable */
     sfr_bitfield AENE : 1; /* Address Error Notification Enable */
     sfr_bitfield ECE : 1; /* Error Correction Enable */
     sfr_bitfield TRE : 1; /* Tracking Enable */
     sfr_bitfield BFLE : 1; /* Bit Flip Enable */
     sfr_bitfield SFLE : 2; /* Signature Bit Flip Enables */
     sfr_bitfield ECCMAP : 2; /* ECC Bit Mapping Mode */
     sfr_bitfield TC_WAY_SEL : 2; /* TriCore Cache Way Select */
    /* const */ sfr_bitfield Res : 4; /* Reserved */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} MC0_ECCS_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield SERR : 1; /* Error Detected */
     sfr_bitfield CERR : 1; /* Correctable Error Detected */
     sfr_bitfield UERR : 1; /* Uncorrectable Error Detected */
     sfr_bitfield AERR : 1; /* Address Error Detected */
     sfr_bitfield TRC : 1; /* Tracking Clear */
    /* const */ sfr_bitfield VAL : 5; /* Valid Bits */
     sfr_bitfield resv10 : 1; /* reserved */
     sfr_bitfield CENE : 1; /* Correctable Error Notification Enable */
     sfr_bitfield UENE : 1; /* Uncorrectable Error Notification Enable */
     sfr_bitfield AENE : 1; /* Address Error Notification Enable */
     sfr_bitfield ECE : 1; /* Error Correction Enable */
    /* const */ sfr_bitfield EOV : 1; /* Error Overflow */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} MC0_ECCD_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield ADDR : 13; /* Address of Error(i) */
    /* const */ sfr_bitfield MBI : 3; /* Memory Block Index of Error(i) */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} MC0_ETRR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield WDATA : 16; /* Word Data */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} MC0_RDBFL0_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield CPU2XEN : 6; /* Reserved in this product */
    /* const */ sfr_bitfield CPU1XEN : 6; /* Reserved in this product */
    /* const */ sfr_bitfield LMUEN : 1; /* Reserved in this product */
     sfr_bitfield MMCDSEN : 1; /* MINI MCDS TRAM MBIST Controller Memory Enable */
     sfr_bitfield CPU0DSEN : 1; /* CPU0 DSPR MBIST Controller Memory Enable */
    /* const */ sfr_bitfield Res : 1; /* Reserved in this product */
     sfr_bitfield CPU0PSEN : 1; /* CPU0 PSPR MBIST Controller Memory Enable */
     sfr_bitfield CPU0PTEN : 1; /* CPU0 PTAG MBIST Controller Memory Enable */
    /* const */ sfr_bitfield Res_18 : 1; /* Reserved */
    /* const */ sfr_bitfield CPU0DTEN : 1; /* Reserved in this product */
    /* const */ sfr_bitfield CPUXDS2EN : 2; /* Reserved in this product */
     sfr_bitfield ETHEN : 1; /* ETHERMAC MBIST Controller Memory Enable */
    /* const */ sfr_bitfield Res_23 : 3; /* Reserved */
     sfr_bitfield FSI0EN : 1; /* FSI0 MBIST Controller Memory Enable */
     sfr_bitfield CPU0DS2EN : 1; /* CPU0 TC1.6E DSPR2 MBIST Controller Memory Enable (TC23x Only) */
    /* const */ sfr_bitfield GTMFEN : 1; /* Reserved in this product */
    /* const */ sfr_bitfield GTMM0EN : 1; /* Reserved in this product */
    /* const */ sfr_bitfield GTMM1EN : 1; /* Reserved in this product */
    /* const */ sfr_bitfield GTM1AEN : 1; /* Reserved in this product */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} MTU_MEMTEST0_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield GTM1BEN : 1; /* Reserved in this product */
    /* const */ sfr_bitfield GTM2EN : 1; /* Reserved in this product */
    /* const */ sfr_bitfield PSI5EN : 1; /* Reserved in this product */
    /* const */ sfr_bitfield Res : 1; /* Reserved */
     sfr_bitfield MCAN0EN : 1; /* MultiCAN0 Controller Memory Enable */
     sfr_bitfield MCAN1EN : 1; /* MultiCAN1 Controller Memory Enable */
     sfr_bitfield ERAY0OEN : 1; /* ERAY0 OBF Controller Memory Enable */
     sfr_bitfield ERAY0TEN : 1; /* ERAY0 TBF Controller Memory Enable */
     sfr_bitfield ERAY0MEN : 1; /* ERAY0 MBF Controller Memory Enable */
    /* const */ sfr_bitfield ERAY1XEN : 3; /* Reserved in this product */
    /* const */ sfr_bitfield STBY1EN : 1; /* Reserved in this product */
     sfr_bitfield MCDSEN : 1; /* MCDS Controller Memory Enable (ED only) */
     sfr_bitfield EMEML0EN : 1; /* EMEM Lower 0 (TCM) MBIST Controller Memory Test Enable (ED only) */
     sfr_bitfield EMEML1EN : 1; /* EMEM Lower 1 (TCM) MBIST Controller Memory Test Enable (ED only) */
     sfr_bitfield EMEML2EN : 1; /* EMEM Lower 2 (TCM) MBIST Controller Memory Test Enable (ED only) */
     sfr_bitfield EMEML3EN : 1; /* EMEM Lower 3 (TCM) MBIST Controller Memory Test Enable (ED only) */
    /* const */ sfr_bitfield EMEMLXEN : 12; /* Reserved in this product */
    /* const */ sfr_bitfield EMEMUXEN : 2; /* Reserved in this product */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} MTU_MEMTEST1_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield EMEMUxEN : 14; /* Reserved in this product */
    /* const */ sfr_bitfield CIF0EN : 1; /* Reserved in this product */
     sfr_bitfield DAMEN : 1; /* DAM Memory Enable */
    /* const */ sfr_bitfield CIFxEN : 2; /* Reserved in this product */
    /* const */ sfr_bitfield STBY2EN : 1; /* Reserved in this product */
    /* const */ sfr_bitfield DMAEN : 1; /* Reserved in this product */
     sfr_bitfield XTM0EN : 1; /* EMEM XTM0 Controller Memory Enable (ED only) */
     sfr_bitfield XTM1EN : 1; /* EMEM XTM1 Controller Memory Enable (ED only) */
     sfr_bitfield FFT0EN : 1; /* FFT0 Memory Controller Memory Enable (ADAS Product only) */
     sfr_bitfield FFT1EN : 1; /* FFT1 Memory Controller Memory Enable (ADAS Product only) */
    /* const */ sfr_bitfield Res : 8; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} MTU_MEMTEST2_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield Res : 1; /* Reserved */
    /* const */ sfr_bitfield CPU2DxMAP : 2; /* Reserved in this product */
    /* const */ sfr_bitfield Res_3 : 1; /* Reserved */
    /* const */ sfr_bitfield CPU2PxMAP : 2; /* Reserved in this product */
    /* const */ sfr_bitfield Res_6 : 1; /* Reserved */
    /* const */ sfr_bitfield CPU1DxMAP : 2; /* Reserved in this product */
    /* const */ sfr_bitfield Res_9 : 1; /* Reserved */
    /* const */ sfr_bitfield CPU1PxMAP : 2; /* Reserved in this product */
    /* const */ sfr_bitfield Res_12 : 3; /* Reserved */
     sfr_bitfield CPU0PCMAP : 1; /* CPU0 PCACHE Mapping */
    /* const */ sfr_bitfield Res_16 : 1; /* Reserved */
    /* const */ sfr_bitfield CPU0PTMAP : 1; /* CPU0 PTAG Mapping */
    /* const */ sfr_bitfield CPU0DxMAP : 2; /* Reserved in this product */
    /* const */ sfr_bitfield Res_20 : 12; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} MTU_MEMMAP_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield CPU2DSAIU : 1; /* Reserved in this product */
     sfr_bitfield resv1 : 1; /* reserved */
    /* const */ sfr_bitfield CPU2DTAIU : 1; /* Reserved in this product */
    /* const */ sfr_bitfield CPU2PSAIU : 1; /* Reserved in this product */
     sfr_bitfield resv4 : 1; /* reserved */
    /* const */ sfr_bitfield CPU2PTAIU : 1; /* Reserved in this product */
    /* const */ sfr_bitfield CPU1DSAIU : 1; /* Reserved in this product */
     sfr_bitfield resv7 : 1; /* reserved */
    /* const */ sfr_bitfield CPU1DTAIU : 1; /* Reserved in this product */
    /* const */ sfr_bitfield CPU1PSAIU : 1; /* Reserved in this product */
     sfr_bitfield resv10 : 1; /* reserved */
    /* const */ sfr_bitfield CPU1PTAIU : 1; /* Reserved in this product */
     sfr_bitfield resv12 : 2; /* reserved */
    /* const */ sfr_bitfield CPU0DSAIU : 1; /* Reserved in this product */
     sfr_bitfield resv15 : 1; /* reserved */
    /* const */ sfr_bitfield CPU0PSAIU : 1; /* CPU0 PCACHE Partial AutoInitialize Underway */
    /* const */ sfr_bitfield CPU0PTAIU : 1; /* CPU0 PTAG MBIST AutoInitialize Underway */
     sfr_bitfield resv18 : 1; /* reserved */
    /* const */ sfr_bitfield CPU0DxAIU : 1; /* Reserved in this product */
    /* const */ sfr_bitfield CPU1DS2AIU : 1; /* Reserved in this product */
    /* const */ sfr_bitfield CPU2DS2AIU : 1; /* Reserved in this product */
     sfr_bitfield resv22 : 1; /* reserved */
    /* const */ sfr_bitfield HSMCAIU : 1; /* Reserved in this product */
    /* const */ sfr_bitfield HSMTAIU : 1; /* Reserved in this product */
    /* const */ sfr_bitfield HSMRAIU : 1; /* Reserved in this product */
    /* const */ sfr_bitfield FSI0AIU : 1; /* FSI0 MBIST AutoInitialize Underway */
    /* const */ sfr_bitfield CPU0DS2AIU : 1; /* CPU0 DCACHE Partial AutoInitialize Underway (TC23x Second DS Bank) */
     sfr_bitfield resv28 : 4; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} MTU_MEMSTAT0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 1; /* reserved */
    /* const */ sfr_bitfield PLLLV : 1; /* Oscillator for PLL Valid Low Status Bit */
     sfr_bitfield OSCRES : 1; /* Oscillator Watchdog Reset */
     sfr_bitfield GAINSEL : 2; /* Oscillator Gain Selection */
     sfr_bitfield MODE : 2; /* Oscillator Mode */
     sfr_bitfield SHBY : 1; /* Shaper Bypass */
    /* const */ sfr_bitfield PLLHV : 1; /* Oscillator for PLL Valid High Status Bit */
     sfr_bitfield resv9 : 1; /* reserved */
    /* const */ sfr_bitfield X1D : 1; /* XTAL1 Data Value */
     sfr_bitfield X1DEN : 1; /* XTAL1 Data Enable */
     sfr_bitfield resv12 : 4; /* reserved */
     sfr_bitfield OSCVAL : 5; /* OSC Frequency Value */
     sfr_bitfield resv21 : 2; /* reserved */
     sfr_bitfield APREN : 1; /* Amplitude Regulation Enable */
     sfr_bitfield resv24 : 8; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_OSCCON_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield VCOBYST : 1; /* VCO Bypass Status */
     sfr_bitfield resv1 : 1; /* reserved */
    /* const */ sfr_bitfield VCOLOCK : 1; /* PLL VCO Lock Status */
    /* const */ sfr_bitfield FINDIS : 1; /* Input Clock Disconnect Select Status */
    /* const */ sfr_bitfield K1RDY : 1; /* K1 Divider Ready Status */
    /* const */ sfr_bitfield K2RDY : 1; /* K2 Divider Ready Status */
     sfr_bitfield resv6 : 1; /* reserved */
    /* const */ sfr_bitfield MODRUN : 1; /* Modulation Run */
     sfr_bitfield resv8 : 24; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_PLLSTAT_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield VCOBYP : 1; /* VCO Bypass */
     sfr_bitfield VCOPWD : 1; /* VCO Power Saving Mode */
     sfr_bitfield MODEN : 1; /* Modulation Enable */
     sfr_bitfield resv3 : 1; /* reserved */
     sfr_bitfield SETFINDIS : 1; /* Set Status Bit PLLSTAT.FINDIS */
     sfr_bitfield CLRFINDIS : 1; /* Clear Status Bit PLLSTAT.FINDIS */
     sfr_bitfield OSCDISCDIS : 1; /* Oscillator Disconnect Disable */
     sfr_bitfield resv7 : 2; /* reserved */
     sfr_bitfield NDIV : 7; /* N-Divider Value */
     sfr_bitfield PLLPWD : 1; /* PLL Power Saving Mode */
     sfr_bitfield resv17 : 1; /* reserved */
     sfr_bitfield RESLD : 1; /* Restart VCO Lock Detection */
     sfr_bitfield resv19 : 5; /* reserved */
     sfr_bitfield PDIV : 4; /* P-Divider Value */
     sfr_bitfield resv28 : 4; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_PLLCON0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield K2DIV : 7; /* K2-Divider Value */
     sfr_bitfield resv7 : 1; /* reserved */
     sfr_bitfield K3DIV : 7; /* K3-Divider Value */
     sfr_bitfield resv15 : 1; /* reserved */
     sfr_bitfield K1DIV : 7; /* K1-Divider Value */
     sfr_bitfield resv23 : 9; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_PLLCON1_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield MODCFG : 16; /* Modulation Configuration */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_PLLCON2_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield VCOBYST : 1; /* VCO Bypass Status */
    /* const */ sfr_bitfield PWDSTAT : 1; /* PLL_ERAY Power-saving Mode Status */
    /* const */ sfr_bitfield VCOLOCK : 1; /* PLL VCO Lock Status */
    /* const */ sfr_bitfield FINDIS : 1; /* Input Clock Disconnect Select Status */
    /* const */ sfr_bitfield K1RDY : 1; /* K1 Divider Ready Status */
    /* const */ sfr_bitfield K2RDY : 1; /* K2 Divider Ready Status */
     sfr_bitfield resv6 : 26; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_PLLERAYSTAT_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield VCOBYP : 1; /* VCO Bypass */
     sfr_bitfield VCOPWD : 1; /* VCO Power Saving Mode */
     sfr_bitfield resv2 : 2; /* reserved */
     sfr_bitfield SETFINDIS : 1; /* Set Status Bit PLLERAYSTAT.FINDIS */
     sfr_bitfield CLRFINDIS : 1; /* Clear Status Bit PLLERAYSTAT.FINDIS */
     sfr_bitfield OSCDISCDIS : 1; /* Oscillator Disconnect Disable */
     sfr_bitfield resv7 : 2; /* reserved */
     sfr_bitfield NDIV : 5; /* N-Divider Value */
     sfr_bitfield resv14 : 2; /* reserved */
     sfr_bitfield PLLPWD : 1; /* PLL Power Saving Mode */
     sfr_bitfield resv17 : 1; /* reserved */
     sfr_bitfield RESLD : 1; /* Restart VCO Lock Detection */
     sfr_bitfield resv19 : 5; /* reserved */
     sfr_bitfield PDIV : 4; /* P-Divider Value */
     sfr_bitfield resv28 : 4; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_PLLERAYCON0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield K2DIV : 7; /* K2-Divider Value */
     sfr_bitfield resv7 : 1; /* reserved */
     sfr_bitfield K3DIV : 4; /* K3-Divider Value */
     sfr_bitfield resv12 : 4; /* reserved */
     sfr_bitfield K1DIV : 7; /* K1-Divider Value */
     sfr_bitfield resv23 : 9; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_PLLERAYCON1_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 4; /* reserved */
     sfr_bitfield BAUD2DIV : 4; /* Baud2 Divider Reload Value */
     sfr_bitfield SRIDIV : 4; /* SRI Divider Reload Value */
     sfr_bitfield LPDIV : 4; /* Low Power Divider Reload Value */
     sfr_bitfield SPBDIV : 4; /* SPB Divider Reload Value */
     sfr_bitfield FSI2DIV : 2; /* FSI2 Divider Reload Value */
     sfr_bitfield resv22 : 2; /* reserved */
     sfr_bitfield FSIDIV : 2; /* FSI Divider Reload Value */
     sfr_bitfield resv26 : 2; /* reserved */
     sfr_bitfield CLKSEL : 2; /* Clock Selection */
     sfr_bitfield UP : 1; /* Update Request */
    /* const */ sfr_bitfield LCK : 1; /* Lock Status */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_CCUCON0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CANDIV : 4; /* MultiCAN Divider Reload Value */
     sfr_bitfield ERAYDIV : 4; /* ERAY Divider Reload Value */
     sfr_bitfield STMDIV : 4; /* STM Divider Reload Value */
     sfr_bitfield GTMDIV : 4; /* GTM Divider Reload Value */
     sfr_bitfield ETHDIV : 4; /* Ethernet Divider Reload Value */
     sfr_bitfield ASCLINFDIV : 4; /* ASCLIN Fast Divider Reload Value */
     sfr_bitfield ASCLINSDIV : 4; /* ASCLIN Slow Divider Reload Value */
     sfr_bitfield INSEL : 2; /* Input Selection */
     sfr_bitfield UP : 1; /* Update Request */
    /* const */ sfr_bitfield LCK : 1; /* Lock Status */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_CCUCON1_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield MAXDIV : 4; /* Max Divider Reload Value */
     sfr_bitfield resv4 : 26; /* reserved */
     sfr_bitfield UP : 1; /* Update Request */
    /* const */ sfr_bitfield LCK : 1; /* Lock Status */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_CCUCON5_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield BBBDIV : 4; /* BBB Divider Reload Value */
     sfr_bitfield resv4 : 26; /* reserved */
     sfr_bitfield UP : 1; /* Update Request */
    /* const */ sfr_bitfield LCK : 1; /* Lock Status */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_CCUCON2_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CPU0DIV : 6; /* CPU0 Divider Reload Value */
     sfr_bitfield resv6 : 26; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_CCUCON6_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PLLDIV : 6; /* PLL Divider Value */
     sfr_bitfield PLLSEL : 2; /* PLL Target Monitoring Frequency Selection */
     sfr_bitfield PLLERAYDIV : 6; /* PLL_ERAY Divider Value */
     sfr_bitfield PLLERAYSEL : 2; /* PLL_ERAY Target Monitoring Frequency Selection */
     sfr_bitfield SRIDIV : 6; /* SRI Divider Value */
     sfr_bitfield SRISEL : 2; /* SRI Target Monitoring Frequency Selection */
     sfr_bitfield resv24 : 6; /* reserved */
     sfr_bitfield UP : 1; /* Update Request */
    /* const */ sfr_bitfield LCK : 1; /* Lock Status */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_CCUCON3_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield SPBDIV : 6; /* SPB Divider Value */
     sfr_bitfield SPBSEL : 2; /* SPB Target Monitoring Frequency Selection */
     sfr_bitfield GTMDIV : 6; /* GTM Divider Value */
     sfr_bitfield GTMSEL : 2; /* GTM Target Monitoring Frequency Selection */
     sfr_bitfield STMDIV : 6; /* STM Divider Value */
     sfr_bitfield STMSEL : 2; /* STM Target Monitoring Frequency Selection */
     sfr_bitfield resv24 : 6; /* reserved */
     sfr_bitfield UP : 1; /* Update Request */
    /* const */ sfr_bitfield LCK : 1; /* Lock Status */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_CCUCON4_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield EN0 : 1; /* External Clock Enable for EXTCLK0 */
     sfr_bitfield resv1 : 1; /* reserved */
     sfr_bitfield SEL0 : 4; /* External Clock Select for EXTCLK0 */
     sfr_bitfield resv6 : 10; /* reserved */
     sfr_bitfield EN1 : 1; /* External Clock Enable for EXTCLK1 */
     sfr_bitfield NSEL : 1; /* Negation Selection */
     sfr_bitfield SEL1 : 4; /* External Clock Select for EXTCLK1 */
     sfr_bitfield resv22 : 2; /* reserved */
     sfr_bitfield DIV1 : 8; /* External Clock Divider for EXTCLK1 */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_EXTCON_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield STEP : 10; /* Step Value */
     sfr_bitfield resv10 : 4; /* reserved */
     sfr_bitfield DM : 2; /* Divider Mode */
    /* const */ sfr_bitfield RESULT : 10; /* Result Value */
     sfr_bitfield resv26 : 5; /* reserved */
     sfr_bitfield DISCLK : 1; /* Disable Clock */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_FDR_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield ESR0 : 1; /* Reset Request Trigger Reset Status for ESR0 */
    /* const */ sfr_bitfield ESR1 : 1; /* Reset Request Trigger Reset Status for ESR1 */
     sfr_bitfield resv2 : 1; /* reserved */
    /* const */ sfr_bitfield SMU : 1; /* Reset Request Trigger Reset Status for SMU */
    /* const */ sfr_bitfield SW : 1; /* Reset Request Trigger Reset Status for SW */
    /* const */ sfr_bitfield STM0 : 1; /* Reset Request Trigger Reset Status for STM0 Compare Match */
    /* const */ sfr_bitfield STM1 : 1; /* Reset Request Trigger Reset Status for STM1 Compare Match (If Product has STM1) */
    /* const */ sfr_bitfield STM2 : 1; /* Reset Request Trigger Reset Status for STM2 Compare Match (If Product has STM2) */
     sfr_bitfield resv8 : 8; /* reserved */
    /* const */ sfr_bitfield PORST : 1; /* Reset Request Trigger Reset Status for PORST */
     sfr_bitfield resv17 : 1; /* reserved */
    /* const */ sfr_bitfield CB0 : 1; /* Reset Request Trigger Reset Status for Cerberus System Reset */
    /* const */ sfr_bitfield CB1 : 1; /* Reset Request Trigger Reset Status for Cerberus Debug Reset */
    /* const */ sfr_bitfield CB3 : 1; /* Reset Request Trigger Reset Status for Cerberus Application Reset */
     sfr_bitfield resv21 : 2; /* reserved */
    /* const */ sfr_bitfield EVR13 : 1; /* Reset Request Trigger Reset Status for EVR13 */
    /* const */ sfr_bitfield EVR33 : 1; /* Reserved in this product */
    /* const */ sfr_bitfield SWD : 1; /* Reset Request Trigger Reset Status for Supply Watchdog (SWD) */
     sfr_bitfield resv26 : 2; /* reserved */
    /* const */ sfr_bitfield STBYR : 1; /* Reset Request Trigger Reset Status for Standby Regulator Watchdog (STBYR) */
     sfr_bitfield resv29 : 3; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_RSTSTAT_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ESR0 : 2; /* ESR0 Reset Request Trigger Reset Configuration */
     sfr_bitfield ESR1 : 2; /* ESR1 Reset Request Trigger Reset Configuration */
     sfr_bitfield resv4 : 2; /* reserved */
     sfr_bitfield SMU : 2; /* SMU Reset Request Trigger Reset Configuration */
     sfr_bitfield SW : 2; /* SW Reset Request Trigger Reset Configuration */
     sfr_bitfield STM0 : 2; /* STM0 Reset Request Trigger Reset Configuration */
     sfr_bitfield STM1 : 2; /* STM1 Reset Request Trigger Reset Configuration (If Product has STM1) */
     sfr_bitfield STM2 : 2; /* STM2 Reset Request Trigger Reset Configuration (If Product has STM2) */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_RSTCON_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield STM0DIS : 1; /* STM0 Disable Reset */
     sfr_bitfield STM1DIS : 1; /* STM1 Disable Reset (If Product has STM1) */
     sfr_bitfield STM2DIS : 1; /* STM2 Disable Reset (If Product has STM2) */
     sfr_bitfield resv3 : 29; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_ARSTDIS_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 1; /* reserved */
     sfr_bitfield SWRSTREQ : 1; /* Software Reset Request */
     sfr_bitfield resv2 : 6; /* reserved */
     sfr_bitfield RES : 8; /* Reserved */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_SWRSTCON_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 1; /* reserved */
     sfr_bitfield CLRC : 1; /* Clear Cold Reset Status */
    /* const */ sfr_bitfield Reserved : 10; /* Reserved */
    /* const */ sfr_bitfield CSS0 : 1; /* CPU0 Safe State Reached */
    /* const */ sfr_bitfield CSS1 : 1; /* Reserved in this product */
    /* const */ sfr_bitfield CSS2 : 1; /* Reserved in this product */
    /* const */ sfr_bitfield Reserved_15 : 1; /* Reserved */
     sfr_bitfield USRINFO : 16; /* User Information */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_RSTCON2_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 7; /* reserved */
     sfr_bitfield EDCON : 2; /* Edge Detection Control */
     sfr_bitfield resv9 : 23; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_ESRCFG0_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield ARI : 1; /* Application Reset Indicator */
     sfr_bitfield ARC : 1; /* Application Reset Indicator Clear */
     sfr_bitfield resv2 : 30; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_ESROCFG_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 4; /* reserved */
     sfr_bitfield PC0 : 4; /* Control for ESR Pin x */
     sfr_bitfield resv8 : 4; /* reserved */
     sfr_bitfield PC1 : 4; /* Control for ESR Pin x */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_IOCR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield P0 : 1; /* Output Bit 0 */
     sfr_bitfield P1 : 1; /* Output Bit 1 */
     sfr_bitfield resv2 : 30; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_OUT_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PS0 : 1; /* ESR0 Pin Set Bit 0 */
     sfr_bitfield PS1 : 1; /* ESR1 Pin Set Bit 1 */
     sfr_bitfield resv2 : 14; /* reserved */
     sfr_bitfield PCL0 : 1; /* ESR0 Pin Clear Bit 0 */
     sfr_bitfield PCL1 : 1; /* ESR1 Pin Clear Bit 1 */
     sfr_bitfield resv18 : 14; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_OMR_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield P0 : 1; /* Input Bit 0 */
    /* const */ sfr_bitfield P1 : 1; /* Input Bit 1 */
     sfr_bitfield resv2 : 30; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_IN_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PDIS0 : 1; /* Pad Disable for ESR Pin 0 */
     sfr_bitfield PDIS1 : 1; /* Pad Disable for ESR Pin 1 */
     sfr_bitfield resv2 : 30; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_PDISC_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PD0 : 3; /* Pad Driver Mode for ESR Pins 0 and 1 */
     sfr_bitfield PL0 : 1; /* Reserved in this product */
     sfr_bitfield PD1 : 3; /* Pad Driver Mode for ESR Pins 0 and 1 */
     sfr_bitfield PL1 : 1; /* Reserved in this product */
     sfr_bitfield resv8 : 24; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_PDR_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield HWCFG : 8; /* Hardware Configuration Setting */
    /* const */ sfr_bitfield FTM : 7; /* Firmware Test Setting */
    /* const */ sfr_bitfield MODE : 1; /* MODE */
    /* const */ sfr_bitfield FCBAE : 1; /* Flash Config. Sector Access Enable */
    /* const */ sfr_bitfield LUDIS : 1; /* Latch Update Disable */
    /* const */ sfr_bitfield Res : 1; /* Reserved */
    /* const */ sfr_bitfield TRSTL : 1; /* TRSTL Status */
    /* const */ sfr_bitfield SPDEN : 1; /* Single Pin DAP Mode Enable */
    /* const */ sfr_bitfield Res_21 : 3; /* Reserved */
    /* const */ sfr_bitfield RAMINT : 1; /* RAM Content Security Integrity */
    /* const */ sfr_bitfield Res_25 : 7; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_STSTAT_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield ESR0T : 1; /* ESR0 Trap Request Flag */
    /* const */ sfr_bitfield ESR1T : 1; /* ESR1 Trap Request Flag */
     sfr_bitfield resv2 : 1; /* reserved */
    /* const */ sfr_bitfield SMUT : 1; /* SMU Alarm Trap Request Flag */
     sfr_bitfield resv4 : 28; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_TRAPSTAT_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ESR0T : 1; /* Set Trap Request Flag ESR0T */
     sfr_bitfield ESR1T : 1; /* Set Trap Request Flag ESR1T */
     sfr_bitfield resv2 : 1; /* reserved */
     sfr_bitfield SMUT : 1; /* Set Trap Request Flag SMUT */
     sfr_bitfield resv4 : 28; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_TRAPSET_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ESR0T : 1; /* Clear Trap Request Flag ESR0T */
     sfr_bitfield ESR1T : 1; /* Clear Trap Request Flag ESR1T */
     sfr_bitfield resv2 : 1; /* reserved */
     sfr_bitfield SMUT : 1; /* Clear Trap Request Flag SMUT */
     sfr_bitfield resv4 : 28; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_TRAPCLR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ESR0T : 1; /* Disable Trap Request ESR0T */
     sfr_bitfield ESR1T : 1; /* Disable Trap Request ESR1T */
     sfr_bitfield resv2 : 1; /* reserved */
     sfr_bitfield SMUT : 1; /* Disable Trap Request SMUT */
     sfr_bitfield resv4 : 28; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_TRAPDIS_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield EVR13 : 1; /* EVR13 status */
    /* const */ sfr_bitfield OV13 : 1; /* EVR13 Regulator Over-voltage event flag */
     sfr_bitfield resv2 : 2; /* reserved */
    /* const */ sfr_bitfield OVSWD : 1; /* Supply Watchdog (SWD) Over-voltage event flag */
    /* const */ sfr_bitfield UV13 : 1; /* EVR13 Regulator Under-voltage event flag */
     sfr_bitfield resv6 : 1; /* reserved */
    /* const */ sfr_bitfield UVSWD : 1; /* Supply Watchdog (SWD) Under-voltage event flag */
     sfr_bitfield resv8 : 2; /* reserved */
    /* const */ sfr_bitfield BGPROK : 1; /* Primary Bandgap status */
     sfr_bitfield resv11 : 1; /* reserved */
    /* const */ sfr_bitfield SCMOD : 2; /* Switch Capacitor SMPS Mode */
     sfr_bitfield resv14 : 18; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_EVRSTAT_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield ADC13V : 8; /* ADC 1.3 V Conversion Result */
     sfr_bitfield resv8 : 8; /* reserved */
    /* const */ sfr_bitfield ADCSWDV : 8; /* ADC External Supply Conversion Result */
     sfr_bitfield resv24 : 7; /* reserved */
    /* const */ sfr_bitfield VAL : 1; /* Valid Status */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_EVRADCSTAT_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield RES : 28; /* Reserved */
     sfr_bitfield RSTSWDOFF : 1; /* EVR SWD Reset Enable */
     sfr_bitfield BPRSTSWDOFF : 1; /* Bit Protection RSTSWDOFF */
     sfr_bitfield SLCK : 1; /* HSM Security Lock */
    /* const */ sfr_bitfield LCK : 1; /* Lock Status */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_EVRRSTCON_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield EVR13OVVAL : 8; /* 1.3 V Regulator Over-voltage threshold */
     sfr_bitfield resv8 : 8; /* reserved */
     sfr_bitfield SWDOVVAL : 8; /* Supply monitor (SWD) Over-voltage threshold value */
     sfr_bitfield resv24 : 6; /* reserved */
     sfr_bitfield SLCK : 1; /* HSM Security Lock */
    /* const */ sfr_bitfield LCK : 1; /* Lock Status */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_EVROVMON_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield EVR13UVVAL : 8; /* 1.3 V Regulator Under-voltage threshold */
     sfr_bitfield resv8 : 8; /* reserved */
     sfr_bitfield SWDUVVAL : 8; /* Supply monitor (SWD) Under-voltage threshold value */
     sfr_bitfield resv24 : 6; /* reserved */
     sfr_bitfield SLCK : 1; /* HSM Security Lock */
    /* const */ sfr_bitfield LCK : 1; /* Lock Status */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_EVRUVMON_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield EVR13OVMOD : 2; /* 1.3 V Regulator Over-voltage monitoring mode */
     sfr_bitfield resv2 : 2; /* reserved */
     sfr_bitfield EVR13UVMOD : 2; /* 1.3 V Regulator Under-voltage monitoring mode */
     sfr_bitfield resv6 : 10; /* reserved */
     sfr_bitfield SWDOVMOD : 2; /* Supply monitor (SWD) Over-voltage monitoring mode */
     sfr_bitfield resv18 : 2; /* reserved */
     sfr_bitfield SWDUVMOD : 2; /* Supply monitor (SWD) Under-voltage monitoring mode */
     sfr_bitfield resv22 : 8; /* reserved */
     sfr_bitfield SLCK : 1; /* HSM Security Lock */
     sfr_bitfield resv31 : 1; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_EVRMONCTRL_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield RES : 28; /* Reserved */
     sfr_bitfield EVR13OFF : 1; /* EVR13 Regulator Enable */
     sfr_bitfield BPEVR13OFF : 1; /* Bit Protection EVR13OFF */
    /* const */ sfr_bitfield RES_30 : 1; /* Reserved */
    /* const */ sfr_bitfield LCK : 1; /* Lock Status */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_EVR13CON_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield SDFREQSPRD : 4; /* Frequency Spread Mode */
     sfr_bitfield resv4 : 4; /* reserved */
     sfr_bitfield TON : 8; /* Charge Phase length */
     sfr_bitfield TOFF : 8; /* Discharge Phase length */
     sfr_bitfield SDSTEP : 4; /* Droop Voltage Step */
     sfr_bitfield SYNCDIV : 3; /* Clock Divider Ratio for external DCDC SYNC signal */
    /* const */ sfr_bitfield LCK : 1; /* Lock Status */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_EVRSDCTRL1_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 8; /* reserved */
     sfr_bitfield STBS : 2; /* Stabilization strength */
     sfr_bitfield STSP : 2; /* Startup Speed */
     sfr_bitfield NS : 2; /* Noise shaper setting */
     sfr_bitfield OL : 1; /* Open Loop activation */
     sfr_bitfield PIAD : 1; /* PI coefficient adaptation */
     sfr_bitfield ADCMODE : 4; /* Operating Mode for ADC */
     sfr_bitfield ADCLPF : 2; /* Time constant of digital LPF of tracking ADC */
     sfr_bitfield ADCLSB : 1; /* PID LSB size */
     sfr_bitfield resv23 : 1; /* reserved */
     sfr_bitfield SDLUT : 6; /* Non-linear Starting Point */
     sfr_bitfield resv30 : 1; /* reserved */
    /* const */ sfr_bitfield LCK : 1; /* Lock Status */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_EVRSDCTRL2_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield SDOLCON : 7; /* Initial Conductance */
     sfr_bitfield MODSEL : 1; /* Operation Mode Selection */
     sfr_bitfield MODLOW : 7; /* Low threshold for Mode change */
     sfr_bitfield resv15 : 1; /* reserved */
     sfr_bitfield SDVOKLVL : 6; /* Configuration of Voltage OK Signal */
     sfr_bitfield MODMAN : 2; /* Manual Mode Selection */
     sfr_bitfield MODHIGH : 7; /* High threshold for Mode change */
    /* const */ sfr_bitfield LCK : 1; /* Lock Status */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_EVRSDCTRL3_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield SD33P : 4; /* P Coefficient */
     sfr_bitfield resv4 : 4; /* reserved */
     sfr_bitfield SD33I : 4; /* I Coefficient */
     sfr_bitfield resv12 : 19; /* reserved */
    /* const */ sfr_bitfield LCK : 1; /* Lock Status */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_EVRSDCOEFF2_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield REQSLP : 2; /* Idle Mode and Sleep Mode Request */
     sfr_bitfield SMUSLP : 1; /* SMU CPU Idle Request */
     sfr_bitfield resv3 : 5; /* reserved */
    /* const */ sfr_bitfield PMST : 3; /* Power management Status */
     sfr_bitfield resv11 : 21; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_PMCSR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 1; /* reserved */
     sfr_bitfield ESR1WKEN : 1; /* ESR1 Wake-up enable from Standby */
     sfr_bitfield PINAWKEN : 1; /* Pin A Wake-up enable from Standby */
     sfr_bitfield PINBWKEN : 1; /* Pin B Wake-up enable from Standby */
     sfr_bitfield ESR0DFEN : 1; /* Digital Filter Enable */
     sfr_bitfield ESR0EDCON : 2; /* Edge Detection Control */
     sfr_bitfield ESR1DFEN : 1; /* Digital Filter Enable */
     sfr_bitfield ESR1EDCON : 2; /* Edge Detection Control */
     sfr_bitfield PINADFEN : 1; /* Digital Filter Enable */
     sfr_bitfield PINAEDCON : 2; /* Edge Detection Control */
     sfr_bitfield PINBDFEN : 1; /* Digital Filter Enable */
     sfr_bitfield PINBEDCON : 2; /* Edge Detection Control */
     sfr_bitfield resv16 : 1; /* reserved */
     sfr_bitfield STBYRAMSEL : 2; /* Standby RAM supply in Standby Mode */
     sfr_bitfield resv19 : 1; /* reserved */
     sfr_bitfield WUTWKEN : 1; /* WUT Wake-up enable from Standby */
     sfr_bitfield resv21 : 2; /* reserved */
     sfr_bitfield PORSTDF : 1; /* PORST Digital Filter enable */
     sfr_bitfield resv24 : 1; /* reserved */
     sfr_bitfield DCDCSYNC : 1; /* DC-DC Synchronisation Enable */
     sfr_bitfield resv26 : 3; /* reserved */
     sfr_bitfield ESR0TRIST : 1; /* ESR0 Tristate enable */
     sfr_bitfield resv30 : 1; /* reserved */
    /* const */ sfr_bitfield LCK : 1; /* Lock Status */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_PMSWCR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 12; /* reserved */
     sfr_bitfield IRADIS : 1; /* Idle-Request-Acknowledge Sequence Disable */
     sfr_bitfield resv13 : 11; /* reserved */
    /* const */ sfr_bitfield RES : 3; /* Reserved */
     sfr_bitfield STBYEVEN : 1; /* Standby Entry Event configuration enable */
     sfr_bitfield STBYEV : 3; /* Standby Entry Event Configuration */
     sfr_bitfield resv31 : 1; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_PMSWCR1_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield WUTREL : 24; /* WUT reload value. */
     sfr_bitfield resv24 : 4; /* reserved */
     sfr_bitfield WUTDIV : 1; /* WUT clock divider */
     sfr_bitfield WUTEN : 1; /* WUT enable */
     sfr_bitfield WUTMODE : 1; /* WUT mode selection */
    /* const */ sfr_bitfield LCK : 1; /* Lock Status */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_PMSWCR3_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield WUTCNT : 24; /* WUT counter value. */
     sfr_bitfield resv24 : 7; /* reserved */
    /* const */ sfr_bitfield VAL : 1; /* Valid Status */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_PMSWUTCNT_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 2; /* reserved */
    /* const */ sfr_bitfield ESR1WKP : 1; /* ESR1 Wake-up flag */
    /* const */ sfr_bitfield ESR1OVRUN : 1; /* ESR1 Overrun status flag */
    /* const */ sfr_bitfield PINAWKP : 1; /* Pin A (P14.1) Wake-up flag */
    /* const */ sfr_bitfield PINAOVRUN : 1; /* Pin A Overrun status flag */
    /* const */ sfr_bitfield PINBWKP : 1; /* Pin B (P15.1) Wake-up flag */
    /* const */ sfr_bitfield PINBOVRUN : 1; /* Pin B Overrun status flag */
     sfr_bitfield resv8 : 1; /* reserved */
    /* const */ sfr_bitfield PORSTDF : 1; /* PORST Digital Filter status */
    /* const */ sfr_bitfield HWCFGEVR : 3; /* EVR Hardware Configuration */
    /* const */ sfr_bitfield STBYRAM : 2; /* Standby RAM Supply status */
     sfr_bitfield resv15 : 1; /* reserved */
    /* const */ sfr_bitfield WUTWKP : 1; /* WUT Wake-up flag */
    /* const */ sfr_bitfield WUTOVRUN : 1; /* WUT Overrun status flag */
     sfr_bitfield resv18 : 1; /* reserved */
    /* const */ sfr_bitfield WUTWKEN : 1; /* WUT Wake-up enable status */
    /* const */ sfr_bitfield ESR1WKEN : 1; /* ESR1 Wake-up enable status */
    /* const */ sfr_bitfield PINAWKEN : 1; /* Pin A Wake-up enable status */
    /* const */ sfr_bitfield PINBWKEN : 1; /* Pin B Wake-up enable status */
     sfr_bitfield resv23 : 4; /* reserved */
    /* const */ sfr_bitfield ESR0TRIST : 1; /* ESR0 pin status during Standby */
     sfr_bitfield resv28 : 1; /* reserved */
    /* const */ sfr_bitfield WUTEN : 1; /* WUT Enable status */
    /* const */ sfr_bitfield WUTMODE : 1; /* WUT Mode status */
    /* const */ sfr_bitfield WUTRUN : 1; /* WUT Run status */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_PMSWSTAT_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 2; /* reserved */
     sfr_bitfield ESR1WKPCLR : 1; /* ESR1 Wake-up indication flag clear */
     sfr_bitfield ESR1OVRUNCLR : 1; /* ESR1 Overrun status indication flag clear */
     sfr_bitfield PINAWKPCLR : 1; /* PINA Wake-up indication flag clear */
     sfr_bitfield PINAOVRUNCLR : 1; /* PINA Overrun status indication flag clear */
     sfr_bitfield PINBWKPCLR : 1; /* PINB Wake-up indication flag clear */
     sfr_bitfield PINBOVRUNCLR : 1; /* PINB Overrun status indication flag clear */
     sfr_bitfield resv8 : 8; /* reserved */
     sfr_bitfield WUTWKPCLR : 1; /* WUT Wake-up indication flag clear */
     sfr_bitfield WUTOVRUNCLR : 1; /* WUT Overrun status indication flag clear */
     sfr_bitfield resv18 : 14; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_PMSWSTATCLR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 4; /* reserved */
     sfr_bitfield EXIS0 : 3; /* External Input Selection 0 */
     sfr_bitfield resv7 : 1; /* reserved */
     sfr_bitfield FEN0 : 1; /* Falling Edge Enable 0 */
     sfr_bitfield REN0 : 1; /* Rising Edge Enable 0 */
     sfr_bitfield LDEN0 : 1; /* Level Detection Enable 0 */
     sfr_bitfield EIEN0 : 1; /* External Input Enable 0 */
     sfr_bitfield INP0 : 3; /* Input Node Pointer */
     sfr_bitfield resv15 : 5; /* reserved */
     sfr_bitfield EXIS1 : 3; /* External Input Selection 1 */
     sfr_bitfield resv23 : 1; /* reserved */
     sfr_bitfield FEN1 : 1; /* Falling Edge Enable 1 */
     sfr_bitfield REN1 : 1; /* Rising Edge Enable 1 */
     sfr_bitfield LDEN1 : 1; /* Level Detection Enable 1 */
     sfr_bitfield EIEN1 : 1; /* External Input Enable 1 */
     sfr_bitfield INP1 : 3; /* Input Node Pointer */
     sfr_bitfield resv31 : 1; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_EICR0_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield INTF0 : 1; /* External Event Flag of Channel 0 */
    /* const */ sfr_bitfield INTF1 : 1; /* External Event Flag of Channel 1 */
    /* const */ sfr_bitfield INTF2 : 1; /* External Event Flag of Channel 2 */
    /* const */ sfr_bitfield INTF3 : 1; /* External Event Flag of Channel 3 */
    /* const */ sfr_bitfield INTF4 : 1; /* External Event Flag of Channel 4 */
    /* const */ sfr_bitfield INTF5 : 1; /* External Event Flag of Channel 5 */
    /* const */ sfr_bitfield INTF6 : 1; /* External Event Flag of Channel 6 */
    /* const */ sfr_bitfield INTF7 : 1; /* External Event Flag of Channel 7 */
     sfr_bitfield resv8 : 24; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_EIFR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield FS0 : 1; /* Set Flag INTF0 for Channel 0 */
     sfr_bitfield FS1 : 1; /* Set Flag INTF1 for Channel 1 */
     sfr_bitfield FS2 : 1; /* Set Flag INTF2 for Channel 2 */
     sfr_bitfield FS3 : 1; /* Set Flag INTF3 for Channel 3 */
     sfr_bitfield FS4 : 1; /* Set Flag INTF4 for Channel 4 */
     sfr_bitfield FS5 : 1; /* Set Flag INTF5 for Channel 5 */
     sfr_bitfield FS6 : 1; /* Set Flag INTF6 for Channel 6 */
     sfr_bitfield FS7 : 1; /* Set Flag INTF7 for Channel 7 */
     sfr_bitfield resv8 : 8; /* reserved */
     sfr_bitfield FC0 : 1; /* Clear Flag INTF0 for Channel 0 */
     sfr_bitfield FC1 : 1; /* Clear Flag INTF1 for Channel 1 */
     sfr_bitfield FC2 : 1; /* Clear Flag INTF2 for Channel 2 */
     sfr_bitfield FC3 : 1; /* Clear Flag INTF3 for Channel 3 */
     sfr_bitfield FC4 : 1; /* Clear Flag INTF4 for Channel 4 */
     sfr_bitfield FC5 : 1; /* Clear Flag INTF5 for Channel 5 */
     sfr_bitfield FC6 : 1; /* Clear Flag INTF6 for Channel 6 */
     sfr_bitfield FC7 : 1; /* Clear Flag INTF7 for Channel 7 */
     sfr_bitfield resv24 : 8; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_FMR_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield PDR0 : 1; /* Pattern Detection Result of Channel 0 */
    /* const */ sfr_bitfield PDR1 : 1; /* Pattern Detection Result of Channel 1 */
    /* const */ sfr_bitfield PDR2 : 1; /* Pattern Detection Result of Channel 2 */
    /* const */ sfr_bitfield PDR3 : 1; /* Pattern Detection Result of Channel 3 */
    /* const */ sfr_bitfield PDR4 : 1; /* Pattern Detection Result of Channel 4 */
    /* const */ sfr_bitfield PDR5 : 1; /* Pattern Detection Result of Channel 5 */
    /* const */ sfr_bitfield PDR6 : 1; /* Pattern Detection Result of Channel 6 */
    /* const */ sfr_bitfield PDR7 : 1; /* Pattern Detection Result of Channel 7 */
     sfr_bitfield resv8 : 24; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_PDRR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield IPEN00 : 1; /* Flag Pattern Enable for Channel 0 */
     sfr_bitfield IPEN01 : 1; /* Flag Pattern Enable for Channel 0 */
     sfr_bitfield IPEN02 : 1; /* Flag Pattern Enable for Channel 0 */
     sfr_bitfield IPEN03 : 1; /* Flag Pattern Enable for Channel 0 */
     sfr_bitfield IPEN04 : 1; /* Flag Pattern Enable for Channel 0 */
     sfr_bitfield IPEN05 : 1; /* Flag Pattern Enable for Channel 0 */
     sfr_bitfield IPEN06 : 1; /* Flag Pattern Enable for Channel 0 */
     sfr_bitfield IPEN07 : 1; /* Flag Pattern Enable for Channel 0 */
     sfr_bitfield resv8 : 5; /* reserved */
     sfr_bitfield GEEN0 : 1; /* Generate Event Enable 0 */
     sfr_bitfield IGP0 : 2; /* Interrupt Gating Pattern 0 */
     sfr_bitfield IPEN10 : 1; /* Interrupt Pattern Enable for Channel 1 */
     sfr_bitfield IPEN11 : 1; /* Interrupt Pattern Enable for Channel 1 */
     sfr_bitfield IPEN12 : 1; /* Interrupt Pattern Enable for Channel 1 */
     sfr_bitfield IPEN13 : 1; /* Interrupt Pattern Enable for Channel 1 */
     sfr_bitfield IPEN14 : 1; /* Interrupt Pattern Enable for Channel 1 */
     sfr_bitfield IPEN15 : 1; /* Interrupt Pattern Enable for Channel 1 */
     sfr_bitfield IPEN16 : 1; /* Interrupt Pattern Enable for Channel 1 */
     sfr_bitfield IPEN17 : 1; /* Interrupt Pattern Enable for Channel 1 */
     sfr_bitfield resv24 : 5; /* reserved */
     sfr_bitfield GEEN1 : 1; /* Generate Event Enable 1 */
     sfr_bitfield IGP1 : 2; /* Interrupt Gating Pattern 1 */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_IGCR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 16; /* reserved */
    /* const */ sfr_bitfield LS : 1; /* Lockstep Mode Status */
     sfr_bitfield resv17 : 14; /* reserved */
     sfr_bitfield LSEN : 1; /* Lockstep Enable */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_LCLCON0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 16; /* reserved */
    /* const */ sfr_bitfield LS : 1; /* Reserved in this product */
     sfr_bitfield resv17 : 14; /* reserved */
     sfr_bitfield LSEN : 1; /* Reserved in this product */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_LCLCON1_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield LCLT0 : 1; /* LCL0 Lockstep Test */
    /* const */ sfr_bitfield LCLT1 : 1; /* Reserved in this product */
     sfr_bitfield resv2 : 30; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_LCLTEST_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PWD : 1; /* Sensor Power Down */
     sfr_bitfield START : 1; /* Sensor Measurement Start */
     sfr_bitfield resv2 : 2; /* reserved */
     sfr_bitfield CAL : 22; /* Calibration Value */
     sfr_bitfield resv26 : 5; /* reserved */
     sfr_bitfield SLCK : 1; /* Security Lock */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_DTSCON_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield RESULT : 10; /* Result of the DTS Measurement */
     sfr_bitfield resv10 : 4; /* reserved */
    /* const */ sfr_bitfield RDY : 1; /* Sensor Ready Status */
    /* const */ sfr_bitfield BUSY : 1; /* Sensor Busy Status */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_DTSSTAT_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield LOWER : 10; /* Lower Limit */
     sfr_bitfield resv10 : 5; /* reserved */
     sfr_bitfield LLU : 1; /* Lower Limit Underflow */
     sfr_bitfield UPPER : 10; /* Upper Limit */
     sfr_bitfield resv26 : 4; /* reserved */
     sfr_bitfield SLCK : 1; /* Security Lock */
    /* const */ sfr_bitfield UOF : 1; /* Upper Limit Overflow */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_DTSLIM_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ENDINIT : 1; /* End-of-Initialization Control Bit */
     sfr_bitfield LCK : 1; /* Lock Bit to Control Access to WDTxCON0 */
     sfr_bitfield PW : 14; /* User-Definable Password Field for Access to WDTxCON0 */
     sfr_bitfield REL : 16; /* Reload Value for the WDT (also Time Check Value) */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_WDTSCON0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 16; /* reserved */
     sfr_bitfield FFFC : 16; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_WDTCPU1CON0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CLRIRF : 1; /* Clear Internal Reset Flag */
     sfr_bitfield resv1 : 1; /* reserved */
     sfr_bitfield IR0 : 1; /* Input Frequency Request Control */
     sfr_bitfield DR : 1; /* Disable Request Control Bit */
     sfr_bitfield resv4 : 1; /* reserved */
     sfr_bitfield IR1 : 1; /* Input Frequency Request Control */
     sfr_bitfield UR : 1; /* Unlock Restriction Request Control Bit */
     sfr_bitfield PAR : 1; /* Password Auto-sequence Request Bit */
     sfr_bitfield TCR : 1; /* Counter Check Request Bit */
     sfr_bitfield TCTR : 7; /* Timer Check Tolerance Request */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_WDTSCON1_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 2; /* reserved */
     sfr_bitfield IR0 : 1; /* Input Frequency Request Control */
     sfr_bitfield DR : 1; /* Disable Request Control Bit */
     sfr_bitfield resv4 : 1; /* reserved */
     sfr_bitfield IR1 : 1; /* Input Frequency Request Control */
     sfr_bitfield UR : 1; /* Unlock Restriction Request Control Bit */
     sfr_bitfield PAR : 1; /* Password Auto-sequence Request Bit */
     sfr_bitfield TCR : 1; /* Counter Check Request Bit */
     sfr_bitfield TCTR : 7; /* Timer Check Tolerance Request */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_WDTCPU0CON1_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield AE : 1; /* Watchdog Access Error Status Flag */
    /* const */ sfr_bitfield OE : 1; /* Watchdog Overflow Error Status Flag */
    /* const */ sfr_bitfield IS0 : 1; /* Watchdog Input Clock Status */
    /* const */ sfr_bitfield DS : 1; /* Watchdog Enable/Disable Status Flag */
    /* const */ sfr_bitfield TO : 1; /* Watchdog Time-Out Mode Flag */
    /* const */ sfr_bitfield IS1 : 1; /* Watchdog Input Clock Status */
    /* const */ sfr_bitfield US : 1; /* SMU Unlock Restriction Status Flag */
    /* const */ sfr_bitfield PAS : 1; /* Password Auto-sequence Status Flag */
    /* const */ sfr_bitfield TCS : 1; /* Timer Check Status Flag */
    /* const */ sfr_bitfield TCT : 7; /* Timer Check Tolerance */
    /* const */ sfr_bitfield TIM : 16; /* Timer Value */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_WDTSSR_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield _0008 : 16; /* Reserved */
    /* const */ sfr_bitfield _FFFC : 16; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_WDTCPU1SR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield HBT : 1; /* Heartbeat */
     sfr_bitfield Res : 31; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_SAFECON_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield POL : 1; /* Input Polarity */
     sfr_bitfield MODE : 1; /* Mode Selection */
     sfr_bitfield ENON : 1; /* Enable ON */
     sfr_bitfield PSEL : 1; /* PORT Select */
     sfr_bitfield resv4 : 12; /* reserved */
    /* const */ sfr_bitfield EMSF : 1; /* Emergency Stop Flag */
    /* const */ sfr_bitfield SEMSF : 1; /* SMU Emergency Stop Flag */
     sfr_bitfield resv18 : 6; /* reserved */
     sfr_bitfield EMSFM : 2; /* Emergency Stop Flag Modification */
     sfr_bitfield SEMSFM : 2; /* SMU Emergency Stop Flag Modification */
     sfr_bitfield resv28 : 4; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_EMSR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield LBISTREQ : 1; /* LBIST Request */
     sfr_bitfield LBISTREQP : 1; /* LBIST Request Protection Bit */
     sfr_bitfield PATTERNS : 14; /* LBIST Pattern Number */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_LBISTCTRL0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield SEED : 23; /* LBIST Seed */
     sfr_bitfield resv23 : 1; /* reserved */
     sfr_bitfield SPLITSH : 3; /* LBIST Split-Shift Selection */
     sfr_bitfield BODY : 1; /* Body Application Indicator */
     sfr_bitfield LBISTFREQU : 4; /* LBIST Frequency Selection */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_LBISTCTRL1_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield SIGNATURE : 24; /* LBIST Signature */
     sfr_bitfield resv24 : 7; /* reserved */
    /* const */ sfr_bitfield LBISTDONE : 1; /* LBIST Execution Indicator */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_LBISTCTRL2_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield OVEN0 : 1; /* Overlay Enable 0 */
     sfr_bitfield OVEN1 : 1; /* Reserved in this Product */
     sfr_bitfield OVEN2 : 1; /* Reserved in this Product */
     sfr_bitfield resv3 : 29; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_OVCENABLE_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CSEL0 : 1; /* CPU Select 0 */
    /* const */ sfr_bitfield CSEL1 : 1; /* Reserved in this Product */
    /* const */ sfr_bitfield CSEL2 : 1; /* Reserved in this Product */
     sfr_bitfield resv3 : 13; /* reserved */
     sfr_bitfield OVSTRT : 1; /* Overlay Start */
     sfr_bitfield OVSTP : 1; /* Overlay Stop */
     sfr_bitfield DCINVAL : 1; /* Data Cache Invalidate */
     sfr_bitfield resv19 : 5; /* reserved */
     sfr_bitfield OVCONF : 1; /* Overlay Configured */
     sfr_bitfield POVCONF : 1; /* Write Protection for OVCONF */
     sfr_bitfield resv26 : 6; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_OVCCON_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CCTRIG0 : 1; /* Capture Compare Trigger 0 */
     sfr_bitfield resv1 : 1; /* reserved */
     sfr_bitfield RAMINTM : 2; /* RAM Integrity Modify */
     sfr_bitfield SETLUDIS : 1; /* Set Latch Update Disable */
     sfr_bitfield resv5 : 3; /* reserved */
     sfr_bitfield DATM : 1; /* Disable Application Test Mode (ATM) */
     sfr_bitfield resv9 : 23; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_SYSCON_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield CHREV : 6; /* Chip Revision Number */
    /* const */ sfr_bitfield CHTEC : 2; /* Chip Family */
     sfr_bitfield CHID : 8; /* Chip Identification Number */
    /* const */ sfr_bitfield EEA : 1; /* Emulation Extension Available */
     sfr_bitfield UCODE : 7; /* µCode Version */
     sfr_bitfield FSIZE : 4; /* Program Flash Size */
     sfr_bitfield SP : 2; /* Speed */
     sfr_bitfield SEC : 1; /* Security Device */
     sfr_bitfield resv31 : 1; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_CHIPID_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield DEPT : 5; /* Department Identification Number */
    /* const */ sfr_bitfield MANUF : 11; /* Manufacturer Identification Number */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SCU_MANID_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield DISR : 1; /* Module Disable Request Bit */
    /* const */ sfr_bitfield DISS : 1; /* Module Disable Status Bit */
     sfr_bitfield FDIS : 1; /* Force Disable */
     sfr_bitfield EDIS : 1; /* Sleep Mode Enable Control */
     sfr_bitfield resv4 : 28; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SMU_CLC_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield TGS : 2; /* Trigger Set for OTGB0/1 */
     sfr_bitfield TGB : 1; /* OTGB0/1 Bus Select */
     sfr_bitfield TG_P : 1; /* TGS, TGB Write Protection */
     sfr_bitfield resv4 : 20; /* reserved */
     sfr_bitfield SUS : 4; /* OCDS Suspend Control */
     sfr_bitfield SUS_P : 1; /* SUS Write Protection */
    /* const */ sfr_bitfield SUSSTA : 1; /* Suspend State */
     sfr_bitfield resv30 : 2; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SMU_OCS_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CLR : 1; /* Kernel Reset Status Clear */
     sfr_bitfield resv1 : 31; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SMU_KRSTCLR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield RST : 1; /* Kernel Reset */
     sfr_bitfield resv1 : 31; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SMU_KRST1_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield RST : 1; /* Kernel Reset */
    /* const */ sfr_bitfield RSTSTAT : 1; /* Kernel Reset Status */
     sfr_bitfield resv2 : 30; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SMU_KRST0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CMD : 4; /* Implements the SMU Command Interface. */
     sfr_bitfield ARG : 4; /* Implements the SMU Command Interface. */
     sfr_bitfield resv8 : 24; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SMU_CMD_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CMD : 4; /* Last command received */
     sfr_bitfield ARG : 4; /* Last command argument received */
     sfr_bitfield RES : 1; /* Result of last received command */
     sfr_bitfield ASCE : 1; /* Alarm Status Clear Enable */
    /* const */ sfr_bitfield FSP : 2; /* Fault Signaling Protocol status */
     sfr_bitfield FSTS : 1; /* Fault State Timing Status */
     sfr_bitfield resv13 : 3; /* reserved */
     sfr_bitfield RTS0 : 1; /* Recovery Timer 0 Status */
     sfr_bitfield RTME0 : 1; /* Recovery Timer 0 Missed Event */
     sfr_bitfield RTS1 : 1; /* Recovery Timer 1 Status */
     sfr_bitfield RTME1 : 1; /* Recovery Timer 1 Missed Event */
     sfr_bitfield resv20 : 12; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SMU_STS_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PRE1 : 3; /* Prescaler1 */
     sfr_bitfield PRE2 : 2; /* Prescaler2 */
     sfr_bitfield MODE : 2; /* Fault Signaling Protocol configuration */
     sfr_bitfield PES : 1; /* Port Emergency Stop (PES) */
    /* const */ sfr_bitfield TFSP_LOW : 14; /* Specification of the FSP fault state duration */
     sfr_bitfield TFSP_HIGH : 10; /* Specification the FSP fault state duration */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SMU_FSP_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield IGCS0 : 3; /* Interrupt Generation Configuration Set 0 */
     sfr_bitfield resv3 : 1; /* reserved */
     sfr_bitfield IGCS1 : 3; /* Interrupt Generation Configuration Set 1 */
     sfr_bitfield resv7 : 1; /* reserved */
     sfr_bitfield IGCS2 : 3; /* Interrupt Generation Configuration Set 2 */
     sfr_bitfield resv11 : 5; /* reserved */
     sfr_bitfield ICS : 3; /* Idle Configuration Set */
     sfr_bitfield resv19 : 5; /* reserved */
     sfr_bitfield PES : 5; /* Port Emergency Stop */
     sfr_bitfield EFRST : 1; /* Enable FAULT to RUN State Transition */
     sfr_bitfield resv30 : 2; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SMU_AGC_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield RT0E : 1; /* RT0 Enable Bit */
     sfr_bitfield RT1E : 1; /* RT1 Enable Bit */
     sfr_bitfield resv2 : 6; /* reserved */
     sfr_bitfield RTD : 24; /* Recovery Timer Duration */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SMU_RTC_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CFGLCK : 8; /* Configuration Lock */
     sfr_bitfield PERLCK : 8; /* Permanent Lock */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SMU_KEYS_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield SSM : 2; /* Running state of the SMU State Machine */
     sfr_bitfield resv2 : 30; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SMU_DBG_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield HWDIR : 1; /* Port Direction. */
     sfr_bitfield HWEN : 1; /* Port Enable. */
     sfr_bitfield resv2 : 5; /* reserved */
     sfr_bitfield PCS : 1; /* PAD Configuration Select */
     sfr_bitfield resv8 : 8; /* reserved */
    /* const */ sfr_bitfield PCFG : 16; /* PAD Configuration */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SMU_PCTL_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield FCNT : 4; /* Fault Counter. */
     sfr_bitfield resv4 : 4; /* reserved */
    /* const */ sfr_bitfield ACNT : 8; /* Alarm Counter. */
     sfr_bitfield resv16 : 14; /* reserved */
    /* const */ sfr_bitfield FCO : 1; /* Fault Counter Overflow. */
    /* const */ sfr_bitfield ACO : 1; /* Alarm Counter Overflow. */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SMU_AFCNT_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield GID0 : 3; /* Group Index 0. */
     sfr_bitfield ALID0 : 5; /* Alarm Identifier 0. */
     sfr_bitfield GID1 : 3; /* Group Index 1. */
     sfr_bitfield ALID1 : 5; /* Alarm Identifier 1. */
     sfr_bitfield GID2 : 3; /* Group Index 2. */
     sfr_bitfield ALID2 : 5; /* Alarm Identifier 2. */
     sfr_bitfield GID3 : 3; /* Group Index 3. */
     sfr_bitfield ALID3 : 5; /* Alarm Identifier 3. */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SMU_RTAC0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CF0 : 1; /* Configuration flag x (x=0-2) for alarm 0 belonging to alarm group 0. */
     sfr_bitfield CF1 : 1; /* Configuration flag x (x=0-2) for alarm 1 belonging to alarm group 0. */
     sfr_bitfield CF2 : 1; /* Configuration flag x (x=0-2) for alarm 2 belonging to alarm group 0. */
     sfr_bitfield CF3 : 1; /* Configuration flag x (x=0-2) for alarm 3 belonging to alarm group 0. */
     sfr_bitfield CF4 : 1; /* Configuration flag x (x=0-2) for alarm 4 belonging to alarm group 0. */
     sfr_bitfield CF5 : 1; /* Configuration flag x (x=0-2) for alarm 5 belonging to alarm group 0. */
     sfr_bitfield CF6 : 1; /* Configuration flag x (x=0-2) for alarm 6 belonging to alarm group 0. */
     sfr_bitfield CF7 : 1; /* Configuration flag x (x=0-2) for alarm 7 belonging to alarm group 0. */
     sfr_bitfield CF8 : 1; /* Configuration flag x (x=0-2) for alarm 8 belonging to alarm group 0. */
     sfr_bitfield CF9 : 1; /* Configuration flag x (x=0-2) for alarm 9 belonging to alarm group 0. */
     sfr_bitfield CF10 : 1; /* Configuration flag x (x=0-2) for alarm 10 belonging to alarm group 0. */
     sfr_bitfield CF11 : 1; /* Configuration flag x (x=0-2) for alarm 11 belonging to alarm group 0. */
     sfr_bitfield CF12 : 1; /* Configuration flag x (x=0-2) for alarm 12 belonging to alarm group 0. */
     sfr_bitfield CF13 : 1; /* Configuration flag x (x=0-2) for alarm 13 belonging to alarm group 0. */
     sfr_bitfield CF14 : 1; /* Configuration flag x (x=0-2) for alarm 14 belonging to alarm group 0. */
     sfr_bitfield CF15 : 1; /* Configuration flag x (x=0-2) for alarm 15 belonging to alarm group 0. */
     sfr_bitfield CF16 : 1; /* Configuration flag x (x=0-2) for alarm 16 belonging to alarm group 0. */
     sfr_bitfield CF17 : 1; /* Configuration flag x (x=0-2) for alarm 17 belonging to alarm group 0. */
     sfr_bitfield CF18 : 1; /* Configuration flag x (x=0-2) for alarm 18 belonging to alarm group 0. */
     sfr_bitfield CF19 : 1; /* Configuration flag x (x=0-2) for alarm 19 belonging to alarm group 0. */
     sfr_bitfield CF20 : 1; /* Configuration flag x (x=0-2) for alarm 20 belonging to alarm group 0. */
     sfr_bitfield CF21 : 1; /* Configuration flag x (x=0-2) for alarm 21 belonging to alarm group 0. */
     sfr_bitfield CF22 : 1; /* Configuration flag x (x=0-2) for alarm 22 belonging to alarm group 0. */
     sfr_bitfield CF23 : 1; /* Configuration flag x (x=0-2) for alarm 23 belonging to alarm group 0. */
     sfr_bitfield CF24 : 1; /* Configuration flag x (x=0-2) for alarm 24 belonging to alarm group 0. */
     sfr_bitfield CF25 : 1; /* Configuration flag x (x=0-2) for alarm 25 belonging to alarm group 0. */
     sfr_bitfield CF26 : 1; /* Configuration flag x (x=0-2) for alarm 26 belonging to alarm group 0. */
     sfr_bitfield CF27 : 1; /* Configuration flag x (x=0-2) for alarm 27 belonging to alarm group 0. */
     sfr_bitfield CF28 : 1; /* Configuration flag x (x=0-2) for alarm 28 belonging to alarm group 0. */
     sfr_bitfield CF29 : 1; /* Configuration flag x (x=0-2) for alarm 29 belonging to alarm group 0. */
     sfr_bitfield CF30 : 1; /* Configuration flag x (x=0-2) for alarm 30 belonging to alarm group 0. */
     sfr_bitfield CF31 : 1; /* Configuration flag x (x=0-2) for alarm 31 belonging to alarm group 0. */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SMU_AG0CF0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CF0 : 1; /* Configuration flag x (x=0-2) for alarm 0 belonging to alarm group 1. */
     sfr_bitfield CF1 : 1; /* Configuration flag x (x=0-2) for alarm 1 belonging to alarm group 1. */
     sfr_bitfield CF2 : 1; /* Configuration flag x (x=0-2) for alarm 2 belonging to alarm group 1. */
     sfr_bitfield CF3 : 1; /* Configuration flag x (x=0-2) for alarm 3 belonging to alarm group 1. */
     sfr_bitfield CF4 : 1; /* Configuration flag x (x=0-2) for alarm 4 belonging to alarm group 1. */
     sfr_bitfield CF5 : 1; /* Configuration flag x (x=0-2) for alarm 5 belonging to alarm group 1. */
     sfr_bitfield CF6 : 1; /* Configuration flag x (x=0-2) for alarm 6 belonging to alarm group 1. */
     sfr_bitfield CF7 : 1; /* Configuration flag x (x=0-2) for alarm 7 belonging to alarm group 1. */
     sfr_bitfield CF8 : 1; /* Configuration flag x (x=0-2) for alarm 8 belonging to alarm group 1. */
     sfr_bitfield CF9 : 1; /* Configuration flag x (x=0-2) for alarm 9 belonging to alarm group 1. */
     sfr_bitfield CF10 : 1; /* Configuration flag x (x=0-2) for alarm 10 belonging to alarm group 1. */
     sfr_bitfield CF11 : 1; /* Configuration flag x (x=0-2) for alarm 11 belonging to alarm group 1. */
     sfr_bitfield CF12 : 1; /* Configuration flag x (x=0-2) for alarm 12 belonging to alarm group 1. */
     sfr_bitfield CF13 : 1; /* Configuration flag x (x=0-2) for alarm 13 belonging to alarm group 1. */
     sfr_bitfield CF14 : 1; /* Configuration flag x (x=0-2) for alarm 14 belonging to alarm group 1. */
     sfr_bitfield CF15 : 1; /* Configuration flag x (x=0-2) for alarm 15 belonging to alarm group 1. */
     sfr_bitfield CF16 : 1; /* Configuration flag x (x=0-2) for alarm 16 belonging to alarm group 1. */
     sfr_bitfield CF17 : 1; /* Configuration flag x (x=0-2) for alarm 17 belonging to alarm group 1. */
     sfr_bitfield CF18 : 1; /* Configuration flag x (x=0-2) for alarm 18 belonging to alarm group 1. */
     sfr_bitfield CF19 : 1; /* Configuration flag x (x=0-2) for alarm 19 belonging to alarm group 1. */
     sfr_bitfield CF20 : 1; /* Configuration flag x (x=0-2) for alarm 20 belonging to alarm group 1. */
     sfr_bitfield CF21 : 1; /* Configuration flag x (x=0-2) for alarm 21 belonging to alarm group 1. */
     sfr_bitfield CF22 : 1; /* Configuration flag x (x=0-2) for alarm 22 belonging to alarm group 1. */
     sfr_bitfield CF23 : 1; /* Configuration flag x (x=0-2) for alarm 23 belonging to alarm group 1. */
     sfr_bitfield CF24 : 1; /* Configuration flag x (x=0-2) for alarm 24 belonging to alarm group 1. */
     sfr_bitfield CF25 : 1; /* Configuration flag x (x=0-2) for alarm 25 belonging to alarm group 1. */
     sfr_bitfield CF26 : 1; /* Configuration flag x (x=0-2) for alarm 26 belonging to alarm group 1. */
     sfr_bitfield CF27 : 1; /* Configuration flag x (x=0-2) for alarm 27 belonging to alarm group 1. */
     sfr_bitfield CF28 : 1; /* Configuration flag x (x=0-2) for alarm 28 belonging to alarm group 1. */
     sfr_bitfield CF29 : 1; /* Configuration flag x (x=0-2) for alarm 29 belonging to alarm group 1. */
     sfr_bitfield CF30 : 1; /* Configuration flag x (x=0-2) for alarm 30 belonging to alarm group 1. */
     sfr_bitfield CF31 : 1; /* Configuration flag x (x=0-2) for alarm 31 belonging to alarm group 1. */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SMU_AG1CF0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CF0 : 1; /* Configuration flag x (x=0-2) for alarm 0 belonging to alarm group 2. */
     sfr_bitfield CF1 : 1; /* Configuration flag x (x=0-2) for alarm 1 belonging to alarm group 2. */
     sfr_bitfield CF2 : 1; /* Configuration flag x (x=0-2) for alarm 2 belonging to alarm group 2. */
     sfr_bitfield CF3 : 1; /* Configuration flag x (x=0-2) for alarm 3 belonging to alarm group 2. */
     sfr_bitfield CF4 : 1; /* Configuration flag x (x=0-2) for alarm 4 belonging to alarm group 2. */
     sfr_bitfield CF5 : 1; /* Configuration flag x (x=0-2) for alarm 5 belonging to alarm group 2. */
     sfr_bitfield CF6 : 1; /* Configuration flag x (x=0-2) for alarm 6 belonging to alarm group 2. */
     sfr_bitfield CF7 : 1; /* Configuration flag x (x=0-2) for alarm 7 belonging to alarm group 2. */
     sfr_bitfield CF8 : 1; /* Configuration flag x (x=0-2) for alarm 8 belonging to alarm group 2. */
     sfr_bitfield CF9 : 1; /* Configuration flag x (x=0-2) for alarm 9 belonging to alarm group 2. */
     sfr_bitfield CF10 : 1; /* Configuration flag x (x=0-2) for alarm 10 belonging to alarm group 2. */
     sfr_bitfield CF11 : 1; /* Configuration flag x (x=0-2) for alarm 11 belonging to alarm group 2. */
     sfr_bitfield CF12 : 1; /* Configuration flag x (x=0-2) for alarm 12 belonging to alarm group 2. */
     sfr_bitfield CF13 : 1; /* Configuration flag x (x=0-2) for alarm 13 belonging to alarm group 2. */
     sfr_bitfield CF14 : 1; /* Configuration flag x (x=0-2) for alarm 14 belonging to alarm group 2. */
     sfr_bitfield CF15 : 1; /* Configuration flag x (x=0-2) for alarm 15 belonging to alarm group 2. */
     sfr_bitfield CF16 : 1; /* Configuration flag x (x=0-2) for alarm 16 belonging to alarm group 2. */
     sfr_bitfield CF17 : 1; /* Configuration flag x (x=0-2) for alarm 17 belonging to alarm group 2. */
     sfr_bitfield CF18 : 1; /* Configuration flag x (x=0-2) for alarm 18 belonging to alarm group 2. */
     sfr_bitfield CF19 : 1; /* Configuration flag x (x=0-2) for alarm 19 belonging to alarm group 2. */
     sfr_bitfield CF20 : 1; /* Configuration flag x (x=0-2) for alarm 20 belonging to alarm group 2. */
     sfr_bitfield CF21 : 1; /* Configuration flag x (x=0-2) for alarm 21 belonging to alarm group 2. */
     sfr_bitfield CF22 : 1; /* Configuration flag x (x=0-2) for alarm 22 belonging to alarm group 2. */
     sfr_bitfield CF23 : 1; /* Configuration flag x (x=0-2) for alarm 23 belonging to alarm group 2. */
     sfr_bitfield CF24 : 1; /* Configuration flag x (x=0-2) for alarm 24 belonging to alarm group 2. */
     sfr_bitfield CF25 : 1; /* Configuration flag x (x=0-2) for alarm 25 belonging to alarm group 2. */
     sfr_bitfield CF26 : 1; /* Configuration flag x (x=0-2) for alarm 26 belonging to alarm group 2. */
     sfr_bitfield CF27 : 1; /* Configuration flag x (x=0-2) for alarm 27 belonging to alarm group 2. */
     sfr_bitfield CF28 : 1; /* Configuration flag x (x=0-2) for alarm 28 belonging to alarm group 2. */
     sfr_bitfield CF29 : 1; /* Configuration flag x (x=0-2) for alarm 29 belonging to alarm group 2. */
     sfr_bitfield CF30 : 1; /* Configuration flag x (x=0-2) for alarm 30 belonging to alarm group 2. */
     sfr_bitfield CF31 : 1; /* Configuration flag x (x=0-2) for alarm 31 belonging to alarm group 2. */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SMU_AG2CF0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CF0 : 1; /* Configuration flag x (x=0-0) for alarm 0 belonging to alarm group 3. */
     sfr_bitfield CF1 : 1; /* Configuration flag x (x=0-0) for alarm 1 belonging to alarm group 3. */
     sfr_bitfield CF2 : 1; /* Configuration flag x (x=0-0) for alarm 2 belonging to alarm group 3. */
     sfr_bitfield CF3 : 1; /* Configuration flag x (x=0-0) for alarm 3 belonging to alarm group 3. */
     sfr_bitfield CF4 : 1; /* Configuration flag x (x=0-0) for alarm 4 belonging to alarm group 3. */
     sfr_bitfield CF5 : 1; /* Configuration flag x (x=0-0) for alarm 5 belonging to alarm group 3. */
     sfr_bitfield CF6 : 1; /* Configuration flag x (x=0-0) for alarm 6 belonging to alarm group 3. */
     sfr_bitfield CF7 : 1; /* Configuration flag x (x=0-0) for alarm 7 belonging to alarm group 3. */
     sfr_bitfield CF8 : 1; /* Configuration flag x (x=0-0) for alarm 8 belonging to alarm group 3. */
     sfr_bitfield CF9 : 1; /* Configuration flag x (x=0-0) for alarm 9 belonging to alarm group 3. */
     sfr_bitfield CF10 : 1; /* Configuration flag x (x=0-0) for alarm 10 belonging to alarm group 3. */
     sfr_bitfield CF11 : 1; /* Configuration flag x (x=0-0) for alarm 11 belonging to alarm group 3. */
     sfr_bitfield CF12 : 1; /* Configuration flag x (x=0-0) for alarm 12 belonging to alarm group 3. */
     sfr_bitfield CF13 : 1; /* Configuration flag x (x=0-0) for alarm 13 belonging to alarm group 3. */
     sfr_bitfield CF14 : 1; /* Configuration flag x (x=0-0) for alarm 14 belonging to alarm group 3. */
     sfr_bitfield CF15 : 1; /* Configuration flag x (x=0-0) for alarm 15 belonging to alarm group 3. */
     sfr_bitfield CF16 : 1; /* Configuration flag x (x=0-0) for alarm 16 belonging to alarm group 3. */
     sfr_bitfield CF17 : 1; /* Configuration flag x (x=0-0) for alarm 17 belonging to alarm group 3. */
     sfr_bitfield CF18 : 1; /* Configuration flag x (x=0-0) for alarm 18 belonging to alarm group 3. */
     sfr_bitfield CF19 : 1; /* Configuration flag x (x=0-0) for alarm 19 belonging to alarm group 3. */
     sfr_bitfield CF20 : 1; /* Configuration flag x (x=0-0) for alarm 20 belonging to alarm group 3. */
     sfr_bitfield CF21 : 1; /* Configuration flag x (x=0-0) for alarm 21 belonging to alarm group 3. */
     sfr_bitfield CF22 : 1; /* Configuration flag x (x=0-0) for alarm 22 belonging to alarm group 3. */
     sfr_bitfield CF23 : 1; /* Configuration flag x (x=0-0) for alarm 23 belonging to alarm group 3. */
     sfr_bitfield CF24 : 1; /* Configuration flag x (x=0-0) for alarm 24 belonging to alarm group 3. */
     sfr_bitfield CF25 : 1; /* Configuration flag x (x=0-0) for alarm 25 belonging to alarm group 3. */
     sfr_bitfield CF26 : 1; /* Configuration flag x (x=0-0) for alarm 26 belonging to alarm group 3. */
     sfr_bitfield CF27 : 1; /* Configuration flag x (x=0-0) for alarm 27 belonging to alarm group 3. */
     sfr_bitfield CF28 : 1; /* Configuration flag x (x=0-0) for alarm 28 belonging to alarm group 3. */
     sfr_bitfield CF29 : 1; /* Configuration flag x (x=0-0) for alarm 29 belonging to alarm group 3. */
     sfr_bitfield CF30 : 1; /* Configuration flag x (x=0-0) for alarm 30 belonging to alarm group 3. */
     sfr_bitfield CF31 : 1; /* Configuration flag x (x=0-0) for alarm 31 belonging to alarm group 3. */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SMU_AG3CF0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CF0 : 1; /* Configuration flag x (x=1-1) for alarm 0 belonging to alarm group 3. */
     sfr_bitfield CF1 : 1; /* Configuration flag x (x=1-1) for alarm 1 belonging to alarm group 3. */
     sfr_bitfield CF2 : 1; /* Configuration flag x (x=1-1) for alarm 2 belonging to alarm group 3. */
     sfr_bitfield CF3 : 1; /* Configuration flag x (x=1-1) for alarm 3 belonging to alarm group 3. */
     sfr_bitfield CF4 : 1; /* Configuration flag x (x=1-1) for alarm 4 belonging to alarm group 3. */
     sfr_bitfield CF5 : 1; /* Configuration flag x (x=1-1) for alarm 5 belonging to alarm group 3. */
     sfr_bitfield CF6 : 1; /* Configuration flag x (x=1-1) for alarm 6 belonging to alarm group 3. */
     sfr_bitfield CF7 : 1; /* Configuration flag x (x=1-1) for alarm 7 belonging to alarm group 3. */
     sfr_bitfield CF8 : 1; /* Configuration flag x (x=1-1) for alarm 8 belonging to alarm group 3. */
     sfr_bitfield CF9 : 1; /* Configuration flag x (x=1-1) for alarm 9 belonging to alarm group 3. */
     sfr_bitfield CF10 : 1; /* Configuration flag x (x=1-1) for alarm 10 belonging to alarm group 3. */
     sfr_bitfield CF11 : 1; /* Configuration flag x (x=1-1) for alarm 11 belonging to alarm group 3. */
     sfr_bitfield CF12 : 1; /* Configuration flag x (x=1-1) for alarm 12 belonging to alarm group 3. */
     sfr_bitfield CF13 : 1; /* Configuration flag x (x=1-1) for alarm 13 belonging to alarm group 3. */
     sfr_bitfield CF14 : 1; /* Configuration flag x (x=1-1) for alarm 14 belonging to alarm group 3. */
     sfr_bitfield CF15 : 1; /* Configuration flag x (x=1-1) for alarm 15 belonging to alarm group 3. */
     sfr_bitfield CF16 : 1; /* Configuration flag x (x=1-1) for alarm 16 belonging to alarm group 3. */
     sfr_bitfield CF17 : 1; /* Configuration flag x (x=1-1) for alarm 17 belonging to alarm group 3. */
     sfr_bitfield CF18 : 1; /* Configuration flag x (x=1-1) for alarm 18 belonging to alarm group 3. */
     sfr_bitfield CF19 : 1; /* Configuration flag x (x=1-1) for alarm 19 belonging to alarm group 3. */
     sfr_bitfield CF20 : 1; /* Configuration flag x (x=1-1) for alarm 20 belonging to alarm group 3. */
     sfr_bitfield CF21 : 1; /* Configuration flag x (x=1-1) for alarm 21 belonging to alarm group 3. */
     sfr_bitfield CF22 : 1; /* Configuration flag x (x=1-1) for alarm 22 belonging to alarm group 3. */
     sfr_bitfield CF23 : 1; /* Configuration flag x (x=1-1) for alarm 23 belonging to alarm group 3. */
     sfr_bitfield CF24 : 1; /* Configuration flag x (x=1-1) for alarm 24 belonging to alarm group 3. */
     sfr_bitfield CF25 : 1; /* Configuration flag x (x=1-1) for alarm 25 belonging to alarm group 3. */
     sfr_bitfield CF26 : 1; /* Configuration flag x (x=1-1) for alarm 26 belonging to alarm group 3. */
     sfr_bitfield CF27 : 1; /* Configuration flag x (x=1-1) for alarm 27 belonging to alarm group 3. */
     sfr_bitfield CF28 : 1; /* Configuration flag x (x=1-1) for alarm 28 belonging to alarm group 3. */
     sfr_bitfield CF29 : 1; /* Configuration flag x (x=1-1) for alarm 29 belonging to alarm group 3. */
     sfr_bitfield CF30 : 1; /* Configuration flag x (x=1-1) for alarm 30 belonging to alarm group 3. */
     sfr_bitfield CF31 : 1; /* Configuration flag x (x=1-1) for alarm 31 belonging to alarm group 3. */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SMU_AG3CF1_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CF0 : 1; /* Configuration flag x (x=2) for alarm 0 belonging to alarm group 3. */
     sfr_bitfield CF1 : 1; /* Configuration flag x (x=2) for alarm 1 belonging to alarm group 3. */
     sfr_bitfield CF2 : 1; /* Configuration flag x (x=2) for alarm 2 belonging to alarm group 3. */
     sfr_bitfield CF3 : 1; /* Configuration flag x (x=2) for alarm 3 belonging to alarm group 3. */
     sfr_bitfield CF4 : 1; /* Configuration flag x (x=2) for alarm 4 belonging to alarm group 3. */
     sfr_bitfield CF5 : 1; /* Configuration flag x (x=2) for alarm 5 belonging to alarm group 3. */
     sfr_bitfield CF6 : 1; /* Configuration flag x (x=2) for alarm 6 belonging to alarm group 3. */
     sfr_bitfield CF7 : 1; /* Configuration flag x (x=2) for alarm 7 belonging to alarm group 3. */
     sfr_bitfield CF8 : 1; /* Configuration flag x (x=2) for alarm 8 belonging to alarm group 3. */
     sfr_bitfield CF9 : 1; /* Configuration flag x (x=2) for alarm 9 belonging to alarm group 3. */
     sfr_bitfield CF10 : 1; /* Configuration flag x (x=2) for alarm 10 belonging to alarm group 3. */
     sfr_bitfield CF11 : 1; /* Configuration flag x (x=2) for alarm 11 belonging to alarm group 3. */
     sfr_bitfield CF12 : 1; /* Configuration flag x (x=2) for alarm 12 belonging to alarm group 3. */
     sfr_bitfield CF13 : 1; /* Configuration flag x (x=2) for alarm 13 belonging to alarm group 3. */
     sfr_bitfield CF14 : 1; /* Configuration flag x (x=2) for alarm 14 belonging to alarm group 3. */
     sfr_bitfield CF15 : 1; /* Configuration flag x (x=2) for alarm 15 belonging to alarm group 3. */
     sfr_bitfield CF16 : 1; /* Configuration flag x (x=2) for alarm 16 belonging to alarm group 3. */
     sfr_bitfield CF17 : 1; /* Configuration flag x (x=2) for alarm 17 belonging to alarm group 3. */
     sfr_bitfield CF18 : 1; /* Configuration flag x (x=2) for alarm 18 belonging to alarm group 3. */
     sfr_bitfield CF19 : 1; /* Configuration flag x (x=2) for alarm 19 belonging to alarm group 3. */
     sfr_bitfield CF20 : 1; /* Configuration flag x (x=2) for alarm 20 belonging to alarm group 3. */
     sfr_bitfield CF21 : 1; /* Configuration flag x (x=2) for alarm 21 belonging to alarm group 3. */
     sfr_bitfield CF22 : 1; /* Configuration flag x (x=2) for alarm 22 belonging to alarm group 3. */
     sfr_bitfield CF23 : 1; /* Configuration flag x (x=2) for alarm 23 belonging to alarm group 3. */
     sfr_bitfield CF24 : 1; /* Configuration flag x (x=2) for alarm 24 belonging to alarm group 3. */
     sfr_bitfield CF25 : 1; /* Configuration flag x (x=2) for alarm 25 belonging to alarm group 3. */
     sfr_bitfield CF26 : 1; /* Configuration flag x (x=2) for alarm 26 belonging to alarm group 3. */
     sfr_bitfield CF27 : 1; /* Configuration flag x (x=2) for alarm 27 belonging to alarm group 3. */
     sfr_bitfield CF28 : 1; /* Configuration flag x (x=2) for alarm 28 belonging to alarm group 3. */
     sfr_bitfield CF29 : 1; /* Configuration flag x (x=2) for alarm 29 belonging to alarm group 3. */
     sfr_bitfield CF30 : 1; /* Configuration flag x (x=2) for alarm 30 belonging to alarm group 3. */
     sfr_bitfield CF31 : 1; /* Configuration flag x (x=2) for alarm 31 belonging to alarm group 3. */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SMU_AG3CF2_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CF0 : 1; /* Configuration flag x (x=0-2) for alarm 0 belonging to alarm group 4. */
     sfr_bitfield CF1 : 1; /* Configuration flag x (x=0-2) for alarm 1 belonging to alarm group 4. */
     sfr_bitfield CF2 : 1; /* Configuration flag x (x=0-2) for alarm 2 belonging to alarm group 4. */
     sfr_bitfield CF3 : 1; /* Configuration flag x (x=0-2) for alarm 3 belonging to alarm group 4. */
     sfr_bitfield CF4 : 1; /* Configuration flag x (x=0-2) for alarm 4 belonging to alarm group 4. */
     sfr_bitfield CF5 : 1; /* Configuration flag x (x=0-2) for alarm 5 belonging to alarm group 4. */
     sfr_bitfield CF6 : 1; /* Configuration flag x (x=0-2) for alarm 6 belonging to alarm group 4. */
     sfr_bitfield CF7 : 1; /* Configuration flag x (x=0-2) for alarm 7 belonging to alarm group 4. */
     sfr_bitfield CF8 : 1; /* Configuration flag x (x=0-2) for alarm 8 belonging to alarm group 4. */
     sfr_bitfield CF9 : 1; /* Configuration flag x (x=0-2) for alarm 9 belonging to alarm group 4. */
     sfr_bitfield CF10 : 1; /* Configuration flag x (x=0-2) for alarm 10 belonging to alarm group 4. */
     sfr_bitfield CF11 : 1; /* Configuration flag x (x=0-2) for alarm 11 belonging to alarm group 4. */
     sfr_bitfield CF12 : 1; /* Configuration flag x (x=0-2) for alarm 12 belonging to alarm group 4. */
     sfr_bitfield CF13 : 1; /* Configuration flag x (x=0-2) for alarm 13 belonging to alarm group 4. */
     sfr_bitfield CF14 : 1; /* Configuration flag x (x=0-2) for alarm 14 belonging to alarm group 4. */
     sfr_bitfield CF15 : 1; /* Configuration flag x (x=0-2) for alarm 15 belonging to alarm group 4. */
     sfr_bitfield CF16 : 1; /* Configuration flag x (x=0-2) for alarm 16 belonging to alarm group 4. */
     sfr_bitfield CF17 : 1; /* Configuration flag x (x=0-2) for alarm 17 belonging to alarm group 4. */
     sfr_bitfield CF18 : 1; /* Configuration flag x (x=0-2) for alarm 18 belonging to alarm group 4. */
     sfr_bitfield CF19 : 1; /* Configuration flag x (x=0-2) for alarm 19 belonging to alarm group 4. */
     sfr_bitfield CF20 : 1; /* Configuration flag x (x=0-2) for alarm 20 belonging to alarm group 4. */
     sfr_bitfield CF21 : 1; /* Configuration flag x (x=0-2) for alarm 21 belonging to alarm group 4. */
     sfr_bitfield CF22 : 1; /* Configuration flag x (x=0-2) for alarm 22 belonging to alarm group 4. */
     sfr_bitfield CF23 : 1; /* Configuration flag x (x=0-2) for alarm 23 belonging to alarm group 4. */
     sfr_bitfield CF24 : 1; /* Configuration flag x (x=0-2) for alarm 24 belonging to alarm group 4. */
     sfr_bitfield CF25 : 1; /* Configuration flag x (x=0-2) for alarm 25 belonging to alarm group 4. */
     sfr_bitfield CF26 : 1; /* Configuration flag x (x=0-2) for alarm 26 belonging to alarm group 4. */
     sfr_bitfield CF27 : 1; /* Configuration flag x (x=0-2) for alarm 27 belonging to alarm group 4. */
     sfr_bitfield CF28 : 1; /* Configuration flag x (x=0-2) for alarm 28 belonging to alarm group 4. */
     sfr_bitfield CF29 : 1; /* Configuration flag x (x=0-2) for alarm 29 belonging to alarm group 4. */
     sfr_bitfield CF30 : 1; /* Configuration flag x (x=0-2) for alarm 30 belonging to alarm group 4. */
     sfr_bitfield CF31 : 1; /* Configuration flag x (x=0-2) for alarm 31 belonging to alarm group 4. */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SMU_AG4CF0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CF0 : 1; /* Configuration flag x (x=0-2) for alarm 0 belonging to alarm group 5. */
     sfr_bitfield CF1 : 1; /* Configuration flag x (x=0-2) for alarm 1 belonging to alarm group 5. */
     sfr_bitfield CF2 : 1; /* Configuration flag x (x=0-2) for alarm 2 belonging to alarm group 5. */
     sfr_bitfield CF3 : 1; /* Configuration flag x (x=0-2) for alarm 3 belonging to alarm group 5. */
     sfr_bitfield CF4 : 1; /* Configuration flag x (x=0-2) for alarm 4 belonging to alarm group 5. */
     sfr_bitfield CF5 : 1; /* Configuration flag x (x=0-2) for alarm 5 belonging to alarm group 5. */
     sfr_bitfield CF6 : 1; /* Configuration flag x (x=0-2) for alarm 6 belonging to alarm group 5. */
     sfr_bitfield CF7 : 1; /* Configuration flag x (x=0-2) for alarm 7 belonging to alarm group 5. */
     sfr_bitfield CF8 : 1; /* Configuration flag x (x=0-2) for alarm 8 belonging to alarm group 5. */
     sfr_bitfield CF9 : 1; /* Configuration flag x (x=0-2) for alarm 9 belonging to alarm group 5. */
     sfr_bitfield CF10 : 1; /* Configuration flag x (x=0-2) for alarm 10 belonging to alarm group 5. */
     sfr_bitfield CF11 : 1; /* Configuration flag x (x=0-2) for alarm 11 belonging to alarm group 5. */
     sfr_bitfield CF12 : 1; /* Configuration flag x (x=0-2) for alarm 12 belonging to alarm group 5. */
     sfr_bitfield CF13 : 1; /* Configuration flag x (x=0-2) for alarm 13 belonging to alarm group 5. */
     sfr_bitfield CF14 : 1; /* Configuration flag x (x=0-2) for alarm 14 belonging to alarm group 5. */
     sfr_bitfield CF15 : 1; /* Configuration flag x (x=0-2) for alarm 15 belonging to alarm group 5. */
     sfr_bitfield CF16 : 1; /* Configuration flag x (x=0-2) for alarm 16 belonging to alarm group 5. */
     sfr_bitfield CF17 : 1; /* Configuration flag x (x=0-2) for alarm 17 belonging to alarm group 5. */
     sfr_bitfield CF18 : 1; /* Configuration flag x (x=0-2) for alarm 18 belonging to alarm group 5. */
     sfr_bitfield CF19 : 1; /* Configuration flag x (x=0-2) for alarm 19 belonging to alarm group 5. */
     sfr_bitfield CF20 : 1; /* Configuration flag x (x=0-2) for alarm 20 belonging to alarm group 5. */
     sfr_bitfield CF21 : 1; /* Configuration flag x (x=0-2) for alarm 21 belonging to alarm group 5. */
     sfr_bitfield CF22 : 1; /* Configuration flag x (x=0-2) for alarm 22 belonging to alarm group 5. */
     sfr_bitfield CF23 : 1; /* Configuration flag x (x=0-2) for alarm 23 belonging to alarm group 5. */
     sfr_bitfield CF24 : 1; /* Configuration flag x (x=0-2) for alarm 24 belonging to alarm group 5. */
     sfr_bitfield CF25 : 1; /* Configuration flag x (x=0-2) for alarm 25 belonging to alarm group 5. */
     sfr_bitfield CF26 : 1; /* Configuration flag x (x=0-2) for alarm 26 belonging to alarm group 5. */
     sfr_bitfield CF27 : 1; /* Configuration flag x (x=0-2) for alarm 27 belonging to alarm group 5. */
     sfr_bitfield CF28 : 1; /* Configuration flag x (x=0-2) for alarm 28 belonging to alarm group 5. */
     sfr_bitfield CF29 : 1; /* Configuration flag x (x=0-2) for alarm 29 belonging to alarm group 5. */
     sfr_bitfield CF30 : 1; /* Configuration flag x (x=0-2) for alarm 30 belonging to alarm group 5. */
     sfr_bitfield CF31 : 1; /* Configuration flag x (x=0-2) for alarm 31 belonging to alarm group 5. */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SMU_AG5CF0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CF0 : 1; /* Configuration flag x (x=0-2) for alarm 0 belonging to alarm group 6. */
     sfr_bitfield CF1 : 1; /* Configuration flag x (x=0-2) for alarm 1 belonging to alarm group 6. */
     sfr_bitfield CF2 : 1; /* Configuration flag x (x=0-2) for alarm 2 belonging to alarm group 6. */
     sfr_bitfield CF3 : 1; /* Configuration flag x (x=0-2) for alarm 3 belonging to alarm group 6. */
     sfr_bitfield CF4 : 1; /* Configuration flag x (x=0-2) for alarm 4 belonging to alarm group 6. */
     sfr_bitfield CF5 : 1; /* Configuration flag x (x=0-2) for alarm 5 belonging to alarm group 6. */
     sfr_bitfield CF6 : 1; /* Configuration flag x (x=0-2) for alarm 6 belonging to alarm group 6. */
     sfr_bitfield CF7 : 1; /* Configuration flag x (x=0-2) for alarm 7 belonging to alarm group 6. */
     sfr_bitfield CF8 : 1; /* Configuration flag x (x=0-2) for alarm 8 belonging to alarm group 6. */
     sfr_bitfield CF9 : 1; /* Configuration flag x (x=0-2) for alarm 9 belonging to alarm group 6. */
     sfr_bitfield CF10 : 1; /* Configuration flag x (x=0-2) for alarm 10 belonging to alarm group 6. */
     sfr_bitfield CF11 : 1; /* Configuration flag x (x=0-2) for alarm 11 belonging to alarm group 6. */
     sfr_bitfield CF12 : 1; /* Configuration flag x (x=0-2) for alarm 12 belonging to alarm group 6. */
     sfr_bitfield CF13 : 1; /* Configuration flag x (x=0-2) for alarm 13 belonging to alarm group 6. */
     sfr_bitfield CF14 : 1; /* Configuration flag x (x=0-2) for alarm 14 belonging to alarm group 6. */
     sfr_bitfield CF15 : 1; /* Configuration flag x (x=0-2) for alarm 15 belonging to alarm group 6. */
     sfr_bitfield CF16 : 1; /* Configuration flag x (x=0-2) for alarm 16 belonging to alarm group 6. */
     sfr_bitfield CF17 : 1; /* Configuration flag x (x=0-2) for alarm 17 belonging to alarm group 6. */
     sfr_bitfield CF18 : 1; /* Configuration flag x (x=0-2) for alarm 18 belonging to alarm group 6. */
     sfr_bitfield CF19 : 1; /* Configuration flag x (x=0-2) for alarm 19 belonging to alarm group 6. */
     sfr_bitfield CF20 : 1; /* Configuration flag x (x=0-2) for alarm 20 belonging to alarm group 6. */
     sfr_bitfield CF21 : 1; /* Configuration flag x (x=0-2) for alarm 21 belonging to alarm group 6. */
     sfr_bitfield CF22 : 1; /* Configuration flag x (x=0-2) for alarm 22 belonging to alarm group 6. */
     sfr_bitfield CF23 : 1; /* Configuration flag x (x=0-2) for alarm 23 belonging to alarm group 6. */
     sfr_bitfield CF24 : 1; /* Configuration flag x (x=0-2) for alarm 24 belonging to alarm group 6. */
     sfr_bitfield CF25 : 1; /* Configuration flag x (x=0-2) for alarm 25 belonging to alarm group 6. */
     sfr_bitfield CF26 : 1; /* Configuration flag x (x=0-2) for alarm 26 belonging to alarm group 6. */
     sfr_bitfield CF27 : 1; /* Configuration flag x (x=0-2) for alarm 27 belonging to alarm group 6. */
     sfr_bitfield CF28 : 1; /* Configuration flag x (x=0-2) for alarm 28 belonging to alarm group 6. */
     sfr_bitfield CF29 : 1; /* Configuration flag x (x=0-2) for alarm 29 belonging to alarm group 6. */
     sfr_bitfield CF30 : 1; /* Configuration flag x (x=0-2) for alarm 30 belonging to alarm group 6. */
     sfr_bitfield CF31 : 1; /* Configuration flag x (x=0-2) for alarm 31 belonging to alarm group 6. */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SMU_AG6CF0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield FE0 : 1; /* Fault signalling configuration flag for alarm 0 belonging to alarm group 0. */
     sfr_bitfield FE1 : 1; /* Fault signalling configuration flag for alarm 1 belonging to alarm group 0. */
     sfr_bitfield FE2 : 1; /* Fault signalling configuration flag for alarm 2 belonging to alarm group 0. */
     sfr_bitfield FE3 : 1; /* Fault signalling configuration flag for alarm 3 belonging to alarm group 0. */
     sfr_bitfield FE4 : 1; /* Fault signalling configuration flag for alarm 4 belonging to alarm group 0. */
     sfr_bitfield FE5 : 1; /* Fault signalling configuration flag for alarm 5 belonging to alarm group 0. */
     sfr_bitfield FE6 : 1; /* Fault signalling configuration flag for alarm 6 belonging to alarm group 0. */
     sfr_bitfield FE7 : 1; /* Fault signalling configuration flag for alarm 7 belonging to alarm group 0. */
     sfr_bitfield FE8 : 1; /* Fault signalling configuration flag for alarm 8 belonging to alarm group 0. */
     sfr_bitfield FE9 : 1; /* Fault signalling configuration flag for alarm 9 belonging to alarm group 0. */
     sfr_bitfield FE10 : 1; /* Fault signalling configuration flag for alarm 10 belonging to alarm group 0. */
     sfr_bitfield FE11 : 1; /* Fault signalling configuration flag for alarm 11 belonging to alarm group 0. */
     sfr_bitfield FE12 : 1; /* Fault signalling configuration flag for alarm 12 belonging to alarm group 0. */
     sfr_bitfield FE13 : 1; /* Fault signalling configuration flag for alarm 13 belonging to alarm group 0. */
     sfr_bitfield FE14 : 1; /* Fault signalling configuration flag for alarm 14 belonging to alarm group 0. */
     sfr_bitfield FE15 : 1; /* Fault signalling configuration flag for alarm 15 belonging to alarm group 0. */
     sfr_bitfield FE16 : 1; /* Fault signalling configuration flag for alarm 16 belonging to alarm group 0. */
     sfr_bitfield FE17 : 1; /* Fault signalling configuration flag for alarm 17 belonging to alarm group 0. */
     sfr_bitfield FE18 : 1; /* Fault signalling configuration flag for alarm 18 belonging to alarm group 0. */
     sfr_bitfield FE19 : 1; /* Fault signalling configuration flag for alarm 19 belonging to alarm group 0. */
     sfr_bitfield FE20 : 1; /* Fault signalling configuration flag for alarm 20 belonging to alarm group 0. */
     sfr_bitfield FE21 : 1; /* Fault signalling configuration flag for alarm 21 belonging to alarm group 0. */
     sfr_bitfield FE22 : 1; /* Fault signalling configuration flag for alarm 22 belonging to alarm group 0. */
     sfr_bitfield FE23 : 1; /* Fault signalling configuration flag for alarm 23 belonging to alarm group 0. */
     sfr_bitfield FE24 : 1; /* Fault signalling configuration flag for alarm 24 belonging to alarm group 0. */
     sfr_bitfield FE25 : 1; /* Fault signalling configuration flag for alarm 25 belonging to alarm group 0. */
     sfr_bitfield FE26 : 1; /* Fault signalling configuration flag for alarm 26 belonging to alarm group 0. */
     sfr_bitfield FE27 : 1; /* Fault signalling configuration flag for alarm 27 belonging to alarm group 0. */
     sfr_bitfield FE28 : 1; /* Fault signalling configuration flag for alarm 28 belonging to alarm group 0. */
     sfr_bitfield FE29 : 1; /* Fault signalling configuration flag for alarm 29 belonging to alarm group 0. */
     sfr_bitfield FE30 : 1; /* Fault signalling configuration flag for alarm 30 belonging to alarm group 0. */
     sfr_bitfield FE31 : 1; /* Fault signalling configuration flag for alarm 31 belonging to alarm group 0. */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SMU_AG0FSP_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield FE0 : 1; /* Fault signalling configuration flag for alarm 0 belonging to alarm group 1. */
     sfr_bitfield FE1 : 1; /* Fault signalling configuration flag for alarm 1 belonging to alarm group 1. */
     sfr_bitfield FE2 : 1; /* Fault signalling configuration flag for alarm 2 belonging to alarm group 1. */
     sfr_bitfield FE3 : 1; /* Fault signalling configuration flag for alarm 3 belonging to alarm group 1. */
     sfr_bitfield FE4 : 1; /* Fault signalling configuration flag for alarm 4 belonging to alarm group 1. */
     sfr_bitfield FE5 : 1; /* Fault signalling configuration flag for alarm 5 belonging to alarm group 1. */
     sfr_bitfield FE6 : 1; /* Fault signalling configuration flag for alarm 6 belonging to alarm group 1. */
     sfr_bitfield FE7 : 1; /* Fault signalling configuration flag for alarm 7 belonging to alarm group 1. */
     sfr_bitfield FE8 : 1; /* Fault signalling configuration flag for alarm 8 belonging to alarm group 1. */
     sfr_bitfield FE9 : 1; /* Fault signalling configuration flag for alarm 9 belonging to alarm group 1. */
     sfr_bitfield FE10 : 1; /* Fault signalling configuration flag for alarm 10 belonging to alarm group 1. */
     sfr_bitfield FE11 : 1; /* Fault signalling configuration flag for alarm 11 belonging to alarm group 1. */
     sfr_bitfield FE12 : 1; /* Fault signalling configuration flag for alarm 12 belonging to alarm group 1. */
     sfr_bitfield FE13 : 1; /* Fault signalling configuration flag for alarm 13 belonging to alarm group 1. */
     sfr_bitfield FE14 : 1; /* Fault signalling configuration flag for alarm 14 belonging to alarm group 1. */
     sfr_bitfield FE15 : 1; /* Fault signalling configuration flag for alarm 15 belonging to alarm group 1. */
     sfr_bitfield FE16 : 1; /* Fault signalling configuration flag for alarm 16 belonging to alarm group 1. */
     sfr_bitfield FE17 : 1; /* Fault signalling configuration flag for alarm 17 belonging to alarm group 1. */
     sfr_bitfield FE18 : 1; /* Fault signalling configuration flag for alarm 18 belonging to alarm group 1. */
     sfr_bitfield FE19 : 1; /* Fault signalling configuration flag for alarm 19 belonging to alarm group 1. */
     sfr_bitfield FE20 : 1; /* Fault signalling configuration flag for alarm 20 belonging to alarm group 1. */
     sfr_bitfield FE21 : 1; /* Fault signalling configuration flag for alarm 21 belonging to alarm group 1. */
     sfr_bitfield FE22 : 1; /* Fault signalling configuration flag for alarm 22 belonging to alarm group 1. */
     sfr_bitfield FE23 : 1; /* Fault signalling configuration flag for alarm 23 belonging to alarm group 1. */
     sfr_bitfield FE24 : 1; /* Fault signalling configuration flag for alarm 24 belonging to alarm group 1. */
     sfr_bitfield FE25 : 1; /* Fault signalling configuration flag for alarm 25 belonging to alarm group 1. */
     sfr_bitfield FE26 : 1; /* Fault signalling configuration flag for alarm 26 belonging to alarm group 1. */
     sfr_bitfield FE27 : 1; /* Fault signalling configuration flag for alarm 27 belonging to alarm group 1. */
     sfr_bitfield FE28 : 1; /* Fault signalling configuration flag for alarm 28 belonging to alarm group 1. */
     sfr_bitfield FE29 : 1; /* Fault signalling configuration flag for alarm 29 belonging to alarm group 1. */
     sfr_bitfield FE30 : 1; /* Fault signalling configuration flag for alarm 30 belonging to alarm group 1. */
     sfr_bitfield FE31 : 1; /* Fault signalling configuration flag for alarm 31 belonging to alarm group 1. */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SMU_AG1FSP_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield FE0 : 1; /* Fault signalling configuration flag for alarm 0 belonging to alarm group 2. */
     sfr_bitfield FE1 : 1; /* Fault signalling configuration flag for alarm 1 belonging to alarm group 2. */
     sfr_bitfield FE2 : 1; /* Fault signalling configuration flag for alarm 2 belonging to alarm group 2. */
     sfr_bitfield FE3 : 1; /* Fault signalling configuration flag for alarm 3 belonging to alarm group 2. */
     sfr_bitfield FE4 : 1; /* Fault signalling configuration flag for alarm 4 belonging to alarm group 2. */
     sfr_bitfield FE5 : 1; /* Fault signalling configuration flag for alarm 5 belonging to alarm group 2. */
     sfr_bitfield FE6 : 1; /* Fault signalling configuration flag for alarm 6 belonging to alarm group 2. */
     sfr_bitfield FE7 : 1; /* Fault signalling configuration flag for alarm 7 belonging to alarm group 2. */
     sfr_bitfield FE8 : 1; /* Fault signalling configuration flag for alarm 8 belonging to alarm group 2. */
     sfr_bitfield FE9 : 1; /* Fault signalling configuration flag for alarm 9 belonging to alarm group 2. */
     sfr_bitfield FE10 : 1; /* Fault signalling configuration flag for alarm 10 belonging to alarm group 2. */
     sfr_bitfield FE11 : 1; /* Fault signalling configuration flag for alarm 11 belonging to alarm group 2. */
     sfr_bitfield FE12 : 1; /* Fault signalling configuration flag for alarm 12 belonging to alarm group 2. */
     sfr_bitfield FE13 : 1; /* Fault signalling configuration flag for alarm 13 belonging to alarm group 2. */
     sfr_bitfield FE14 : 1; /* Fault signalling configuration flag for alarm 14 belonging to alarm group 2. */
     sfr_bitfield FE15 : 1; /* Fault signalling configuration flag for alarm 15 belonging to alarm group 2. */
     sfr_bitfield FE16 : 1; /* Fault signalling configuration flag for alarm 16 belonging to alarm group 2. */
     sfr_bitfield FE17 : 1; /* Fault signalling configuration flag for alarm 17 belonging to alarm group 2. */
     sfr_bitfield FE18 : 1; /* Fault signalling configuration flag for alarm 18 belonging to alarm group 2. */
     sfr_bitfield FE19 : 1; /* Fault signalling configuration flag for alarm 19 belonging to alarm group 2. */
     sfr_bitfield FE20 : 1; /* Fault signalling configuration flag for alarm 20 belonging to alarm group 2. */
     sfr_bitfield FE21 : 1; /* Fault signalling configuration flag for alarm 21 belonging to alarm group 2. */
     sfr_bitfield FE22 : 1; /* Fault signalling configuration flag for alarm 22 belonging to alarm group 2. */
     sfr_bitfield FE23 : 1; /* Fault signalling configuration flag for alarm 23 belonging to alarm group 2. */
     sfr_bitfield FE24 : 1; /* Fault signalling configuration flag for alarm 24 belonging to alarm group 2. */
     sfr_bitfield FE25 : 1; /* Fault signalling configuration flag for alarm 25 belonging to alarm group 2. */
     sfr_bitfield FE26 : 1; /* Fault signalling configuration flag for alarm 26 belonging to alarm group 2. */
     sfr_bitfield FE27 : 1; /* Fault signalling configuration flag for alarm 27 belonging to alarm group 2. */
     sfr_bitfield FE28 : 1; /* Fault signalling configuration flag for alarm 28 belonging to alarm group 2. */
     sfr_bitfield FE29 : 1; /* Fault signalling configuration flag for alarm 29 belonging to alarm group 2. */
     sfr_bitfield FE30 : 1; /* Fault signalling configuration flag for alarm 30 belonging to alarm group 2. */
     sfr_bitfield FE31 : 1; /* Fault signalling configuration flag for alarm 31 belonging to alarm group 2. */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SMU_AG2FSP_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield FE0 : 1; /* Fault signalling configuration flag for alarm 0 belonging to alarm group 3. */
     sfr_bitfield FE1 : 1; /* Fault signalling configuration flag for alarm 1 belonging to alarm group 3. */
     sfr_bitfield FE2 : 1; /* Fault signalling configuration flag for alarm 2 belonging to alarm group 3. */
     sfr_bitfield FE3 : 1; /* Fault signalling configuration flag for alarm 3 belonging to alarm group 3. */
     sfr_bitfield FE4 : 1; /* Fault signalling configuration flag for alarm 4 belonging to alarm group 3. */
     sfr_bitfield FE5 : 1; /* Fault signalling configuration flag for alarm 5 belonging to alarm group 3. */
     sfr_bitfield FE6 : 1; /* Fault signalling configuration flag for alarm 6 belonging to alarm group 3. */
     sfr_bitfield FE7 : 1; /* Fault signalling configuration flag for alarm 7 belonging to alarm group 3. */
     sfr_bitfield FE8 : 1; /* Fault signalling configuration flag for alarm 8 belonging to alarm group 3. */
     sfr_bitfield FE9 : 1; /* Fault signalling configuration flag for alarm 9 belonging to alarm group 3. */
     sfr_bitfield FE10 : 1; /* Fault signalling configuration flag for alarm 10 belonging to alarm group 3. */
     sfr_bitfield FE11 : 1; /* Fault signalling configuration flag for alarm 11 belonging to alarm group 3. */
     sfr_bitfield FE12 : 1; /* Fault signalling configuration flag for alarm 12 belonging to alarm group 3. */
     sfr_bitfield FE13 : 1; /* Fault signalling configuration flag for alarm 13 belonging to alarm group 3. */
     sfr_bitfield FE14 : 1; /* Fault signalling configuration flag for alarm 14 belonging to alarm group 3. */
     sfr_bitfield FE15 : 1; /* Fault signalling configuration flag for alarm 15 belonging to alarm group 3. */
     sfr_bitfield FE16 : 1; /* Fault signalling configuration flag for alarm 16 belonging to alarm group 3. */
     sfr_bitfield FE17 : 1; /* Fault signalling configuration flag for alarm 17 belonging to alarm group 3. */
     sfr_bitfield FE18 : 1; /* Fault signalling configuration flag for alarm 18 belonging to alarm group 3. */
     sfr_bitfield FE19 : 1; /* Fault signalling configuration flag for alarm 19 belonging to alarm group 3. */
     sfr_bitfield FE20 : 1; /* Fault signalling configuration flag for alarm 20 belonging to alarm group 3. */
     sfr_bitfield FE21 : 1; /* Fault signalling configuration flag for alarm 21 belonging to alarm group 3. */
     sfr_bitfield FE22 : 1; /* Fault signalling configuration flag for alarm 22 belonging to alarm group 3. */
     sfr_bitfield FE23 : 1; /* Fault signalling configuration flag for alarm 23 belonging to alarm group 3. */
     sfr_bitfield FE24 : 1; /* Fault signalling configuration flag for alarm 24 belonging to alarm group 3. */
     sfr_bitfield FE25 : 1; /* Fault signalling configuration flag for alarm 25 belonging to alarm group 3. */
     sfr_bitfield FE26 : 1; /* Fault signalling configuration flag for alarm 26 belonging to alarm group 3. */
     sfr_bitfield FE27 : 1; /* Fault signalling configuration flag for alarm 27 belonging to alarm group 3. */
     sfr_bitfield FE28 : 1; /* Fault signalling configuration flag for alarm 28 belonging to alarm group 3. */
     sfr_bitfield FE29 : 1; /* Fault signalling configuration flag for alarm 29 belonging to alarm group 3. */
     sfr_bitfield FE30 : 1; /* Fault signalling configuration flag for alarm 30 belonging to alarm group 3. */
     sfr_bitfield FE31 : 1; /* Fault signalling configuration flag for alarm 31 belonging to alarm group 3. */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SMU_AG3FSP_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield FE0 : 1; /* Fault signalling configuration flag for alarm 0 belonging to alarm group 4. */
     sfr_bitfield FE1 : 1; /* Fault signalling configuration flag for alarm 1 belonging to alarm group 4. */
     sfr_bitfield FE2 : 1; /* Fault signalling configuration flag for alarm 2 belonging to alarm group 4. */
     sfr_bitfield FE3 : 1; /* Fault signalling configuration flag for alarm 3 belonging to alarm group 4. */
     sfr_bitfield FE4 : 1; /* Fault signalling configuration flag for alarm 4 belonging to alarm group 4. */
     sfr_bitfield FE5 : 1; /* Fault signalling configuration flag for alarm 5 belonging to alarm group 4. */
     sfr_bitfield FE6 : 1; /* Fault signalling configuration flag for alarm 6 belonging to alarm group 4. */
     sfr_bitfield FE7 : 1; /* Fault signalling configuration flag for alarm 7 belonging to alarm group 4. */
     sfr_bitfield FE8 : 1; /* Fault signalling configuration flag for alarm 8 belonging to alarm group 4. */
     sfr_bitfield FE9 : 1; /* Fault signalling configuration flag for alarm 9 belonging to alarm group 4. */
     sfr_bitfield FE10 : 1; /* Fault signalling configuration flag for alarm 10 belonging to alarm group 4. */
     sfr_bitfield FE11 : 1; /* Fault signalling configuration flag for alarm 11 belonging to alarm group 4. */
     sfr_bitfield FE12 : 1; /* Fault signalling configuration flag for alarm 12 belonging to alarm group 4. */
     sfr_bitfield FE13 : 1; /* Fault signalling configuration flag for alarm 13 belonging to alarm group 4. */
     sfr_bitfield FE14 : 1; /* Fault signalling configuration flag for alarm 14 belonging to alarm group 4. */
     sfr_bitfield FE15 : 1; /* Fault signalling configuration flag for alarm 15 belonging to alarm group 4. */
     sfr_bitfield FE16 : 1; /* Fault signalling configuration flag for alarm 16 belonging to alarm group 4. */
     sfr_bitfield FE17 : 1; /* Fault signalling configuration flag for alarm 17 belonging to alarm group 4. */
     sfr_bitfield FE18 : 1; /* Fault signalling configuration flag for alarm 18 belonging to alarm group 4. */
     sfr_bitfield FE19 : 1; /* Fault signalling configuration flag for alarm 19 belonging to alarm group 4. */
     sfr_bitfield FE20 : 1; /* Fault signalling configuration flag for alarm 20 belonging to alarm group 4. */
     sfr_bitfield FE21 : 1; /* Fault signalling configuration flag for alarm 21 belonging to alarm group 4. */
     sfr_bitfield FE22 : 1; /* Fault signalling configuration flag for alarm 22 belonging to alarm group 4. */
     sfr_bitfield FE23 : 1; /* Fault signalling configuration flag for alarm 23 belonging to alarm group 4. */
     sfr_bitfield FE24 : 1; /* Fault signalling configuration flag for alarm 24 belonging to alarm group 4. */
     sfr_bitfield FE25 : 1; /* Fault signalling configuration flag for alarm 25 belonging to alarm group 4. */
     sfr_bitfield FE26 : 1; /* Fault signalling configuration flag for alarm 26 belonging to alarm group 4. */
     sfr_bitfield FE27 : 1; /* Fault signalling configuration flag for alarm 27 belonging to alarm group 4. */
     sfr_bitfield FE28 : 1; /* Fault signalling configuration flag for alarm 28 belonging to alarm group 4. */
     sfr_bitfield FE29 : 1; /* Fault signalling configuration flag for alarm 29 belonging to alarm group 4. */
     sfr_bitfield FE30 : 1; /* Fault signalling configuration flag for alarm 30 belonging to alarm group 4. */
     sfr_bitfield FE31 : 1; /* Fault signalling configuration flag for alarm 31 belonging to alarm group 4. */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SMU_AG4FSP_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield FE0 : 1; /* Fault signalling configuration flag for alarm 0 belonging to alarm group 5. */
     sfr_bitfield FE1 : 1; /* Fault signalling configuration flag for alarm 1 belonging to alarm group 5. */
     sfr_bitfield FE2 : 1; /* Fault signalling configuration flag for alarm 2 belonging to alarm group 5. */
     sfr_bitfield FE3 : 1; /* Fault signalling configuration flag for alarm 3 belonging to alarm group 5. */
     sfr_bitfield FE4 : 1; /* Fault signalling configuration flag for alarm 4 belonging to alarm group 5. */
     sfr_bitfield FE5 : 1; /* Fault signalling configuration flag for alarm 5 belonging to alarm group 5. */
     sfr_bitfield FE6 : 1; /* Fault signalling configuration flag for alarm 6 belonging to alarm group 5. */
     sfr_bitfield FE7 : 1; /* Fault signalling configuration flag for alarm 7 belonging to alarm group 5. */
     sfr_bitfield FE8 : 1; /* Fault signalling configuration flag for alarm 8 belonging to alarm group 5. */
     sfr_bitfield FE9 : 1; /* Fault signalling configuration flag for alarm 9 belonging to alarm group 5. */
     sfr_bitfield FE10 : 1; /* Fault signalling configuration flag for alarm 10 belonging to alarm group 5. */
     sfr_bitfield FE11 : 1; /* Fault signalling configuration flag for alarm 11 belonging to alarm group 5. */
     sfr_bitfield FE12 : 1; /* Fault signalling configuration flag for alarm 12 belonging to alarm group 5. */
     sfr_bitfield FE13 : 1; /* Fault signalling configuration flag for alarm 13 belonging to alarm group 5. */
     sfr_bitfield FE14 : 1; /* Fault signalling configuration flag for alarm 14 belonging to alarm group 5. */
     sfr_bitfield FE15 : 1; /* Fault signalling configuration flag for alarm 15 belonging to alarm group 5. */
     sfr_bitfield FE16 : 1; /* Fault signalling configuration flag for alarm 16 belonging to alarm group 5. */
     sfr_bitfield FE17 : 1; /* Fault signalling configuration flag for alarm 17 belonging to alarm group 5. */
     sfr_bitfield FE18 : 1; /* Fault signalling configuration flag for alarm 18 belonging to alarm group 5. */
     sfr_bitfield FE19 : 1; /* Fault signalling configuration flag for alarm 19 belonging to alarm group 5. */
     sfr_bitfield FE20 : 1; /* Fault signalling configuration flag for alarm 20 belonging to alarm group 5. */
     sfr_bitfield FE21 : 1; /* Fault signalling configuration flag for alarm 21 belonging to alarm group 5. */
     sfr_bitfield FE22 : 1; /* Fault signalling configuration flag for alarm 22 belonging to alarm group 5. */
     sfr_bitfield FE23 : 1; /* Fault signalling configuration flag for alarm 23 belonging to alarm group 5. */
     sfr_bitfield FE24 : 1; /* Fault signalling configuration flag for alarm 24 belonging to alarm group 5. */
     sfr_bitfield FE25 : 1; /* Fault signalling configuration flag for alarm 25 belonging to alarm group 5. */
     sfr_bitfield FE26 : 1; /* Fault signalling configuration flag for alarm 26 belonging to alarm group 5. */
     sfr_bitfield FE27 : 1; /* Fault signalling configuration flag for alarm 27 belonging to alarm group 5. */
     sfr_bitfield FE28 : 1; /* Fault signalling configuration flag for alarm 28 belonging to alarm group 5. */
     sfr_bitfield FE29 : 1; /* Fault signalling configuration flag for alarm 29 belonging to alarm group 5. */
     sfr_bitfield FE30 : 1; /* Fault signalling configuration flag for alarm 30 belonging to alarm group 5. */
     sfr_bitfield FE31 : 1; /* Fault signalling configuration flag for alarm 31 belonging to alarm group 5. */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SMU_AG5FSP_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield FE0 : 1; /* Fault signalling configuration flag for alarm 0 belonging to alarm group 6. */
     sfr_bitfield FE1 : 1; /* Fault signalling configuration flag for alarm 1 belonging to alarm group 6. */
     sfr_bitfield FE2 : 1; /* Fault signalling configuration flag for alarm 2 belonging to alarm group 6. */
     sfr_bitfield FE3 : 1; /* Fault signalling configuration flag for alarm 3 belonging to alarm group 6. */
     sfr_bitfield FE4 : 1; /* Fault signalling configuration flag for alarm 4 belonging to alarm group 6. */
     sfr_bitfield FE5 : 1; /* Fault signalling configuration flag for alarm 5 belonging to alarm group 6. */
     sfr_bitfield FE6 : 1; /* Fault signalling configuration flag for alarm 6 belonging to alarm group 6. */
     sfr_bitfield FE7 : 1; /* Fault signalling configuration flag for alarm 7 belonging to alarm group 6. */
     sfr_bitfield FE8 : 1; /* Fault signalling configuration flag for alarm 8 belonging to alarm group 6. */
     sfr_bitfield FE9 : 1; /* Fault signalling configuration flag for alarm 9 belonging to alarm group 6. */
     sfr_bitfield FE10 : 1; /* Fault signalling configuration flag for alarm 10 belonging to alarm group 6. */
     sfr_bitfield FE11 : 1; /* Fault signalling configuration flag for alarm 11 belonging to alarm group 6. */
     sfr_bitfield FE12 : 1; /* Fault signalling configuration flag for alarm 12 belonging to alarm group 6. */
     sfr_bitfield FE13 : 1; /* Fault signalling configuration flag for alarm 13 belonging to alarm group 6. */
     sfr_bitfield FE14 : 1; /* Fault signalling configuration flag for alarm 14 belonging to alarm group 6. */
     sfr_bitfield FE15 : 1; /* Fault signalling configuration flag for alarm 15 belonging to alarm group 6. */
     sfr_bitfield FE16 : 1; /* Fault signalling configuration flag for alarm 16 belonging to alarm group 6. */
     sfr_bitfield FE17 : 1; /* Fault signalling configuration flag for alarm 17 belonging to alarm group 6. */
     sfr_bitfield FE18 : 1; /* Fault signalling configuration flag for alarm 18 belonging to alarm group 6. */
     sfr_bitfield FE19 : 1; /* Fault signalling configuration flag for alarm 19 belonging to alarm group 6. */
     sfr_bitfield FE20 : 1; /* Fault signalling configuration flag for alarm 20 belonging to alarm group 6. */
     sfr_bitfield FE21 : 1; /* Fault signalling configuration flag for alarm 21 belonging to alarm group 6. */
     sfr_bitfield FE22 : 1; /* Fault signalling configuration flag for alarm 22 belonging to alarm group 6. */
     sfr_bitfield FE23 : 1; /* Fault signalling configuration flag for alarm 23 belonging to alarm group 6. */
     sfr_bitfield FE24 : 1; /* Fault signalling configuration flag for alarm 24 belonging to alarm group 6. */
     sfr_bitfield FE25 : 1; /* Fault signalling configuration flag for alarm 25 belonging to alarm group 6. */
     sfr_bitfield FE26 : 1; /* Fault signalling configuration flag for alarm 26 belonging to alarm group 6. */
     sfr_bitfield FE27 : 1; /* Fault signalling configuration flag for alarm 27 belonging to alarm group 6. */
     sfr_bitfield FE28 : 1; /* Fault signalling configuration flag for alarm 28 belonging to alarm group 6. */
     sfr_bitfield FE29 : 1; /* Fault signalling configuration flag for alarm 29 belonging to alarm group 6. */
     sfr_bitfield FE30 : 1; /* Fault signalling configuration flag for alarm 30 belonging to alarm group 6. */
     sfr_bitfield FE31 : 1; /* Fault signalling configuration flag for alarm 31 belonging to alarm group 6. */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SMU_AG6FSP_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield SF0 : 1; /* Status flag for alarm 0 belonging to alarm group x (x=0-6). */
     sfr_bitfield SF1 : 1; /* Status flag for alarm 1 belonging to alarm group x (x=0-6). */
     sfr_bitfield SF2 : 1; /* Status flag for alarm 2 belonging to alarm group x (x=0-6). */
     sfr_bitfield SF3 : 1; /* Status flag for alarm 3 belonging to alarm group x (x=0-6). */
     sfr_bitfield SF4 : 1; /* Status flag for alarm 4 belonging to alarm group x (x=0-6). */
     sfr_bitfield SF5 : 1; /* Status flag for alarm 5 belonging to alarm group x (x=0-6). */
     sfr_bitfield SF6 : 1; /* Status flag for alarm 6 belonging to alarm group x (x=0-6). */
     sfr_bitfield SF7 : 1; /* Status flag for alarm 7 belonging to alarm group x (x=0-6). */
     sfr_bitfield SF8 : 1; /* Status flag for alarm 8 belonging to alarm group x (x=0-6). */
     sfr_bitfield SF9 : 1; /* Status flag for alarm 9 belonging to alarm group x (x=0-6). */
     sfr_bitfield SF10 : 1; /* Status flag for alarm 10 belonging to alarm group x (x=0-6). */
     sfr_bitfield SF11 : 1; /* Status flag for alarm 11 belonging to alarm group x (x=0-6). */
     sfr_bitfield SF12 : 1; /* Status flag for alarm 12 belonging to alarm group x (x=0-6). */
     sfr_bitfield SF13 : 1; /* Status flag for alarm 13 belonging to alarm group x (x=0-6). */
     sfr_bitfield SF14 : 1; /* Status flag for alarm 14 belonging to alarm group x (x=0-6). */
     sfr_bitfield SF15 : 1; /* Status flag for alarm 15 belonging to alarm group x (x=0-6). */
     sfr_bitfield SF16 : 1; /* Status flag for alarm 16 belonging to alarm group x (x=0-6). */
     sfr_bitfield SF17 : 1; /* Status flag for alarm 17 belonging to alarm group x (x=0-6). */
     sfr_bitfield SF18 : 1; /* Status flag for alarm 18 belonging to alarm group x (x=0-6). */
     sfr_bitfield SF19 : 1; /* Status flag for alarm 19 belonging to alarm group x (x=0-6). */
     sfr_bitfield SF20 : 1; /* Status flag for alarm 20 belonging to alarm group x (x=0-6). */
     sfr_bitfield SF21 : 1; /* Status flag for alarm 21 belonging to alarm group x (x=0-6). */
     sfr_bitfield SF22 : 1; /* Status flag for alarm 22 belonging to alarm group x (x=0-6). */
     sfr_bitfield SF23 : 1; /* Status flag for alarm 23 belonging to alarm group x (x=0-6). */
     sfr_bitfield SF24 : 1; /* Status flag for alarm 24 belonging to alarm group x (x=0-6). */
     sfr_bitfield SF25 : 1; /* Status flag for alarm 25 belonging to alarm group x (x=0-6). */
     sfr_bitfield SF26 : 1; /* Status flag for alarm 26 belonging to alarm group x (x=0-6). */
     sfr_bitfield SF27 : 1; /* Status flag for alarm 27 belonging to alarm group x (x=0-6). */
     sfr_bitfield SF28 : 1; /* Status flag for alarm 28 belonging to alarm group x (x=0-6). */
     sfr_bitfield SF29 : 1; /* Status flag for alarm 29 belonging to alarm group x (x=0-6). */
     sfr_bitfield SF30 : 1; /* Status flag for alarm 30 belonging to alarm group x (x=0-6). */
     sfr_bitfield SF31 : 1; /* Status flag for alarm 31 belonging to alarm group x (x=0-6). */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SMU_AG0_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield DF0 : 1; /* Debug flag for alarm 0 belonging to alarm group x (x=0-6). */
    /* const */ sfr_bitfield DF1 : 1; /* Debug flag for alarm 1 belonging to alarm group x (x=0-6). */
    /* const */ sfr_bitfield DF2 : 1; /* Debug flag for alarm 2 belonging to alarm group x (x=0-6). */
    /* const */ sfr_bitfield DF3 : 1; /* Debug flag for alarm 3 belonging to alarm group x (x=0-6). */
    /* const */ sfr_bitfield DF4 : 1; /* Debug flag for alarm 4 belonging to alarm group x (x=0-6). */
    /* const */ sfr_bitfield DF5 : 1; /* Debug flag for alarm 5 belonging to alarm group x (x=0-6). */
    /* const */ sfr_bitfield DF6 : 1; /* Debug flag for alarm 6 belonging to alarm group x (x=0-6). */
    /* const */ sfr_bitfield DF7 : 1; /* Debug flag for alarm 7 belonging to alarm group x (x=0-6). */
    /* const */ sfr_bitfield DF8 : 1; /* Debug flag for alarm 8 belonging to alarm group x (x=0-6). */
    /* const */ sfr_bitfield DF9 : 1; /* Debug flag for alarm 9 belonging to alarm group x (x=0-6). */
    /* const */ sfr_bitfield DF10 : 1; /* Debug flag for alarm 10 belonging to alarm group x (x=0-6). */
    /* const */ sfr_bitfield DF11 : 1; /* Debug flag for alarm 11 belonging to alarm group x (x=0-6). */
    /* const */ sfr_bitfield DF12 : 1; /* Debug flag for alarm 12 belonging to alarm group x (x=0-6). */
    /* const */ sfr_bitfield DF13 : 1; /* Debug flag for alarm 13 belonging to alarm group x (x=0-6). */
    /* const */ sfr_bitfield DF14 : 1; /* Debug flag for alarm 14 belonging to alarm group x (x=0-6). */
    /* const */ sfr_bitfield DF15 : 1; /* Debug flag for alarm 15 belonging to alarm group x (x=0-6). */
    /* const */ sfr_bitfield DF16 : 1; /* Debug flag for alarm 16 belonging to alarm group x (x=0-6). */
    /* const */ sfr_bitfield DF17 : 1; /* Debug flag for alarm 17 belonging to alarm group x (x=0-6). */
    /* const */ sfr_bitfield DF18 : 1; /* Debug flag for alarm 18 belonging to alarm group x (x=0-6). */
    /* const */ sfr_bitfield DF19 : 1; /* Debug flag for alarm 19 belonging to alarm group x (x=0-6). */
    /* const */ sfr_bitfield DF20 : 1; /* Debug flag for alarm 20 belonging to alarm group x (x=0-6). */
    /* const */ sfr_bitfield DF21 : 1; /* Debug flag for alarm 21 belonging to alarm group x (x=0-6). */
    /* const */ sfr_bitfield DF22 : 1; /* Debug flag for alarm 22 belonging to alarm group x (x=0-6). */
    /* const */ sfr_bitfield DF23 : 1; /* Debug flag for alarm 23 belonging to alarm group x (x=0-6). */
    /* const */ sfr_bitfield DF24 : 1; /* Debug flag for alarm 24 belonging to alarm group x (x=0-6). */
    /* const */ sfr_bitfield DF25 : 1; /* Debug flag for alarm 25 belonging to alarm group x (x=0-6). */
    /* const */ sfr_bitfield DF26 : 1; /* Debug flag for alarm 26 belonging to alarm group x (x=0-6). */
    /* const */ sfr_bitfield DF27 : 1; /* Debug flag for alarm 27 belonging to alarm group x (x=0-6). */
    /* const */ sfr_bitfield DF28 : 1; /* Debug flag for alarm 28 belonging to alarm group x (x=0-6). */
    /* const */ sfr_bitfield DF29 : 1; /* Debug flag for alarm 29 belonging to alarm group x (x=0-6). */
    /* const */ sfr_bitfield DF30 : 1; /* Debug flag for alarm 30 belonging to alarm group x (x=0-6). */
    /* const */ sfr_bitfield DF31 : 1; /* Debug flag for alarm 31 belonging to alarm group x (x=0-6). */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SMU_AD0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield TE : 1; /* Test Enable. */
     sfr_bitfield resv1 : 31; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SMU_RMCTL_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield EF0 : 1; /* Status flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield EF1 : 1; /* Status flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield EF2 : 1; /* Status flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield EF3 : 1; /* Status flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield EF4 : 1; /* Status flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield EF5 : 1; /* Status flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield EF6 : 1; /* Status flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield EF7 : 1; /* Status flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield EF8 : 1; /* Status flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield EF9 : 1; /* Status flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield EF10 : 1; /* Status flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield EF11 : 1; /* Status flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield EF12 : 1; /* Status flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield EF13 : 1; /* Status flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield EF14 : 1; /* Status flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield EF15 : 1; /* Status flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield EF16 : 1; /* Status flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield EF17 : 1; /* Status flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield EF18 : 1; /* Status flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield EF19 : 1; /* Status flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield EF20 : 1; /* Status flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield EF21 : 1; /* Status flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield EF22 : 1; /* Status flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield EF23 : 1; /* Status flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield EF24 : 1; /* Status flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield EF25 : 1; /* Status flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield EF26 : 1; /* Status flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield EF27 : 1; /* Status flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield EF28 : 1; /* Status flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield EF29 : 1; /* Status flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield EF30 : 1; /* Status flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield EF31 : 1; /* Status flag related to the different instances of the Safety Flip-Flop safety mechanism. */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SMU_RMEF_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield STS0 : 1; /* Ready flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield STS1 : 1; /* Ready flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield STS2 : 1; /* Ready flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield STS3 : 1; /* Ready flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield STS4 : 1; /* Ready flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield STS5 : 1; /* Ready flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield STS6 : 1; /* Ready flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield STS7 : 1; /* Ready flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield STS8 : 1; /* Ready flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield STS9 : 1; /* Ready flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield STS10 : 1; /* Ready flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield STS11 : 1; /* Ready flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield STS12 : 1; /* Ready flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield STS13 : 1; /* Ready flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield STS14 : 1; /* Ready flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield STS15 : 1; /* Ready flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield STS16 : 1; /* Ready flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield STS17 : 1; /* Ready flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield STS18 : 1; /* Ready flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield STS19 : 1; /* Ready flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield STS20 : 1; /* Ready flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield STS21 : 1; /* Ready flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield STS22 : 1; /* Ready flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield STS23 : 1; /* Ready flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield STS24 : 1; /* Ready flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield STS25 : 1; /* Ready flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield STS26 : 1; /* Ready flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield STS27 : 1; /* Ready flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield STS28 : 1; /* Ready flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield STS29 : 1; /* Ready flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield STS30 : 1; /* Ready flag related to the different instances of the Safety Flip-Flop safety mechanism. */
     sfr_bitfield STS31 : 1; /* Ready flag related to the different instances of the Safety Flip-Flop safety mechanism. */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SMU_RMSTS_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield MOD_REV : 8; /* Module Revision Number */
    /* const */ sfr_bitfield MOD_TYPE : 8; /* Module Number Value */
    /* const */ sfr_bitfield MOD_NUM : 16; /* Module Number Value */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} IOM_ID_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield FEG0 : 1; /* Falling Edge Glitch Flag for FPC0 */
     sfr_bitfield FEG1 : 1; /* Falling Edge Glitch Flag for FPC1 */
     sfr_bitfield FEG2 : 1; /* Falling Edge Glitch Flag for FPC2 */
     sfr_bitfield FEG3 : 1; /* Falling Edge Glitch Flag for FPC3 */
     sfr_bitfield FEG4 : 1; /* Falling Edge Glitch Flag for FPC4 */
     sfr_bitfield FEG5 : 1; /* Falling Edge Glitch Flag for FPC5 */
     sfr_bitfield FEG6 : 1; /* Falling Edge Glitch Flag for FPC6 */
     sfr_bitfield FEG7 : 1; /* Falling Edge Glitch Flag for FPC7 */
     sfr_bitfield FEG8 : 1; /* Falling Edge Glitch Flag for FPC8 */
     sfr_bitfield FEG9 : 1; /* Falling Edge Glitch Flag for FPC9 */
     sfr_bitfield FEG10 : 1; /* Falling Edge Glitch Flag for FPC10 */
     sfr_bitfield FEG11 : 1; /* Falling Edge Glitch Flag for FPC11 */
     sfr_bitfield FEG12 : 1; /* Falling Edge Glitch Flag for FPC12 */
     sfr_bitfield FEG13 : 1; /* Falling Edge Glitch Flag for FPC13 */
     sfr_bitfield FEG14 : 1; /* Falling Edge Glitch Flag for FPC14 */
     sfr_bitfield FEG15 : 1; /* Falling Edge Glitch Flag for FPC15 */
     sfr_bitfield REG0 : 1; /* Rising Edge Glitch Flag for FPC0 */
     sfr_bitfield REG1 : 1; /* Rising Edge Glitch Flag for FPC1 */
     sfr_bitfield REG2 : 1; /* Rising Edge Glitch Flag for FPC2 */
     sfr_bitfield REG3 : 1; /* Rising Edge Glitch Flag for FPC3 */
     sfr_bitfield REG4 : 1; /* Rising Edge Glitch Flag for FPC4 */
     sfr_bitfield REG5 : 1; /* Rising Edge Glitch Flag for FPC5 */
     sfr_bitfield REG6 : 1; /* Rising Edge Glitch Flag for FPC6 */
     sfr_bitfield REG7 : 1; /* Rising Edge Glitch Flag for FPC7 */
     sfr_bitfield REG8 : 1; /* Rising Edge Glitch Flag for FPC8 */
     sfr_bitfield REG9 : 1; /* Rising Edge Glitch Flag for FPC9 */
     sfr_bitfield REG10 : 1; /* Rising Edge Glitch Flag for FPC10 */
     sfr_bitfield REG11 : 1; /* Rising Edge Glitch Flag for FPC11 */
     sfr_bitfield REG12 : 1; /* Rising Edge Glitch Flag for FPC12 */
     sfr_bitfield REG13 : 1; /* Rising Edge Glitch Flag for FPC13 */
     sfr_bitfield REG14 : 1; /* Rising Edge Glitch Flag for FPC14 */
     sfr_bitfield REG15 : 1; /* Rising Edge Glitch Flag for FPC15 */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} IOM_FPCESR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CMP : 16; /* Threshold Value of Filter & Prescaler Cell k */
     sfr_bitfield MOD : 3; /* Operation Mode Selection for Filter & Prescaler Cell k */
     sfr_bitfield ISM : 2; /* Monitor Input Signal Selection for Filter & Prescaler Cell k */
     sfr_bitfield resv21 : 1; /* reserved */
     sfr_bitfield RTG : 1; /* Reset Timer behaviour for Filter & Prescaler Cell k on Glitch */
     sfr_bitfield resv23 : 1; /* reserved */
     sfr_bitfield ISR : 3; /* Reference Input Signal Selection for Filter & Prescaler Cell k */
     sfr_bitfield resv27 : 5; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} IOM_FPCCTR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield TIM : 16; /* Timer Value of Filter and Prescaler Cell k */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} IOM_FPCTIM0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield EN0 : 1; /* GTM input 0 selection for EXOR combiner */
     sfr_bitfield EN1 : 1; /* GTM input 1 selection for EXOR combiner */
     sfr_bitfield EN2 : 1; /* GTM input 2 selection for EXOR combiner */
     sfr_bitfield EN3 : 1; /* GTM input 3 selection for EXOR combiner */
     sfr_bitfield EN4 : 1; /* GTM input 4 selection for EXOR combiner */
     sfr_bitfield EN5 : 1; /* GTM input 5 selection for EXOR combiner */
     sfr_bitfield EN6 : 1; /* GTM input 6 selection for EXOR combiner */
     sfr_bitfield EN7 : 1; /* GTM input 7 selection for EXOR combiner */
     sfr_bitfield resv8 : 24; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} IOM_GTMEXR_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield CNT : 24; /* Event Window Count Value LAM block m */
     sfr_bitfield resv24 : 8; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} IOM_LAMEWC0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield IVR : 1; /* Invert Reference LAM block m */
     sfr_bitfield IVM : 1; /* Invert Monitor LAM block m */
     sfr_bitfield MOS : 1; /* Monitor Source Select LAM block m */
     sfr_bitfield RMS : 1; /* Runmode Select LAM block m */
     sfr_bitfield EWS : 1; /* Event Window Select LAM block m */
     sfr_bitfield resv5 : 3; /* reserved */
     sfr_bitfield EDS : 4; /* Event Window Active Edge Selection LAM block m */
     sfr_bitfield IVW : 1; /* Invert Event Window LAM block m */
     sfr_bitfield resv13 : 3; /* reserved */
     sfr_bitfield MCS : 4; /* Monitor Input Signal Selection LAM block m */
     sfr_bitfield RCS : 4; /* Reference Input Signal Selection LAM block m */
     sfr_bitfield resv24 : 8; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} IOM_LAMCFG0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield THR : 24; /* Event Window Count Threshold */
     sfr_bitfield resv24 : 8; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} IOM_LAMEWS0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield SELC0 : 4; /* Event Channel Select */
     sfr_bitfield THRC0 : 4; /* Channel Event Counter Threshold */
     sfr_bitfield SELC1 : 4; /* Event Channel Select */
     sfr_bitfield THCR1 : 4; /* Channel Event Counter Threshold */
     sfr_bitfield SELC2 : 4; /* Event Channel Select */
     sfr_bitfield THCR2 : 4; /* Channel Event Counter Threshold */
     sfr_bitfield SELC3 : 4; /* Event Channel Select */
     sfr_bitfield THCR3 : 4; /* Channel Event Counter Threshold */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} IOM_ECMCCFG_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CES0 : 1; /* Event Combiner Selection */
     sfr_bitfield CES1 : 1; /* Event Combiner Selection */
     sfr_bitfield CES2 : 1; /* Event Combiner Selection */
     sfr_bitfield CES3 : 1; /* Event Combiner Selection */
     sfr_bitfield CES4 : 1; /* Event Combiner Selection */
     sfr_bitfield CES5 : 1; /* Event Combiner Selection */
     sfr_bitfield CES6 : 1; /* Event Combiner Selection */
     sfr_bitfield CES7 : 1; /* Event Combiner Selection */
     sfr_bitfield CES8 : 1; /* Event Combiner Selection */
     sfr_bitfield CES9 : 1; /* Event Combiner Selection */
     sfr_bitfield CES10 : 1; /* Event Combiner Selection */
     sfr_bitfield CES11 : 1; /* Event Combiner Selection */
     sfr_bitfield CES12 : 1; /* Event Combiner Selection */
     sfr_bitfield CES13 : 1; /* Event Combiner Selection */
     sfr_bitfield CES14 : 1; /* Event Combiner Selection */
     sfr_bitfield CES15 : 1; /* Event Combiner Selection */
     sfr_bitfield CTS0 : 1; /* Accumulated (Counted) Event Combiner Selection */
     sfr_bitfield CTS1 : 1; /* Accumulated (Counted) Event Combiner Selection */
     sfr_bitfield CTS2 : 1; /* Accumulated (Counted) Event Combiner Selection */
     sfr_bitfield CTS3 : 1; /* Accumulated (Counted) Event Combiner Selection */
     sfr_bitfield resv20 : 12; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} IOM_ECMSELR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ETA0 : 1; /* LAM 0-15 Event Trigger Activity (last) */
     sfr_bitfield ETA1 : 1; /* LAM 0-15 Event Trigger Activity (last) */
     sfr_bitfield ETA2 : 1; /* LAM 0-15 Event Trigger Activity (last) */
     sfr_bitfield ETA3 : 1; /* LAM 0-15 Event Trigger Activity (last) */
     sfr_bitfield ETA4 : 1; /* LAM 0-15 Event Trigger Activity (last) */
     sfr_bitfield ETA5 : 1; /* LAM 0-15 Event Trigger Activity (last) */
     sfr_bitfield ETA6 : 1; /* LAM 0-15 Event Trigger Activity (last) */
     sfr_bitfield ETA7 : 1; /* LAM 0-15 Event Trigger Activity (last) */
     sfr_bitfield ETA8 : 1; /* LAM 0-15 Event Trigger Activity (last) */
     sfr_bitfield ETA9 : 1; /* LAM 0-15 Event Trigger Activity (last) */
     sfr_bitfield ETA10 : 1; /* LAM 0-15 Event Trigger Activity (last) */
     sfr_bitfield ETA11 : 1; /* LAM 0-15 Event Trigger Activity (last) */
     sfr_bitfield ETA12 : 1; /* LAM 0-15 Event Trigger Activity (last) */
     sfr_bitfield ETA13 : 1; /* LAM 0-15 Event Trigger Activity (last) */
     sfr_bitfield ETA14 : 1; /* LAM 0-15 Event Trigger Activity (last) */
     sfr_bitfield ETA15 : 1; /* LAM 0-15 Event Trigger Activity (last) */
     sfr_bitfield ETB0 : 1; /* LAM 0-15 Event Trigger Activity (previous ETA0-15) */
     sfr_bitfield ETB1 : 1; /* LAM 0-15 Event Trigger Activity (previous ETA0-15) */
     sfr_bitfield ETB2 : 1; /* LAM 0-15 Event Trigger Activity (previous ETA0-15) */
     sfr_bitfield ETB3 : 1; /* LAM 0-15 Event Trigger Activity (previous ETA0-15) */
     sfr_bitfield ETB4 : 1; /* LAM 0-15 Event Trigger Activity (previous ETA0-15) */
     sfr_bitfield ETB5 : 1; /* LAM 0-15 Event Trigger Activity (previous ETA0-15) */
     sfr_bitfield ETB6 : 1; /* LAM 0-15 Event Trigger Activity (previous ETA0-15) */
     sfr_bitfield ETB7 : 1; /* LAM 0-15 Event Trigger Activity (previous ETA0-15) */
     sfr_bitfield ETB8 : 1; /* LAM 0-15 Event Trigger Activity (previous ETA0-15) */
     sfr_bitfield ETB9 : 1; /* LAM 0-15 Event Trigger Activity (previous ETA0-15) */
     sfr_bitfield ETB10 : 1; /* LAM 0-15 Event Trigger Activity (previous ETA0-15) */
     sfr_bitfield ETB11 : 1; /* LAM 0-15 Event Trigger Activity (previous ETA0-15) */
     sfr_bitfield ETB12 : 1; /* LAM 0-15 Event Trigger Activity (previous ETA0-15) */
     sfr_bitfield ETB13 : 1; /* LAM 0-15 Event Trigger Activity (previous ETA0-15) */
     sfr_bitfield ETB14 : 1; /* LAM 0-15 Event Trigger Activity (previous ETA0-15) */
     sfr_bitfield ETB15 : 1; /* LAM 0-15 Event Trigger Activity (previous ETA0-15) */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} IOM_ECMETH0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ETC0 : 1; /* LAM 0-15 Event Trigger Activity (previous ETB0-15) */
     sfr_bitfield ETC1 : 1; /* LAM 0-15 Event Trigger Activity (previous ETB0-15) */
     sfr_bitfield ETC2 : 1; /* LAM 0-15 Event Trigger Activity (previous ETB0-15) */
     sfr_bitfield ETC3 : 1; /* LAM 0-15 Event Trigger Activity (previous ETB0-15) */
     sfr_bitfield ETC4 : 1; /* LAM 0-15 Event Trigger Activity (previous ETB0-15) */
     sfr_bitfield ETC5 : 1; /* LAM 0-15 Event Trigger Activity (previous ETB0-15) */
     sfr_bitfield ETC6 : 1; /* LAM 0-15 Event Trigger Activity (previous ETB0-15) */
     sfr_bitfield ETC7 : 1; /* LAM 0-15 Event Trigger Activity (previous ETB0-15) */
     sfr_bitfield ETC8 : 1; /* LAM 0-15 Event Trigger Activity (previous ETB0-15) */
     sfr_bitfield ETC9 : 1; /* LAM 0-15 Event Trigger Activity (previous ETB0-15) */
     sfr_bitfield ETC10 : 1; /* LAM 0-15 Event Trigger Activity (previous ETB0-15) */
     sfr_bitfield ETC11 : 1; /* LAM 0-15 Event Trigger Activity (previous ETB0-15) */
     sfr_bitfield ETC12 : 1; /* LAM 0-15 Event Trigger Activity (previous ETB0-15) */
     sfr_bitfield ETC13 : 1; /* LAM 0-15 Event Trigger Activity (previous ETB0-15) */
     sfr_bitfield ETC14 : 1; /* LAM 0-15 Event Trigger Activity (previous ETB0-15) */
     sfr_bitfield ETC15 : 1; /* LAM 0-15 Event Trigger Activity (previous ETB0-15) */
     sfr_bitfield ETD0 : 1; /* LAM 0-15 Event Trigger Activity (previous ETC0-15) */
     sfr_bitfield ETD1 : 1; /* LAM 0-15 Event Trigger Activity (previous ETC0-15) */
     sfr_bitfield ETD2 : 1; /* LAM 0-15 Event Trigger Activity (previous ETC0-15) */
     sfr_bitfield ETD3 : 1; /* LAM 0-15 Event Trigger Activity (previous ETC0-15) */
     sfr_bitfield ETD4 : 1; /* LAM 0-15 Event Trigger Activity (previous ETC0-15) */
     sfr_bitfield ETD5 : 1; /* LAM 0-15 Event Trigger Activity (previous ETC0-15) */
     sfr_bitfield ETD6 : 1; /* LAM 0-15 Event Trigger Activity (previous ETC0-15) */
     sfr_bitfield ETD7 : 1; /* LAM 0-15 Event Trigger Activity (previous ETC0-15) */
     sfr_bitfield ETD8 : 1; /* LAM 0-15 Event Trigger Activity (previous ETC0-15) */
     sfr_bitfield ETD9 : 1; /* LAM 0-15 Event Trigger Activity (previous ETC0-15) */
     sfr_bitfield ETD10 : 1; /* LAM 0-15 Event Trigger Activity (previous ETC0-15) */
     sfr_bitfield ETD11 : 1; /* LAM 0-15 Event Trigger Activity (previous ETC0-15) */
     sfr_bitfield ETD12 : 1; /* LAM 0-15 Event Trigger Activity (previous ETC0-15) */
     sfr_bitfield ETD13 : 1; /* LAM 0-15 Event Trigger Activity (previous ETC0-15) */
     sfr_bitfield ETD14 : 1; /* LAM 0-15 Event Trigger Activity (previous ETC0-15) */
     sfr_bitfield ETD15 : 1; /* LAM 0-15 Event Trigger Activity (previous ETC0-15) */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} IOM_ECMETH1_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield DISR : 1; /* Module Disable Request Bit */
    /* const */ sfr_bitfield DISS : 1; /* Module Disable Status Bit */
     sfr_bitfield resv2 : 1; /* reserved */
     sfr_bitfield EDIS : 1; /* Sleep Mode Enable Control */
     sfr_bitfield resv4 : 4; /* reserved */
     sfr_bitfield RMC : 8; /* 8-bit Clock Divider Value in RUN Mode */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} IOM_CLC_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ALTI : 3; /* Alternate Input Select */
     sfr_bitfield resv3 : 1; /* reserved */
     sfr_bitfield DEPTH : 6; /* Digital Glitch Filter Depth */
     sfr_bitfield resv10 : 6; /* reserved */
     sfr_bitfield CTS : 2; /* CTS Select */
     sfr_bitfield resv18 : 7; /* reserved */
     sfr_bitfield RCPOL : 1; /* RTS CTS Polarity */
     sfr_bitfield CPOL : 1; /* Clock Polarity in Synchronous Mode */
     sfr_bitfield SPOL : 1; /* Slave Polarity in Synchronous Mode */
     sfr_bitfield LB : 1; /* Loop Back Mode */
     sfr_bitfield CTSEN : 1; /* Input Signal CTS Enable */
    /* const */ sfr_bitfield RXM : 1; /* Receive Monitor */
    /* const */ sfr_bitfield TXM : 1; /* Transmit Monitor */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ASCLIN0_IOCR_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield MODREV : 8; /* Module Revision Number */
    /* const */ sfr_bitfield MODTYPE : 8; /* Module Type */
    /* const */ sfr_bitfield MODNUMBER : 16; /* Module Number Value */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ASCLIN0_ID_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield FLUSH : 1; /* Flush the transmit FIFO */
     sfr_bitfield ENO : 1; /* Transmit FIFO Outlet Enable */
     sfr_bitfield resv2 : 4; /* reserved */
     sfr_bitfield INW : 2; /* Transmit FIFO Inlet Width */
     sfr_bitfield INTLEVEL : 4; /* FIFO Interrupt Level */
     sfr_bitfield resv12 : 4; /* reserved */
    /* const */ sfr_bitfield FILL : 5; /* FIFO Filling Level */
     sfr_bitfield resv21 : 11; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ASCLIN0_TXFIFOCON_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield FLUSH : 1; /* Flush the receive FIFO */
     sfr_bitfield ENI : 1; /* Receive FIFO Inlet Enable */
     sfr_bitfield resv2 : 4; /* reserved */
     sfr_bitfield OUTW : 2; /* Receive FIFO Outlet Width */
     sfr_bitfield INTLEVEL : 4; /* FIFO Interrupt Level */
     sfr_bitfield resv12 : 4; /* reserved */
    /* const */ sfr_bitfield FILL : 5; /* FIFO Filling Level */
     sfr_bitfield resv21 : 10; /* reserved */
     sfr_bitfield BUF : 1; /* Receive Buffer Mode */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ASCLIN0_RXFIFOCON_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PRESCALER : 12; /* Prescaling of the Fractional Divider */
     sfr_bitfield resv12 : 4; /* reserved */
     sfr_bitfield OVERSAMPLING : 4; /* Oversampling Factor */
     sfr_bitfield resv20 : 4; /* reserved */
     sfr_bitfield SAMPLEPOINT : 4; /* Sample Point Position */
     sfr_bitfield resv28 : 3; /* reserved */
     sfr_bitfield SM : 1; /* Sample Mode */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ASCLIN0_BITCON_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 6; /* reserved */
     sfr_bitfield IDLE : 3; /* Duration of the IDLE delay */
     sfr_bitfield STOP : 3; /* Number of Stop Bits */
     sfr_bitfield LEAD : 3; /* Duration of the Leading Delay */
     sfr_bitfield resv15 : 1; /* reserved */
     sfr_bitfield MODE : 2; /* Mode Selection */
     sfr_bitfield resv18 : 10; /* reserved */
     sfr_bitfield MSB : 1; /* Shift Direction */
     sfr_bitfield CEN : 1; /* Collision Detection Enable */
     sfr_bitfield PEN : 1; /* Parity Enable */
     sfr_bitfield ODD : 1; /* Parity Type */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ASCLIN0_FRAMECON_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield DATLEN : 4; /* Data Length */
     sfr_bitfield resv4 : 9; /* reserved */
     sfr_bitfield HO : 1; /* Header Only */
     sfr_bitfield RM : 1; /* Response Mode */
     sfr_bitfield CSM : 1; /* Checksum Mode */
     sfr_bitfield RESPONSE : 8; /* Response Timeout Threshold Value */
     sfr_bitfield resv24 : 8; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ASCLIN0_DATCON_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield DENOMINATOR : 12; /* Denominator */
     sfr_bitfield resv12 : 4; /* reserved */
     sfr_bitfield NUMERATOR : 12; /* Numerator */
     sfr_bitfield resv28 : 4; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ASCLIN0_BRG_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield LOWERLIMIT : 8; /* Lower Limit */
     sfr_bitfield UPPERLIMIT : 8; /* Upper Limit */
    /* const */ sfr_bitfield MEASURED : 12; /* Measured Value of the Denominator */
     sfr_bitfield resv28 : 4; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ASCLIN0_BRD_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 23; /* reserved */
     sfr_bitfield CSI : 1; /* Checksum Injection */
     sfr_bitfield resv24 : 1; /* reserved */
     sfr_bitfield CSEN : 1; /* Hardware Checksum Enable */
     sfr_bitfield MS : 1; /* Master Slave Mode */
     sfr_bitfield ABD : 1; /* Autobaud Detection */
     sfr_bitfield resv28 : 4; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ASCLIN0_LINCON_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield BREAK : 6; /* Break Pulse Generation and Detection */
     sfr_bitfield resv6 : 26; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ASCLIN0_LINBTIMER_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield HEADER : 8; /* Header Timeout Threshold Value */
     sfr_bitfield resv8 : 24; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ASCLIN0_LINHTIMER_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield TH : 1; /* Transmit Header End Flag */
    /* const */ sfr_bitfield TR : 1; /* Transmit Response End Flag */
    /* const */ sfr_bitfield RH : 1; /* Receive Header End Flag */
    /* const */ sfr_bitfield RR : 1; /* Receive Response End Flag */
     sfr_bitfield resv4 : 1; /* reserved */
    /* const */ sfr_bitfield FED : 1; /* Falling Edge from Level 1 to Level 0 Detected */
    /* const */ sfr_bitfield RED : 1; /* Rising Edge from Level 0 to Level 1 Detected */
     sfr_bitfield resv7 : 6; /* reserved */
    /* const */ sfr_bitfield TWRQ : 1; /* Transmit Wake Request Flag */
    /* const */ sfr_bitfield THRQ : 1; /* Transmit Header Request Flag */
    /* const */ sfr_bitfield TRRQ : 1; /* Transmit Response Request Flag */
    /* const */ sfr_bitfield PE : 1; /* Parity Error Flag */
    /* const */ sfr_bitfield TC : 1; /* Transmission Completed Flag */
    /* const */ sfr_bitfield FE : 1; /* Framing Error Flag */
    /* const */ sfr_bitfield HT : 1; /* Header Timeout Flag */
    /* const */ sfr_bitfield RT : 1; /* Response Timeout Flag */
    /* const */ sfr_bitfield BD : 1; /* Break Detected Flag */
    /* const */ sfr_bitfield LP : 1; /* LIN Parity Error Flag */
    /* const */ sfr_bitfield LA : 1; /* LIN Autobaud Detection Error Flag */
    /* const */ sfr_bitfield LC : 1; /* LIN Checksum Error Flag */
    /* const */ sfr_bitfield CE : 1; /* Collision Detection Error Flag */
    /* const */ sfr_bitfield RFO : 1; /* Receive FIFO Overflow Flag */
    /* const */ sfr_bitfield RFU : 1; /* Receive FIFO Underflow Flag */
    /* const */ sfr_bitfield RFL : 1; /* Receive FIFO Level Flag */
     sfr_bitfield resv29 : 1; /* reserved */
    /* const */ sfr_bitfield TFO : 1; /* Transmit FIFO Overflow Flag */
    /* const */ sfr_bitfield TFL : 1; /* Transmit FIFO Level Flag */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ASCLIN0_FLAGS_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield THS : 1; /* Flag Set Bit */
     sfr_bitfield TRS : 1; /* Flag Set Bit */
     sfr_bitfield RHS : 1; /* Flag Set Bit */
     sfr_bitfield RRS : 1; /* Flag Set Bit */
     sfr_bitfield resv4 : 1; /* reserved */
     sfr_bitfield FEDS : 1; /* Flag Set Bit */
     sfr_bitfield REDS : 1; /* Flag Set Bit */
     sfr_bitfield resv7 : 6; /* reserved */
     sfr_bitfield TWRQS : 1; /* Flag Set Bit */
     sfr_bitfield THRQS : 1; /* Flag Set Bit */
     sfr_bitfield TRRQS : 1; /* Flag Set Bit */
     sfr_bitfield PES : 1; /* Flag Set Bit */
     sfr_bitfield TCS : 1; /* Flag Set Bit */
     sfr_bitfield FES : 1; /* Flag Set Bit */
     sfr_bitfield HTS : 1; /* Flag Set Bit */
     sfr_bitfield RTS : 1; /* Flag Set Bit */
     sfr_bitfield BDS : 1; /* Flag Set Bit */
     sfr_bitfield LPS : 1; /* Flag Set Bit */
     sfr_bitfield LAS : 1; /* Flag Set Bit */
     sfr_bitfield LCS : 1; /* Flag Set Bit */
     sfr_bitfield CES : 1; /* Flag Set Bit */
     sfr_bitfield RFOS : 1; /* Flag Set Bit */
     sfr_bitfield RFUS : 1; /* Flag Set Bit */
     sfr_bitfield RFLS : 1; /* Flag Set Bit */
     sfr_bitfield resv29 : 1; /* reserved */
     sfr_bitfield TFOS : 1; /* Flag Set Bit */
     sfr_bitfield TFLS : 1; /* Flag Set Bit */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ASCLIN0_FLAGSSET_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield THC : 1; /* Flag Clear Bit */
     sfr_bitfield TRC : 1; /* Flag Clear Bit */
     sfr_bitfield RHC : 1; /* Flag Clear Bit */
     sfr_bitfield RRC : 1; /* Flag Clear Bit */
     sfr_bitfield resv4 : 1; /* reserved */
     sfr_bitfield FEDC : 1; /* Flag Clear Bit */
     sfr_bitfield REDC : 1; /* Flag Clear Bit */
     sfr_bitfield resv7 : 6; /* reserved */
     sfr_bitfield TWRQC : 1; /* Flag Clear Bit */
     sfr_bitfield THRQC : 1; /* Flag Clear Bit */
     sfr_bitfield TRRQC : 1; /* Flag Clear Bit */
     sfr_bitfield PEC : 1; /* Flag Clear Bit */
     sfr_bitfield TCC : 1; /* Flag Clear Bit */
     sfr_bitfield FEC : 1; /* Flag Clear Bit */
     sfr_bitfield HTC : 1; /* Flag Clear Bit */
     sfr_bitfield RTC : 1; /* Flag Clear Bit */
     sfr_bitfield BDC : 1; /* Flag Clear Bit */
     sfr_bitfield LPC : 1; /* Flag Clear Bit */
     sfr_bitfield LAC : 1; /* Flag Clear Bit */
     sfr_bitfield LCC : 1; /* Flag Clear Bit */
     sfr_bitfield CEC : 1; /* Flag Clear Bit */
     sfr_bitfield RFOC : 1; /* Flag Clear Bit */
     sfr_bitfield RFUC : 1; /* Flag Clear Bit */
     sfr_bitfield RFLC : 1; /* Flag Clear Bit */
     sfr_bitfield resv29 : 1; /* reserved */
     sfr_bitfield TFOC : 1; /* Flag Clear Bit */
     sfr_bitfield TFLC : 1; /* Flag Clear Bit */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ASCLIN0_FLAGSCLEAR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield THE : 1; /* Flag Enable Bit */
     sfr_bitfield TRE : 1; /* Flag Enable Bit */
     sfr_bitfield RHE : 1; /* Flag Enable Bit */
     sfr_bitfield RRE : 1; /* Flag Enable Bit */
     sfr_bitfield resv4 : 1; /* reserved */
     sfr_bitfield FEDE : 1; /* Flag Enable Bit */
     sfr_bitfield REDE : 1; /* Flag Enable Bit */
     sfr_bitfield resv7 : 9; /* reserved */
     sfr_bitfield PEE : 1; /* Flag Enable Bit */
     sfr_bitfield TCE : 1; /* Flag Enable Bit */
     sfr_bitfield FEE : 1; /* Flag Enable Bit */
     sfr_bitfield HTE : 1; /* Flag Enable Bit */
     sfr_bitfield RTE : 1; /* Flag Enable Bit */
     sfr_bitfield BDE : 1; /* Flag Enable Bit */
     sfr_bitfield LPE : 1; /* Flag Enable Bit */
     sfr_bitfield ABE : 1; /* Flag Enable Bit */
     sfr_bitfield LCE : 1; /* Flag Enable Bit */
     sfr_bitfield CEE : 1; /* Flag Enable Bit */
     sfr_bitfield RFOE : 1; /* Flag Enable Bit */
     sfr_bitfield RFUE : 1; /* Flag Enable Bit */
     sfr_bitfield RFLE : 1; /* Flag Enable Bit */
     sfr_bitfield resv29 : 1; /* reserved */
     sfr_bitfield TFOE : 1; /* Flag Enable Bit */
     sfr_bitfield TFLE : 1; /* Flag Enable Bit */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ASCLIN0_FLAGSENABLE_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield DATA : 32; /* Data */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ASCLIN0_TXDATA_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CLKSEL : 5; /* Baud Rate Logic Clock Select */
     sfr_bitfield resv5 : 26; /* reserved */
    /* const */ sfr_bitfield CON : 1; /* Clock On Flag */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ASCLIN0_CSR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield DISR : 1; /* Module Disable Request Bit */
    /* const */ sfr_bitfield DISS : 1; /* Module Disable Status Bit */
     sfr_bitfield resv2 : 1; /* reserved */
     sfr_bitfield EDIS : 1; /* Sleep Mode Enable Control */
     sfr_bitfield resv4 : 28; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ASCLIN0_CLC_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 24; /* reserved */
     sfr_bitfield SUS : 4; /* OCDS Suspend Control */
     sfr_bitfield SUS_P : 1; /* SUS Write Protection */
    /* const */ sfr_bitfield SUSSTA : 1; /* Suspend State */
     sfr_bitfield resv30 : 2; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ASCLIN0_OCS_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield MRIS : 3; /* Master Mode Receive Input Select */
     sfr_bitfield resv3 : 1; /* reserved */
     sfr_bitfield SRIS : 3; /* Slave Mode Receive Input Select */
     sfr_bitfield resv7 : 1; /* reserved */
     sfr_bitfield SCIS : 3; /* Slave Mode Clock Input Select */
     sfr_bitfield resv11 : 1; /* reserved */
     sfr_bitfield SLSIS : 3; /* Slave Mode Slave Select Input Selection */
     sfr_bitfield resv15 : 17; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} QSPI0_PISEL_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield TQ : 8; /* Global Time Quantum Length */
     sfr_bitfield resv8 : 1; /* reserved */
     sfr_bitfield SI : 1; /* Status Injection */
     sfr_bitfield EXPECT : 4; /* Time-Out Value for the Expect Phase */
     sfr_bitfield LB : 1; /* Loop-Back Control */
     sfr_bitfield DEL0 : 1; /* Delayed Mode for SLSO0 */
     sfr_bitfield STROBE : 5; /* Strobe Delay for SLSO0 in Delayed Mode */
     sfr_bitfield SRF : 1; /* Stop on RxFIFO Full */
     sfr_bitfield STIP : 1; /* Slave Transmit Idle State Polarity */
     sfr_bitfield resv23 : 1; /* reserved */
     sfr_bitfield EN : 1; /* Enable Bit */
     sfr_bitfield MS : 2; /* Master Slave Mode */
     sfr_bitfield AREN : 1; /* Automatic Reset Enable */
     sfr_bitfield RESETS : 4; /* Bits for resetting sub-modules per software */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} QSPI0_GLOBALCON_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ERRORENS : 9; /* Error Enable Bits */
     sfr_bitfield TXEN : 1; /* Tx Interrupt Event Enable */
     sfr_bitfield RXEN : 1; /* RX Interrupt Event Enable */
     sfr_bitfield PT1EN : 1; /* Interrupt on PT1 Event Enable */
     sfr_bitfield PT2EN : 1; /* Interrupt on PT2 Event Enable */
     sfr_bitfield resv13 : 2; /* reserved */
     sfr_bitfield USREN : 1; /* Interrupt on USR Event Enable */
     sfr_bitfield TXFIFOINT : 2; /* Transmit FIFO Interrupt Threshold */
     sfr_bitfield RXFIFOINT : 2; /* Receive FIFO Interrupt Threshold */
     sfr_bitfield PT1 : 3; /* Phase Transition Event 1 */
     sfr_bitfield PT2 : 3; /* Phase Transition Event 2 */
     sfr_bitfield TXFM : 2; /* TXFIFO Mode */
     sfr_bitfield RXFM : 2; /* RXFIFO Mode */
     sfr_bitfield resv30 : 2; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} QSPI0_GLOBALCON1_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield LAST : 1; /* Last Word in a Frame */
    /* const */ sfr_bitfield IPRE : 3; /* Prescaler for the Idle Delay */
    /* const */ sfr_bitfield IDLE : 3; /* Idle Delay Length */
    /* const */ sfr_bitfield LPRE : 3; /* Prescaler for the Leading Delay */
    /* const */ sfr_bitfield LEAD : 3; /* Leading Delay Length */
    /* const */ sfr_bitfield TPRE : 3; /* Prescaler for the Trailing Delay */
    /* const */ sfr_bitfield TRAIL : 3; /* Trailing Delay Length */
    /* const */ sfr_bitfield PARTYP : 1; /* Parity Type */
    /* const */ sfr_bitfield UINT : 1; /* User Interrupt at the PT1 Event in the Subsequent Frames */
    /* const */ sfr_bitfield MSB : 1; /* Shift MSB or LSB First */
    /* const */ sfr_bitfield BYTE : 1; /* Byte */
    /* const */ sfr_bitfield DL : 5; /* Data Length */
    /* const */ sfr_bitfield CS : 4; /* Channel Select */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} QSPI0_BACON_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield Q : 6; /* Time Quantum */
     sfr_bitfield A : 2; /* Bit Segment 1 */
     sfr_bitfield B : 2; /* Bit Segment 2 */
     sfr_bitfield C : 2; /* Bit Segment 3 */
     sfr_bitfield CPH : 1; /* Clock Phase */
     sfr_bitfield CPOL : 1; /* Clock Polarity */
     sfr_bitfield PAREN : 1; /* Enable Parity Check */
     sfr_bitfield resv15 : 15; /* reserved */
     sfr_bitfield BE : 2; /* Permutate bytes to / from Big Endian */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} QSPI0_ECON0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ERRORFLAGS : 9; /* Sticky Flags Signalling Errors */
     sfr_bitfield TXF : 1; /* Transmit Interrupt Request Flag */
     sfr_bitfield RXF : 1; /* Receive Interrupt Request Flag */
     sfr_bitfield PT1F : 1; /* Phase Transition 1 Flag */
     sfr_bitfield PT2F : 1; /* Phase Transition 2 Flag */
     sfr_bitfield resv13 : 2; /* reserved */
     sfr_bitfield USRF : 1; /* User Interrupt Request Flag */
    /* const */ sfr_bitfield TXFIFOLEVEL : 3; /* TXFIFO Filling Level */
    /* const */ sfr_bitfield RXFIFOLEVEL : 3; /* RXFIFO Filling Level */
    /* const */ sfr_bitfield SLAVESEL : 4; /* Currently Active Slave Select Flag */
    /* const */ sfr_bitfield RPV : 1; /* Received Parity Value */
    /* const */ sfr_bitfield TPV : 1; /* Transmitted Parity Value */
    /* const */ sfr_bitfield PHASE : 4; /* Flags the ongoing phase */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} QSPI0_STATUS_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield BITCOUNT : 8; /* Number of the bit shifted out */
     sfr_bitfield resv8 : 20; /* reserved */
     sfr_bitfield BRDEN : 1; /* Baud Rate Deviation Enable */
     sfr_bitfield BRD : 1; /* Baud Rate Deviation Flag */
     sfr_bitfield SPDEN : 1; /* Spike Detection Enable */
     sfr_bitfield SPD : 1; /* Spike Detection Flag */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} QSPI0_STATUS1_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield AOL : 16; /* Active Output Level for the SLSO Outputs */
     sfr_bitfield OEN : 16; /* Enable Bits for the SLSO Outputs */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} QSPI0_SSOC_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ERRORCLEARS : 9; /* Write Only Bits for Clearing the Error Flags */
     sfr_bitfield TXC : 1; /* Transmit Event Flag Clear */
     sfr_bitfield RXC : 1; /* Receive Event Flag Clear */
     sfr_bitfield PT1C : 1; /* PT1 Event Flag Clear */
     sfr_bitfield PT2C : 1; /* PT2 Event Flag Clear */
     sfr_bitfield resv13 : 2; /* reserved */
     sfr_bitfield USRC : 1; /* User Event Flag Clear */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} QSPI0_FLAGSCLEAR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield XDL : 16; /* Extended Data Length */
    /* const */ sfr_bitfield BYTECOUNT : 16; /* Extended Data Length */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} QSPI0_XXLCON_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield E : 32; /* Entry Point to the TxFIFO */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} QSPI0_MIXENTRY_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield E : 32; /* Read Point from the RxFIFO */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} QSPI0_RXEXIT_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield CAP : 15; /* Captured Value */
    /* const */ sfr_bitfield OVF : 1; /* Overflow Flag */
     sfr_bitfield EDGECON : 2; /* Edge Configuration */
     sfr_bitfield INS : 2; /* Input Selection */
     sfr_bitfield EN : 1; /* Enable Bit of the Capture Timer */
     sfr_bitfield resv21 : 7; /* reserved */
     sfr_bitfield CAPC : 1; /* Capture Flag Clear */
     sfr_bitfield CAPS : 1; /* Capture Flag Set */
    /* const */ sfr_bitfield CAPF : 1; /* Capture Flag */
     sfr_bitfield CAPSEL : 1; /* Capture Interrupt Select Bit */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} QSPI2_CAPCON_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PANCMD : 8; /* Panel Command */
    /* const */ sfr_bitfield BUSY : 1; /* Panel Busy Flag */
    /* const */ sfr_bitfield RBUSY : 1; /* Result Busy Flag */
     sfr_bitfield resv10 : 6; /* reserved */
     sfr_bitfield PANAR1 : 8; /* Panel Argument 1 */
     sfr_bitfield PANAR2 : 8; /* Panel Argument 2 */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CAN_PANCTR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CLKSEL : 4; /* Baud Rate Logic Clock Select */
     sfr_bitfield resv4 : 4; /* reserved */
     sfr_bitfield DXCM : 1; /* Debug Over CAN Messages Enable */
     sfr_bitfield resv9 : 3; /* reserved */
     sfr_bitfield MPSEL : 4; /* Message Pending Selector */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CAN_MCR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield IT : 16; /* Interrupt Trigger */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CAN_MITR_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield BEGIN : 8; /* List Begin */
    /* const */ sfr_bitfield END : 8; /* List End */
    /* const */ sfr_bitfield SIZE : 8; /* List Size */
    /* const */ sfr_bitfield EMPTY : 1; /* List Empty Indication */
     sfr_bitfield resv25 : 7; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CAN_LIST0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PND : 32; /* Message Pending */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CAN_MSPND0_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield INDEX : 6; /* Message Pending Index */
     sfr_bitfield resv6 : 26; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CAN_MSID0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield IM : 32; /* Message Index Mask */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CAN_MSIMASK_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield TH : 16; /* Threshold */
     sfr_bitfield INP : 4; /* Interrupt Node Pointer */
     sfr_bitfield NODE : 3; /* Node */
     sfr_bitfield resv23 : 1; /* reserved */
     sfr_bitfield ANYED : 1; /* Any Edge */
     sfr_bitfield CAPEIE : 1; /* Capture Event Interrupt Enable */
     sfr_bitfield resv26 : 1; /* reserved */
     sfr_bitfield DEPTH : 3; /* Digital Glitch Filter Depth */
     sfr_bitfield SOF : 1; /* Start Of Frame */
     sfr_bitfield resv31 : 1; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CAN_MECR_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield CAPT : 16; /* Captured Timer */
    /* const */ sfr_bitfield CAPRED : 1; /* Captured Rising Edge */
     sfr_bitfield CAPE : 1; /* Capture Event */
     sfr_bitfield resv18 : 14; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CAN_MESTAT_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield INIT : 1; /* Node Initialization */
     sfr_bitfield TRIE : 1; /* Transfer Interrupt Enable */
     sfr_bitfield LECIE : 1; /* LEC Indicated Error Interrupt Enable */
     sfr_bitfield ALIE : 1; /* Alert Interrupt Enable */
     sfr_bitfield CANDIS : 1; /* CAN Disable */
     sfr_bitfield TXDIS : 1; /* Transmit Disable */
     sfr_bitfield CCE : 1; /* Configuration Change Enable */
     sfr_bitfield CALM : 1; /* CAN Analyzer Mode */
     sfr_bitfield SUSEN : 1; /* Suspend Enable */
     sfr_bitfield FDEN : 1; /* CAN Flexible Data-Rate Enable */
     sfr_bitfield resv10 : 22; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CAN_NCR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield LEC : 3; /* Last Error Code */
     sfr_bitfield TXOK : 1; /* Message Transmitted Successfully */
     sfr_bitfield RXOK : 1; /* Message Received Successfully */
     sfr_bitfield ALERT : 1; /* Alert Warning */
    /* const */ sfr_bitfield EWRN : 1; /* Error Warning Status */
    /* const */ sfr_bitfield BOFF : 1; /* Bus-off Status */
     sfr_bitfield LLE : 1; /* List Length Error */
     sfr_bitfield LOE : 1; /* List Object Error */
    /* const */ sfr_bitfield SUSACK : 1; /* Suspend Acknowledge */
    /* const */ sfr_bitfield RESI : 1; /* Received Error State Indicator Flag This bit is an error flag that is set when the ESI flag in a received CAN FD frame is set. */
     sfr_bitfield FLEC : 3; /* Fast Last Error Code */
     sfr_bitfield resv15 : 17; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CAN_NSR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ALINP : 4; /* Alert Interrupt Node Pointer */
     sfr_bitfield LECINP : 4; /* Last Error Code Interrupt Node Pointer */
     sfr_bitfield TRINP : 4; /* Transfer OK Interrupt Node Pointer */
     sfr_bitfield CFCINP : 4; /* Frame Counter Interrupt Node Pointer */
     sfr_bitfield TEINP : 4; /* Timer Event Interrupt Node Pointer */
     sfr_bitfield resv20 : 12; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CAN_NIPR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield RXSEL : 3; /* Receive Select */
     sfr_bitfield resv3 : 5; /* reserved */
     sfr_bitfield LBM : 1; /* Loop-Back Mode */
     sfr_bitfield resv9 : 23; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CAN_NPCR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield BRP : 6; /* Baud Rate Prescaler */
     sfr_bitfield SJW : 2; /* (Re) Synchronization Jump Width */
     sfr_bitfield TSEG1 : 4; /* Time Segment Before Sample Point */
     sfr_bitfield TSEG2 : 3; /* Time Segment After Sample Point */
     sfr_bitfield DIV8 : 1; /* Divide Prescaler Clock by 8 */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CAN_NBTR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield BRP : 6; /* Baud Rate Prescaler */
     sfr_bitfield resv6 : 2; /* reserved */
     sfr_bitfield SJW : 4; /* (Re) Synchronization Jump Width */
     sfr_bitfield resv12 : 3; /* reserved */
     sfr_bitfield DIV8 : 1; /* Divide Prescaler Clock by 8 */
     sfr_bitfield TSEG2 : 5; /* Time Segment After Sample Point */
     sfr_bitfield resv21 : 1; /* reserved */
     sfr_bitfield TSEG1 : 6; /* Time Segment Before Sample Point */
     sfr_bitfield resv28 : 4; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CAN_NBTEVR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield FBRP : 6; /* Fast Baud Rate Prescaler */
     sfr_bitfield FSJW : 2; /* Fast (Re) Synchronization Jump Width */
     sfr_bitfield FTSEG1 : 4; /* Fast Time Segment Before Sample Point */
     sfr_bitfield FTSEG2 : 3; /* Fast Time Segment After Sample Point */
     sfr_bitfield resv15 : 17; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CAN_FNBTR0_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield TDCV : 5; /* Transmitter Delay Compensation Value */
     sfr_bitfield resv5 : 3; /* reserved */
     sfr_bitfield TDCO : 4; /* Transmitter Delay Compensation Offset */
     sfr_bitfield resv12 : 3; /* reserved */
     sfr_bitfield TDC : 1; /* Transmitter Delay Compensation Enable */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CAN_NTDCR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield REC : 8; /* Receive Error Counter */
     sfr_bitfield TEC : 8; /* Transmit Error Counter */
     sfr_bitfield EWRNLVL : 8; /* Error Warning Level */
    /* const */ sfr_bitfield LETD : 1; /* Last Error Transfer Direction */
    /* const */ sfr_bitfield LEINC : 1; /* Last Error Increment */
     sfr_bitfield resv26 : 6; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CAN_NECNT0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CFC : 16; /* CAN Frame Counter */
     sfr_bitfield CFSEL : 3; /* CAN Frame Count Selection */
     sfr_bitfield CFMOD : 2; /* CAN Frame Counter Mode */
     sfr_bitfield resv21 : 1; /* reserved */
     sfr_bitfield CFCIE : 1; /* CAN Frame Count Interrupt Enable */
     sfr_bitfield CFCOV : 1; /* CAN Frame Counter Overflow Flag */
     sfr_bitfield resv24 : 8; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CAN_NFCR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 8; /* reserved */
     sfr_bitfield TPSC : 4; /* Timer Prescaler */
     sfr_bitfield resv12 : 6; /* reserved */
     sfr_bitfield TRIGSRC : 3; /* Trigger Source */
     sfr_bitfield resv21 : 11; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CAN_NTCCR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield RELOAD : 16; /* Reload Value */
     sfr_bitfield resv16 : 6; /* reserved */
     sfr_bitfield TEIE : 1; /* Timer Event Interrupt Enable */
     sfr_bitfield TE : 1; /* Timer Event */
     sfr_bitfield resv24 : 8; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CAN_NTRTR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield RELOAD : 16; /* Reload Value */
     sfr_bitfield TXMO : 8; /* Transmit Message Object */
     sfr_bitfield STRT : 1; /* Timer Start */
     sfr_bitfield resv25 : 7; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CAN_NTATTR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield RESRXPND : 1; /* Reset/Set Receive Pending */
     sfr_bitfield RESTXPND : 1; /* Reset/Set Transmit Pending */
     sfr_bitfield RESRXUPD : 1; /* Reset/Set Receive Updating */
     sfr_bitfield RESNEWDAT : 1; /* Reset/Set New Data */
     sfr_bitfield RESMSGLST : 1; /* Reset/Set Message Lost */
     sfr_bitfield RESMSGVAL : 1; /* Reset/Set Message Valid */
     sfr_bitfield RESRTSEL : 1; /* Reset/Set Receive/Transmit Selected */
     sfr_bitfield RESRXEN : 1; /* Reset/Set Receive Enable */
     sfr_bitfield RESTXRQ : 1; /* Reset/Set Transmit Request */
     sfr_bitfield RESTXEN0 : 1; /* Reset/Set Transmit Enable 0 */
     sfr_bitfield RESTXEN1 : 1; /* Reset/Set Transmit Enable 1 */
     sfr_bitfield RESDIR : 1; /* Reset/Set Message Direction */
     sfr_bitfield resv12 : 4; /* reserved */
     sfr_bitfield SETRXPND : 1; /* Reset/Set Receive Pending */
     sfr_bitfield SETTXPND : 1; /* Reset/Set Transmit Pending */
     sfr_bitfield SETRXUPD : 1; /* Reset/Set Receive Updating */
     sfr_bitfield SETNEWDAT : 1; /* Reset/Set New Data */
     sfr_bitfield SETMSGLST : 1; /* Reset/Set Message Lost */
     sfr_bitfield SETMSGVAL : 1; /* Reset/Set Message Valid */
     sfr_bitfield SETRTSEL : 1; /* Reset/Set Receive/Transmit Selected */
     sfr_bitfield SETRXEN : 1; /* Reset/Set Receive Enable */
     sfr_bitfield SETTXRQ : 1; /* Reset/Set Transmit Request */
     sfr_bitfield SETTXEN0 : 1; /* Reset/Set Transmit Enable 0 */
     sfr_bitfield SETTXEN1 : 1; /* Reset/Set Transmit Enable 1 */
     sfr_bitfield SETDIR : 1; /* Reset/Set Message Direction */
     sfr_bitfield resv28 : 4; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CAN_MOCTR0_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield RXPND : 1; /* Receive Pending */
    /* const */ sfr_bitfield TXPND : 1; /* Transmit Pending */
    /* const */ sfr_bitfield RXUPD : 1; /* Receive Updating */
    /* const */ sfr_bitfield NEWDAT : 1; /* New Data */
    /* const */ sfr_bitfield MSGLST : 1; /* Message Lost */
    /* const */ sfr_bitfield MSGVAL : 1; /* Message Valid */
    /* const */ sfr_bitfield RTSEL : 1; /* Receive/Transmit Selected */
    /* const */ sfr_bitfield RXEN : 1; /* Receive Enable */
    /* const */ sfr_bitfield TXRQ : 1; /* Transmit Request */
    /* const */ sfr_bitfield TXEN0 : 1; /* Transmit Enable 0 */
    /* const */ sfr_bitfield TXEN1 : 1; /* Transmit Enable 1 */
    /* const */ sfr_bitfield DIR : 1; /* Message Direction */
    /* const */ sfr_bitfield LIST : 4; /* List Allocation */
    /* const */ sfr_bitfield PPREV : 8; /* Pointer to Previous Message Object */
    /* const */ sfr_bitfield PNEXT : 8; /* Pointer to Next Message Object */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CAN_MOSTAT0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield RXINP : 4; /* Receive Interrupt Node Pointer */
     sfr_bitfield TXINP : 4; /* Transmit Interrupt Node Pointer */
     sfr_bitfield MPN : 8; /* Message Pending Number */
     sfr_bitfield CFCVAL : 16; /* CAN Frame Counter Value */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CAN_MOIPR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield MMC : 4; /* Message Mode Control */
     sfr_bitfield RXTOE : 1; /* Receive Time-Out Enable */
     sfr_bitfield BRS : 1; /* Bit Rate Switch */
     sfr_bitfield FDF : 1; /* CAN FD Frame Format */
     sfr_bitfield resv7 : 1; /* reserved */
     sfr_bitfield GDFS : 1; /* Gateway Data Frame Send */
     sfr_bitfield IDC : 1; /* Identifier Copy */
     sfr_bitfield DLCC : 1; /* Data Length Code Copy */
     sfr_bitfield DATC : 1; /* Data Copy */
     sfr_bitfield resv12 : 4; /* reserved */
     sfr_bitfield RXIE : 1; /* Receive Interrupt Enable */
     sfr_bitfield TXIE : 1; /* Transmit Interrupt Enable */
     sfr_bitfield OVIE : 1; /* Overflow Interrupt Enable */
     sfr_bitfield resv19 : 1; /* reserved */
     sfr_bitfield FRREN : 1; /* Foreign Remote Request Enable */
     sfr_bitfield RMM : 1; /* Transmit Object Remote Monitoring */
     sfr_bitfield SDT : 1; /* Single Data Transfer */
     sfr_bitfield STT : 1; /* Single Transmit Trial */
     sfr_bitfield DLC : 4; /* Data Length Code */
     sfr_bitfield resv28 : 4; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CAN_MOFCR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield BOT : 8; /* Bottom Pointer */
     sfr_bitfield TOP : 8; /* Top Pointer */
     sfr_bitfield CUR : 8; /* Current Object Pointer */
     sfr_bitfield SEL : 8; /* Object Select Pointer */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CAN_MOFGPR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield AM : 29; /* Acceptance Mask for Message Identifier */
     sfr_bitfield MIDE : 1; /* Acceptance Mask Bit for Message IDE Bit */
     sfr_bitfield resv30 : 2; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CAN_MOAMR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ID : 29; /* CAN Identifier of Message Object n */
     sfr_bitfield IDE : 1; /* Identifier Extension Bit of Message Object n */
     sfr_bitfield PRI : 2; /* Priority Class */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CAN_MOAR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield DB0 : 8; /* Data Byte 0 of Message Object n */
     sfr_bitfield DB1 : 8; /* Data Byte 1 of Message Object n */
     sfr_bitfield DB2 : 8; /* Data Byte 2 of Message Object n */
     sfr_bitfield DB3 : 8; /* Data Byte 3 of Message Object n */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CAN_MODATAL0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield DB4 : 8; /* Data Byte 4 of Message Object n */
     sfr_bitfield DB5 : 8; /* Data Byte 5 of Message Object n */
     sfr_bitfield DB6 : 8; /* Data Byte 6 of Message Object n */
     sfr_bitfield DB7 : 8; /* Data Byte 7 of Message Object n */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CAN_MODATAH0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield STEP : 10; /* Step Value */
     sfr_bitfield resv10 : 4; /* reserved */
     sfr_bitfield DM : 2; /* Divider Mode */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CAN_FDR_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield MODREV : 8; /* Module Revision Number */
    /* const */ sfr_bitfield MODTYPE : 8; /* Module Type */
    /* const */ sfr_bitfield MODNUM : 16; /* Module Number Value */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SENT_ID_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield STEP : 10; /* Step Value */
     sfr_bitfield resv10 : 4; /* reserved */
     sfr_bitfield DM : 2; /* Divider Mode */
    /* const */ sfr_bitfield RESULT : 10; /* Result Value */
     sfr_bitfield resv26 : 6; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SENT_FDR_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield CTS : 32; /* Current Time Stamp for the Module */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SENT_TSR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield TDIV : 20; /* Divider Factor of Pre Divider for TSR */
     sfr_bitfield resv20 : 12; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SENT_TPD_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PDIV : 12; /* Divider Factor of Pre Divider for Channel x */
     sfr_bitfield resv12 : 20; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SENT_CPDR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield DIV : 12; /* Divider Value */
     sfr_bitfield resv12 : 4; /* reserved */
    /* const */ sfr_bitfield DIVM : 12; /* Measured Divider Value */
     sfr_bitfield resv28 : 4; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SENT_CFDR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CEN : 1; /* Channel Enable */
     sfr_bitfield IEP : 1; /* Ignore End Pulse */
     sfr_bitfield ACE : 1; /* Alternative CRC Mode Enable */
     sfr_bitfield SNI : 1; /* Status Nibble Included in CRC */
     sfr_bitfield SDP : 1; /* Serial Data Processing Mode */
     sfr_bitfield SCDIS : 1; /* CRC for Serial Data Disabled Mode */
     sfr_bitfield CDIS : 1; /* CRC Disabled Mode */
     sfr_bitfield CFC : 1; /* Consecutive Frame Check */
     sfr_bitfield FRL : 8; /* Frame Length */
     sfr_bitfield CRZ : 1; /* CRC with Zero Nibble for Serial Data */
     sfr_bitfield ESF : 1; /* Enhanced Serial Frame Mode */
     sfr_bitfield IDE : 1; /* Ignore Drift Error Mode */
     sfr_bitfield SUSEN : 1; /* Suspend Enable */
     sfr_bitfield resv20 : 12; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SENT_RCR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield WDLx : 16; /* Watch Dog Timer Limit */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SENT_WDT0_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield CRC : 4; /* CRC */
    /* const */ sfr_bitfield CST : 2; /* Channel Status */
     sfr_bitfield resv6 : 2; /* reserved */
    /* const */ sfr_bitfield SCN : 4; /* Status and Communication Nibble */
     sfr_bitfield resv12 : 20; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SENT_RSR0_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield SD : 16; /* Serial Data */
    /* const */ sfr_bitfield MID : 8; /* Message ID */
    /* const */ sfr_bitfield SCRC : 6; /* SCRC */
     sfr_bitfield resv30 : 1; /* reserved */
    /* const */ sfr_bitfield CON : 1; /* Configuration bit */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SENT_SDS0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ALTI : 2; /* Alternate Input Select */
     sfr_bitfield resv2 : 2; /* reserved */
     sfr_bitfield DEPTH : 4; /* Digital Glitch Filter Depth */
     sfr_bitfield OIE : 1; /* Output Inverter Enable Channel x */
     sfr_bitfield IIE : 1; /* Input Inverter Enable Channel x */
     sfr_bitfield CEC : 1; /* Clear Edge Counter */
     sfr_bitfield resv11 : 1; /* reserved */
    /* const */ sfr_bitfield REG : 1; /* Rising Edge Glitch Flag for Channel x */
    /* const */ sfr_bitfield FEG : 1; /* Falling Edge Glitch Flag for Channel x */
     sfr_bitfield CREG : 1; /* Clear Rising Edge Glitch Flag for Channel x */
     sfr_bitfield CFEG : 1; /* Clear Falling Edge Glitch Flag for Channel x */
     sfr_bitfield ETS : 4; /* External Trigger Select */
    /* const */ sfr_bitfield EC : 8; /* Edge Counter */
     sfr_bitfield CTR : 1; /* Clear Trigger Monitor Flag for Channel x */
    /* const */ sfr_bitfield TRM : 1; /* Trigger Monitor Flag for Channel x */
    /* const */ sfr_bitfield RXM : 1; /* Receive Monitor for Channel x */
    /* const */ sfr_bitfield TXM : 1; /* Transmit Monitor for Channel x */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SENT_IOCR0_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield RD0 : 4; /* Receive Data Nibble 0 */
    /* const */ sfr_bitfield RD1 : 4; /* Receive Data Nibble 1 */
    /* const */ sfr_bitfield RD2 : 4; /* Receive Data Nibble 2 */
    /* const */ sfr_bitfield RD3 : 4; /* Receive Data Nibble 3 */
    /* const */ sfr_bitfield RD4 : 4; /* Receive Data Nibble 4 */
    /* const */ sfr_bitfield RD5 : 4; /* Receive Data Nibble 5 */
    /* const */ sfr_bitfield RD6 : 4; /* Receive Data Nibble 6 */
    /* const */ sfr_bitfield RD7 : 4; /* Receive Data Nibble 7 */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SENT_RDR0_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield LTS : 32; /* Last Receive Time Stamp for Channel x */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SENT_RTS0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield RDNP0 : 3; /* Receive Data Target Nibble Pointer 0 */
     sfr_bitfield resv3 : 1; /* reserved */
     sfr_bitfield RDNP1 : 3; /* Receive Data Target Nibble Pointer 1 */
     sfr_bitfield resv7 : 1; /* reserved */
     sfr_bitfield RDNP2 : 3; /* Receive Data Target Nibble Pointer 2 */
     sfr_bitfield resv11 : 1; /* reserved */
     sfr_bitfield RDNP3 : 3; /* Receive Data Target Nibble Pointer 3 */
     sfr_bitfield resv15 : 1; /* reserved */
     sfr_bitfield RDNP4 : 3; /* Receive Data Target Nibble Pointer 4 */
     sfr_bitfield resv19 : 1; /* reserved */
     sfr_bitfield RDNP5 : 3; /* Receive Data Target Nibble Pointer 5 */
     sfr_bitfield resv23 : 1; /* reserved */
     sfr_bitfield RDNP6 : 3; /* Receive Data Target Nibble Pointer 6 */
     sfr_bitfield resv27 : 1; /* reserved */
     sfr_bitfield RDNP7 : 3; /* Receive Data Target Nibble Pointer 7 */
     sfr_bitfield resv31 : 1; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SENT_VIEW0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PLEN : 6; /* Pulse Length */
     sfr_bitfield TRIG : 2; /* Trigger Source and Mode Selection */
     sfr_bitfield DEL : 6; /* Delay Length */
     sfr_bitfield BASE : 1; /* Time Base */
    /* const */ sfr_bitfield TRQ : 1; /* Transfer Request in Progress */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SENT_SCR0_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield IPC0 : 1; /* Interrupt Pending on Channel 0 */
    /* const */ sfr_bitfield IPC1 : 1; /* Interrupt Pending on Channel 1 */
    /* const */ sfr_bitfield IPC2 : 1; /* Interrupt Pending on Channel 2 */
    /* const */ sfr_bitfield IPC3 : 1; /* Interrupt Pending on Channel 3 */
     sfr_bitfield resv4 : 28; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SENT_INTOV_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield RSI : 1; /* Receive Success Interrupt Request Flag */
    /* const */ sfr_bitfield RDI : 1; /* Receive Data Interrupt Request Flag */
    /* const */ sfr_bitfield RBI : 1; /* Receive Buffer Overflow Interrupt Request Flag */
    /* const */ sfr_bitfield TDI : 1; /* Transfer Data Interrupt Request Flag */
    /* const */ sfr_bitfield TBI : 1; /* Transmit Buffer Underflow Interrupt Request Flag */
    /* const */ sfr_bitfield FRI : 1; /* Frequency Range Interrupt Request Flag */
    /* const */ sfr_bitfield FDI : 1; /* Frequency Drift Interrupt Request Flag */
    /* const */ sfr_bitfield NNI : 1; /* Number of Nibbles Wrong Request Flag */
    /* const */ sfr_bitfield NVI : 1; /* Nibbles Value out of Range Request Flag */
    /* const */ sfr_bitfield CRCI : 1; /* CRC Error Request Flag */
    /* const */ sfr_bitfield WSI : 1; /* Wrong Status and Communication Nibble Error Request Flag */
    /* const */ sfr_bitfield SDI : 1; /* Serial Data Receive Interrupt Request Flag */
    /* const */ sfr_bitfield SCRI : 1; /* Serial Data CRC Error Request Flag */
    /* const */ sfr_bitfield WDI : 1; /* Watch Dog Error Request Flag */
     sfr_bitfield resv14 : 18; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SENT_INTSTAT0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield RSI : 1; /* Set Interrupt Request Flag RSI */
     sfr_bitfield RDI : 1; /* Set Interrupt Request Flag RDI */
     sfr_bitfield RBI : 1; /* Set Interrupt Request Flag RBI */
     sfr_bitfield TDI : 1; /* Set Interrupt Request Flag TDI */
     sfr_bitfield TBI : 1; /* Set Interrupt Request Flag TBI */
     sfr_bitfield FRI : 1; /* Set Interrupt Request Flag FRI */
     sfr_bitfield FDI : 1; /* Set Interrupt Request Flag FDI */
     sfr_bitfield NNI : 1; /* Set Interrupt Request Flag NNI */
     sfr_bitfield NVI : 1; /* Set Interrupt Request Flag NVI */
     sfr_bitfield CRCI : 1; /* Set Interrupt Request Flag CRCI */
     sfr_bitfield WSI : 1; /* Set Interrupt Request Flag WSI */
     sfr_bitfield SDI : 1; /* Set Interrupt Request Flag SDI */
     sfr_bitfield SCRI : 1; /* Set Interrupt Request Flag SCRI */
     sfr_bitfield WDI : 1; /* Set Interrupt Request Flag WDI */
     sfr_bitfield resv14 : 18; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SENT_INTSET0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield RSI : 1; /* Clear Interrupt Request Flag RSI */
     sfr_bitfield RDI : 1; /* Clear Interrupt Request Flag RDI */
     sfr_bitfield RBI : 1; /* Clear Interrupt Request Flag RBI */
     sfr_bitfield TDI : 1; /* Clear Interrupt Request Flag TDI */
     sfr_bitfield TBI : 1; /* Clear Interrupt Request Flag TBI */
     sfr_bitfield FRI : 1; /* Clear Interrupt Request Flag FRI */
     sfr_bitfield FDI : 1; /* Clear Interrupt Request Flag FDI */
     sfr_bitfield NNI : 1; /* Clear Interrupt Request Flag NNI */
     sfr_bitfield NVI : 1; /* Clear Interrupt Request Flag NVI */
     sfr_bitfield CRCI : 1; /* Clear Interrupt Request Flag CRCI */
     sfr_bitfield WSI : 1; /* Clear Interrupt Request Flag WSI */
     sfr_bitfield SDI : 1; /* Clear Interrupt Request Flag SDI */
     sfr_bitfield SCRI : 1; /* Clear Interrupt Request Flag SCRI */
     sfr_bitfield WDI : 1; /* Clear Interrupt Request Flag WDI */
     sfr_bitfield resv14 : 18; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SENT_INTCLR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield RSI : 1; /* Enable Interrupt Request RSI */
     sfr_bitfield RDI : 1; /* Enable Interrupt Request RDI */
     sfr_bitfield RBI : 1; /* Enable Interrupt Request RBI */
     sfr_bitfield TDI : 1; /* Enable Interrupt Request TDI */
     sfr_bitfield TBI : 1; /* Enable Interrupt Request TBI */
     sfr_bitfield FRI : 1; /* Enable Interrupt Request FRI */
     sfr_bitfield FDI : 1; /* Enable Interrupt Request FDI */
     sfr_bitfield NNI : 1; /* Enable Interrupt Request NNI */
     sfr_bitfield NVI : 1; /* Enable Interrupt Request NVI */
     sfr_bitfield CRCI : 1; /* Enable Interrupt Request CRCI */
     sfr_bitfield WSI : 1; /* Enable Interrupt Request WSI */
     sfr_bitfield SDI : 1; /* Enable Interrupt Request SDI */
     sfr_bitfield SCRI : 1; /* Enable Interrupt Request SCRI */
     sfr_bitfield WDI : 1; /* Enable Interrupt Request WDI */
     sfr_bitfield resv14 : 18; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SENT_INTEN0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield RSI : 4; /* Interrupt Node Pointer for Interrupt RSI */
     sfr_bitfield RDI : 4; /* Interrupt Node Pointer for Interrupt RDI */
     sfr_bitfield RBI : 4; /* Interrupt Node Pointer for Interrupt RBI */
     sfr_bitfield TDI : 4; /* Interrupt Node Pointer for Interrupt TDI */
     sfr_bitfield TBI : 4; /* Interrupt Node Pointer for Interrupt TBI */
     sfr_bitfield ERRI : 4; /* Interrupt Node Pointer for Interrupt FRI, FDI, NNI, NVI, CRCI, WSI, SCRI */
     sfr_bitfield SDI : 4; /* Interrupt Node Pointer for Interrupt SDI */
     sfr_bitfield WDI : 4; /* Interrupt Node Pointer for Interrupt WDI */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} SENT_INP0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield INT0 : 1; /* CIF Timeout Service Request Status */
     sfr_bitfield OEN : 1; /* Enable auto delay scheme for Output Buffer Control Register (OBCR) */
     sfr_bitfield IEN : 1; /* Enable auto delay scheme for Input Buffer Control Register (IBCR) */
    /* const */ sfr_bitfield IBFS : 1; /* Input Buffer Status Register */
     sfr_bitfield IBF1PAG : 1; /* Input Buffer 1 Page Select Register */
     sfr_bitfield resv5 : 2; /* reserved */
     sfr_bitfield IBF2PAG : 1; /* Input Buffer 2 Page Select Register */
     sfr_bitfield resv8 : 2; /* reserved */
     sfr_bitfield RISA : 2; /* Receive Input Select Channel A */
     sfr_bitfield RISB : 2; /* Receive Input Select Channel B */
     sfr_bitfield STPWTS : 2; /* Stop Watch Trigger Input Select */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_CUST1_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield TO : 32; /* CIF Timeout Reload Value */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_CUST3_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield WRTEN : 1; /* Write Test Register Enable */
     sfr_bitfield ELBE : 1; /* External Loop Back Enable */
     sfr_bitfield resv2 : 2; /* reserved */
     sfr_bitfield TMC : 2; /* Test Multiplexer Control */
     sfr_bitfield resv6 : 2; /* reserved */
    /* const */ sfr_bitfield AOA : 1; /* Activity on A */
    /* const */ sfr_bitfield AOB : 1; /* Activity on B */
     sfr_bitfield resv10 : 6; /* reserved */
    /* const */ sfr_bitfield RXA : 1; /* Read Channel A Receive Pin */
    /* const */ sfr_bitfield RXB : 1; /* Read Channel B Receive Pin */
     sfr_bitfield TXA : 1; /* Read or Write to Channel A Transmit Pin */
     sfr_bitfield TXB : 1; /* Read or Write to Channel B Transmit Pin */
     sfr_bitfield TXENA : 1; /* Read or Write to Channel A Transmit Enable Pin */
     sfr_bitfield TXENB : 1; /* Read or Write to Channel B Transmit Enable Pin */
     sfr_bitfield resv22 : 2; /* reserved */
    /* const */ sfr_bitfield CERA : 4; /* Coding Error Report Channel A */
    /* const */ sfr_bitfield CERB : 4; /* Coding Error Report Channel B */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_TEST1_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield RS : 3; /* RAM Select */
     sfr_bitfield resv3 : 1; /* reserved */
     sfr_bitfield SSEL : 3; /* Segment Select */
     sfr_bitfield resv7 : 7; /* reserved */
     sfr_bitfield WRECC : 1; /* Write ECC Data Enable */
     sfr_bitfield resv15 : 17; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_TEST2_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CLK : 8; /* Configuration Lock Key */
     sfr_bitfield TMK : 8; /* Test Mode Key */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_LCK_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PEMC : 1; /* POC Error Mode Changed */
     sfr_bitfield CNA : 1; /* Command Not Accepted */
     sfr_bitfield SFBM : 1; /* SYNC Frames Below Minimum */
     sfr_bitfield SFO : 1; /* SYNC Frame Overflow */
     sfr_bitfield CCF : 1; /* Clock Correction Failure */
     sfr_bitfield CCL : 1; /* CHI Command Locked */
    /* const */ sfr_bitfield EERR : 1; /* ECC Error */
    /* const */ sfr_bitfield RFO : 1; /* Receive FIFO Overrun */
     sfr_bitfield EFA : 1; /* Empty FIFO Access */
     sfr_bitfield IIBA : 1; /* Illegal Input Buffer Access */
     sfr_bitfield IOBA : 1; /* Illegal Output Buffer Access */
     sfr_bitfield MHF : 1; /* Message Handler Constraints Flag */
     sfr_bitfield resv12 : 4; /* reserved */
     sfr_bitfield EDA : 1; /* Error Detected on Channel A */
     sfr_bitfield LTVA : 1; /* Latest Transmit Violation Channel A */
     sfr_bitfield TABA : 1; /* Transmission Across Boundary Channel A */
     sfr_bitfield resv19 : 5; /* reserved */
     sfr_bitfield EDB : 1; /* Error Detected on Channel B */
     sfr_bitfield LTVB : 1; /* Latest Transmit Violation Channel B */
     sfr_bitfield TABB : 1; /* Transmission Across Boundary Channel B */
     sfr_bitfield resv27 : 5; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_EIR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield WST : 1; /* Wakeup Status */
     sfr_bitfield CAS : 1; /* Collision Avoidance Symbol */
     sfr_bitfield CYCS : 1; /* Cycle Start Service Request */
     sfr_bitfield TXI : 1; /* Transmit Service Request */
     sfr_bitfield RXI : 1; /* Receive Service Request */
    /* const */ sfr_bitfield RFNE : 1; /* Receive FIFO Not Empty */
    /* const */ sfr_bitfield RFCL : 1; /* Receive FIFO Critical Level */
     sfr_bitfield NMVC : 1; /* Network Management Vector Changed */
     sfr_bitfield TI0 : 1; /* Timer Service Request 0 */
     sfr_bitfield TI1 : 1; /* Timer Service Request 1 */
     sfr_bitfield TIBC : 1; /* Transfer Input Buffer Completed */
     sfr_bitfield TOBC : 1; /* Transfer Output Buffer Completed */
     sfr_bitfield SWE : 1; /* Stop Watch Event */
     sfr_bitfield SUCS : 1; /* Startup Completed Successfully */
     sfr_bitfield MBSI : 1; /* Message Buffer Status Service Request */
     sfr_bitfield SDS : 1; /* Start of Dynamic Segment */
     sfr_bitfield WUPA : 1; /* Wakeup Pattern Channel A */
     sfr_bitfield MTSA : 1; /* MTS Received on Channel A (vSS!ValidMTSA) */
     sfr_bitfield resv18 : 6; /* reserved */
     sfr_bitfield WUPB : 1; /* Wakeup Pattern Channel B */
     sfr_bitfield MTSB : 1; /* MTS Received on Channel B (vSS!ValidMTSB) */
     sfr_bitfield resv26 : 6; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_SIR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PEMCL : 1; /* POC Error Mode Changed Service Request Line */
     sfr_bitfield CNAL : 1; /* Command Not Accepted Service Request Line */
     sfr_bitfield SFBML : 1; /* SYNC Frames Below Minimum Service Request Line */
     sfr_bitfield SFOL : 1; /* SYNC Frame Overflow Service Request Line */
     sfr_bitfield CCFL : 1; /* Clock Correction Failure Service Request Line */
     sfr_bitfield CCLL : 1; /* CHI Command Locked Service Request Line */
     sfr_bitfield EERRL : 1; /* ECC Error Service Request Line */
     sfr_bitfield RFOL : 1; /* Receive FIFO Overrun Service Request Line */
     sfr_bitfield EFAL : 1; /* Empty FIFO Access Service Request Line */
     sfr_bitfield IIBAL : 1; /* Illegal Input Buffer Access Service Request Line */
     sfr_bitfield IOBAL : 1; /* Illegal Output Buffer Access Service Request Line */
     sfr_bitfield MHFL : 1; /* Message Handler Constrains Flag Service Request Line */
     sfr_bitfield resv12 : 4; /* reserved */
     sfr_bitfield EDAL : 1; /* Error Detected on Channel A Service Request Line */
     sfr_bitfield LTVAL : 1; /* Latest Transmit Violation Channel A Service Request Line */
     sfr_bitfield TABAL : 1; /* Transmission Across Boundary Channel A Service Request Line */
     sfr_bitfield resv19 : 5; /* reserved */
     sfr_bitfield EDBL : 1; /* Error Detected on Channel B Service Request Line */
     sfr_bitfield LTVBL : 1; /* Latest Transmit Violation Channel B Service Request Line */
     sfr_bitfield TABBL : 1; /* Transmission Across Boundary Channel A Service Request Line */
     sfr_bitfield resv27 : 5; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_EILS_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield WSTL : 1; /* Wakeup Status Service Request Line */
     sfr_bitfield CASL : 1; /* Collision Avoidance Symbol Service Request Line */
     sfr_bitfield CYCSL : 1; /* Cycle Start Service Request Line */
     sfr_bitfield TXIL : 1; /* Transmit Service Request Line */
     sfr_bitfield RXIL : 1; /* Receive Service Request Line */
     sfr_bitfield RFNEL : 1; /* Receive FIFO Not Empty Service Request Line */
     sfr_bitfield RFCLL : 1; /* Receive FIFO Critical Level Service Request Line */
     sfr_bitfield NMVCL : 1; /* Network Management Vector Changed Service Request Line */
     sfr_bitfield TI0L : 1; /* Timer Service Request 0 Line */
     sfr_bitfield TI1L : 1; /* Timer Service Request 1 Line */
     sfr_bitfield TIBCL : 1; /* Transfer Input Buffer Completed Service Request Line */
     sfr_bitfield TOBCL : 1; /* Transfer Output Buffer Completed Service Request Line */
     sfr_bitfield SWEL : 1; /* Stop Watch Event Service Request Line */
     sfr_bitfield SUCSL : 1; /* Startup Completed Successfully Service Request Line */
     sfr_bitfield MBSIL : 1; /* Message Buffer Status Service Request Line */
     sfr_bitfield SDSL : 1; /* Start of Dynamic Segment Service Request Line */
     sfr_bitfield WUPAL : 1; /* Wakeup Pattern Channel A Service Request Line */
     sfr_bitfield MTSAL : 1; /* Media Access Test Symbol Channel A Service Request Line */
     sfr_bitfield resv18 : 6; /* reserved */
     sfr_bitfield WUPBL : 1; /* Wakeup Pattern Channel B Service Request Line */
     sfr_bitfield MTSBL : 1; /* Media Access Test Symbol Channel B Service Request Line */
     sfr_bitfield resv26 : 6; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_SILS_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PEMCE : 1; /* POC Error Mode Changed Service Request Enable */
     sfr_bitfield CNAE : 1; /* Command Not Accepted Service Request Enable */
     sfr_bitfield SFBME : 1; /* SYNC Frames Below Minimum Service Request Enable */
     sfr_bitfield SFOE : 1; /* SYNC Frame Overflow Service Request Enable */
     sfr_bitfield CCFE : 1; /* Clock Correction Failure Service Request Enable */
     sfr_bitfield CCLE : 1; /* CHI Command Locked Service Request Enable */
     sfr_bitfield EERRE : 1; /* ECC Error Service Request Enable */
     sfr_bitfield RFOE : 1; /* Receive FIFO Overrun Service Request Enable */
     sfr_bitfield EFAE : 1; /* Empty FIFO Access Service Request Enable */
     sfr_bitfield IIBAE : 1; /* Illegal Input Buffer Access Service Request Enable */
     sfr_bitfield IOBAE : 1; /* Illegal Output Buffer Access Service Request Enable */
     sfr_bitfield MHFE : 1; /* Message Handler Constraints Flag Service Request Enable */
     sfr_bitfield resv12 : 4; /* reserved */
     sfr_bitfield EDAE : 1; /* Error Detected on Channel A Service Request Enable */
     sfr_bitfield LTVAE : 1; /* Latest Transmit Violation Channel A Service Request Enable */
     sfr_bitfield TABAE : 1; /* Transmission Across Boundary Channel A Service Request Enable */
     sfr_bitfield resv19 : 5; /* reserved */
     sfr_bitfield EDBE : 1; /* Error Detected on Channel B Service Request Enable */
     sfr_bitfield LTVBE : 1; /* Latest Transmit Violation Channel B Service Request Enable */
     sfr_bitfield TABBE : 1; /* Transmission Across Boundary Channel B Service Request Enable */
     sfr_bitfield resv27 : 5; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_EIES_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield WSTE : 1; /* Wakeup Status Service Request Enable */
     sfr_bitfield CASE : 1; /* Collision Avoidance Symbol Service Request Enable */
     sfr_bitfield CYCSE : 1; /* Cycle Start Service Request Enable */
     sfr_bitfield TXIE : 1; /* Transmit Service Request Enable */
     sfr_bitfield RXIE : 1; /* Receive Service Request Enable */
     sfr_bitfield RFNEE : 1; /* Receive FIFO Not Empty Service Request Enable */
     sfr_bitfield RFCLE : 1; /* Receive FIFO Critical Level Service Request Enable */
     sfr_bitfield NMVCE : 1; /* Network Management Vector Changed Service Request Enable */
     sfr_bitfield TI0E : 1; /* Timer Service Request 0 Enable */
     sfr_bitfield TI1E : 1; /* Timer Service Request 1 Enable */
     sfr_bitfield TIBCE : 1; /* Transfer Input Buffer Completed Service Request Enable */
     sfr_bitfield TOBCE : 1; /* Transfer Output Buffer Completed Service Request Enable */
     sfr_bitfield SWEE : 1; /* Stop Watch Event Service Request Enable */
     sfr_bitfield SUCSE : 1; /* Startup Completed Successfully Service Request Enable */
     sfr_bitfield MBSIE : 1; /* Message Buffer Status Service Request Enable */
     sfr_bitfield SDSE : 1; /* Start of Dynamic Segment Service Request Enable */
     sfr_bitfield WUPAE : 1; /* Wakeup Pattern Channel A Service Request Enable */
     sfr_bitfield MTSAE : 1; /* Media Access Test Symbol Channel A Service Request Enable */
     sfr_bitfield resv18 : 6; /* reserved */
     sfr_bitfield WUPBE : 1; /* Wakeup Pattern Channel B Service Request Enable */
     sfr_bitfield MTSBE : 1; /* Media Access Test Symbol Channel B Service Request Enable */
     sfr_bitfield resv26 : 6; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_SIES_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield EINT0 : 1; /* Enable Service Request Line 0 (INT0SRC) */
     sfr_bitfield EINT1 : 1; /* Enable Service Request Line 1 (INT1SRC) */
     sfr_bitfield resv2 : 30; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_ILE_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield T0RC : 1; /* Timer 0 Run Control */
     sfr_bitfield T0MS : 1; /* Timer 0 Mode Select */
     sfr_bitfield resv2 : 6; /* reserved */
     sfr_bitfield T0CC : 7; /* Timer 0 Cycle Code */
     sfr_bitfield resv15 : 1; /* reserved */
     sfr_bitfield T0MO : 14; /* Timer 0 Macrotick Offset */
     sfr_bitfield resv30 : 2; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_T0C_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield T1RC : 1; /* Timer 1 Run Control */
     sfr_bitfield T1MS : 1; /* Timer 1 Mode Select */
     sfr_bitfield resv2 : 14; /* reserved */
     sfr_bitfield T1MC : 14; /* Timer 1 Macrotick Count */
     sfr_bitfield resv30 : 2; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_T1C_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ESWT : 1; /* Enable Stop Watch Trigger */
     sfr_bitfield SWMS : 1; /* Stop Watch Mode Select */
     sfr_bitfield EDGE : 1; /* Stop Watch Trigger Edge Select */
     sfr_bitfield SSWT : 1; /* Software Stop Watch Trigger */
     sfr_bitfield EETP : 1; /* Enable External Trigger Pin */
     sfr_bitfield EINT0 : 1; /* Enable Service Request 0 Trigger */
     sfr_bitfield EINT1 : 1; /* Enable Service Request 1 Trigger */
     sfr_bitfield resv7 : 1; /* reserved */
    /* const */ sfr_bitfield SCCV : 6; /* Stopped Cycle Counter Value */
     sfr_bitfield resv14 : 2; /* reserved */
    /* const */ sfr_bitfield SMTV : 14; /* Stopped Macrotick Value */
     sfr_bitfield resv30 : 2; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_STPW1_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield SSCVA : 11; /* Stop Watch Captured Slot Counter Value Channel A */
     sfr_bitfield resv11 : 5; /* reserved */
    /* const */ sfr_bitfield SSCVB : 11; /* Stop Watch Captured Slot Counter Value Channel B */
     sfr_bitfield resv27 : 5; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_STPW2_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CMD : 4; /* CHI Command Vector */
     sfr_bitfield resv4 : 3; /* reserved */
    /* const */ sfr_bitfield PBSY : 1; /* POC Busy */
     sfr_bitfield TXST : 1; /* Transmit Startup Frame in Key Slot (pKeySlotUsedForStartup) */
     sfr_bitfield TXSY : 1; /* Transmit SYNC Frame in Key Slot(pKeySlotUsedForSync) */
     sfr_bitfield resv10 : 1; /* reserved */
     sfr_bitfield CSA : 5; /* Cold Start Attempts(gColdStartAttempts) */
     sfr_bitfield PTA : 5; /* Passive to Active (pAllowPassiveToActive) */
     sfr_bitfield WUCS : 1; /* Wakeup Channel Select (pWakeupChannel) */
     sfr_bitfield TSM : 1; /* Transmission Slot Mode (pSingleSlotEnabled) */
     sfr_bitfield HCSE : 1; /* Halt due to Clock Sync Error (pAllowHaltDueToClock) */
     sfr_bitfield MTSA : 1; /* Select Channel A for MTS Transmission */
     sfr_bitfield MTSB : 1; /* Select Channel B for MTS Transmission */
     sfr_bitfield CCHA : 1; /* Connected to Channel A (pChannels) */
     sfr_bitfield CCHB : 1; /* Connected to Channel B (pChannels) */
     sfr_bitfield resv28 : 4; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_SUCC1_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield LT : 21; /* Listen Timeout (pdListenTimeout) */
     sfr_bitfield resv21 : 3; /* reserved */
     sfr_bitfield LTN : 4; /* Listen Time-out Noise (gListenNoise - 1) */
     sfr_bitfield resv28 : 4; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_SUCC2_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield WCP : 4; /* Maximum Without Clock Correction Passive (gMaxWithoutClockCorrectionPassive) */
     sfr_bitfield WCF : 4; /* Maximum Without Clock Correction Fatal (gMaxWithoutClockCorrecti on Fatal) */
     sfr_bitfield resv8 : 24; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_SUCC3_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield NML : 4; /* Network Management Vector Length (gNetworkManagementVectorLength) */
     sfr_bitfield resv4 : 28; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_NEMC_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield TSST : 4; /* Transmission Start Sequence Transmitter (gdTSSTransmitter) */
     sfr_bitfield CASM : 7; /* Collision Avoidance Symbol Maximum(gdCASRxLowMax) */
     sfr_bitfield resv11 : 1; /* reserved */
     sfr_bitfield SPP : 2; /* Strobe Point Position */
     sfr_bitfield BRP : 2; /* Baud Rate Prescaler(gdSampleClockPeriod, pSamplePerMicrotick) */
     sfr_bitfield RXW : 9; /* Wakeup Symbol Receive Window Length (gdWakeupSymbolRxWindow) */
     sfr_bitfield resv25 : 1; /* reserved */
     sfr_bitfield RWP : 6; /* Repetitions of Tx Wakeup Pattern (pWakeupPattern) */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_PRTC1_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield RXI : 6; /* Wakeup Symbol Receive Idle (gdWakeupSymbolRxIdle) */
     sfr_bitfield resv6 : 2; /* reserved */
     sfr_bitfield RXL : 6; /* Wakeup Symbol Receive Low(gdWakeupSymbolRxLow) */
     sfr_bitfield resv14 : 2; /* reserved */
     sfr_bitfield TXI : 8; /* Wakeup Symbol Transmit Idle (gdWakeupSymbolTxIdle) */
     sfr_bitfield TXL : 6; /* Wakeup Symbol Transmit Low (gdWakeupSymbolTxLow) */
     sfr_bitfield resv30 : 2; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_PRTC2_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield SFDL : 7; /* Static Frame Data Length (gPayloadLengthStatic) */
     sfr_bitfield resv7 : 9; /* reserved */
     sfr_bitfield SLT : 13; /* Start of Latest Transmit (pLatestTx) */
     sfr_bitfield resv29 : 3; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_MHDC_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield UT : 20; /* Microtick per Cycle (pMicroPerCycle) */
     sfr_bitfield resv20 : 12; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_GTUC01_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield MPC : 14; /* Macrotick Per Cycle (gMacroPerCycle) */
     sfr_bitfield resv14 : 2; /* reserved */
     sfr_bitfield SNM : 4; /* Sync Node Max (gSyncNodeMax) */
     sfr_bitfield resv20 : 12; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_GTUC02_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield UIOA : 8; /* Microtick Initial Offset Channel A (pMicroInitialOffset[A]) */
     sfr_bitfield UIOB : 8; /* Microtick Initial Offset Channel B (pMicroInitialOffset[B]) */
     sfr_bitfield MIOA : 7; /* Macrotick Initial Offset Channel A (gMacroInitialOffset[A]) */
     sfr_bitfield resv23 : 1; /* reserved */
     sfr_bitfield MIOB : 7; /* Macrotick Initial Offset Channel B (gMacroInitialOffset[B]) */
     sfr_bitfield resv31 : 1; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_GTUC03_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield NIT : 14; /* Network Idle Time Start (gMacroPerCycle - gdNIT - 1) */
     sfr_bitfield resv14 : 2; /* reserved */
     sfr_bitfield OCS : 14; /* Offset Correction Start (gOffsetCorrectionStart - 1) */
     sfr_bitfield resv30 : 2; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_GTUC04_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield DCA : 8; /* Delay Compensation Channel A (pDelayCompensation[A]) */
     sfr_bitfield DCB : 8; /* Delay Compensation Channel B (pDelayCompensation[B]) */
     sfr_bitfield CDD : 5; /* Cluster Drift Damping (pClusterDriftDamping) */
     sfr_bitfield resv21 : 3; /* reserved */
     sfr_bitfield DEC : 8; /* Decoding Correction (pDecodingCorrection) */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_GTUC05_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ASR : 11; /* Accepted Startup Range (pdAcceptedStartupRange) */
     sfr_bitfield resv11 : 5; /* reserved */
     sfr_bitfield MOD : 11; /* Maximum Oscillator Drift (pdMaxDrift) */
     sfr_bitfield resv27 : 5; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_GTUC06_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield SSL : 10; /* Static Slot Length (gdStaticSlot) */
     sfr_bitfield resv10 : 6; /* reserved */
     sfr_bitfield NSS : 10; /* Number of Static Slots (gNumberOfStaticSlots) */
     sfr_bitfield resv26 : 6; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_GTUC07_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield MSL : 6; /* Minislot Length (gdMinislot) */
     sfr_bitfield resv6 : 10; /* reserved */
     sfr_bitfield NMS : 13; /* Number of Minislots (gNumberOfMinislots) */
     sfr_bitfield resv29 : 3; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_GTUC08_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield APO : 6; /* Action Point Offset (gdActionPointOffset) */
     sfr_bitfield resv6 : 2; /* reserved */
     sfr_bitfield MAPO : 5; /* Minislot Action Point Offset (gd Minislot Action Point Offset) */
     sfr_bitfield resv13 : 3; /* reserved */
     sfr_bitfield DSI : 2; /* Dynamic Slot Idle Phase (gdDynamicSlotIdlePhase) */
     sfr_bitfield resv18 : 14; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_GTUC09_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield MOC : 14; /* Maximum Offset Correction (pOffsetCorrectionOut) */
     sfr_bitfield resv14 : 2; /* reserved */
     sfr_bitfield MRC : 11; /* Maximum Rate Correction (pRateCorrectionOut) */
     sfr_bitfield resv27 : 5; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_GTUC10_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield EOCC : 2; /* External Offset Correction Control (pExternOffsetControl) */
     sfr_bitfield resv2 : 6; /* reserved */
     sfr_bitfield ERCC : 2; /* External Rate Correction Control (pExternRateControl) */
     sfr_bitfield resv10 : 6; /* reserved */
     sfr_bitfield EOC : 3; /* External Offset Correction (pExternOffsetCorrection) */
     sfr_bitfield resv19 : 5; /* reserved */
     sfr_bitfield ERC : 3; /* External Rate Correction (pExternRateCorrection) */
     sfr_bitfield resv27 : 5; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_GTUC11_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield POCS : 6; /* Protocol Operation Control Status */
    /* const */ sfr_bitfield FSI : 1; /* Freeze Status Indicator (vPOC!Freeze) */
    /* const */ sfr_bitfield HRQ : 1; /* Halt Request (vPOC!CHIHaltRequest) */
    /* const */ sfr_bitfield SLM : 2; /* Slot Mode (vPOC!SlotMode) */
     sfr_bitfield resv10 : 2; /* reserved */
    /* const */ sfr_bitfield CSNI : 1; /* Coldstart Noise Indicator (vPOC!ColdstartNoise) */
    /* const */ sfr_bitfield CSAI : 1; /* Coldstart Abort Indicator */
    /* const */ sfr_bitfield CSI : 1; /* Cold Start Inhibit (vColdStartInhibit) */
     sfr_bitfield resv15 : 1; /* reserved */
    /* const */ sfr_bitfield WSV : 3; /* Wakeup Status (vPOC!WakeupStatus) */
    /* const */ sfr_bitfield RCA : 5; /* Remaining Coldstart Attempts (vRemainingColdstartAttempts) */
    /* const */ sfr_bitfield PSL : 6; /* POC Status Log */
     sfr_bitfield resv30 : 2; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_CCSV_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield CCFC : 4; /* Clock Correction Failed Counter (vClockCorrectionFailed) */
     sfr_bitfield resv4 : 2; /* reserved */
    /* const */ sfr_bitfield ERRM : 2; /* Error Mode (vPOC!ErrorMode) */
    /* const */ sfr_bitfield PTAC : 5; /* Passive to Active Count (vAllowPassiveToActive) */
     sfr_bitfield resv13 : 19; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_CCEV_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield SCCA : 11; /* Slot Counter Channel A (vSlotCounter[A]) */
     sfr_bitfield resv11 : 5; /* reserved */
    /* const */ sfr_bitfield SCCB : 11; /* Slot Counter Channel B (vSlotCounter[B]) */
     sfr_bitfield resv27 : 5; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_SCV_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield MTV : 14; /* Macrotick Value (vMacrotick) */
     sfr_bitfield resv14 : 2; /* reserved */
    /* const */ sfr_bitfield CCV : 6; /* Cycle Counter Value (vCycleCounter) */
     sfr_bitfield resv22 : 10; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_MTCCV_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield RCV : 12; /* Rate Correction Value (vRateCorrection) */
     sfr_bitfield resv12 : 20; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_RCV_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield OCV : 19; /* Offset Correction Value (vOffsetCorrection) */
     sfr_bitfield resv19 : 13; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_OCV_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield VSAE : 4; /* Valid SYNC Frames Channel A, even communication cycle */
    /* const */ sfr_bitfield VSAO : 4; /* Valid SYNC Frames Channel A, odd communication cycle */
    /* const */ sfr_bitfield VSBE : 4; /* Valid SYNC Frames Channel B, even communication cycle */
    /* const */ sfr_bitfield VSBO : 4; /* Valid SYNC Frames Channel B, odd communication cycle */
    /* const */ sfr_bitfield MOCS : 1; /* Missing Offset Correction Signal */
    /* const */ sfr_bitfield OCLR : 1; /* Offset Correction Limit Reached */
    /* const */ sfr_bitfield MRCS : 1; /* Missing Rate Correction Signal */
    /* const */ sfr_bitfield RCLR : 1; /* Rate Correction Limit Reached */
     sfr_bitfield resv20 : 12; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_SFS_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield SESA : 1; /* Syntax Error in Symbol Window Channel A (vSS!SyntaxErrorA) */
    /* const */ sfr_bitfield SBSA : 1; /* Slot Boundary Violation in Symbol Window Channel A (vSS!BViolationA) */
    /* const */ sfr_bitfield TCSA : 1; /* Transmission Conflict in Symbol Window Channel A (vSS!TxConflictA) */
    /* const */ sfr_bitfield SESB : 1; /* Syntax Error in Symbol Window Channel B (vSS!SyntaxErrorB) */
    /* const */ sfr_bitfield SBSB : 1; /* Slot Boundary Violation in Symbol Window Channel B (vSS!BViolationB) */
    /* const */ sfr_bitfield TCSB : 1; /* Transmission Conflict in Symbol Window Channel B (vSS!TxConflictB) */
    /* const */ sfr_bitfield MTSA : 1; /* MTS Received on Channel A (vSS!ValidMTSA) */
    /* const */ sfr_bitfield MTSB : 1; /* MTS Received on Channel B (vSS!ValidMTSB) */
    /* const */ sfr_bitfield SENA : 1; /* Syntax Error during network idle time (NIT) Channel A (vSS!SyntaxErrorA) */
    /* const */ sfr_bitfield SBNA : 1; /* Slot Boundary Violation during network idle time (NIT) Channel A (vSS!BViolationA) */
    /* const */ sfr_bitfield SENB : 1; /* Syntax Error during network idle time (NIT) Channel B (vSS!SyntaxErrorB) */
    /* const */ sfr_bitfield SBNB : 1; /* Slot Boundary Violation during network idle time (NIT) Channel B (vSS!BViolationB) */
     sfr_bitfield resv12 : 20; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_SWNIT_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield VFRA : 1; /* Valid Frame Received on Channel A (vSS!ValidFrameA) */
     sfr_bitfield SEDA : 1; /* Syntax Error Detected on Channel A (vSS!SyntaxErrorA) */
     sfr_bitfield CEDA : 1; /* Content Error Detected on Channel A (vSS!ContentErrorA) */
     sfr_bitfield CIA : 1; /* Communication Indicator Channel A */
     sfr_bitfield SBVA : 1; /* Slot Boundary Violation on Channel A (vSS!BViolationA) */
     sfr_bitfield resv5 : 3; /* reserved */
     sfr_bitfield VFRB : 1; /* Valid Frame Received on Channel B (vSS!ValidFrameB) */
     sfr_bitfield SEDB : 1; /* Syntax Error Detected on Channel B (vSS!SyntaxErrorB) */
     sfr_bitfield CEDB : 1; /* Content Error Detected on Channel B (vSS!ContentErrorB) */
     sfr_bitfield CIB : 1; /* Communication Indicator Channel B */
     sfr_bitfield SBVB : 1; /* Slot Boundary Violation on Channel B (vSS!BViolationB) */
     sfr_bitfield resv13 : 19; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_ACS_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield EID : 10; /* Even Sync ID (vsSyncIDListA,B even) */
     sfr_bitfield resv10 : 4; /* reserved */
    /* const */ sfr_bitfield RXEA : 1; /* Received/Configured Even Sync ID on Channel A */
    /* const */ sfr_bitfield RXEB : 1; /* Received/Configured Even Sync ID on Channel B */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_ESID01_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield OID : 10; /* Odd Sync ID (vsSyncIDListA,B odd) */
     sfr_bitfield resv10 : 4; /* reserved */
    /* const */ sfr_bitfield RXOA : 1; /* Received Odd Sync ID on Channel A */
    /* const */ sfr_bitfield RXOB : 1; /* Received Odd Sync ID on Channel B */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_OSID01_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield NM : 32; /* Network Management Vector */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_NMV1_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield FDB : 8; /* First Dynamic Buffer */
     sfr_bitfield FFB : 8; /* First Buffer of FIFO */
     sfr_bitfield LCB : 8; /* Last Configured Buffer */
     sfr_bitfield SEC : 2; /* Secure Buffers */
     sfr_bitfield SPLM : 1; /* SYNC Frame Payload Multiplex */
     sfr_bitfield resv27 : 5; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_MRC_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CH : 2; /* Channel Filter */
     sfr_bitfield FID : 11; /* Frame ID Filter */
     sfr_bitfield resv13 : 3; /* reserved */
     sfr_bitfield CYF : 7; /* Cycle Counter Filter */
     sfr_bitfield RSS : 1; /* Reject in Static Segment */
     sfr_bitfield RNF : 1; /* Reject NULL Frames */
     sfr_bitfield resv25 : 7; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_FRF_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 2; /* reserved */
     sfr_bitfield MFID : 11; /* Mask Frame ID Filter */
     sfr_bitfield resv13 : 19; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_FRFM_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CL : 8; /* Critical Level */
     sfr_bitfield resv8 : 24; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_FCL_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield EIBF : 1; /* ECC Error Input Buffer RAM 1,2 */
     sfr_bitfield EOBF : 1; /* ECC Error Output Buffer RAM 1,2 */
     sfr_bitfield EMR : 1; /* ECC Error Message RAM */
     sfr_bitfield ETBF1 : 1; /* ECC Error Transient Buffer RAM A */
     sfr_bitfield ETBF2 : 1; /* ECC Error Transient Buffer RAM B */
     sfr_bitfield FMBD : 1; /* Faulty Message Buffer Detected */
     sfr_bitfield MFMB : 1; /* Multiple Faulty Message Buffers detected */
    /* const */ sfr_bitfield CRAM : 1; /* Clear all internal RAM’s */
    /* const */ sfr_bitfield FMB : 7; /* Faulty Message Buffer */
     sfr_bitfield resv15 : 1; /* reserved */
    /* const */ sfr_bitfield MBT : 7; /* Message Buffer Transmitted */
     sfr_bitfield resv23 : 1; /* reserved */
    /* const */ sfr_bitfield MBU : 7; /* Message Buffer Updated */
     sfr_bitfield resv31 : 1; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_MHDS_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield LDTA : 11; /* Last Dynamic Transmission Channel A */
     sfr_bitfield resv11 : 5; /* reserved */
    /* const */ sfr_bitfield LDTB : 11; /* Last Dynamic Transmission Channel B */
     sfr_bitfield resv27 : 5; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_LDTS_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield RFNE : 1; /* Receive FIFO Not Empty */
    /* const */ sfr_bitfield RFCL : 1; /* Receive FIFO Critical Level */
    /* const */ sfr_bitfield RFO : 1; /* Receive FIFO Overrun */
     sfr_bitfield resv3 : 5; /* reserved */
    /* const */ sfr_bitfield RFFL : 8; /* Receive FIFO Fill Level */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_FSR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield SNUA : 1; /* Status Not Updated Channel A */
     sfr_bitfield SNUB : 1; /* Status Not Updated Channel B */
     sfr_bitfield FNFA : 1; /* Find Sequence Not Finished Channel A */
     sfr_bitfield FNFB : 1; /* Find Sequence Not Finished Channel B */
     sfr_bitfield TBFA : 1; /* Transient Buffer Access Failure A */
     sfr_bitfield TBFB : 1; /* Transient Buffer Access Failure B */
     sfr_bitfield TNSA : 1; /* Transmission Not Started Channel A */
     sfr_bitfield TNSB : 1; /* Transmission Not Started Channel B */
     sfr_bitfield WAHP : 1; /* Write Attempt to Header Partition */
     sfr_bitfield resv9 : 23; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_MHDF_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield TXR0 : 1; /* Transmission Request 0 (0 = 0-31) */
    /* const */ sfr_bitfield TXR1 : 1; /* Transmission Request 1 (1 = 0-31) */
    /* const */ sfr_bitfield TXR2 : 1; /* Transmission Request 2 (2 = 0-31) */
    /* const */ sfr_bitfield TXR3 : 1; /* Transmission Request 3 (3 = 0-31) */
    /* const */ sfr_bitfield TXR4 : 1; /* Transmission Request 4 (4 = 0-31) */
    /* const */ sfr_bitfield TXR5 : 1; /* Transmission Request 5 (5 = 0-31) */
    /* const */ sfr_bitfield TXR6 : 1; /* Transmission Request 6 (6 = 0-31) */
    /* const */ sfr_bitfield TXR7 : 1; /* Transmission Request 7 (7 = 0-31) */
    /* const */ sfr_bitfield TXR8 : 1; /* Transmission Request 8 (8 = 0-31) */
    /* const */ sfr_bitfield TXR9 : 1; /* Transmission Request 9 (9 = 0-31) */
    /* const */ sfr_bitfield TXR10 : 1; /* Transmission Request 10 (10 = 0-31) */
    /* const */ sfr_bitfield TXR11 : 1; /* Transmission Request 11 (11 = 0-31) */
    /* const */ sfr_bitfield TXR12 : 1; /* Transmission Request 12 (12 = 0-31) */
    /* const */ sfr_bitfield TXR13 : 1; /* Transmission Request 13 (13 = 0-31) */
    /* const */ sfr_bitfield TXR14 : 1; /* Transmission Request 14 (14 = 0-31) */
    /* const */ sfr_bitfield TXR15 : 1; /* Transmission Request 15 (15 = 0-31) */
    /* const */ sfr_bitfield TXR16 : 1; /* Transmission Request 16 (16 = 0-31) */
    /* const */ sfr_bitfield TXR17 : 1; /* Transmission Request 17 (17 = 0-31) */
    /* const */ sfr_bitfield TXR18 : 1; /* Transmission Request 18 (18 = 0-31) */
    /* const */ sfr_bitfield TXR19 : 1; /* Transmission Request 19 (19 = 0-31) */
    /* const */ sfr_bitfield TXR20 : 1; /* Transmission Request 20 (20 = 0-31) */
    /* const */ sfr_bitfield TXR21 : 1; /* Transmission Request 21 (21 = 0-31) */
    /* const */ sfr_bitfield TXR22 : 1; /* Transmission Request 22 (22 = 0-31) */
    /* const */ sfr_bitfield TXR23 : 1; /* Transmission Request 23 (23 = 0-31) */
    /* const */ sfr_bitfield TXR24 : 1; /* Transmission Request 24 (24 = 0-31) */
    /* const */ sfr_bitfield TXR25 : 1; /* Transmission Request 25 (25 = 0-31) */
    /* const */ sfr_bitfield TXR26 : 1; /* Transmission Request 26 (26 = 0-31) */
    /* const */ sfr_bitfield TXR27 : 1; /* Transmission Request 27 (27 = 0-31) */
    /* const */ sfr_bitfield TXR28 : 1; /* Transmission Request 28 (28 = 0-31) */
    /* const */ sfr_bitfield TXR29 : 1; /* Transmission Request 29 (29 = 0-31) */
    /* const */ sfr_bitfield TXR30 : 1; /* Transmission Request 30 (30 = 0-31) */
    /* const */ sfr_bitfield TXR31 : 1; /* Transmission Request 31 (31 = 0-31) */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_TXRQ1_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield TXR32 : 1; /* Transmission Request 32 (32 = 32-63) */
    /* const */ sfr_bitfield TXR33 : 1; /* Transmission Request 33 (33 = 32-63) */
    /* const */ sfr_bitfield TXR34 : 1; /* Transmission Request 34 (34 = 32-63) */
    /* const */ sfr_bitfield TXR35 : 1; /* Transmission Request 35 (35 = 32-63) */
    /* const */ sfr_bitfield TXR36 : 1; /* Transmission Request 36 (36 = 32-63) */
    /* const */ sfr_bitfield TXR37 : 1; /* Transmission Request 37 (37 = 32-63) */
    /* const */ sfr_bitfield TXR38 : 1; /* Transmission Request 38 (38 = 32-63) */
    /* const */ sfr_bitfield TXR39 : 1; /* Transmission Request 39 (39 = 32-63) */
    /* const */ sfr_bitfield TXR40 : 1; /* Transmission Request 40 (40 = 32-63) */
    /* const */ sfr_bitfield TXR41 : 1; /* Transmission Request 41 (41 = 32-63) */
    /* const */ sfr_bitfield TXR42 : 1; /* Transmission Request 42 (42 = 32-63) */
    /* const */ sfr_bitfield TXR43 : 1; /* Transmission Request 43 (43 = 32-63) */
    /* const */ sfr_bitfield TXR44 : 1; /* Transmission Request 44 (44 = 32-63) */
    /* const */ sfr_bitfield TXR45 : 1; /* Transmission Request 45 (45 = 32-63) */
    /* const */ sfr_bitfield TXR46 : 1; /* Transmission Request 46 (46 = 32-63) */
    /* const */ sfr_bitfield TXR47 : 1; /* Transmission Request 47 (47 = 32-63) */
    /* const */ sfr_bitfield TXR48 : 1; /* Transmission Request 48 (48 = 32-63) */
    /* const */ sfr_bitfield TXR49 : 1; /* Transmission Request 49 (49 = 32-63) */
    /* const */ sfr_bitfield TXR50 : 1; /* Transmission Request 50 (50 = 32-63) */
    /* const */ sfr_bitfield TXR51 : 1; /* Transmission Request 51 (51 = 32-63) */
    /* const */ sfr_bitfield TXR52 : 1; /* Transmission Request 52 (52 = 32-63) */
    /* const */ sfr_bitfield TXR53 : 1; /* Transmission Request 53 (53 = 32-63) */
    /* const */ sfr_bitfield TXR54 : 1; /* Transmission Request 54 (54 = 32-63) */
    /* const */ sfr_bitfield TXR55 : 1; /* Transmission Request 55 (55 = 32-63) */
    /* const */ sfr_bitfield TXR56 : 1; /* Transmission Request 56 (56 = 32-63) */
    /* const */ sfr_bitfield TXR57 : 1; /* Transmission Request 57 (57 = 32-63) */
    /* const */ sfr_bitfield TXR58 : 1; /* Transmission Request 58 (58 = 32-63) */
    /* const */ sfr_bitfield TXR59 : 1; /* Transmission Request 59 (59 = 32-63) */
    /* const */ sfr_bitfield TXR60 : 1; /* Transmission Request 60 (60 = 32-63) */
    /* const */ sfr_bitfield TXR61 : 1; /* Transmission Request 61 (61 = 32-63) */
    /* const */ sfr_bitfield TXR62 : 1; /* Transmission Request 62 (62 = 32-63) */
    /* const */ sfr_bitfield TXR63 : 1; /* Transmission Request 63 (63 = 32-63) */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_TXRQ2_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield TXR64 : 1; /* Transmission Request 64 (64 = 64-95) */
    /* const */ sfr_bitfield TXR65 : 1; /* Transmission Request 65 (65 = 64-95) */
    /* const */ sfr_bitfield TXR66 : 1; /* Transmission Request 66 (66 = 64-95) */
    /* const */ sfr_bitfield TXR67 : 1; /* Transmission Request 67 (67 = 64-95) */
    /* const */ sfr_bitfield TXR68 : 1; /* Transmission Request 68 (68 = 64-95) */
    /* const */ sfr_bitfield TXR69 : 1; /* Transmission Request 69 (69 = 64-95) */
    /* const */ sfr_bitfield TXR70 : 1; /* Transmission Request 70 (70 = 64-95) */
    /* const */ sfr_bitfield TXR71 : 1; /* Transmission Request 71 (71 = 64-95) */
    /* const */ sfr_bitfield TXR72 : 1; /* Transmission Request 72 (72 = 64-95) */
    /* const */ sfr_bitfield TXR73 : 1; /* Transmission Request 73 (73 = 64-95) */
    /* const */ sfr_bitfield TXR74 : 1; /* Transmission Request 74 (74 = 64-95) */
    /* const */ sfr_bitfield TXR75 : 1; /* Transmission Request 75 (75 = 64-95) */
    /* const */ sfr_bitfield TXR76 : 1; /* Transmission Request 76 (76 = 64-95) */
    /* const */ sfr_bitfield TXR77 : 1; /* Transmission Request 77 (77 = 64-95) */
    /* const */ sfr_bitfield TXR78 : 1; /* Transmission Request 78 (78 = 64-95) */
    /* const */ sfr_bitfield TXR79 : 1; /* Transmission Request 79 (79 = 64-95) */
    /* const */ sfr_bitfield TXR80 : 1; /* Transmission Request 80 (80 = 64-95) */
    /* const */ sfr_bitfield TXR81 : 1; /* Transmission Request 81 (81 = 64-95) */
    /* const */ sfr_bitfield TXR82 : 1; /* Transmission Request 82 (82 = 64-95) */
    /* const */ sfr_bitfield TXR83 : 1; /* Transmission Request 83 (83 = 64-95) */
    /* const */ sfr_bitfield TXR84 : 1; /* Transmission Request 84 (84 = 64-95) */
    /* const */ sfr_bitfield TXR85 : 1; /* Transmission Request 85 (85 = 64-95) */
    /* const */ sfr_bitfield TXR86 : 1; /* Transmission Request 86 (86 = 64-95) */
    /* const */ sfr_bitfield TXR87 : 1; /* Transmission Request 87 (87 = 64-95) */
    /* const */ sfr_bitfield TXR88 : 1; /* Transmission Request 88 (88 = 64-95) */
    /* const */ sfr_bitfield TXR89 : 1; /* Transmission Request 89 (89 = 64-95) */
    /* const */ sfr_bitfield TXR90 : 1; /* Transmission Request 90 (90 = 64-95) */
    /* const */ sfr_bitfield TXR91 : 1; /* Transmission Request 91 (91 = 64-95) */
    /* const */ sfr_bitfield TXR92 : 1; /* Transmission Request 92 (92 = 64-95) */
    /* const */ sfr_bitfield TXR93 : 1; /* Transmission Request 93 (93 = 64-95) */
    /* const */ sfr_bitfield TXR94 : 1; /* Transmission Request 94 (94 = 64-95) */
    /* const */ sfr_bitfield TXR95 : 1; /* Transmission Request 95 (95 = 64-95) */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_TXRQ3_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield TXR96 : 1; /* Transmission Request 96 (96 = 96-127) */
    /* const */ sfr_bitfield TXR97 : 1; /* Transmission Request 97 (97 = 96-127) */
    /* const */ sfr_bitfield TXR98 : 1; /* Transmission Request 98 (98 = 96-127) */
    /* const */ sfr_bitfield TXR99 : 1; /* Transmission Request 99 (99 = 96-127) */
    /* const */ sfr_bitfield TXR100 : 1; /* Transmission Request 100 (100 = 96-127) */
    /* const */ sfr_bitfield TXR101 : 1; /* Transmission Request 101 (101 = 96-127) */
    /* const */ sfr_bitfield TXR102 : 1; /* Transmission Request 102 (102 = 96-127) */
    /* const */ sfr_bitfield TXR103 : 1; /* Transmission Request 103 (103 = 96-127) */
    /* const */ sfr_bitfield TXR104 : 1; /* Transmission Request 104 (104 = 96-127) */
    /* const */ sfr_bitfield TXR105 : 1; /* Transmission Request 105 (105 = 96-127) */
    /* const */ sfr_bitfield TXR106 : 1; /* Transmission Request 106 (106 = 96-127) */
    /* const */ sfr_bitfield TXR107 : 1; /* Transmission Request 107 (107 = 96-127) */
    /* const */ sfr_bitfield TXR108 : 1; /* Transmission Request 108 (108 = 96-127) */
    /* const */ sfr_bitfield TXR109 : 1; /* Transmission Request 109 (109 = 96-127) */
    /* const */ sfr_bitfield TXR110 : 1; /* Transmission Request 110 (110 = 96-127) */
    /* const */ sfr_bitfield TXR111 : 1; /* Transmission Request 111 (111 = 96-127) */
    /* const */ sfr_bitfield TXR112 : 1; /* Transmission Request 112 (112 = 96-127) */
    /* const */ sfr_bitfield TXR113 : 1; /* Transmission Request 113 (113 = 96-127) */
    /* const */ sfr_bitfield TXR114 : 1; /* Transmission Request 114 (114 = 96-127) */
    /* const */ sfr_bitfield TXR115 : 1; /* Transmission Request 115 (115 = 96-127) */
    /* const */ sfr_bitfield TXR116 : 1; /* Transmission Request 116 (116 = 96-127) */
    /* const */ sfr_bitfield TXR117 : 1; /* Transmission Request 117 (117 = 96-127) */
    /* const */ sfr_bitfield TXR118 : 1; /* Transmission Request 118 (118 = 96-127) */
    /* const */ sfr_bitfield TXR119 : 1; /* Transmission Request 119 (119 = 96-127) */
    /* const */ sfr_bitfield TXR120 : 1; /* Transmission Request 120 (120 = 96-127) */
    /* const */ sfr_bitfield TXR121 : 1; /* Transmission Request 121 (121 = 96-127) */
    /* const */ sfr_bitfield TXR122 : 1; /* Transmission Request 122 (122 = 96-127) */
    /* const */ sfr_bitfield TXR123 : 1; /* Transmission Request 123 (123 = 96-127) */
    /* const */ sfr_bitfield TXR124 : 1; /* Transmission Request 124 (124 = 96-127) */
    /* const */ sfr_bitfield TXR125 : 1; /* Transmission Request 125 (125 = 96-127) */
    /* const */ sfr_bitfield TXR126 : 1; /* Transmission Request 126 (126 = 96-127) */
    /* const */ sfr_bitfield TXR127 : 1; /* Transmission Request 127 (127 = 96-127) */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_TXRQ4_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield ND0 : 1; /* New Data 0 (0 = 0-31) */
    /* const */ sfr_bitfield ND1 : 1; /* New Data 1 (1 = 0-31) */
    /* const */ sfr_bitfield ND2 : 1; /* New Data 2 (2 = 0-31) */
    /* const */ sfr_bitfield ND3 : 1; /* New Data 3 (3 = 0-31) */
    /* const */ sfr_bitfield ND4 : 1; /* New Data 4 (4 = 0-31) */
    /* const */ sfr_bitfield ND5 : 1; /* New Data 5 (5 = 0-31) */
    /* const */ sfr_bitfield ND6 : 1; /* New Data 6 (6 = 0-31) */
    /* const */ sfr_bitfield ND7 : 1; /* New Data 7 (7 = 0-31) */
    /* const */ sfr_bitfield ND8 : 1; /* New Data 8 (8 = 0-31) */
    /* const */ sfr_bitfield ND9 : 1; /* New Data 9 (9 = 0-31) */
    /* const */ sfr_bitfield ND10 : 1; /* New Data 10 (10 = 0-31) */
    /* const */ sfr_bitfield ND11 : 1; /* New Data 11 (11 = 0-31) */
    /* const */ sfr_bitfield ND12 : 1; /* New Data 12 (12 = 0-31) */
    /* const */ sfr_bitfield ND13 : 1; /* New Data 13 (13 = 0-31) */
    /* const */ sfr_bitfield ND14 : 1; /* New Data 14 (14 = 0-31) */
    /* const */ sfr_bitfield ND15 : 1; /* New Data 15 (15 = 0-31) */
    /* const */ sfr_bitfield ND16 : 1; /* New Data 16 (16 = 0-31) */
    /* const */ sfr_bitfield ND17 : 1; /* New Data 17 (17 = 0-31) */
    /* const */ sfr_bitfield ND18 : 1; /* New Data 18 (18 = 0-31) */
    /* const */ sfr_bitfield ND19 : 1; /* New Data 19 (19 = 0-31) */
    /* const */ sfr_bitfield ND20 : 1; /* New Data 20 (20 = 0-31) */
    /* const */ sfr_bitfield ND21 : 1; /* New Data 21 (21 = 0-31) */
    /* const */ sfr_bitfield ND22 : 1; /* New Data 22 (22 = 0-31) */
    /* const */ sfr_bitfield ND23 : 1; /* New Data 23 (23 = 0-31) */
    /* const */ sfr_bitfield ND24 : 1; /* New Data 24 (24 = 0-31) */
    /* const */ sfr_bitfield ND25 : 1; /* New Data 25 (25 = 0-31) */
    /* const */ sfr_bitfield ND26 : 1; /* New Data 26 (26 = 0-31) */
    /* const */ sfr_bitfield ND27 : 1; /* New Data 27 (27 = 0-31) */
    /* const */ sfr_bitfield ND28 : 1; /* New Data 28 (28 = 0-31) */
    /* const */ sfr_bitfield ND29 : 1; /* New Data 29 (29 = 0-31) */
    /* const */ sfr_bitfield ND30 : 1; /* New Data 30 (30 = 0-31) */
    /* const */ sfr_bitfield ND31 : 1; /* New Data 31 (31 = 0-31) */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_NDAT1_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield ND32 : 1; /* New Data 32 (32 = 32-63) */
    /* const */ sfr_bitfield ND33 : 1; /* New Data 33 (33 = 32-63) */
    /* const */ sfr_bitfield ND34 : 1; /* New Data 34 (34 = 32-63) */
    /* const */ sfr_bitfield ND35 : 1; /* New Data 35 (35 = 32-63) */
    /* const */ sfr_bitfield ND36 : 1; /* New Data 36 (36 = 32-63) */
    /* const */ sfr_bitfield ND37 : 1; /* New Data 37 (37 = 32-63) */
    /* const */ sfr_bitfield ND38 : 1; /* New Data 38 (38 = 32-63) */
    /* const */ sfr_bitfield ND39 : 1; /* New Data 39 (39 = 32-63) */
    /* const */ sfr_bitfield ND40 : 1; /* New Data 40 (40 = 32-63) */
    /* const */ sfr_bitfield ND41 : 1; /* New Data 41 (41 = 32-63) */
    /* const */ sfr_bitfield ND42 : 1; /* New Data 42 (42 = 32-63) */
    /* const */ sfr_bitfield ND43 : 1; /* New Data 43 (43 = 32-63) */
    /* const */ sfr_bitfield ND44 : 1; /* New Data 44 (44 = 32-63) */
    /* const */ sfr_bitfield ND45 : 1; /* New Data 45 (45 = 32-63) */
    /* const */ sfr_bitfield ND46 : 1; /* New Data 46 (46 = 32-63) */
    /* const */ sfr_bitfield ND47 : 1; /* New Data 47 (47 = 32-63) */
    /* const */ sfr_bitfield ND48 : 1; /* New Data 48 (48 = 32-63) */
    /* const */ sfr_bitfield ND49 : 1; /* New Data 49 (49 = 32-63) */
    /* const */ sfr_bitfield ND50 : 1; /* New Data 50 (50 = 32-63) */
    /* const */ sfr_bitfield ND51 : 1; /* New Data 51 (51 = 32-63) */
    /* const */ sfr_bitfield ND52 : 1; /* New Data 52 (52 = 32-63) */
    /* const */ sfr_bitfield ND53 : 1; /* New Data 53 (53 = 32-63) */
    /* const */ sfr_bitfield ND54 : 1; /* New Data 54 (54 = 32-63) */
    /* const */ sfr_bitfield ND55 : 1; /* New Data 55 (55 = 32-63) */
    /* const */ sfr_bitfield ND56 : 1; /* New Data 56 (56 = 32-63) */
    /* const */ sfr_bitfield ND57 : 1; /* New Data 57 (57 = 32-63) */
    /* const */ sfr_bitfield ND58 : 1; /* New Data 58 (58 = 32-63) */
    /* const */ sfr_bitfield ND59 : 1; /* New Data 59 (59 = 32-63) */
    /* const */ sfr_bitfield ND60 : 1; /* New Data 60 (60 = 32-63) */
    /* const */ sfr_bitfield ND61 : 1; /* New Data 61 (61 = 32-63) */
    /* const */ sfr_bitfield ND62 : 1; /* New Data 62 (62 = 32-63) */
    /* const */ sfr_bitfield ND63 : 1; /* New Data 63 (63 = 32-63) */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_NDAT2_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield ND64 : 1; /* New Data 64 (64 = 64-95) */
    /* const */ sfr_bitfield ND65 : 1; /* New Data 65 (65 = 64-95) */
    /* const */ sfr_bitfield ND66 : 1; /* New Data 66 (66 = 64-95) */
    /* const */ sfr_bitfield ND67 : 1; /* New Data 67 (67 = 64-95) */
    /* const */ sfr_bitfield ND68 : 1; /* New Data 68 (68 = 64-95) */
    /* const */ sfr_bitfield ND69 : 1; /* New Data 69 (69 = 64-95) */
    /* const */ sfr_bitfield ND70 : 1; /* New Data 70 (70 = 64-95) */
    /* const */ sfr_bitfield ND71 : 1; /* New Data 71 (71 = 64-95) */
    /* const */ sfr_bitfield ND72 : 1; /* New Data 72 (72 = 64-95) */
    /* const */ sfr_bitfield ND73 : 1; /* New Data 73 (73 = 64-95) */
    /* const */ sfr_bitfield ND74 : 1; /* New Data 74 (74 = 64-95) */
    /* const */ sfr_bitfield ND75 : 1; /* New Data 75 (75 = 64-95) */
    /* const */ sfr_bitfield ND76 : 1; /* New Data 76 (76 = 64-95) */
    /* const */ sfr_bitfield ND77 : 1; /* New Data 77 (77 = 64-95) */
    /* const */ sfr_bitfield ND78 : 1; /* New Data 78 (78 = 64-95) */
    /* const */ sfr_bitfield ND79 : 1; /* New Data 79 (79 = 64-95) */
    /* const */ sfr_bitfield ND80 : 1; /* New Data 80 (80 = 64-95) */
    /* const */ sfr_bitfield ND81 : 1; /* New Data 81 (81 = 64-95) */
    /* const */ sfr_bitfield ND82 : 1; /* New Data 82 (82 = 64-95) */
    /* const */ sfr_bitfield ND83 : 1; /* New Data 83 (83 = 64-95) */
    /* const */ sfr_bitfield ND84 : 1; /* New Data 84 (84 = 64-95) */
    /* const */ sfr_bitfield ND85 : 1; /* New Data 85 (85 = 64-95) */
    /* const */ sfr_bitfield ND86 : 1; /* New Data 86 (86 = 64-95) */
    /* const */ sfr_bitfield ND87 : 1; /* New Data 87 (87 = 64-95) */
    /* const */ sfr_bitfield ND88 : 1; /* New Data 88 (88 = 64-95) */
    /* const */ sfr_bitfield ND89 : 1; /* New Data 89 (89 = 64-95) */
    /* const */ sfr_bitfield ND90 : 1; /* New Data 90 (90 = 64-95) */
    /* const */ sfr_bitfield ND91 : 1; /* New Data 91 (91 = 64-95) */
    /* const */ sfr_bitfield ND92 : 1; /* New Data 92 (92 = 64-95) */
    /* const */ sfr_bitfield ND93 : 1; /* New Data 93 (93 = 64-95) */
    /* const */ sfr_bitfield ND94 : 1; /* New Data 94 (94 = 64-95) */
    /* const */ sfr_bitfield ND95 : 1; /* New Data 95 (95 = 64-95) */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_NDAT3_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield ND96 : 1; /* New Data 96 (96 = 96-127) */
    /* const */ sfr_bitfield ND97 : 1; /* New Data 97 (97 = 96-127) */
    /* const */ sfr_bitfield ND98 : 1; /* New Data 98 (98 = 96-127) */
    /* const */ sfr_bitfield ND99 : 1; /* New Data 99 (99 = 96-127) */
    /* const */ sfr_bitfield ND100 : 1; /* New Data 100 (100 = 96-127) */
    /* const */ sfr_bitfield ND101 : 1; /* New Data 101 (101 = 96-127) */
    /* const */ sfr_bitfield ND102 : 1; /* New Data 102 (102 = 96-127) */
    /* const */ sfr_bitfield ND103 : 1; /* New Data 103 (103 = 96-127) */
    /* const */ sfr_bitfield ND104 : 1; /* New Data 104 (104 = 96-127) */
    /* const */ sfr_bitfield ND105 : 1; /* New Data 105 (105 = 96-127) */
    /* const */ sfr_bitfield ND106 : 1; /* New Data 106 (106 = 96-127) */
    /* const */ sfr_bitfield ND107 : 1; /* New Data 107 (107 = 96-127) */
    /* const */ sfr_bitfield ND108 : 1; /* New Data 108 (108 = 96-127) */
    /* const */ sfr_bitfield ND109 : 1; /* New Data 109 (109 = 96-127) */
    /* const */ sfr_bitfield ND110 : 1; /* New Data 110 (110 = 96-127) */
    /* const */ sfr_bitfield ND111 : 1; /* New Data 111 (111 = 96-127) */
    /* const */ sfr_bitfield ND112 : 1; /* New Data 112 (112 = 96-127) */
    /* const */ sfr_bitfield ND113 : 1; /* New Data 113 (113 = 96-127) */
    /* const */ sfr_bitfield ND114 : 1; /* New Data 114 (114 = 96-127) */
    /* const */ sfr_bitfield ND115 : 1; /* New Data 115 (115 = 96-127) */
    /* const */ sfr_bitfield ND116 : 1; /* New Data 116 (116 = 96-127) */
    /* const */ sfr_bitfield ND117 : 1; /* New Data 117 (117 = 96-127) */
    /* const */ sfr_bitfield ND118 : 1; /* New Data 118 (118 = 96-127) */
    /* const */ sfr_bitfield ND119 : 1; /* New Data 119 (119 = 96-127) */
    /* const */ sfr_bitfield ND120 : 1; /* New Data 120 (120 = 96-127) */
    /* const */ sfr_bitfield ND121 : 1; /* New Data 121 (121 = 96-127) */
    /* const */ sfr_bitfield ND122 : 1; /* New Data 122 (122 = 96-127) */
    /* const */ sfr_bitfield ND123 : 1; /* New Data 123 (123 = 96-127) */
    /* const */ sfr_bitfield ND124 : 1; /* New Data 124 (124 = 96-127) */
    /* const */ sfr_bitfield ND125 : 1; /* New Data 125 (125 = 96-127) */
    /* const */ sfr_bitfield ND126 : 1; /* New Data 126 (126 = 96-127) */
    /* const */ sfr_bitfield ND127 : 1; /* New Data 127 (127 = 96-127) */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_NDAT4_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield MBC0 : 1; /* Message Buffer Status Changed 0 (0 = 0-31) */
    /* const */ sfr_bitfield MBC1 : 1; /* Message Buffer Status Changed 1 (1 = 0-31) */
    /* const */ sfr_bitfield MBC2 : 1; /* Message Buffer Status Changed 2 (2 = 0-31) */
    /* const */ sfr_bitfield MBC3 : 1; /* Message Buffer Status Changed 3 (3 = 0-31) */
    /* const */ sfr_bitfield MBC4 : 1; /* Message Buffer Status Changed 4 (4 = 0-31) */
    /* const */ sfr_bitfield MBC5 : 1; /* Message Buffer Status Changed 5 (5 = 0-31) */
    /* const */ sfr_bitfield MBC6 : 1; /* Message Buffer Status Changed 6 (6 = 0-31) */
    /* const */ sfr_bitfield MBC7 : 1; /* Message Buffer Status Changed 7 (7 = 0-31) */
    /* const */ sfr_bitfield MBC8 : 1; /* Message Buffer Status Changed 8 (8 = 0-31) */
    /* const */ sfr_bitfield MBC9 : 1; /* Message Buffer Status Changed 9 (9 = 0-31) */
    /* const */ sfr_bitfield MBC10 : 1; /* Message Buffer Status Changed 10 (10 = 0-31) */
    /* const */ sfr_bitfield MBC11 : 1; /* Message Buffer Status Changed 11 (11 = 0-31) */
    /* const */ sfr_bitfield MBC12 : 1; /* Message Buffer Status Changed 12 (12 = 0-31) */
    /* const */ sfr_bitfield MBC13 : 1; /* Message Buffer Status Changed 13 (13 = 0-31) */
    /* const */ sfr_bitfield MBC14 : 1; /* Message Buffer Status Changed 14 (14 = 0-31) */
    /* const */ sfr_bitfield MBC15 : 1; /* Message Buffer Status Changed 15 (15 = 0-31) */
    /* const */ sfr_bitfield MBC16 : 1; /* Message Buffer Status Changed 16 (16 = 0-31) */
    /* const */ sfr_bitfield MBC17 : 1; /* Message Buffer Status Changed 17 (17 = 0-31) */
    /* const */ sfr_bitfield MBC18 : 1; /* Message Buffer Status Changed 18 (18 = 0-31) */
    /* const */ sfr_bitfield MBC19 : 1; /* Message Buffer Status Changed 19 (19 = 0-31) */
    /* const */ sfr_bitfield MBC20 : 1; /* Message Buffer Status Changed 20 (20 = 0-31) */
    /* const */ sfr_bitfield MBC21 : 1; /* Message Buffer Status Changed 21 (21 = 0-31) */
    /* const */ sfr_bitfield MBC22 : 1; /* Message Buffer Status Changed 22 (22 = 0-31) */
    /* const */ sfr_bitfield MBC23 : 1; /* Message Buffer Status Changed 23 (23 = 0-31) */
    /* const */ sfr_bitfield MBC24 : 1; /* Message Buffer Status Changed 24 (24 = 0-31) */
    /* const */ sfr_bitfield MBC25 : 1; /* Message Buffer Status Changed 25 (25 = 0-31) */
    /* const */ sfr_bitfield MBC26 : 1; /* Message Buffer Status Changed 26 (26 = 0-31) */
    /* const */ sfr_bitfield MBC27 : 1; /* Message Buffer Status Changed 27 (27 = 0-31) */
    /* const */ sfr_bitfield MBC28 : 1; /* Message Buffer Status Changed 28 (28 = 0-31) */
    /* const */ sfr_bitfield MBC29 : 1; /* Message Buffer Status Changed 29 (29 = 0-31) */
    /* const */ sfr_bitfield MBC30 : 1; /* Message Buffer Status Changed 30 (30 = 0-31) */
    /* const */ sfr_bitfield MBC31 : 1; /* Message Buffer Status Changed 31 (31 = 0-31) */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_MBSC1_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield MBC32 : 1; /* Message Buffer Status Changed 32 (32 = 32-63) */
    /* const */ sfr_bitfield MBC33 : 1; /* Message Buffer Status Changed 33 (33 = 32-63) */
    /* const */ sfr_bitfield MBC34 : 1; /* Message Buffer Status Changed 34 (34 = 32-63) */
    /* const */ sfr_bitfield MBC35 : 1; /* Message Buffer Status Changed 35 (35 = 32-63) */
    /* const */ sfr_bitfield MBC36 : 1; /* Message Buffer Status Changed 36 (36 = 32-63) */
    /* const */ sfr_bitfield MBC37 : 1; /* Message Buffer Status Changed 37 (37 = 32-63) */
    /* const */ sfr_bitfield MBC38 : 1; /* Message Buffer Status Changed 38 (38 = 32-63) */
    /* const */ sfr_bitfield MBC39 : 1; /* Message Buffer Status Changed 39 (39 = 32-63) */
    /* const */ sfr_bitfield MBC40 : 1; /* Message Buffer Status Changed 40 (40 = 32-63) */
    /* const */ sfr_bitfield MBC41 : 1; /* Message Buffer Status Changed 41 (41 = 32-63) */
    /* const */ sfr_bitfield MBC42 : 1; /* Message Buffer Status Changed 42 (42 = 32-63) */
    /* const */ sfr_bitfield MBC43 : 1; /* Message Buffer Status Changed 43 (43 = 32-63) */
    /* const */ sfr_bitfield MBC44 : 1; /* Message Buffer Status Changed 44 (44 = 32-63) */
    /* const */ sfr_bitfield MBC45 : 1; /* Message Buffer Status Changed 45 (45 = 32-63) */
    /* const */ sfr_bitfield MBC46 : 1; /* Message Buffer Status Changed 46 (46 = 32-63) */
    /* const */ sfr_bitfield MBC47 : 1; /* Message Buffer Status Changed 47 (47 = 32-63) */
    /* const */ sfr_bitfield MBC48 : 1; /* Message Buffer Status Changed 48 (48 = 32-63) */
    /* const */ sfr_bitfield MBC49 : 1; /* Message Buffer Status Changed 49 (49 = 32-63) */
    /* const */ sfr_bitfield MBC50 : 1; /* Message Buffer Status Changed 50 (50 = 32-63) */
    /* const */ sfr_bitfield MBC51 : 1; /* Message Buffer Status Changed 51 (51 = 32-63) */
    /* const */ sfr_bitfield MBC52 : 1; /* Message Buffer Status Changed 52 (52 = 32-63) */
    /* const */ sfr_bitfield MBC53 : 1; /* Message Buffer Status Changed 53 (53 = 32-63) */
    /* const */ sfr_bitfield MBC54 : 1; /* Message Buffer Status Changed 54 (54 = 32-63) */
    /* const */ sfr_bitfield MBC55 : 1; /* Message Buffer Status Changed 55 (55 = 32-63) */
    /* const */ sfr_bitfield MBC56 : 1; /* Message Buffer Status Changed 56 (56 = 32-63) */
    /* const */ sfr_bitfield MBC57 : 1; /* Message Buffer Status Changed 57 (57 = 32-63) */
    /* const */ sfr_bitfield MBC58 : 1; /* Message Buffer Status Changed 58 (58 = 32-63) */
    /* const */ sfr_bitfield MBC59 : 1; /* Message Buffer Status Changed 59 (59 = 32-63) */
    /* const */ sfr_bitfield MBC60 : 1; /* Message Buffer Status Changed 60 (60 = 32-63) */
    /* const */ sfr_bitfield MBC61 : 1; /* Message Buffer Status Changed 61 (61 = 32-63) */
    /* const */ sfr_bitfield MBC62 : 1; /* Message Buffer Status Changed 62 (62 = 32-63) */
    /* const */ sfr_bitfield MBC63 : 1; /* Message Buffer Status Changed 63 (63 = 32-63) */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_MBSC2_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield MBC64 : 1; /* Message Buffer Status Changed 64 (64 = 64-95) */
    /* const */ sfr_bitfield MBC65 : 1; /* Message Buffer Status Changed 65 (65 = 64-95) */
    /* const */ sfr_bitfield MBC66 : 1; /* Message Buffer Status Changed 66 (66 = 64-95) */
    /* const */ sfr_bitfield MBC67 : 1; /* Message Buffer Status Changed 67 (67 = 64-95) */
    /* const */ sfr_bitfield MBC68 : 1; /* Message Buffer Status Changed 68 (68 = 64-95) */
    /* const */ sfr_bitfield MBC69 : 1; /* Message Buffer Status Changed 69 (69 = 64-95) */
    /* const */ sfr_bitfield MBC70 : 1; /* Message Buffer Status Changed 70 (70 = 64-95) */
    /* const */ sfr_bitfield MBC71 : 1; /* Message Buffer Status Changed 71 (71 = 64-95) */
    /* const */ sfr_bitfield MBC72 : 1; /* Message Buffer Status Changed 72 (72 = 64-95) */
    /* const */ sfr_bitfield MBC73 : 1; /* Message Buffer Status Changed 73 (73 = 64-95) */
    /* const */ sfr_bitfield MBC74 : 1; /* Message Buffer Status Changed 74 (74 = 64-95) */
    /* const */ sfr_bitfield MBC75 : 1; /* Message Buffer Status Changed 75 (75 = 64-95) */
    /* const */ sfr_bitfield MBC76 : 1; /* Message Buffer Status Changed 76 (76 = 64-95) */
    /* const */ sfr_bitfield MBC77 : 1; /* Message Buffer Status Changed 77 (77 = 64-95) */
    /* const */ sfr_bitfield MBC78 : 1; /* Message Buffer Status Changed 78 (78 = 64-95) */
    /* const */ sfr_bitfield MBC79 : 1; /* Message Buffer Status Changed 79 (79 = 64-95) */
    /* const */ sfr_bitfield MBC80 : 1; /* Message Buffer Status Changed 80 (80 = 64-95) */
    /* const */ sfr_bitfield MBC81 : 1; /* Message Buffer Status Changed 81 (81 = 64-95) */
    /* const */ sfr_bitfield MBC82 : 1; /* Message Buffer Status Changed 82 (82 = 64-95) */
    /* const */ sfr_bitfield MBC83 : 1; /* Message Buffer Status Changed 83 (83 = 64-95) */
    /* const */ sfr_bitfield MBC84 : 1; /* Message Buffer Status Changed 84 (84 = 64-95) */
    /* const */ sfr_bitfield MBC85 : 1; /* Message Buffer Status Changed 85 (85 = 64-95) */
    /* const */ sfr_bitfield MBC86 : 1; /* Message Buffer Status Changed 86 (86 = 64-95) */
    /* const */ sfr_bitfield MBC87 : 1; /* Message Buffer Status Changed 87 (87 = 64-95) */
    /* const */ sfr_bitfield MBC88 : 1; /* Message Buffer Status Changed 88 (88 = 64-95) */
    /* const */ sfr_bitfield MBC89 : 1; /* Message Buffer Status Changed 89 (89 = 64-95) */
    /* const */ sfr_bitfield MBC90 : 1; /* Message Buffer Status Changed 90 (90 = 64-95) */
    /* const */ sfr_bitfield MBC91 : 1; /* Message Buffer Status Changed 91 (91 = 64-95) */
    /* const */ sfr_bitfield MBC92 : 1; /* Message Buffer Status Changed 92 (92 = 64-95) */
    /* const */ sfr_bitfield MBC93 : 1; /* Message Buffer Status Changed 93 (93 = 64-95) */
    /* const */ sfr_bitfield MBC94 : 1; /* Message Buffer Status Changed 94 (94 = 64-95) */
    /* const */ sfr_bitfield MBC95 : 1; /* Message Buffer Status Changed 95 (95 = 64-95) */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_MBSC3_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield MBC96 : 1; /* Message Buffer Status Changed 96 (96 = 96-127) */
    /* const */ sfr_bitfield MBC97 : 1; /* Message Buffer Status Changed 97 (97 = 96-127) */
    /* const */ sfr_bitfield MBC98 : 1; /* Message Buffer Status Changed 98 (98 = 96-127) */
    /* const */ sfr_bitfield MBC99 : 1; /* Message Buffer Status Changed 99 (99 = 96-127) */
    /* const */ sfr_bitfield MBC100 : 1; /* Message Buffer Status Changed 100 (100 = 96-127) */
    /* const */ sfr_bitfield MBC101 : 1; /* Message Buffer Status Changed 101 (101 = 96-127) */
    /* const */ sfr_bitfield MBC102 : 1; /* Message Buffer Status Changed 102 (102 = 96-127) */
    /* const */ sfr_bitfield MBC103 : 1; /* Message Buffer Status Changed 103 (103 = 96-127) */
    /* const */ sfr_bitfield MBC104 : 1; /* Message Buffer Status Changed 104 (104 = 96-127) */
    /* const */ sfr_bitfield MBC105 : 1; /* Message Buffer Status Changed 105 (105 = 96-127) */
    /* const */ sfr_bitfield MBC106 : 1; /* Message Buffer Status Changed 106 (106 = 96-127) */
    /* const */ sfr_bitfield MBC107 : 1; /* Message Buffer Status Changed 107 (107 = 96-127) */
    /* const */ sfr_bitfield MBC108 : 1; /* Message Buffer Status Changed 108 (108 = 96-127) */
    /* const */ sfr_bitfield MBC109 : 1; /* Message Buffer Status Changed 109 (109 = 96-127) */
    /* const */ sfr_bitfield MBC110 : 1; /* Message Buffer Status Changed 110 (110 = 96-127) */
    /* const */ sfr_bitfield MBC111 : 1; /* Message Buffer Status Changed 111 (111 = 96-127) */
    /* const */ sfr_bitfield MBC112 : 1; /* Message Buffer Status Changed 112 (112 = 96-127) */
    /* const */ sfr_bitfield MBC113 : 1; /* Message Buffer Status Changed 113 (113 = 96-127) */
    /* const */ sfr_bitfield MBC114 : 1; /* Message Buffer Status Changed 114 (114 = 96-127) */
    /* const */ sfr_bitfield MBC115 : 1; /* Message Buffer Status Changed 115 (115 = 96-127) */
    /* const */ sfr_bitfield MBC116 : 1; /* Message Buffer Status Changed 116 (116 = 96-127) */
    /* const */ sfr_bitfield MBC117 : 1; /* Message Buffer Status Changed 117 (117 = 96-127) */
    /* const */ sfr_bitfield MBC118 : 1; /* Message Buffer Status Changed 118 (118 = 96-127) */
    /* const */ sfr_bitfield MBC119 : 1; /* Message Buffer Status Changed 119 (119 = 96-127) */
    /* const */ sfr_bitfield MBC120 : 1; /* Message Buffer Status Changed 120 (120 = 96-127) */
    /* const */ sfr_bitfield MBC121 : 1; /* Message Buffer Status Changed 121 (121 = 96-127) */
    /* const */ sfr_bitfield MBC122 : 1; /* Message Buffer Status Changed 122 (122 = 96-127) */
    /* const */ sfr_bitfield MBC123 : 1; /* Message Buffer Status Changed 123 (123 = 96-127) */
    /* const */ sfr_bitfield MBC124 : 1; /* Message Buffer Status Changed 124 (124 = 96-127) */
    /* const */ sfr_bitfield MBC125 : 1; /* Message Buffer Status Changed 125 (125 = 96-127) */
    /* const */ sfr_bitfield MBC126 : 1; /* Message Buffer Status Changed 126 (126 = 96-127) */
    /* const */ sfr_bitfield MBC127 : 1; /* Message Buffer Status Changed 127 (127 = 96-127) */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_MBSC4_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield DAY : 8; /* Design Time Stamp, Day */
    /* const */ sfr_bitfield MON : 8; /* Design Time Stamp, Month */
    /* const */ sfr_bitfield YEAR : 4; /* Design Time Stamp, Year */
    /* const */ sfr_bitfield SUBSTEP : 4; /* Sub-Step of Core Release */
    /* const */ sfr_bitfield STEP : 4; /* Step of Core Release */
    /* const */ sfr_bitfield REL : 4; /* Core Release */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_CREL_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield ETV : 32; /* Endianness Test Value */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_ENDN_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield MDWB0 : 8; /* 32-Bit Word nn, Byte 0 */
     sfr_bitfield MDWB1 : 8; /* 32-Bit Word nn, Byte 1 */
     sfr_bitfield MDWB2 : 8; /* 32-Bit Word nn, Byte 2 */
     sfr_bitfield MDWB3 : 8; /* 32-Bit Word nn, Byte 3 */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_WRDS01_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield FID : 11; /* Frame ID */
     sfr_bitfield resv11 : 5; /* reserved */
     sfr_bitfield CYC : 7; /* Cycle Code */
     sfr_bitfield resv23 : 1; /* reserved */
     sfr_bitfield CHA : 1; /* Channel Filter Control A */
     sfr_bitfield CHB : 1; /* Channel Filter Control B */
     sfr_bitfield CFG : 1; /* Message Buffer Direction Configuration Bit */
     sfr_bitfield PPIT : 1; /* Payload Preamble Indicator Transmit */
     sfr_bitfield TXM : 1; /* Transmission Mode */
     sfr_bitfield MBI : 1; /* Message Buffer Service Request */
     sfr_bitfield resv30 : 2; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_WRHS1_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CRC : 11; /* Header CRC (vRF!Header!HeaderCRC) */
     sfr_bitfield resv11 : 5; /* reserved */
     sfr_bitfield PLC : 7; /* Payload Length Configured */
     sfr_bitfield resv23 : 9; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_WRHS2_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield DP : 11; /* Data Pointer */
     sfr_bitfield resv11 : 21; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_WRHS3_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield LHSH : 1; /* Load Header Section Host */
     sfr_bitfield LDSH : 1; /* Load Data Section Host */
     sfr_bitfield STXRH : 1; /* Set Transmission Request Host */
     sfr_bitfield resv3 : 13; /* reserved */
    /* const */ sfr_bitfield LHSS : 1; /* Load Header Section Shadow */
    /* const */ sfr_bitfield LDSS : 1; /* Load Data Section Shadow */
    /* const */ sfr_bitfield STXRS : 1; /* Transmission Request Shadow */
     sfr_bitfield resv19 : 13; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_IBCM_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield IBRH : 7; /* Input Buffer Request Host */
     sfr_bitfield resv7 : 8; /* reserved */
    /* const */ sfr_bitfield IBSYH : 1; /* Input Buffer Busy Host */
    /* const */ sfr_bitfield IBRS : 7; /* Input Buffer Request Shadow */
     sfr_bitfield resv23 : 8; /* reserved */
    /* const */ sfr_bitfield IBSYS : 1; /* Input Buffer Busy Shadow */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_IBCR_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield MDRB0 : 8; /* 32-Bit Word nn, Byte 0 */
    /* const */ sfr_bitfield MDRB1 : 8; /* 32-Bit Word nn, Byte 1 */
    /* const */ sfr_bitfield MDRB2 : 8; /* 32-Bit Word nn, Byte 2 */
    /* const */ sfr_bitfield MDRB3 : 8; /* 32-Bit Word nn, Byte 3 */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_RDDS01_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield CRC : 11; /* Header CRC (vRF!Header!HeaderCRC) */
     sfr_bitfield resv11 : 5; /* reserved */
    /* const */ sfr_bitfield PLC : 7; /* Payload Length Configured */
     sfr_bitfield resv23 : 1; /* reserved */
    /* const */ sfr_bitfield PLR : 7; /* Payload Length Received (vRF!Header!Length) */
     sfr_bitfield resv31 : 1; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_RDHS2_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield DP : 11; /* Data Pointer */
     sfr_bitfield resv11 : 5; /* reserved */
    /* const */ sfr_bitfield RCC : 6; /* Receive Cycle Count (vRF!Header!CycleCount) */
     sfr_bitfield resv22 : 2; /* reserved */
    /* const */ sfr_bitfield RCI : 1; /* Received on Channel Indicator (vSS!Channel) */
    /* const */ sfr_bitfield SFI : 1; /* Startup Frame Indicator (vRF!Header!SuFIndicator) */
    /* const */ sfr_bitfield SYN : 1; /* SYNC Frame Indicator (vRF!Header!SyFIndicator) */
    /* const */ sfr_bitfield NFI : 1; /* NULL Frame Indicator (vRF!Header!NFIndicator) */
    /* const */ sfr_bitfield PPI : 1; /* Payload Preamble Indicator (vRF!Header!PPIndicator) */
    /* const */ sfr_bitfield RES : 1; /* Reserved Bit (vRF!Header!Reserved) */
     sfr_bitfield resv30 : 2; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_RDHS3_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield VFRA : 1; /* Valid Frame Received on Channel A (vSS!ValidFrameA) */
    /* const */ sfr_bitfield VFRB : 1; /* Valid Frame Received on Channel B (vSS!ValidFrameB) */
    /* const */ sfr_bitfield SEOA : 1; /* Syntax Error Observed on Channel A (vSS!SyntaxErrorA) */
    /* const */ sfr_bitfield SEOB : 1; /* Syntax Error Observed on Channel B (vSS!SyntaxErrorB) */
    /* const */ sfr_bitfield CEOA : 1; /* Content Error Observed on Channel A (vSS!ContentErrorA) */
    /* const */ sfr_bitfield CEOB : 1; /* Content Error Observed on Channel B (vSS!ContentErrorB) */
    /* const */ sfr_bitfield SVOA : 1; /* Slot Boundary Violation Observed on Channel A (vSS!BViolationA) */
    /* const */ sfr_bitfield SVOB : 1; /* Slot Boundary Violation Observed on Channel B (vSS!BViolationB) */
    /* const */ sfr_bitfield TCIA : 1; /* Transmission Conflict Indication Channel A (vSS!TxConflictA) */
    /* const */ sfr_bitfield TCIB : 1; /* Transmission Conflict Indication Channel B (vSS!TxConflictB) */
    /* const */ sfr_bitfield ESA : 1; /* Empty Slot Channel A */
    /* const */ sfr_bitfield ESB : 1; /* Empty Slot Channel B */
    /* const */ sfr_bitfield MLST : 1; /* Message Lost */
     sfr_bitfield resv13 : 1; /* reserved */
    /* const */ sfr_bitfield FTA : 1; /* Frame Transmitted on Channel A */
    /* const */ sfr_bitfield FTB : 1; /* Frame Transmitted on Channel B */
    /* const */ sfr_bitfield CCS : 6; /* Cycle Count Status */
     sfr_bitfield resv22 : 2; /* reserved */
    /* const */ sfr_bitfield RCIS : 1; /* Received on Channel Indicator Status (vSS!Channel) */
    /* const */ sfr_bitfield SFIS : 1; /* Startup Frame Indicator Status (vRF!Header!SuFIndicator) */
    /* const */ sfr_bitfield SYNS : 1; /* SYNC Frame Indicator Status (vRF!Header!SyFIndicator) */
    /* const */ sfr_bitfield NFIS : 1; /* NULL Frame Indicator Status (vRF!Header!NFIndicator) */
    /* const */ sfr_bitfield PPIS : 1; /* Payload Preamble Indictor Status (vRF!Header!PPIndicator) */
    /* const */ sfr_bitfield RESS : 1; /* Reserved Bit Status (vRF!Header!Reserved) */
     sfr_bitfield resv30 : 2; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_MBS_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield RHSS : 1; /* Read Header Section Shadow */
     sfr_bitfield RDSS : 1; /* Read Data Section Shadow */
     sfr_bitfield resv2 : 14; /* reserved */
    /* const */ sfr_bitfield RHSH : 1; /* Read Header Section Host */
    /* const */ sfr_bitfield RDSH : 1; /* Read Data Section Host */
     sfr_bitfield resv18 : 14; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_OBCM_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield OBRS : 7; /* Output Buffer Request Shadow */
     sfr_bitfield resv7 : 1; /* reserved */
     sfr_bitfield VIEW : 1; /* View Shadow Buffer */
     sfr_bitfield REQ : 1; /* Request Message RAM Transfer */
     sfr_bitfield resv10 : 5; /* reserved */
    /* const */ sfr_bitfield OBSYS : 1; /* Output Buffer Busy Shadow */
    /* const */ sfr_bitfield OBRH : 7; /* Output Buffer Request Host */
     sfr_bitfield resv23 : 9; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_OBCR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield OTGB0 : 2; /* Trigger Set for OTGB0 */
     sfr_bitfield resv2 : 6; /* reserved */
     sfr_bitfield OTGB1 : 2; /* Trigger Set for OTGB1 */
     sfr_bitfield resv10 : 6; /* reserved */
     sfr_bitfield OTGB2 : 1; /* Trigger Set for OTGB2 */
     sfr_bitfield resv17 : 15; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_OTSS_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield DISR : 1; /* Module Disable Request Bit */
    /* const */ sfr_bitfield DISS : 1; /* Module Disable Status Bit */
     sfr_bitfield resv2 : 1; /* reserved */
     sfr_bitfield EDIS : 1; /* External Sleep Mode Request Disable Bit */
     sfr_bitfield resv4 : 4; /* reserved */
     sfr_bitfield RMC : 3; /* Clock Divider in Run Mode */
     sfr_bitfield resv11 : 21; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_CLC_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield NDIP0 : 1; /* New Data Interrupt Pointer 0 (0 = 0-31) */
     sfr_bitfield NDIP1 : 1; /* New Data Interrupt Pointer 1 (1 = 0-31) */
     sfr_bitfield NDIP2 : 1; /* New Data Interrupt Pointer 2 (2 = 0-31) */
     sfr_bitfield NDIP3 : 1; /* New Data Interrupt Pointer 3 (3 = 0-31) */
     sfr_bitfield NDIP4 : 1; /* New Data Interrupt Pointer 4 (4 = 0-31) */
     sfr_bitfield NDIP5 : 1; /* New Data Interrupt Pointer 5 (5 = 0-31) */
     sfr_bitfield NDIP6 : 1; /* New Data Interrupt Pointer 6 (6 = 0-31) */
     sfr_bitfield NDIP7 : 1; /* New Data Interrupt Pointer 7 (7 = 0-31) */
     sfr_bitfield NDIP8 : 1; /* New Data Interrupt Pointer 8 (8 = 0-31) */
     sfr_bitfield NDIP9 : 1; /* New Data Interrupt Pointer 9 (9 = 0-31) */
     sfr_bitfield NDIP10 : 1; /* New Data Interrupt Pointer 10 (10 = 0-31) */
     sfr_bitfield NDIP11 : 1; /* New Data Interrupt Pointer 11 (11 = 0-31) */
     sfr_bitfield NDIP12 : 1; /* New Data Interrupt Pointer 12 (12 = 0-31) */
     sfr_bitfield NDIP13 : 1; /* New Data Interrupt Pointer 13 (13 = 0-31) */
     sfr_bitfield NDIP14 : 1; /* New Data Interrupt Pointer 14 (14 = 0-31) */
     sfr_bitfield NDIP15 : 1; /* New Data Interrupt Pointer 15 (15 = 0-31) */
     sfr_bitfield NDIP16 : 1; /* New Data Interrupt Pointer 16 (16 = 0-31) */
     sfr_bitfield NDIP17 : 1; /* New Data Interrupt Pointer 17 (17 = 0-31) */
     sfr_bitfield NDIP18 : 1; /* New Data Interrupt Pointer 18 (18 = 0-31) */
     sfr_bitfield NDIP19 : 1; /* New Data Interrupt Pointer 19 (19 = 0-31) */
     sfr_bitfield NDIP20 : 1; /* New Data Interrupt Pointer 20 (20 = 0-31) */
     sfr_bitfield NDIP21 : 1; /* New Data Interrupt Pointer 21 (21 = 0-31) */
     sfr_bitfield NDIP22 : 1; /* New Data Interrupt Pointer 22 (22 = 0-31) */
     sfr_bitfield NDIP23 : 1; /* New Data Interrupt Pointer 23 (23 = 0-31) */
     sfr_bitfield NDIP24 : 1; /* New Data Interrupt Pointer 24 (24 = 0-31) */
     sfr_bitfield NDIP25 : 1; /* New Data Interrupt Pointer 25 (25 = 0-31) */
     sfr_bitfield NDIP26 : 1; /* New Data Interrupt Pointer 26 (26 = 0-31) */
     sfr_bitfield NDIP27 : 1; /* New Data Interrupt Pointer 27 (27 = 0-31) */
     sfr_bitfield NDIP28 : 1; /* New Data Interrupt Pointer 28 (28 = 0-31) */
     sfr_bitfield NDIP29 : 1; /* New Data Interrupt Pointer 29 (29 = 0-31) */
     sfr_bitfield NDIP30 : 1; /* New Data Interrupt Pointer 30 (30 = 0-31) */
     sfr_bitfield NDIP31 : 1; /* New Data Interrupt Pointer 31 (31 = 0-31) */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_NDIC1_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield NDIP32 : 1; /* New Data Interrupt Pointer 32 (32 = 32-63) */
     sfr_bitfield NDIP33 : 1; /* New Data Interrupt Pointer 33 (33 = 32-63) */
     sfr_bitfield NDIP34 : 1; /* New Data Interrupt Pointer 34 (34 = 32-63) */
     sfr_bitfield NDIP35 : 1; /* New Data Interrupt Pointer 35 (35 = 32-63) */
     sfr_bitfield NDIP36 : 1; /* New Data Interrupt Pointer 36 (36 = 32-63) */
     sfr_bitfield NDIP37 : 1; /* New Data Interrupt Pointer 37 (37 = 32-63) */
     sfr_bitfield NDIP38 : 1; /* New Data Interrupt Pointer 38 (38 = 32-63) */
     sfr_bitfield NDIP39 : 1; /* New Data Interrupt Pointer 39 (39 = 32-63) */
     sfr_bitfield NDIP40 : 1; /* New Data Interrupt Pointer 40 (40 = 32-63) */
     sfr_bitfield NDIP41 : 1; /* New Data Interrupt Pointer 41 (41 = 32-63) */
     sfr_bitfield NDIP42 : 1; /* New Data Interrupt Pointer 42 (42 = 32-63) */
     sfr_bitfield NDIP43 : 1; /* New Data Interrupt Pointer 43 (43 = 32-63) */
     sfr_bitfield NDIP44 : 1; /* New Data Interrupt Pointer 44 (44 = 32-63) */
     sfr_bitfield NDIP45 : 1; /* New Data Interrupt Pointer 45 (45 = 32-63) */
     sfr_bitfield NDIP46 : 1; /* New Data Interrupt Pointer 46 (46 = 32-63) */
     sfr_bitfield NDIP47 : 1; /* New Data Interrupt Pointer 47 (47 = 32-63) */
     sfr_bitfield NDIP48 : 1; /* New Data Interrupt Pointer 48 (48 = 32-63) */
     sfr_bitfield NDIP49 : 1; /* New Data Interrupt Pointer 49 (49 = 32-63) */
     sfr_bitfield NDIP50 : 1; /* New Data Interrupt Pointer 50 (50 = 32-63) */
     sfr_bitfield NDIP51 : 1; /* New Data Interrupt Pointer 51 (51 = 32-63) */
     sfr_bitfield NDIP52 : 1; /* New Data Interrupt Pointer 52 (52 = 32-63) */
     sfr_bitfield NDIP53 : 1; /* New Data Interrupt Pointer 53 (53 = 32-63) */
     sfr_bitfield NDIP54 : 1; /* New Data Interrupt Pointer 54 (54 = 32-63) */
     sfr_bitfield NDIP55 : 1; /* New Data Interrupt Pointer 55 (55 = 32-63) */
     sfr_bitfield NDIP56 : 1; /* New Data Interrupt Pointer 56 (56 = 32-63) */
     sfr_bitfield NDIP57 : 1; /* New Data Interrupt Pointer 57 (57 = 32-63) */
     sfr_bitfield NDIP58 : 1; /* New Data Interrupt Pointer 58 (58 = 32-63) */
     sfr_bitfield NDIP59 : 1; /* New Data Interrupt Pointer 59 (59 = 32-63) */
     sfr_bitfield NDIP60 : 1; /* New Data Interrupt Pointer 60 (60 = 32-63) */
     sfr_bitfield NDIP61 : 1; /* New Data Interrupt Pointer 61 (61 = 32-63) */
     sfr_bitfield NDIP62 : 1; /* New Data Interrupt Pointer 62 (62 = 32-63) */
     sfr_bitfield NDIP63 : 1; /* New Data Interrupt Pointer 63 (63 = 32-63) */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_NDIC2_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield NDIP64 : 1; /* New Data Interrupt Pointer 64 (64 = 64-95) */
     sfr_bitfield NDIP65 : 1; /* New Data Interrupt Pointer 65 (65 = 64-95) */
     sfr_bitfield NDIP66 : 1; /* New Data Interrupt Pointer 66 (66 = 64-95) */
     sfr_bitfield NDIP67 : 1; /* New Data Interrupt Pointer 67 (67 = 64-95) */
     sfr_bitfield NDIP68 : 1; /* New Data Interrupt Pointer 68 (68 = 64-95) */
     sfr_bitfield NDIP69 : 1; /* New Data Interrupt Pointer 69 (69 = 64-95) */
     sfr_bitfield NDIP70 : 1; /* New Data Interrupt Pointer 70 (70 = 64-95) */
     sfr_bitfield NDIP71 : 1; /* New Data Interrupt Pointer 71 (71 = 64-95) */
     sfr_bitfield NDIP72 : 1; /* New Data Interrupt Pointer 72 (72 = 64-95) */
     sfr_bitfield NDIP73 : 1; /* New Data Interrupt Pointer 73 (73 = 64-95) */
     sfr_bitfield NDIP74 : 1; /* New Data Interrupt Pointer 74 (74 = 64-95) */
     sfr_bitfield NDIP75 : 1; /* New Data Interrupt Pointer 75 (75 = 64-95) */
     sfr_bitfield NDIP76 : 1; /* New Data Interrupt Pointer 76 (76 = 64-95) */
     sfr_bitfield NDIP77 : 1; /* New Data Interrupt Pointer 77 (77 = 64-95) */
     sfr_bitfield NDIP78 : 1; /* New Data Interrupt Pointer 78 (78 = 64-95) */
     sfr_bitfield NDIP79 : 1; /* New Data Interrupt Pointer 79 (79 = 64-95) */
     sfr_bitfield NDIP80 : 1; /* New Data Interrupt Pointer 80 (80 = 64-95) */
     sfr_bitfield NDIP81 : 1; /* New Data Interrupt Pointer 81 (81 = 64-95) */
     sfr_bitfield NDIP82 : 1; /* New Data Interrupt Pointer 82 (82 = 64-95) */
     sfr_bitfield NDIP83 : 1; /* New Data Interrupt Pointer 83 (83 = 64-95) */
     sfr_bitfield NDIP84 : 1; /* New Data Interrupt Pointer 84 (84 = 64-95) */
     sfr_bitfield NDIP85 : 1; /* New Data Interrupt Pointer 85 (85 = 64-95) */
     sfr_bitfield NDIP86 : 1; /* New Data Interrupt Pointer 86 (86 = 64-95) */
     sfr_bitfield NDIP87 : 1; /* New Data Interrupt Pointer 87 (87 = 64-95) */
     sfr_bitfield NDIP88 : 1; /* New Data Interrupt Pointer 88 (88 = 64-95) */
     sfr_bitfield NDIP89 : 1; /* New Data Interrupt Pointer 89 (89 = 64-95) */
     sfr_bitfield NDIP90 : 1; /* New Data Interrupt Pointer 90 (90 = 64-95) */
     sfr_bitfield NDIP91 : 1; /* New Data Interrupt Pointer 91 (91 = 64-95) */
     sfr_bitfield NDIP92 : 1; /* New Data Interrupt Pointer 92 (92 = 64-95) */
     sfr_bitfield NDIP93 : 1; /* New Data Interrupt Pointer 93 (93 = 64-95) */
     sfr_bitfield NDIP94 : 1; /* New Data Interrupt Pointer 94 (94 = 64-95) */
     sfr_bitfield NDIP95 : 1; /* New Data Interrupt Pointer 95 (95 = 64-95) */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_NDIC3_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield NDIP96 : 1; /* New Data Interrupt Pointer 96 (96 = 96-127) */
     sfr_bitfield NDIP97 : 1; /* New Data Interrupt Pointer 97 (97 = 96-127) */
     sfr_bitfield NDIP98 : 1; /* New Data Interrupt Pointer 98 (98 = 96-127) */
     sfr_bitfield NDIP99 : 1; /* New Data Interrupt Pointer 99 (99 = 96-127) */
     sfr_bitfield NDIP100 : 1; /* New Data Interrupt Pointer 100 (100 = 96-127) */
     sfr_bitfield NDIP101 : 1; /* New Data Interrupt Pointer 101 (101 = 96-127) */
     sfr_bitfield NDIP102 : 1; /* New Data Interrupt Pointer 102 (102 = 96-127) */
     sfr_bitfield NDIP103 : 1; /* New Data Interrupt Pointer 103 (103 = 96-127) */
     sfr_bitfield NDIP104 : 1; /* New Data Interrupt Pointer 104 (104 = 96-127) */
     sfr_bitfield NDIP105 : 1; /* New Data Interrupt Pointer 105 (105 = 96-127) */
     sfr_bitfield NDIP106 : 1; /* New Data Interrupt Pointer 106 (106 = 96-127) */
     sfr_bitfield NDIP107 : 1; /* New Data Interrupt Pointer 107 (107 = 96-127) */
     sfr_bitfield NDIP108 : 1; /* New Data Interrupt Pointer 108 (108 = 96-127) */
     sfr_bitfield NDIP109 : 1; /* New Data Interrupt Pointer 109 (109 = 96-127) */
     sfr_bitfield NDIP110 : 1; /* New Data Interrupt Pointer 110 (110 = 96-127) */
     sfr_bitfield NDIP111 : 1; /* New Data Interrupt Pointer 111 (111 = 96-127) */
     sfr_bitfield NDIP112 : 1; /* New Data Interrupt Pointer 112 (112 = 96-127) */
     sfr_bitfield NDIP113 : 1; /* New Data Interrupt Pointer 113 (113 = 96-127) */
     sfr_bitfield NDIP114 : 1; /* New Data Interrupt Pointer 114 (114 = 96-127) */
     sfr_bitfield NDIP115 : 1; /* New Data Interrupt Pointer 115 (115 = 96-127) */
     sfr_bitfield NDIP116 : 1; /* New Data Interrupt Pointer 116 (116 = 96-127) */
     sfr_bitfield NDIP117 : 1; /* New Data Interrupt Pointer 117 (117 = 96-127) */
     sfr_bitfield NDIP118 : 1; /* New Data Interrupt Pointer 118 (118 = 96-127) */
     sfr_bitfield NDIP119 : 1; /* New Data Interrupt Pointer 119 (119 = 96-127) */
     sfr_bitfield NDIP120 : 1; /* New Data Interrupt Pointer 120 (120 = 96-127) */
     sfr_bitfield NDIP121 : 1; /* New Data Interrupt Pointer 121 (121 = 96-127) */
     sfr_bitfield NDIP122 : 1; /* New Data Interrupt Pointer 122 (122 = 96-127) */
     sfr_bitfield NDIP123 : 1; /* New Data Interrupt Pointer 123 (123 = 96-127) */
     sfr_bitfield NDIP124 : 1; /* New Data Interrupt Pointer 124 (124 = 96-127) */
     sfr_bitfield NDIP125 : 1; /* New Data Interrupt Pointer 125 (125 = 96-127) */
     sfr_bitfield NDIP126 : 1; /* New Data Interrupt Pointer 126 (126 = 96-127) */
     sfr_bitfield NDIP127 : 1; /* New Data Interrupt Pointer 127 (127 = 96-127) */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_NDIC4_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield MSIP0 : 1; /* Message Buffer Status Changed Interrupt Pointer 0 (0 = 0-31) */
     sfr_bitfield MSIP1 : 1; /* Message Buffer Status Changed Interrupt Pointer 1 (1 = 0-31) */
     sfr_bitfield MSIP2 : 1; /* Message Buffer Status Changed Interrupt Pointer 2 (2 = 0-31) */
     sfr_bitfield MSIP3 : 1; /* Message Buffer Status Changed Interrupt Pointer 3 (3 = 0-31) */
     sfr_bitfield MSIP4 : 1; /* Message Buffer Status Changed Interrupt Pointer 4 (4 = 0-31) */
     sfr_bitfield MSIP5 : 1; /* Message Buffer Status Changed Interrupt Pointer 5 (5 = 0-31) */
     sfr_bitfield MSIP6 : 1; /* Message Buffer Status Changed Interrupt Pointer 6 (6 = 0-31) */
     sfr_bitfield MSIP7 : 1; /* Message Buffer Status Changed Interrupt Pointer 7 (7 = 0-31) */
     sfr_bitfield MSIP8 : 1; /* Message Buffer Status Changed Interrupt Pointer 8 (8 = 0-31) */
     sfr_bitfield MSIP9 : 1; /* Message Buffer Status Changed Interrupt Pointer 9 (9 = 0-31) */
     sfr_bitfield MSIP10 : 1; /* Message Buffer Status Changed Interrupt Pointer 10 (10 = 0-31) */
     sfr_bitfield MSIP11 : 1; /* Message Buffer Status Changed Interrupt Pointer 11 (11 = 0-31) */
     sfr_bitfield MSIP12 : 1; /* Message Buffer Status Changed Interrupt Pointer 12 (12 = 0-31) */
     sfr_bitfield MSIP13 : 1; /* Message Buffer Status Changed Interrupt Pointer 13 (13 = 0-31) */
     sfr_bitfield MSIP14 : 1; /* Message Buffer Status Changed Interrupt Pointer 14 (14 = 0-31) */
     sfr_bitfield MSIP15 : 1; /* Message Buffer Status Changed Interrupt Pointer 15 (15 = 0-31) */
     sfr_bitfield MSIP16 : 1; /* Message Buffer Status Changed Interrupt Pointer 16 (16 = 0-31) */
     sfr_bitfield MSIP17 : 1; /* Message Buffer Status Changed Interrupt Pointer 17 (17 = 0-31) */
     sfr_bitfield MSIP18 : 1; /* Message Buffer Status Changed Interrupt Pointer 18 (18 = 0-31) */
     sfr_bitfield MSIP19 : 1; /* Message Buffer Status Changed Interrupt Pointer 19 (19 = 0-31) */
     sfr_bitfield MSIP20 : 1; /* Message Buffer Status Changed Interrupt Pointer 20 (20 = 0-31) */
     sfr_bitfield MSIP21 : 1; /* Message Buffer Status Changed Interrupt Pointer 21 (21 = 0-31) */
     sfr_bitfield MSIP22 : 1; /* Message Buffer Status Changed Interrupt Pointer 22 (22 = 0-31) */
     sfr_bitfield MSIP23 : 1; /* Message Buffer Status Changed Interrupt Pointer 23 (23 = 0-31) */
     sfr_bitfield MSIP24 : 1; /* Message Buffer Status Changed Interrupt Pointer 24 (24 = 0-31) */
     sfr_bitfield MSIP25 : 1; /* Message Buffer Status Changed Interrupt Pointer 25 (25 = 0-31) */
     sfr_bitfield MSIP26 : 1; /* Message Buffer Status Changed Interrupt Pointer 26 (26 = 0-31) */
     sfr_bitfield MSIP27 : 1; /* Message Buffer Status Changed Interrupt Pointer 27 (27 = 0-31) */
     sfr_bitfield MSIP28 : 1; /* Message Buffer Status Changed Interrupt Pointer 28 (28 = 0-31) */
     sfr_bitfield MSIP29 : 1; /* Message Buffer Status Changed Interrupt Pointer 29 (29 = 0-31) */
     sfr_bitfield MSIP30 : 1; /* Message Buffer Status Changed Interrupt Pointer 30 (30 = 0-31) */
     sfr_bitfield MSIP31 : 1; /* Message Buffer Status Changed Interrupt Pointer 31 (31 = 0-31) */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_MSIC1_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield MSIP32 : 1; /* Message Buffer Status Changed Interrupt Pointer 32 (32 = 32-63) */
    /* const */ sfr_bitfield MSIP33 : 1; /* Message Buffer Status Changed Interrupt Pointer 33 (33 = 32-63) */
    /* const */ sfr_bitfield MSIP34 : 1; /* Message Buffer Status Changed Interrupt Pointer 34 (34 = 32-63) */
    /* const */ sfr_bitfield MSIP35 : 1; /* Message Buffer Status Changed Interrupt Pointer 35 (35 = 32-63) */
    /* const */ sfr_bitfield MSIP36 : 1; /* Message Buffer Status Changed Interrupt Pointer 36 (36 = 32-63) */
    /* const */ sfr_bitfield MSIP37 : 1; /* Message Buffer Status Changed Interrupt Pointer 37 (37 = 32-63) */
    /* const */ sfr_bitfield MSIP38 : 1; /* Message Buffer Status Changed Interrupt Pointer 38 (38 = 32-63) */
    /* const */ sfr_bitfield MSIP39 : 1; /* Message Buffer Status Changed Interrupt Pointer 39 (39 = 32-63) */
    /* const */ sfr_bitfield MSIP40 : 1; /* Message Buffer Status Changed Interrupt Pointer 40 (40 = 32-63) */
    /* const */ sfr_bitfield MSIP41 : 1; /* Message Buffer Status Changed Interrupt Pointer 41 (41 = 32-63) */
    /* const */ sfr_bitfield MSIP42 : 1; /* Message Buffer Status Changed Interrupt Pointer 42 (42 = 32-63) */
    /* const */ sfr_bitfield MSIP43 : 1; /* Message Buffer Status Changed Interrupt Pointer 43 (43 = 32-63) */
    /* const */ sfr_bitfield MSIP44 : 1; /* Message Buffer Status Changed Interrupt Pointer 44 (44 = 32-63) */
    /* const */ sfr_bitfield MSIP45 : 1; /* Message Buffer Status Changed Interrupt Pointer 45 (45 = 32-63) */
    /* const */ sfr_bitfield MSIP46 : 1; /* Message Buffer Status Changed Interrupt Pointer 46 (46 = 32-63) */
    /* const */ sfr_bitfield MSIP47 : 1; /* Message Buffer Status Changed Interrupt Pointer 47 (47 = 32-63) */
    /* const */ sfr_bitfield MSIP48 : 1; /* Message Buffer Status Changed Interrupt Pointer 48 (48 = 32-63) */
    /* const */ sfr_bitfield MSIP49 : 1; /* Message Buffer Status Changed Interrupt Pointer 49 (49 = 32-63) */
    /* const */ sfr_bitfield MSIP50 : 1; /* Message Buffer Status Changed Interrupt Pointer 50 (50 = 32-63) */
    /* const */ sfr_bitfield MSIP51 : 1; /* Message Buffer Status Changed Interrupt Pointer 51 (51 = 32-63) */
    /* const */ sfr_bitfield MSIP52 : 1; /* Message Buffer Status Changed Interrupt Pointer 52 (52 = 32-63) */
    /* const */ sfr_bitfield MSIP53 : 1; /* Message Buffer Status Changed Interrupt Pointer 53 (53 = 32-63) */
    /* const */ sfr_bitfield MSIP54 : 1; /* Message Buffer Status Changed Interrupt Pointer 54 (54 = 32-63) */
    /* const */ sfr_bitfield MSIP55 : 1; /* Message Buffer Status Changed Interrupt Pointer 55 (55 = 32-63) */
    /* const */ sfr_bitfield MSIP56 : 1; /* Message Buffer Status Changed Interrupt Pointer 56 (56 = 32-63) */
    /* const */ sfr_bitfield MSIP57 : 1; /* Message Buffer Status Changed Interrupt Pointer 57 (57 = 32-63) */
    /* const */ sfr_bitfield MSIP58 : 1; /* Message Buffer Status Changed Interrupt Pointer 58 (58 = 32-63) */
    /* const */ sfr_bitfield MSIP59 : 1; /* Message Buffer Status Changed Interrupt Pointer 59 (59 = 32-63) */
    /* const */ sfr_bitfield MSIP60 : 1; /* Message Buffer Status Changed Interrupt Pointer 60 (60 = 32-63) */
    /* const */ sfr_bitfield MSIP61 : 1; /* Message Buffer Status Changed Interrupt Pointer 61 (61 = 32-63) */
    /* const */ sfr_bitfield MSIP62 : 1; /* Message Buffer Status Changed Interrupt Pointer 62 (62 = 32-63) */
    /* const */ sfr_bitfield MSIP63 : 1; /* Message Buffer Status Changed Interrupt Pointer 63 (63 = 32-63) */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_MSIC2_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield MSIP64 : 1; /* Message Buffer Status Changed Interrupt Pointer 64 (64 = 64-95) */
     sfr_bitfield MSIP65 : 1; /* Message Buffer Status Changed Interrupt Pointer 65 (65 = 64-95) */
     sfr_bitfield MSIP66 : 1; /* Message Buffer Status Changed Interrupt Pointer 66 (66 = 64-95) */
     sfr_bitfield MSIP67 : 1; /* Message Buffer Status Changed Interrupt Pointer 67 (67 = 64-95) */
     sfr_bitfield MSIP68 : 1; /* Message Buffer Status Changed Interrupt Pointer 68 (68 = 64-95) */
     sfr_bitfield MSIP69 : 1; /* Message Buffer Status Changed Interrupt Pointer 69 (69 = 64-95) */
     sfr_bitfield MSIP70 : 1; /* Message Buffer Status Changed Interrupt Pointer 70 (70 = 64-95) */
     sfr_bitfield MSIP71 : 1; /* Message Buffer Status Changed Interrupt Pointer 71 (71 = 64-95) */
     sfr_bitfield MSIP72 : 1; /* Message Buffer Status Changed Interrupt Pointer 72 (72 = 64-95) */
     sfr_bitfield MSIP73 : 1; /* Message Buffer Status Changed Interrupt Pointer 73 (73 = 64-95) */
     sfr_bitfield MSIP74 : 1; /* Message Buffer Status Changed Interrupt Pointer 74 (74 = 64-95) */
     sfr_bitfield MSIP75 : 1; /* Message Buffer Status Changed Interrupt Pointer 75 (75 = 64-95) */
     sfr_bitfield MSIP76 : 1; /* Message Buffer Status Changed Interrupt Pointer 76 (76 = 64-95) */
     sfr_bitfield MSIP77 : 1; /* Message Buffer Status Changed Interrupt Pointer 77 (77 = 64-95) */
     sfr_bitfield MSIP78 : 1; /* Message Buffer Status Changed Interrupt Pointer 78 (78 = 64-95) */
     sfr_bitfield MSIP79 : 1; /* Message Buffer Status Changed Interrupt Pointer 79 (79 = 64-95) */
     sfr_bitfield MSIP80 : 1; /* Message Buffer Status Changed Interrupt Pointer 80 (80 = 64-95) */
     sfr_bitfield MSIP81 : 1; /* Message Buffer Status Changed Interrupt Pointer 81 (81 = 64-95) */
     sfr_bitfield MSIP82 : 1; /* Message Buffer Status Changed Interrupt Pointer 82 (82 = 64-95) */
     sfr_bitfield MSIP83 : 1; /* Message Buffer Status Changed Interrupt Pointer 83 (83 = 64-95) */
     sfr_bitfield MSIP84 : 1; /* Message Buffer Status Changed Interrupt Pointer 84 (84 = 64-95) */
     sfr_bitfield MSIP85 : 1; /* Message Buffer Status Changed Interrupt Pointer 85 (85 = 64-95) */
     sfr_bitfield MSIP86 : 1; /* Message Buffer Status Changed Interrupt Pointer 86 (86 = 64-95) */
     sfr_bitfield MSIP87 : 1; /* Message Buffer Status Changed Interrupt Pointer 87 (87 = 64-95) */
     sfr_bitfield MSIP88 : 1; /* Message Buffer Status Changed Interrupt Pointer 88 (88 = 64-95) */
     sfr_bitfield MSIP89 : 1; /* Message Buffer Status Changed Interrupt Pointer 89 (89 = 64-95) */
     sfr_bitfield MSIP90 : 1; /* Message Buffer Status Changed Interrupt Pointer 90 (90 = 64-95) */
     sfr_bitfield MSIP91 : 1; /* Message Buffer Status Changed Interrupt Pointer 91 (91 = 64-95) */
     sfr_bitfield MSIP92 : 1; /* Message Buffer Status Changed Interrupt Pointer 92 (92 = 64-95) */
     sfr_bitfield MSIP93 : 1; /* Message Buffer Status Changed Interrupt Pointer 93 (93 = 64-95) */
     sfr_bitfield MSIP94 : 1; /* Message Buffer Status Changed Interrupt Pointer 94 (94 = 64-95) */
     sfr_bitfield MSIP95 : 1; /* Message Buffer Status Changed Interrupt Pointer 95 (95 = 64-95) */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_MSIC3_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield MSIP96 : 1; /* Message Buffer Status Changed Interrupt Pointer 96 (96 = 96-127) */
     sfr_bitfield MSIP97 : 1; /* Message Buffer Status Changed Interrupt Pointer 97 (97 = 96-127) */
     sfr_bitfield MSIP98 : 1; /* Message Buffer Status Changed Interrupt Pointer 98 (98 = 96-127) */
     sfr_bitfield MSIP99 : 1; /* Message Buffer Status Changed Interrupt Pointer 99 (99 = 96-127) */
     sfr_bitfield MSIP100 : 1; /* Message Buffer Status Changed Interrupt Pointer 100 (100 = 96-127) */
     sfr_bitfield MSIP101 : 1; /* Message Buffer Status Changed Interrupt Pointer 101 (101 = 96-127) */
     sfr_bitfield MSIP102 : 1; /* Message Buffer Status Changed Interrupt Pointer 102 (102 = 96-127) */
     sfr_bitfield MSIP103 : 1; /* Message Buffer Status Changed Interrupt Pointer 103 (103 = 96-127) */
     sfr_bitfield MSIP104 : 1; /* Message Buffer Status Changed Interrupt Pointer 104 (104 = 96-127) */
     sfr_bitfield MSIP105 : 1; /* Message Buffer Status Changed Interrupt Pointer 105 (105 = 96-127) */
     sfr_bitfield MSIP106 : 1; /* Message Buffer Status Changed Interrupt Pointer 106 (106 = 96-127) */
     sfr_bitfield MSIP107 : 1; /* Message Buffer Status Changed Interrupt Pointer 107 (107 = 96-127) */
     sfr_bitfield MSIP108 : 1; /* Message Buffer Status Changed Interrupt Pointer 108 (108 = 96-127) */
     sfr_bitfield MSIP109 : 1; /* Message Buffer Status Changed Interrupt Pointer 109 (109 = 96-127) */
     sfr_bitfield MSIP110 : 1; /* Message Buffer Status Changed Interrupt Pointer 110 (110 = 96-127) */
     sfr_bitfield MSIP111 : 1; /* Message Buffer Status Changed Interrupt Pointer 111 (111 = 96-127) */
     sfr_bitfield MSIP112 : 1; /* Message Buffer Status Changed Interrupt Pointer 112 (112 = 96-127) */
     sfr_bitfield MSIP113 : 1; /* Message Buffer Status Changed Interrupt Pointer 113 (113 = 96-127) */
     sfr_bitfield MSIP114 : 1; /* Message Buffer Status Changed Interrupt Pointer 114 (114 = 96-127) */
     sfr_bitfield MSIP115 : 1; /* Message Buffer Status Changed Interrupt Pointer 115 (115 = 96-127) */
     sfr_bitfield MSIP116 : 1; /* Message Buffer Status Changed Interrupt Pointer 116 (116 = 96-127) */
     sfr_bitfield MSIP117 : 1; /* Message Buffer Status Changed Interrupt Pointer 117 (117 = 96-127) */
     sfr_bitfield MSIP118 : 1; /* Message Buffer Status Changed Interrupt Pointer 118 (118 = 96-127) */
     sfr_bitfield MSIP119 : 1; /* Message Buffer Status Changed Interrupt Pointer 119 (119 = 96-127) */
     sfr_bitfield MSIP120 : 1; /* Message Buffer Status Changed Interrupt Pointer 120 (120 = 96-127) */
     sfr_bitfield MSIP121 : 1; /* Message Buffer Status Changed Interrupt Pointer 121 (121 = 96-127) */
     sfr_bitfield MSIP122 : 1; /* Message Buffer Status Changed Interrupt Pointer 122 (122 = 96-127) */
     sfr_bitfield MSIP123 : 1; /* Message Buffer Status Changed Interrupt Pointer 123 (123 = 96-127) */
     sfr_bitfield MSIP124 : 1; /* Message Buffer Status Changed Interrupt Pointer 124 (124 = 96-127) */
     sfr_bitfield MSIP125 : 1; /* Message Buffer Status Changed Interrupt Pointer 125 (125 = 96-127) */
     sfr_bitfield MSIP126 : 1; /* Message Buffer Status Changed Interrupt Pointer 126 (126 = 96-127) */
     sfr_bitfield MSIP127 : 1; /* Message Buffer Status Changed Interrupt Pointer 127 (127 = 96-127) */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} ERAY_MSIC4_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield STM : 32; /* System Timer Bits [31:0] */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} STM0_TIM0_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield STM : 32; /* System Timer Bits [35:4] */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} STM0_TIM1_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield STM : 32; /* System Timer Bits [39:8] */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} STM0_TIM2_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield STM : 32; /* System Timer Bits [43:12] */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} STM0_TIM3_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield STM : 32; /* System Timer Bits [47:16] */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} STM0_TIM4_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield STM : 32; /* System Timer Bits [51:20] */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} STM0_TIM5_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield STM : 32; /* System Timer Bits [63:32] */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} STM0_TIM6_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield STMCAP : 32; /* Captured System Timer Bits [63:32] */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} STM0_CAP_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CMPVAL : 32; /* Compare Value of Compare Register x */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} STM0_CMP0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield MSIZE0 : 5; /* Compare Register Size for CMP0 */
     sfr_bitfield resv5 : 3; /* reserved */
     sfr_bitfield MSTART0 : 5; /* Start Bit Location for CMP0 */
     sfr_bitfield resv13 : 3; /* reserved */
     sfr_bitfield MSIZE1 : 5; /* Compare Register Size for CMP1 */
     sfr_bitfield resv21 : 3; /* reserved */
     sfr_bitfield MSTART1 : 5; /* Start Bit Location for CMP1 */
     sfr_bitfield resv29 : 3; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} STM0_CMCON_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CMP0EN : 1; /* Compare Register CMP0 Interrupt Enable Control */
    /* const */ sfr_bitfield CMP0IR : 1; /* Compare Register CMP0 Interrupt Request Flag */
     sfr_bitfield CMP0OS : 1; /* Compare Register CMP0 Interrupt Output Selection */
     sfr_bitfield resv3 : 1; /* reserved */
     sfr_bitfield CMP1EN : 1; /* Compare Register CMP1 Interrupt Enable Control */
    /* const */ sfr_bitfield CMP1IR : 1; /* Compare Register CMP1 Interrupt Request Flag */
     sfr_bitfield CMP1OS : 1; /* Compare Register CMP1 Interrupt Output Selection */
     sfr_bitfield resv7 : 25; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} STM0_ICR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CMP0IRR : 1; /* Reset Compare Register CMP0 Interrupt Flag */
     sfr_bitfield CMP0IRS : 1; /* Set Compare Register CMP0 Interrupt Flag */
     sfr_bitfield CMP1IRR : 1; /* Reset Compare Register CMP1 Interrupt Flag */
     sfr_bitfield CMP1IRS : 1; /* Set Compare Register CMP1 Interrupt Flag */
     sfr_bitfield resv4 : 28; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} STM0_ISCR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield T2 : 16; /* Timer T2 */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GPT120_T2_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield T3 : 16; /* Timer T3 */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GPT120_T3_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield T4 : 16; /* Timer T4 */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GPT120_T4_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield T3I : 3; /* Timer T3 Input Parameter Selection */
     sfr_bitfield T3M : 3; /* Timer T3 Mode Control */
     sfr_bitfield T3R : 1; /* Timer T3 Run Bit */
     sfr_bitfield T3UD : 1; /* Timer T3 Up/Down Control */
     sfr_bitfield T3UDE : 1; /* Timer T3 External Up/Down Enable */
     sfr_bitfield T3OE : 1; /* Overflow/Underflow Output Enable */
     sfr_bitfield T3OTL : 1; /* Timer T3 Overflow Toggle Latch */
     sfr_bitfield BPS1 : 2; /* GPT1 Block Prescaler Control */
     sfr_bitfield T3EDGE : 1; /* Timer T3 Edge Detection Flag */
     sfr_bitfield T3CHDIR : 1; /* Timer T3 Count Direction Change Flag */
    /* const */ sfr_bitfield T3RDIR : 1; /* Timer T3 Rotation Direction Flag */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GPT120_T3CON_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield T2I : 3; /* Timer T2 Input Parameter Selection */
     sfr_bitfield T2M : 3; /* Timer T2 Mode Control (Basic Operating Mode) */
     sfr_bitfield T2R : 1; /* Timer T2 Run Bit */
     sfr_bitfield T2UD : 1; /* Timer T2 Up/Down Control */
     sfr_bitfield T2UDE : 1; /* Timer T2 External Up/Down Enable */
     sfr_bitfield T2RC : 1; /* Timer T2 Remote Control */
     sfr_bitfield resv10 : 2; /* reserved */
     sfr_bitfield T2IRDIS : 1; /* Timer T2 Interrupt Disable */
     sfr_bitfield T2EDGE : 1; /* Timer T2 Edge Detection */
     sfr_bitfield T2CHDIR : 1; /* Timer T2 Count Direction Change */
    /* const */ sfr_bitfield T2RDIR : 1; /* Timer T2 Rotation Direction */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GPT120_T2CON_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield T4I : 3; /* Timer T4 Input Parameter Selection */
     sfr_bitfield T4M : 3; /* Timer T4 Mode Control (Basic Operating Mode) */
     sfr_bitfield T4R : 1; /* Timer T4 Run Bit */
     sfr_bitfield T4UD : 1; /* Timer T4 Up/Down Control */
     sfr_bitfield T4UDE : 1; /* Timer T4 External Up/Down Enable */
     sfr_bitfield T4RC : 1; /* Timer T4 Remote Control */
     sfr_bitfield CLRT2EN : 1; /* Clear Timer T2 Enable */
     sfr_bitfield CLRT3EN : 1; /* Clear Timer T3 Enable */
     sfr_bitfield T4IRDIS : 1; /* Timer T4 Interrupt Disable */
     sfr_bitfield T4EDGE : 1; /* Timer T4 Edge Detection */
     sfr_bitfield T4CHDIR : 1; /* Timer T4 Count Direction Change */
    /* const */ sfr_bitfield T4RDIR : 1; /* Timer T4 Rotation Direction */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GPT120_T4CON_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield T5 : 16; /* Timer T5 */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GPT120_T5_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield T6 : 16; /* Timer T6 */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GPT120_T6_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CAPREL : 16; /* Current reload value or Captured value */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GPT120_CAPREL_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield T6I : 3; /* Timer T6 Input Parameter Selection */
     sfr_bitfield T6M : 3; /* Timer T6 Mode Control (Basic Operating Mode) */
     sfr_bitfield T6R : 1; /* Timer T6 Run Bit */
     sfr_bitfield T6UD : 1; /* Timer T6 Up/Down Control */
     sfr_bitfield T6UDE : 1; /* Timer T6 External Up/Down Enable */
     sfr_bitfield T6OE : 1; /* Overflow/Underflow Output Enable */
     sfr_bitfield T6OTL : 1; /* Timer T6 Overflow Toggle Latch */
     sfr_bitfield BPS2 : 2; /* GPT2 Block Prescaler Control */
     sfr_bitfield resv13 : 1; /* reserved */
     sfr_bitfield T6CLR : 1; /* Timer T6 Clear Enable Bit */
     sfr_bitfield T6SR : 1; /* Timer T6 Reload Mode Enable */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GPT120_T6CON_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield T5I : 3; /* Timer T5 Input Parameter Selection */
     sfr_bitfield T5M : 3; /* Timer T5 Mode Control (Basic Operating Mode) */
     sfr_bitfield T5R : 1; /* Timer T5 Run Bit */
     sfr_bitfield T5UD : 1; /* Timer T5 Up/Down Control */
     sfr_bitfield T5UDE : 1; /* Timer T5 External Up/Down Enable */
     sfr_bitfield T5RC : 1; /* Timer T5 Remote Control */
     sfr_bitfield CT3 : 1; /* Timer T3 Capture Trigger Enable */
     sfr_bitfield resv11 : 1; /* reserved */
     sfr_bitfield CI : 2; /* Register CAPREL Capture Trigger Selection */
     sfr_bitfield T5CLR : 1; /* Timer T5 Clear Enable Bit */
     sfr_bitfield T5SC : 1; /* Timer T5 Capture Mode Enable */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GPT120_T5CON_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield IST2IN : 1; /* Input Select for T2IN */
     sfr_bitfield IST2EUD : 1; /* Input Select for T2EUD */
     sfr_bitfield IST3IN : 2; /* Input Select for T3IN */
     sfr_bitfield IST3EUD : 2; /* Input Select for T3EUD */
     sfr_bitfield IST4IN : 2; /* Input Select for T4IN */
     sfr_bitfield IST4EUD : 2; /* Input Select for T4EUD */
     sfr_bitfield IST5IN : 1; /* Input Select for T5IN */
     sfr_bitfield IST5EUD : 1; /* Input Select for T5EUD */
     sfr_bitfield IST6IN : 1; /* Input Select for T6IN */
     sfr_bitfield IST6EUD : 1; /* Input Select for T6EUD */
     sfr_bitfield ISCAPIN : 2; /* Input Select for CAPIN */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GPT120_PISEL_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield T12CV : 16; /* Timer 12 Counter Value */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CCU60_T12_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield T12PV : 16; /* T12 Period Value */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CCU60_T12PR_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield CCV : 16; /* Capture/Compare Value */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CCU60_CC60R_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CCS : 16; /* Shadow Register for Channel x Capture/Compare Value */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CCU60_CC60SR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield DTM : 8; /* Dead-Time */
     sfr_bitfield DTE0 : 1; /* Dead Time Enable Bits */
     sfr_bitfield DTE1 : 1; /* Dead Time Enable Bits */
     sfr_bitfield DTE2 : 1; /* Dead Time Enable Bits */
     sfr_bitfield resv11 : 1; /* reserved */
    /* const */ sfr_bitfield DTR0 : 1; /* Dead Time Run Indication Bits */
    /* const */ sfr_bitfield DTR1 : 1; /* Dead Time Run Indication Bits */
    /* const */ sfr_bitfield DTR2 : 1; /* Dead Time Run Indication Bits */
     sfr_bitfield resv15 : 17; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CCU60_T12DTC_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield CC60ST : 1; /* Capture/Compare State Bits */
    /* const */ sfr_bitfield CC61ST : 1; /* Capture/Compare State Bits */
    /* const */ sfr_bitfield CC62ST : 1; /* Capture/Compare State Bits */
    /* const */ sfr_bitfield CCPOS60 : 1; /* Sampled Hall Pattern Bits */
    /* const */ sfr_bitfield CCPOS61 : 1; /* Sampled Hall Pattern Bits */
    /* const */ sfr_bitfield CCPOS62 : 1; /* Sampled Hall Pattern Bits */
    /* const */ sfr_bitfield CC63ST : 1; /* Capture/Compare State Bits */
     sfr_bitfield resv7 : 1; /* reserved */
     sfr_bitfield CC60PS : 1; /* Passive State Select for Compare Outputs */
     sfr_bitfield COUT60PS : 1; /* Passive State Select for Compare Outputs */
     sfr_bitfield CC61PS : 1; /* Passive State Select for Compare Outputs */
     sfr_bitfield COUT61PS : 1; /* Passive State Select for Compare Outputs */
     sfr_bitfield CC62PS : 1; /* Passive State Select for Compare Outputs */
     sfr_bitfield COUT62PS : 1; /* Passive State Select for Compare Outputs */
     sfr_bitfield COUT63PS : 1; /* Passive State Select for Compare Outputs */
     sfr_bitfield T13IM : 1; /* T13 Inverted Modulation */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CCU60_CMPSTAT_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield MCC60S : 1; /* Capture/Compare Status Modification Bits */
     sfr_bitfield MCC61S : 1; /* Capture/Compare Status Modification Bits */
     sfr_bitfield MCC62S : 1; /* Capture/Compare Status Modification Bits */
     sfr_bitfield resv3 : 3; /* reserved */
     sfr_bitfield MCC63S : 1; /* Capture/Compare Status Modification Bits */
     sfr_bitfield resv7 : 1; /* reserved */
     sfr_bitfield MCC60R : 1; /* Capture/Compare Status Modification Bits */
     sfr_bitfield MCC61R : 1; /* Capture/Compare Status Modification Bits */
     sfr_bitfield MCC62R : 1; /* Capture/Compare Status Modification Bits */
     sfr_bitfield resv11 : 3; /* reserved */
     sfr_bitfield MCC63R : 1; /* Capture/Compare Status Modification Bits */
     sfr_bitfield resv15 : 17; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CCU60_CMPMODIF_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield MSEL60 : 4; /* Capture/Compare Mode Selection */
     sfr_bitfield MSEL61 : 4; /* Capture/Compare Mode Selection */
     sfr_bitfield MSEL62 : 4; /* Capture/Compare Mode Selection */
     sfr_bitfield HSYNC : 3; /* Hall Synchronization */
     sfr_bitfield DBYP : 1; /* Delay Bypass */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CCU60_T12MSEL_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield T12CLK : 3; /* Timer T12 Input Clock Select */
     sfr_bitfield T12PRE : 1; /* Timer T12 Prescaler Bit */
    /* const */ sfr_bitfield T12R : 1; /* Timer T12 Run Bit */
    /* const */ sfr_bitfield STE12 : 1; /* Timer T12 Shadow Transfer Enable */
    /* const */ sfr_bitfield CDIR : 1; /* Count Direction of Timer T12 */
     sfr_bitfield CTM : 1; /* T12 Operating Mode */
     sfr_bitfield T13CLK : 3; /* Timer T13 Input Clock Select */
     sfr_bitfield T13PRE : 1; /* Timer T13 Prescaler Bit */
    /* const */ sfr_bitfield T13R : 1; /* Timer T13 Run Bit */
    /* const */ sfr_bitfield STE13 : 1; /* Timer T13 Shadow Transfer Enable */
     sfr_bitfield resv14 : 18; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CCU60_TCTR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield T12SSC : 1; /* Timer T12 Single Shot Control */
     sfr_bitfield T13SSC : 1; /* Timer T13 Single Shot Control */
     sfr_bitfield T13TEC : 3; /* T13 Trigger Event Control */
     sfr_bitfield T13TED : 2; /* Timer T13 Trigger Event Direction */
     sfr_bitfield resv7 : 1; /* reserved */
     sfr_bitfield T12RSEL : 2; /* Timer T12 External Run Selection */
     sfr_bitfield T13RSEL : 2; /* Timer T13 External Run Selection */
     sfr_bitfield resv12 : 20; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CCU60_TCTR2_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield T12RR : 1; /* Timer T12 Run Reset */
     sfr_bitfield T12RS : 1; /* Timer T12 Run Set */
     sfr_bitfield T12RES : 1; /* Timer T12 Reset */
     sfr_bitfield DTRES : 1; /* Dead-Time Counter Reset */
     sfr_bitfield resv4 : 1; /* reserved */
     sfr_bitfield T12CNT : 1; /* Timer T12 Count Event */
     sfr_bitfield T12STR : 1; /* Timer T12 Shadow Transfer Request */
     sfr_bitfield T12STD : 1; /* Timer T12 Shadow Transfer Disable */
     sfr_bitfield T13RR : 1; /* Timer T13 Run Reset */
     sfr_bitfield T13RS : 1; /* Timer T13 Run Set */
     sfr_bitfield T13RES : 1; /* Timer T13 Reset */
     sfr_bitfield resv11 : 2; /* reserved */
     sfr_bitfield T13CNT : 1; /* Timer T13 Count Event */
     sfr_bitfield T13STR : 1; /* Timer T13 Shadow Transfer Request */
     sfr_bitfield T13STD : 1; /* Timer T13 Shadow Transfer Disable */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CCU60_TCTR4_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield T13CV : 16; /* Timer 13 Counter Value */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CCU60_T13_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield T13PV : 16; /* T13 Period Value */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CCU60_T13PR_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield CCV : 16; /* Channel CC63 Compare Value */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CCU60_CC63R_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CCS : 16; /* Shadow Register for Channel CC63 Compare Value */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CCU60_CC63SR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield T12MODEN : 6; /* T12 Modulation Enable */
     sfr_bitfield resv6 : 1; /* reserved */
     sfr_bitfield MCMEN : 1; /* Multi-Channel Mode Enable */
     sfr_bitfield T13MODEN : 6; /* T13 Modulation Enable */
     sfr_bitfield resv14 : 1; /* reserved */
     sfr_bitfield ECT13O : 1; /* Enable Compare Timer T13 Output */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CCU60_MODCTR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield TRPM0 : 1; /* Trap Mode Control Bits 1, 0 */
     sfr_bitfield TRPM1 : 1; /* Trap Mode Control Bits 1, 0 */
     sfr_bitfield TRPM2 : 1; /* Trap Mode Control Bit 2 */
     sfr_bitfield resv3 : 5; /* reserved */
     sfr_bitfield TRPEN : 6; /* Trap Enable Control */
     sfr_bitfield TRPEN13 : 1; /* Trap Enable Control for Timer T13 */
     sfr_bitfield TRPPEN : 1; /* Trap Pin Enable */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CCU60_TRPCTR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PSL : 6; /* Compare Outputs Passive State Level */
     sfr_bitfield resv6 : 1; /* reserved */
     sfr_bitfield PSL63 : 1; /* Passive State Level of Output COUT63 */
     sfr_bitfield resv8 : 24; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CCU60_PSLR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield SWSEL : 3; /* Switching Selection */
     sfr_bitfield resv3 : 1; /* reserved */
     sfr_bitfield SWSYN : 2; /* Switching Synchronization */
     sfr_bitfield resv6 : 2; /* reserved */
     sfr_bitfield STE12U : 1; /* Shadow Transfer Enable for T12 Upcounting */
     sfr_bitfield STE12D : 1; /* Shadow Transfer Enable for T12 Downcounting */
     sfr_bitfield STE13U : 1; /* Shadow Transfer Enable for T13 Upcounting */
     sfr_bitfield resv11 : 21; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CCU60_MCMCTR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield MCMPS : 6; /* Multi-Channel PWM Pattern Shadow */
     sfr_bitfield resv6 : 1; /* reserved */
     sfr_bitfield STRMCM : 1; /* Shadow Transfer Request for MCMPS */
     sfr_bitfield EXPHS : 3; /* Expected Hall Pattern Shadow */
     sfr_bitfield CURHS : 3; /* Current Hall Pattern Shadow */
     sfr_bitfield resv14 : 1; /* reserved */
     sfr_bitfield STRHP : 1; /* Shadow Transfer Request for the Hall Pattern */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CCU60_MCMOUTS_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield MCMP : 6; /* Multi-Channel PWM Pattern */
    /* const */ sfr_bitfield R : 1; /* Reminder Flag */
     sfr_bitfield resv7 : 1; /* reserved */
    /* const */ sfr_bitfield EXPH : 3; /* Expected Hall Pattern */
    /* const */ sfr_bitfield CURH : 3; /* Current Hall Pattern */
     sfr_bitfield resv14 : 18; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CCU60_MCMOUT_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield ICC60R : 1; /* Capture, Compare-Match Rising Edge Flag */
    /* const */ sfr_bitfield ICC60F : 1; /* Capture, Compare-Match Falling Edge Flag */
    /* const */ sfr_bitfield ICC61R : 1; /* Capture, Compare-Match Rising Edge Flag */
    /* const */ sfr_bitfield ICC61F : 1; /* Capture, Compare-Match Falling Edge Flag */
    /* const */ sfr_bitfield ICC62R : 1; /* Capture, Compare-Match Rising Edge Flag */
    /* const */ sfr_bitfield ICC62F : 1; /* Capture, Compare-Match Falling Edge Flag */
    /* const */ sfr_bitfield T12OM : 1; /* Timer T12 One-Match Flag */
    /* const */ sfr_bitfield T12PM : 1; /* Timer T12 Period-Match Flag */
    /* const */ sfr_bitfield T13CM : 1; /* Timer T13 Compare-Match Flag */
    /* const */ sfr_bitfield T13PM : 1; /* Timer T13 Period-Match Flag */
    /* const */ sfr_bitfield TRPF : 1; /* Trap Flag */
    /* const */ sfr_bitfield TRPS : 1; /* Trap State */
    /* const */ sfr_bitfield CHE : 1; /* Correct Hall Event */
    /* const */ sfr_bitfield WHE : 1; /* Wrong Hall Event */
    /* const */ sfr_bitfield IDLE : 1; /* IDLE State */
    /* const */ sfr_bitfield STR : 1; /* Multi-Channel Mode Shadow Transfer Request */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CCU60_IS_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield SCC60R : 1; /* Set Capture, Compare-Match Rising Edge Flag */
     sfr_bitfield SCC60F : 1; /* Set Capture, Compare-Match Falling Edge Flag */
     sfr_bitfield SCC61R : 1; /* Set Capture, Compare-Match Rising Edge Flag */
     sfr_bitfield SCC61F : 1; /* Set Capture, Compare-Match Falling Edge Flag */
     sfr_bitfield SCC62R : 1; /* Set Capture, Compare-Match Rising Edge Flag */
     sfr_bitfield SCC62F : 1; /* Set Capture, Compare-Match Falling Edge Flag */
     sfr_bitfield ST12OM : 1; /* Set Timer T12 One-Match Flag */
     sfr_bitfield ST12PM : 1; /* Set Timer T12 Period-Match Flag */
     sfr_bitfield ST13CM : 1; /* Set Timer T13 Compare-Match Flag */
     sfr_bitfield ST13PM : 1; /* Set Timer T13 Period-Match Flag */
     sfr_bitfield STRPF : 1; /* Set Trap Flag */
     sfr_bitfield SWHC : 1; /* Software Hall Compare */
     sfr_bitfield SCHE : 1; /* Set Correct Hall Event Flag */
     sfr_bitfield SWHE : 1; /* Set Wrong Hall Event Flag */
     sfr_bitfield SIDLE : 1; /* Set IDLE Flag */
     sfr_bitfield SSTR : 1; /* Set STR Flag */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CCU60_ISS_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield RCC60R : 1; /* Reset Capture, Compare-Match Rising Edge Flag */
     sfr_bitfield RCC60F : 1; /* Reset Capture, Compare-Match Falling Edge Flag */
     sfr_bitfield RCC61R : 1; /* Reset Capture, Compare-Match Rising Edge Flag */
     sfr_bitfield RCC61F : 1; /* Reset Capture, Compare-Match Falling Edge Flag */
     sfr_bitfield RCC62R : 1; /* Reset Capture, Compare-Match Rising Edge Flag */
     sfr_bitfield RCC62F : 1; /* Reset Capture, Compare-Match Falling Edge Flag */
     sfr_bitfield RT12OM : 1; /* Reset Timer T12 One-Match Flag */
     sfr_bitfield RT12PM : 1; /* Reset Timer T12 Period-Match Flag */
     sfr_bitfield RT13CM : 1; /* Reset Timer T13 Compare-Match Flag */
     sfr_bitfield RT13PM : 1; /* Reset Timer T13 Period-Match Flag */
     sfr_bitfield RTRPF : 1; /* Reset Trap Flag */
     sfr_bitfield resv11 : 1; /* reserved */
     sfr_bitfield RCHE : 1; /* Reset Correct Hall Event Flag */
     sfr_bitfield RWHE : 1; /* Reset Wrong Hall Event Flag */
     sfr_bitfield RIDLE : 1; /* Reset IDLE Flag */
     sfr_bitfield RSTR : 1; /* Reset STR Flag */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CCU60_ISR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ENCC60R : 1; /* Capture, Compare-Match Rising Edge Interrupt Enable for Channel CC6x */
     sfr_bitfield ENCC60F : 1; /* Capture, Compare-Match Falling Edge Interrupt Enable for Channel CC6x */
     sfr_bitfield ENCC61R : 1; /* Capture, Compare-Match Rising Edge Interrupt Enable for Channel CC6x */
     sfr_bitfield ENCC61F : 1; /* Capture, Compare-Match Falling Edge Interrupt Enable for Channel CC6x */
     sfr_bitfield ENCC62R : 1; /* Capture, Compare-Match Rising Edge Interrupt Enable for Channel CC6x */
     sfr_bitfield ENCC62F : 1; /* Capture, Compare-Match Falling Edge Interrupt Enable for Channel CC6x */
     sfr_bitfield ENT12OM : 1; /* Enable Interrupt for T12 One-Match */
     sfr_bitfield ENT12PM : 1; /* Enable Interrupt for T12 Period-Match */
     sfr_bitfield ENT13CM : 1; /* Enable Interrupt for T13 Compare-Match */
     sfr_bitfield ENT13PM : 1; /* Enable Interrupt for T13 Period-Match */
     sfr_bitfield ENTRPF : 1; /* Enable Interrupt for Trap Flag */
     sfr_bitfield resv11 : 1; /* reserved */
     sfr_bitfield ENCHE : 1; /* Enable Interrupt for Correct Hall Event */
     sfr_bitfield ENWHE : 1; /* Enable Interrupt for Wrong Hall Event */
     sfr_bitfield ENIDLE : 1; /* Enable Idle */
     sfr_bitfield ENSTR : 1; /* Enable Multi-Channel Mode Shadow Transfer Interrupt */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CCU60_IEN_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield INPCC60 : 2; /* Interrupt Node Pointer for Channel CC6x Interrupts */
     sfr_bitfield INPCC61 : 2; /* Interrupt Node Pointer for Channel CC6x Interrupts */
     sfr_bitfield INPCC62 : 2; /* Interrupt Node Pointer for Channel CC6x Interrupts */
     sfr_bitfield INPCHE : 2; /* Interrupt Node Pointer for the CHE Interrupt */
     sfr_bitfield INPERR : 2; /* Interrupt Node Pointer for Error Interrupts */
     sfr_bitfield INPT12 : 2; /* Interrupt Node Pointer for Timer12 Interrupts */
     sfr_bitfield INPT13 : 2; /* Interrupt Node Pointer for Timer13 Interrupt */
     sfr_bitfield resv14 : 18; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CCU60_INP_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield MODREV : 8; /* Module Revision Number */
    /* const */ sfr_bitfield MODNUM : 8; /* Module Number Value */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CCU60_ID_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ISCC60 : 2; /* Input Select for CC60 */
     sfr_bitfield ISCC61 : 2; /* Input Select for CC61 */
     sfr_bitfield ISCC62 : 2; /* Input Select for CC62 */
     sfr_bitfield ISTRP : 2; /* Input Select for CTRAP */
     sfr_bitfield ISPOS0 : 2; /* Input Select for CCPOS0 */
     sfr_bitfield ISPOS1 : 2; /* Input Select for CCPOS1 */
     sfr_bitfield ISPOS2 : 2; /* Input Select for CCPOS2 */
     sfr_bitfield IST12HR : 2; /* Input Select for T12HR */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CCU60_PISEL0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield IST13HR : 2; /* Input Select for T13HR */
     sfr_bitfield ISCNT12 : 2; /* Input Select for T12 Counting Input */
     sfr_bitfield ISCNT13 : 2; /* Input Select for T13 Counting Input */
     sfr_bitfield T12EXT : 1; /* Extension for T12HR Inputs */
     sfr_bitfield T13EXT : 1; /* Extension for T13HR Inputs */
     sfr_bitfield resv8 : 24; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CCU60_PISEL2_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield T12 : 1; /* T12 Available */
    /* const */ sfr_bitfield T13 : 1; /* T13 Available */
    /* const */ sfr_bitfield MCM : 1; /* Multi-Channel Mode Available */
     sfr_bitfield resv3 : 29; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CCU60_MCFG_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield LBE : 1; /* Lost Bit Event */
     sfr_bitfield CCPOS0I : 1; /* Event indication for input signal CCPOS0 */
     sfr_bitfield CCPOS1I : 1; /* Event indication for input signal CCPOS1 */
     sfr_bitfield CCPOS2I : 1; /* Event indication for input signal CCPOS2 */
     sfr_bitfield CC60INI : 1; /* Event indication for input signal CC60IN */
     sfr_bitfield CC61INI : 1; /* Event indication for input signal CC61IN */
     sfr_bitfield CC62INI : 1; /* Event indication for input signal CC62IN */
     sfr_bitfield CTRAPI : 1; /* Event indication for input signal CTRAP */
     sfr_bitfield T12HRI : 1; /* Event indication for input signal T12HR */
     sfr_bitfield T13HRI : 1; /* Event indication for input signal T13HR */
     sfr_bitfield resv10 : 22; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CCU60_IMON_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 1; /* reserved */
     sfr_bitfield CCPOS0EN : 1; /* Lost Indicator Enable for input signal CCPOS0 */
     sfr_bitfield CCPOS1EN : 1; /* Lost Indicator Enable for input signal CCPOS1 */
     sfr_bitfield CCPOS2EN : 1; /* Lost Indicator Enable for input signal CCPOS2 */
     sfr_bitfield CC60INEN : 1; /* Lost Indicator Enable for input signal CC60IN */
     sfr_bitfield CC61INEN : 1; /* Lost Indicator Enable for input signal CC61IN */
     sfr_bitfield CC62INEN : 1; /* Lost Indicator Enable for input signal CC62IN */
     sfr_bitfield CTRAPEN : 1; /* Lost Indicator Enable for input signal CTRAP */
     sfr_bitfield T12HREN : 1; /* Lost Indicator Enable for input signal T12HR */
     sfr_bitfield T13HREN : 1; /* Lost Indicator Enable for input signal T13HR */
     sfr_bitfield resv10 : 3; /* reserved */
     sfr_bitfield LBEEN : 1; /* Interrupt Enable for Lost Bit Event */
     sfr_bitfield INPLBE : 2; /* Interrupt Node Pointer for lost bit event */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CCU60_LI_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield SB0 : 1; /* Sensitivity Block x */
     sfr_bitfield SB1 : 1; /* Sensitivity Block x */
     sfr_bitfield SB2 : 1; /* Sensitivity Block x */
     sfr_bitfield SB3 : 1; /* Sensitivity Block x */
     sfr_bitfield resv4 : 28; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CCU60_KSCSR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield TRIG0SEL : 3; /* Output Trigger Select for CCU6061 TRIG0 */
     sfr_bitfield TRIG1SEL : 3; /* Output Trigger Select for CCU6061 TRIG1 */
     sfr_bitfield TRIG2SEL : 3; /* Output Trigger Select for CCU6061 TRIG2 */
     sfr_bitfield resv9 : 23; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} CCU60_MOSEL_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield STEP : 8; /* Release Step */
    /* const */ sfr_bitfield NO : 4; /* Define delivery number of GTM specification */
    /* const */ sfr_bitfield MINOR : 4; /* Define minor version number of GTM specification */
    /* const */ sfr_bitfield MAJOR : 4; /* Define major version number of GTM specification */
    /* const */ sfr_bitfield DEV_CODE0 : 4; /* Device encoding digit 0 */
    /* const */ sfr_bitfield DEV_CODE1 : 4; /* Device encoding digit 1 */
    /* const */ sfr_bitfield DEV_CODE2 : 4; /* Device encoding digit 2 */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_REV_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield RST : 1; /* GTM Reset */
    /* const */ sfr_bitfield Reserved : 31; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_RST_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield RF_PROT : 1; /* RST and FORCINT protection */
     sfr_bitfield TO_MODE : 1; /* AEI Timeout mode */
    /* const */ sfr_bitfield Reserved : 2; /* Reserved */
     sfr_bitfield TO_VAL : 5; /* AEI Timeout value */
    /* const */ sfr_bitfield Reserved_9 : 23; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_CTRL_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield TO_ADDR : 20; /* AEI Timeout address */
    /* const */ sfr_bitfield TO_W1R0 : 1; /* AEI Timeout Read/Write flag */
    /* const */ sfr_bitfield Reserved : 11; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_AEI_ADDR_XPT_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield AEI_TO_XPT : 1; /* AEI Timeout exception occurred */
     sfr_bitfield AEI_USP_ADDR : 1; /* AEI Unsupported address interrupt */
     sfr_bitfield AEI_IM_ADDR : 1; /* AEI Illegal Module address interrupt */
     sfr_bitfield AEI_USP_BE : 1; /* AEI Unsupported byte enable interrupt */
    /* const */ sfr_bitfield Reserved : 28; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_IRQ_NOTIFY_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield AEI_TO_XPT_IRQ_EN : 1; /* AEI_TO_XPT_IRQ interrupt enable. */
     sfr_bitfield AEI_USP_ADDR_IRQ_EN : 1; /* AEI_USP_ADDR_IRQ interrupt enable. */
     sfr_bitfield AEI_IM_ADDR_IRQ_EN : 1; /* AEI_IM_ADDR_IRQ interrupt enable. */
     sfr_bitfield AEI_USP_BE_IRQ_EN : 1; /* AEI_USP_BE_IRQ interrupt enable. */
    /* const */ sfr_bitfield Reserved : 28; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_IRQ_EN_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield TRG_AEI_TO_XPT : 1; /* Trigger AEI_TO_XPT_IRQ interrupt by software. */
     sfr_bitfield TRG_AEI_USP_ADDR : 1; /* Trigger AEI_USP_ADDR_IRQ interrupt by software. */
     sfr_bitfield TRG_AEI_IM_ADDR : 1; /* Trigger AEI_IM_ADDR_IRQ interrupt by software. */
     sfr_bitfield TRG_AEI_USP_BE : 1; /* Trigger AEI_USP_BE_IRQ interrupt by software. */
    /* const */ sfr_bitfield Reserved : 28; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_IRQ_FORCINT_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield IRQ_MODE : 2; /* Interrupt strategy mode selection for the AEI timeout and address monitoring interrupts */
    /* const */ sfr_bitfield Reserved : 30; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_IRQ_MODE_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield BRG_MODE : 1; /* Defines the operation mode for the AEI bridge */
     sfr_bitfield MSK_WR_RSP : 1; /* Mask write response */
    /* const */ sfr_bitfield Reserved : 6; /* Reserved */
    /* const */ sfr_bitfield MODE_UP_PGR : 1; /* Mode update in progress */
     sfr_bitfield BUFF_OVL : 1; /* Buffer overflow register */
    /* const */ sfr_bitfield Reserved_10 : 2; /* Reserved */
     sfr_bitfield SYNC_INPUT_REG : 1; /* Additional Pipeline Stage in Synchronous Bridge Mode */
    /* const */ sfr_bitfield Reserved_13 : 3; /* Reserved */
     sfr_bitfield BRG_RST : 1; /* Bridge software reset */
    /* const */ sfr_bitfield Reserved_17 : 7; /* Reserved */
    /* const */ sfr_bitfield BUFF_DPT : 8; /* Buffer depth of AEI bridge */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_BRIDGE_MODE_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield NEW_TRAN_PTR : 5; /* New transaction pointer */
    /* const */ sfr_bitfield FIRST_RSP_PTR : 5; /* First response pointer */
    /* const */ sfr_bitfield TRAN_IN_PGR : 5; /* Transaction in progress pointer (acquire) */
    /* const */ sfr_bitfield ABT_TRAN_PGR : 5; /* Aborted transaction in progress pointer */
    /* const */ sfr_bitfield FBC : 6; /* Free buffer count */
    /* const */ sfr_bitfield RSP_TRAN_RDY : 6; /* Response transactions ready */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_BRIDGE_PTR1_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield TRAN_IN_PGR2 : 5; /* Transaction in progress pointer (aquire2) */
    /* const */ sfr_bitfield Reserved : 27; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_BRIDGE_PTR2_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield AEI_TO_XPT_EIRQ_EN : 1; /* AEI_TO_XPT_EIRQ error interrupt enable */
     sfr_bitfield AEI_USP_ADDR_EIRQ_EN : 1; /* AEI_USP_ADDR_EIRQ error interrupt enable */
     sfr_bitfield AEI_IM_ADDR_EIRQ_EN : 1; /* AEI_IM_ADDR_EIRQ error interrupt enable */
     sfr_bitfield AEI_USP_BE_EIRQ_EN : 1; /* AEI_USP_BE_EIRQ error interrupt enable */
    /* const */ sfr_bitfield Reserved : 28; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_EIRQ_EN_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield SRC_CH0 : 1; /* Defines AUX_IN source of TIM0 channel 0 x=0 */
     sfr_bitfield SRC_CH1 : 1; /* Defines AUX_IN source of TIM0 channel 1 x=1, see bit 0 */
     sfr_bitfield SRC_CH2 : 1; /* Defines AUX_IN source of TIM0 channel 2 x=2, see bit 0 */
     sfr_bitfield SRC_CH3 : 1; /* Defines AUX_IN source of TIM0 channel 3 x=3, see bit 0 */
     sfr_bitfield SRC_CH4 : 1; /* Defines AUX_IN source of TIM0 channel 4 x=4, see bit 0 */
     sfr_bitfield SRC_CH5 : 1; /* Defines AUX_IN source of TIM0 channel 5 x=5, see bit 0 */
     sfr_bitfield SRC_CH6 : 1; /* Defines AUX_IN source of TIM0 channel 6 x=6, see bit 0 */
     sfr_bitfield SRC_CH7 : 1; /* Defines AUX_IN source of TIM0 channel 7 x=7, see bit 0 */
    /* const */ sfr_bitfield Reserved : 24; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TIM0_AUX_IN_SRC_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield GRSTEN : 1; /* Global Reset Enable */
    /* const */ sfr_bitfield BRIDGE_MODE_RST : 1; /* Bridge Mode after Reset */
    /* const */ sfr_bitfield AEI_IN : 1; /* Input Register in Bridge */
    /* const */ sfr_bitfield Reserved : 5; /* Reserved */
    /* const */ sfr_bitfield TOM_OUT_RST : 1; /* TOM_OUT Reset Level */
    /* const */ sfr_bitfield TOM_TRIG_CHAIN : 3; /* TOM Trigger Chain length without Synchronisation */
    /* const */ sfr_bitfield Reserved_12 : 4; /* Reserved */
    /* const */ sfr_bitfield IRQ_MODE_LEVEL : 1; /* IRQ Mode Level */
    /* const */ sfr_bitfield IRQ_MODE_PULSE : 1; /* IRQ Mode Pulse */
    /* const */ sfr_bitfield IRQ_MODE_PULSE_NOTIFY : 1; /* IRQ Mode Pulse Notify */
    /* const */ sfr_bitfield IRQ_MODE_SINGLE_PULSE : 1; /* IRQ Mode Single Pulse */
    /* const */ sfr_bitfield Reserved_20 : 12; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_HW_CONF_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield EN_CLK0 : 2; /* Enable clock source 0 */
     sfr_bitfield EN_CLK1 : 2; /* Enable clock source 1 */
     sfr_bitfield EN_CLK2 : 2; /* Enable clock source 2 */
     sfr_bitfield EN_CLK3 : 2; /* Enable clock source 3 */
     sfr_bitfield EN_CLK4 : 2; /* Enable clock source 4 */
     sfr_bitfield EN_CLK5 : 2; /* Enable clock source 5 */
     sfr_bitfield EN_CLK6 : 2; /* Enable clock source 6 */
     sfr_bitfield EN_CLK7 : 2; /* Enable clock source 7 */
     sfr_bitfield EN_ECLK0 : 2; /* Enable ECLK 0 generation subunit */
     sfr_bitfield EN_ECLK1 : 2; /* Enable ECLK 1 generation subunit */
     sfr_bitfield EN_ECLK2 : 2; /* Enable ECLK 2 generation subunit */
     sfr_bitfield EN_FXCLK : 2; /* Enable all CMU_FXCLK */
    /* const */ sfr_bitfield Reserved : 8; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_CMU_CLK_EN_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield GCLK_NUM : 24; /* Numerator for global clock divider */
    /* const */ sfr_bitfield Reserved : 8; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_CMU_GCLK_NUM_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield GCLK_DEN : 24; /* Denominator for global clock divider */
    /* const */ sfr_bitfield Reserved : 8; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_CMU_GCLK_DEN_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CLK_CNT : 24; /* Clock count Defines count value for the clock divider of clock source CMU_CLK[x] (x:0…5) */
    /* const */ sfr_bitfield Reserved : 8; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_CMU_CLK_0_CTRL_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CLK_CNT : 24; /* Clock count. Define count value for the clock divider of clock source CMU_CLK6 */
     sfr_bitfield CLK6_SEL : 1; /* Clock source selection for CMU_CLK6 */
    /* const */ sfr_bitfield Reserved : 7; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_CMU_CLK_6_CTRL_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CLK_CNT : 24; /* Clock count. Define count value for the clock divider of clock source CMU_CLK7 */
     sfr_bitfield CLK7_SEL : 1; /* Clock source selection for CMU_CLK7 */
    /* const */ sfr_bitfield Reserved : 7; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_CMU_CLK_7_CTRL_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ECLK_NUM : 24; /* Numerator for external clock divider */
    /* const */ sfr_bitfield Reserved : 8; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_CMU_ECLK_0_NUM_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ECLK_DEN : 24; /* Denominator for external clock divider */
    /* const */ sfr_bitfield Reserved : 8; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_CMU_ECLK_0_DEN_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield FXCLK_SEL : 4; /* Input clock selection for EN_FXCLK line */
    /* const */ sfr_bitfield Reserved : 28; /* Reserved bits */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_CMU_FXCLK_CTRL_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ENDIS_CH0 : 2; /* TBU channel 0 enable/disable control */
     sfr_bitfield ENDIS_CH1 : 2; /* TBU channel 1 enable/disable control */
     sfr_bitfield ENDIS_CH2 : 2; /* TBU channel 2 enable/disable control */
    /* const */ sfr_bitfield Reserved : 26; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TBU_CHEN_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield LOW_RES : 1; /* TBU_CH0_BASE register resolution */
     sfr_bitfield CH_CLK_SRC : 3; /* Clock source for channel x (x:0…2) time base counter */
    /* const */ sfr_bitfield Reserved : 28; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TBU_CH0_CTRL_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield BASE : 27; /* Time base value for channel 0 */
    /* const */ sfr_bitfield Reserved : 5; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TBU_CH0_BASE_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CH_MODE : 1; /* Channel mode */
     sfr_bitfield CH_CLK_SRC : 3; /* Clock source for channel x (x1…2) time base counter */
    /* const */ sfr_bitfield Reserved : 28; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TBU_CH1_CTRL_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield BASE : 24; /* Time base value for channel x (x 1, 2) */
    /* const */ sfr_bitfield Reserved : 8; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TBU_CH1_BASE_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield TIM_EN : 1; /* TIM channel x (x:0…7)enable */
     sfr_bitfield TIM_MODE : 3; /* TIM channel x (x:0…7) mode */
     sfr_bitfield OSM : 1; /* One-shot mode */
     sfr_bitfield resv5 : 1; /* reserved */
     sfr_bitfield CICTRL : 1; /* Channel Input Control */
     sfr_bitfield TBU0x_SEL : 1; /* TBU_TS0 bits input select for TIM_CHx_GPRz (x: 0, 1) */
     sfr_bitfield GPR0_SEL : 2; /* Selection for GPR0 register */
     sfr_bitfield GPR1_SEL : 2; /* Selection for GPR1 register */
     sfr_bitfield CNTS_SEL : 1; /* Selection for CNTS register */
     sfr_bitfield DSL : 1; /* Signal level control */
     sfr_bitfield ISL : 1; /* Ignore signal level */
     sfr_bitfield ECNT_RESET : 1; /* Enables resetting the ECNT counter in periodic sampling mode */
     sfr_bitfield FLT_EN : 1; /* Filter enable for channel x (x:0…7) */
     sfr_bitfield FLT_CNT_FRQ : 2; /* Filter counter frequency select */
     sfr_bitfield EXT_CAP_EN : 1; /* Enables external capture mode */
     sfr_bitfield FLT_MODE_RE : 1; /* Filter mode for rising edge */
     sfr_bitfield FLT_CTR_RE : 1; /* Filter counter mode for rising edge */
     sfr_bitfield FLT_MODE_FE : 1; /* Filter mode for falling edge */
     sfr_bitfield FLT_CTR_FE : 1; /* Filter counter mode for falling edge */
     sfr_bitfield CLK_SEL : 3; /* CMU clock source select for channel */
     sfr_bitfield FR_ECNT_OFL : 1; /* Extended Edge counter overflow behaviour */
     sfr_bitfield EGPR0_SEL : 1; /* Extension of GPR0_SEL bit field */
     sfr_bitfield EGPR1_SEL : 1; /* Extension of GPR1_SEL bit field */
     sfr_bitfield TOCTRL : 2; /* Timeout control */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TIM0_CH0_CTRL_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield FLT_RE : 24; /* Filter parameter for rising edge */
    /* const */ sfr_bitfield Reserved : 8; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TIM0_CH0_FLT_RE_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield FLT_FE : 24; /* Filter parameter for falling edge */
    /* const */ sfr_bitfield Reserved : 8; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TIM0_CH0_FLT_FE_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield GPR0 : 24; /* Input signal characteristic parameter 0 */
    /* const */ sfr_bitfield ECNT : 8; /* Edge counter */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TIM0_CH0_GPR0_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield GPR1 : 24; /* Input signal characteristic parameter 1 */
    /* const */ sfr_bitfield ECNT : 8; /* Edge counter */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TIM0_CH0_GPR1_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield CNT : 24; /* Actual SMU counter value */
    /* const */ sfr_bitfield Reserved : 8; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TIM0_CH0_CNT_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CNTS : 24; /* Counter shadow register */
    /* const */ sfr_bitfield ECNT : 8; /* Edge counter */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TIM0_CH0_CNTS_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield NEWVAL : 1; /* New measurement value detected by in channel x (x:0…7) */
     sfr_bitfield ECNTOFL : 1; /* counter overflow of channel x, (x:0…7) */
     sfr_bitfield CNTOFL : 1; /* SMU CNT counter overflow of channel x, (x:0…7) */
     sfr_bitfield GPRzOFL : 1; /* data overflow, old data not read out before new data has arrived at input pin, (x:0…7) */
     sfr_bitfield TODET : 1; /* Timeout reached for input signal of channel x, (x:0…7) */
     sfr_bitfield GLITCHDET : 1; /* Glitch detected on channel x, (x:0…7) */
    /* const */ sfr_bitfield Reserved : 26; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TIM0_CH0_IRQ_NOTIFY_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield NEWVAL_IRQ_EN : 1; /* TIM_NEWVALx_IRQ interrupt enable */
     sfr_bitfield ECNTOFL_IRQ_EN : 1; /* TIM_ECNTOFLx_IRQ interrupt enable */
     sfr_bitfield CNTOFL_IRQ_EN : 1; /* TIM_CNTOFLx_IRQ interrupt enable */
     sfr_bitfield GPRzOFL_IRQ_EN : 1; /* TIM_GPRzOFLx_IRQ interrupt enable */
     sfr_bitfield TODET_IRQ_EN : 1; /* TIM_TODETx_IRQ interrupt enable */
     sfr_bitfield GLITCHDET_IRQ_EN : 1; /* TIM_GLITCHDETx_IRQ interrupt enable */
    /* const */ sfr_bitfield Reserved : 26; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TIM0_CH0_IRQ_EN_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield TRG_NEWVAL : 1; /* Trigger NEWVAL bit in TIM_CHx_IRQ_NOTIFY register by software */
     sfr_bitfield TRG_ECNTOFL : 1; /* Trigger ECNTOFL bit in TIM_CHx_IRQ_NOTIFY register by software */
     sfr_bitfield TRG_CNTOFL : 1; /* Trigger CNTOFL bit in TIM_CHx_IRQ_NOTIFY register by software */
     sfr_bitfield TRG_GPRzOFL : 1; /* Trigger GPRzOFL bit in TIM_CHx_IRQ_NOTIFY register by software */
     sfr_bitfield TRG_TODET : 1; /* Trigger TODET bit in TIM_CHx_IRQ_NOTIFY register by software */
     sfr_bitfield TRG_GLITCHDET : 1; /* Trigger GLITCHDET bit in TIM_CHx_IRQ_NOTIFY register by software */
    /* const */ sfr_bitfield Reserved : 26; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TIM0_CH0_IRQ_FORCINT_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield IRQ_MODE : 2; /* IRQ mode selection */
    /* const */ sfr_bitfield Reserved : 30; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TIM0_CH0_IRQ_MODE_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield RST_CH0 : 1; /* Software reset of channel 0 */
     sfr_bitfield RST_CH1 : 1; /* Software reset of channel 1 */
     sfr_bitfield RST_CH2 : 1; /* Software reset of channel 2 */
     sfr_bitfield RST_CH3 : 1; /* Software reset of channel 3 */
     sfr_bitfield RST_CH4 : 1; /* Software reset of channel 4 */
     sfr_bitfield RST_CH5 : 1; /* Software reset of channel 5 */
     sfr_bitfield RST_CH6 : 1; /* Software reset of channel 6 */
     sfr_bitfield RST_CH7 : 1; /* Software reset of channel 7 */
    /* const */ sfr_bitfield Reserved : 24; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TIM0_RST_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield VAL_0 : 2; /* Value to be fed to Channel 0 */
     sfr_bitfield MODE_0 : 2; /* Input source to Channel 0 */
     sfr_bitfield VAL_1 : 2; /* Value to be fed to Channel 1 */
     sfr_bitfield MODE_1 : 2; /* Input source to Channel 1 */
     sfr_bitfield VAL_2 : 2; /* Value to be fed to Channel 2 */
     sfr_bitfield MODE_2 : 2; /* Input source to Channel 2 */
     sfr_bitfield VAL_3 : 2; /* Value to be fed to Channel 3 */
     sfr_bitfield MODE_3 : 2; /* Input source to Channel 3 */
     sfr_bitfield VAL_4 : 2; /* Value to be fed to Channel 4 */
     sfr_bitfield MODE_4 : 2; /* Input source to Channel 4 */
     sfr_bitfield VAL_5 : 2; /* Value to be fed to Channel 5 */
     sfr_bitfield MODE_5 : 2; /* Input source to Channel 5 */
     sfr_bitfield VAL_6 : 2; /* Value to be fed to Channel 6 */
     sfr_bitfield MODE_6 : 2; /* Input source to Channel 6 */
     sfr_bitfield VAL_7 : 2; /* Value to be fed to Channel 7 */
     sfr_bitfield MODE_7 : 2; /* Input source to Channel 7 */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TIM0_IN_SRC_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield NEWVAL_EIRQ_EN : 1; /* TIM_NEWVALx_EIRQ error interrupt enable */
     sfr_bitfield ECNTOFL_EIRQ_EN : 1; /* TIM_ECNTOFLx_IRQ interrupt enable */
     sfr_bitfield CNTOFL_EIRQ_EN : 1; /* TIM_CNTOFLx_IRQ interrupt enable */
     sfr_bitfield GPRzOFL_EIRQ_EN : 1; /* TIM_GPRzOFL_IRQ interrupt enable */
     sfr_bitfield TODET_EIRQ_EN : 1; /* TIM_TODETx_IRQ interrupt enable */
     sfr_bitfield GLITCHDET_EIRQ_EN : 1; /* TIM_GLITCHDETx_IRQ interrupt enable */
    /* const */ sfr_bitfield Reserved : 26; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TIM0_CH0_EIRQ_EN_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield TOV : 8; /* Time out duration for channel x */
     sfr_bitfield Reserved : 20; /* Reserved */
     sfr_bitfield TCS : 3; /* Timeout Clock selection */
    /* const */ sfr_bitfield Reserved_31 : 1; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TIM0_CH0_TDUV_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield TO_CNT : 8; /* Current Timeout value for channel x */
    /* const */ sfr_bitfield Reserved : 24; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TIM0_CH0_TDUC_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield ECNT : 16; /* Edge counter */
    /* const */ sfr_bitfield Reserved : 16; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TIM0_CH0_ECNT_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield EXT_CAP_SRC : 3; /* Defines selected source for triggering the EXT_CAPTURE functionality */
    /* const */ sfr_bitfield Reserved : 29; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TIM0_CH0_ECTRL_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield F_OUT : 8; /* Signals after TIM filter unit */
     sfr_bitfield F_IN : 8; /* Signals after TINPSRC selection; before TIM filter unit */
     sfr_bitfield TIM_IN : 8; /* Signals after TIM input signal synchronisation */
    /* const */ sfr_bitfield Reserved : 8; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TIM0_INP_VAL_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield HOST_TRIG : 1; /* Trigger request signal (see TGC0, TGC1) to update the register ENDIS_STAT and OUTEN_STAT */
    /* const */ sfr_bitfield Reserved : 7; /* Reserved */
     sfr_bitfield RST_CH0 : 1; /* Software reset of channel 0 */
     sfr_bitfield RST_CH1 : 1; /* Software reset of channel 1 */
     sfr_bitfield RST_CH2 : 1; /* Software reset of channel 2 */
     sfr_bitfield RST_CH3 : 1; /* Software reset of channel 3 */
     sfr_bitfield RST_CH4 : 1; /* Software reset of channel 4 */
     sfr_bitfield RST_CH5 : 1; /* Software reset of channel 5 */
     sfr_bitfield RST_CH6 : 1; /* Software reset of channel 6 */
     sfr_bitfield RST_CH7 : 1; /* Software reset of channel 7 */
     sfr_bitfield UPEN_CTRL0 : 2; /* TOM channel 0 enable update of register CM0, CM1 and CLK_SRC from SR0, SR1 and CLK_SRC_SR */
     sfr_bitfield UPEN_CTRL1 : 2; /* TOM channel 1 enable update of register CM0, CM1 and CLK_SRC */
     sfr_bitfield UPEN_CTRL2 : 2; /* TOM channel 2 enable update of register CM0, CM1 and CLK_SRC */
     sfr_bitfield UPEN_CTRL3 : 2; /* TOM channel 3 enable update of register CM0, CM1 and CLK_SRC */
     sfr_bitfield UPEN_CTRL4 : 2; /* TOM channel 4 enable update of register CM0, CM1 and CLK_SRC */
     sfr_bitfield UPEN_CTRL5 : 2; /* TOM channel 5 enable update of register CM0, CM1 and CLK_SRC */
     sfr_bitfield UPEN_CTRL6 : 2; /* TOM channel 6 enable update of register CM0, CM1 and CLK_SRC */
     sfr_bitfield UPEN_CTRL7 : 2; /* TOM channel 7 enable update of register CM0, CM1 and CLK_SRC */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TOM0_TGC0_GLB_CTRL_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ENDIS_CTRL0 : 2; /* TOM channel 0 enable/disable update value */
     sfr_bitfield ENDIS_CTRL1 : 2; /* TOM channel 1 enable/disable update value */
     sfr_bitfield ENDIS_CTRL2 : 2; /* TOM channel 2 enable/disable update value */
     sfr_bitfield ENDIS_CTRL3 : 2; /* TOM channel 3 enable/disable update value */
     sfr_bitfield ENDIS_CTRL4 : 2; /* TOM channel 4 enable/disable update value */
     sfr_bitfield ENDIS_CTRL5 : 2; /* TOM channel 5 enable/disable update value */
     sfr_bitfield ENDIS_CTRL6 : 2; /* TOM channel 6 enable/disable update value */
     sfr_bitfield ENDIS_CTRL7 : 2; /* TOM channel 7 enable/disable update value */
    /* const */ sfr_bitfield Reserved : 16; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TOM0_TGC0_ENDIS_CTRL_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ENDIS_STAT0 : 2; /* TOM channel 0 enable/disable */
     sfr_bitfield ENDIS_STAT1 : 2; /* TOM channel 1 enable/disable */
     sfr_bitfield ENDIS_STAT2 : 2; /* TOM channel 2 enable/disable */
     sfr_bitfield ENDIS_STAT3 : 2; /* TOM channel 3 enable/disable */
     sfr_bitfield ENDIS_STAT4 : 2; /* TOM channel 4 enable/disable */
     sfr_bitfield ENDIS_STAT5 : 2; /* TOM channel 5 enable/disable */
     sfr_bitfield ENDIS_STAT6 : 2; /* TOM channel 6 enable/disable */
     sfr_bitfield ENDIS_STAT7 : 2; /* TOM channel 7 enable/disable */
    /* const */ sfr_bitfield Reserved : 16; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TOM0_TGC0_ENDIS_STAT_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ACT_TB : 24; /* Time base value */
     sfr_bitfield TB_TRIG : 1; /* Set trigger request */
     sfr_bitfield TBU_SEL : 2; /* Selection of time base used for comparison */
    /* const */ sfr_bitfield Reserved : 5; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TOM0_TGC0_ACT_TB_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield OUTEN_CTRL0 : 2; /* Output TOM_OUT(0) enable/disable update value */
     sfr_bitfield OUTEN_CTRL1 : 2; /* Output TOM_OUT(1)enable/disable update value */
     sfr_bitfield OUTEN_CTRL2 : 2; /* Output TOM_OUT(2) enable/disable update value */
     sfr_bitfield OUTEN_CTRL3 : 2; /* Output TOM_OUT(3) enable/disable update value */
     sfr_bitfield OUTEN_CTRL4 : 2; /* Output TOM_OUT(4) enable/disable update value */
     sfr_bitfield OUTEN_CTRL5 : 2; /* Output TOM_OUT(5) enable/disable update value */
     sfr_bitfield OUTEN_CTRL6 : 2; /* Output TOM_OUT(6) enable/disable update value */
     sfr_bitfield OUTEN_CTRL7 : 2; /* Output TOM_OUT(7) enable/disable update value */
    /* const */ sfr_bitfield Reserved : 16; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TOM0_TGC0_OUTEN_CTRL_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield OUTEN_STAT0 : 2; /* Control/status of output TOM_OUT(0) */
     sfr_bitfield OUTEN_STAT1 : 2; /* Control/status of output TOM_OUT(1) */
     sfr_bitfield OUTEN_STAT2 : 2; /* Control/status of output TOM_OUT(2) */
     sfr_bitfield OUTEN_STAT3 : 2; /* Control/status of output TOM_OUT(3) */
     sfr_bitfield OUTEN_STAT4 : 2; /* Control/status of output TOM_OUT(4) */
     sfr_bitfield OUTEN_STAT5 : 2; /* Control/status of output TOM_OUT(5) */
     sfr_bitfield OUTEN_STAT6 : 2; /* Control/status of output TOM_OUT(6) */
     sfr_bitfield OUTEN_STAT7 : 2; /* Control/status of output TOM_OUT(7) */
    /* const */ sfr_bitfield Reserved : 16; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TOM0_TGC0_OUTEN_STAT_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield FUPD_CTRL0 : 2; /* Force update of TOM channel 0 operation registers */
     sfr_bitfield FUPD_CTRL1 : 2; /* Force update of TOM channel 1 operation registers */
     sfr_bitfield FUPD_CTRL2 : 2; /* Force update of TOM channel 2 operation registers */
     sfr_bitfield FUPD_CTRL3 : 2; /* Force update of TOM channel 3 operation registers */
     sfr_bitfield FUPD_CTRL4 : 2; /* Force update of TOM channel 4 operation registers */
     sfr_bitfield FUPD_CTRL5 : 2; /* Force update of TOM channel 5 operation registers */
     sfr_bitfield FUPD_CTRL6 : 2; /* Force update of TOM channel 6 operation registers */
     sfr_bitfield FUPD_CTRL7 : 2; /* Force update of TOM channel 7 operation registers */
     sfr_bitfield RSTCN0_CH0 : 2; /* Reset CN0 of channel 0 on force update event */
     sfr_bitfield RSTCN0_CH1 : 2; /* Reset CN0 of channel 1 on force update event */
     sfr_bitfield RSTCN0_CH2 : 2; /* Reset CN0 of channel 2 on force update event */
     sfr_bitfield RSTCN0_CH3 : 2; /* Reset CN0 of channel 3 on force update event */
     sfr_bitfield RSTCN0_CH4 : 2; /* Reset CN0 of channel 4 on force update event */
     sfr_bitfield RSTCN0_CH5 : 2; /* Reset CN0 of channel 5 on force update event */
     sfr_bitfield RSTCN0_CH6 : 2; /* Reset CN0 of channel 6 on force update event */
     sfr_bitfield RSTCN0_CH7 : 2; /* Reset CN0 of channel 7 on force update event */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TOM0_TGC0_FUPD_CTRL_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield INT_TRIG0 : 2; /* Select input signal TRIG_0 as a trigger source */
     sfr_bitfield INT_TRIG1 : 2; /* Select input signal TRIG_1 as a trigger source */
     sfr_bitfield INT_TRIG2 : 2; /* Select input signal TRIG_2 as a trigger source */
     sfr_bitfield INT_TRIG3 : 2; /* Select input signal TRIG_3 as a trigger source */
     sfr_bitfield INT_TRIG4 : 2; /* Select input signal TRIG_4 as a trigger source */
     sfr_bitfield INT_TRIG5 : 2; /* Select input signal TRIG_5 as a trigger source */
     sfr_bitfield INT_TRIG6 : 2; /* Select input signal TRIG_6 as a trigger source */
     sfr_bitfield INT_TRIG7 : 2; /* Select input signal TRIG_7 as a trigger source */
    /* const */ sfr_bitfield Reserved : 16; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TOM0_TGC0_INT_TRIG_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield Reserved : 11; /* Reserved */
     sfr_bitfield SL : 1; /* Signal level for duty cycle */
     sfr_bitfield CLK_SRC_SR : 3; /* Clock source select for channel */
    /* const */ sfr_bitfield Reserved_15 : 5; /* Reserved */
     sfr_bitfield RST_CCU0 : 1; /* Reset source of CCU0 */
     sfr_bitfield OSM_TRIG : 1; /* Enable Trigger of one-Shot Pulse by trigger signal OSM_TRIG */
     sfr_bitfield EXT_TRIG : 1; /* Select TIM_EXT_CAPTURE(x) as Trigger Signal */
     sfr_bitfield EXTTRIGOUT : 1; /* Select TIM_EXT_CAPTURE(x) as Potential OUTPUT Signal TRIG_[x] */
     sfr_bitfield TRIGOUT : 1; /* Trigger output selection (output signal TRIG_[x]) of module TOM_CH[x] */
    /* const */ sfr_bitfield Reserved_25 : 1; /* Reserved */
     sfr_bitfield OSM : 1; /* One-shot mode */
    /* const */ sfr_bitfield Reserved_27 : 1; /* Reserved */
     sfr_bitfield resv28 : 2; /* reserved */
    /* const */ sfr_bitfield Reserved_30 : 2; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TOM0_CH0_CTRL_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield Reserved : 11; /* Reserved */
     sfr_bitfield SL : 1; /* Signal level for duty cycle */
     sfr_bitfield CLK_SRC_SR : 3; /* Clock source select for channel */
    /* const */ sfr_bitfield Reserved_15 : 5; /* Reserved */
     sfr_bitfield RST_CCU0 : 1; /* Reset source of CCU0 */
     sfr_bitfield OSM_TRIG : 1; /* Enable Trigger of one-Shot Pulse by trigger signal OSM_TRIG */
     sfr_bitfield EXT_TRIG : 1; /* Select TIM_EXT_CAPTURE(x) as Trigger Signal */
     sfr_bitfield EXTTRIGOUT : 1; /* Select TIM_EXT_CAPTURE(x) as Potential OUTPUT Signal TRIG_[x] */
     sfr_bitfield TRIGOUT : 1; /* Trigger output selection (output signal TRIG_[x]) of module TOM_CH[x] */
    /* const */ sfr_bitfield Reserved_25 : 1; /* Reserved */
     sfr_bitfield OSM : 1; /* One-shot mode */
     sfr_bitfield BITREV : 1; /* Bit-reversing of output of counter register CN0 */
    /* const */ sfr_bitfield Reserved_28 : 4; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TOM0_CH15_CTRL_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CN0 : 16; /* TOM CCU0 counter register */
    /* const */ sfr_bitfield Reserved : 16; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TOM0_CH0_CN0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CM0 : 16; /* TOM CCU0 compare register */
    /* const */ sfr_bitfield Reserved : 16; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TOM0_CH0_CM0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield SR0 : 16; /* TOM channel x shadow register SR0 for update of compare register CM0 */
    /* const */ sfr_bitfield Reserved : 16; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TOM0_CH0_SR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CM1 : 16; /* TOM CCU1 compare register */
    /* const */ sfr_bitfield Reserved : 16; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TOM0_CH0_CM1_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield SR1 : 16; /* TOM channel x shadow register SR1 for update of compare register CM1 */
    /* const */ sfr_bitfield Reserved : 16; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TOM0_CH0_SR1_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield OL : 1; /* Output level of output TOM_OUT(x) */
    /* const */ sfr_bitfield Reserved : 31; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TOM0_CH0_STAT_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CCU0TC : 1; /* CCU0 Trigger condition interrupt for channel x */
     sfr_bitfield CCU1TC : 1; /* CCU1 Trigger condition interrupt for channel x */
    /* const */ sfr_bitfield Reserved : 30; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TOM0_CH0_IRQ_NOTIFY_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CCU0TC_IRQ_EN : 1; /* TOM_CCU0TC_IRQ interrupt enable */
     sfr_bitfield CCU1TC_IRQ_EN : 1; /* TOM_CCU1TC_IRQ interrupt enable */
    /* const */ sfr_bitfield Reserved : 30; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TOM0_CH0_IRQ_EN_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield TRG_CCU0TC0 : 1; /* Trigger TOM_CCU0TC0_IRQ interrupt by software */
     sfr_bitfield TRG_CCU1TC0 : 1; /* Trigger TOM_CCU1TC0_IRQ interrupt by software */
    /* const */ sfr_bitfield Reserved : 30; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TOM0_CH0_IRQ_FORCINT_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CLK_SEL : 2; /* Clock source select */
    /* const */ sfr_bitfield Reserved : 2; /* Reserved */
     sfr_bitfield UPD_MODE : 3; /* update mode */
    /* const */ sfr_bitfield Reserved_7 : 25; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_DTM1_CTRL_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield O1SEL_0 : 1; /* Output 1 select channel 0 */
    /* const */ sfr_bitfield Reserved : 2; /* Reserved */
     sfr_bitfield SWAP_0 : 1; /* Swap outputs DTMi_CH[0]_OUT0 and DTMi_CH[0]_OUT1 */
     sfr_bitfield O1F_0 : 2; /* Output 1 function channel 0 */
    /* const */ sfr_bitfield Reserved_6 : 2; /* Reserved */
     sfr_bitfield O1SEL_1 : 1; /* Output 1 select channel 1 */
     sfr_bitfield I1SEL_1 : 1; /* Input 1 select channel 1 */
     sfr_bitfield SH_EN_1 : 1; /* Shift enable channel 1 */
     sfr_bitfield SWAP_1 : 1; /* Swap outputs DTMi_CH[1]_OUT0 and DTMi_CH[1]_OUT1 */
     sfr_bitfield O1F_1 : 2; /* Output 1 function channel 1 */
    /* const */ sfr_bitfield Reserved_14 : 2; /* Reserved */
     sfr_bitfield O1SEL_2 : 1; /* Output 1 select channel 2 */
     sfr_bitfield I1SEL_2 : 1; /* Input 1 select channel 2 */
     sfr_bitfield SH_EN_2 : 1; /* Shift enable channel 2 */
     sfr_bitfield SWAP_2 : 1; /* Swap outputs DTMi_CH[2]_OUT0 and DTMi_CH[2]_OUT1 */
     sfr_bitfield O1F_2 : 2; /* Output 1 function channel 2 */
    /* const */ sfr_bitfield Reserved_22 : 2; /* Reserved */
     sfr_bitfield O1SEL_3 : 1; /* Output 1 select channel 3 */
     sfr_bitfield I1SEL_3 : 1; /* Input 1 select channel 3 */
     sfr_bitfield SH_EN_3 : 1; /* Shift enable channel 3 */
     sfr_bitfield SWAP_3 : 1; /* Swap outputs DTMi_CH[3]_OUT0 and DTMi_CH[3]_OUT1 */
     sfr_bitfield O1F_3 : 2; /* Output 1 function channel 3 */
    /* const */ sfr_bitfield Reserved_30 : 2; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_DTM1_CH_CTRL1_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield POL0_0 : 1; /* Polarity on output 0 channel 0 */
     sfr_bitfield OC0_0 : 1; /* Output 0 control channel 0 */
     sfr_bitfield SL0_0 : 1; /* Signal level on output 0 channel 0 */
     sfr_bitfield DT0_0 : 1; /* Dead time path enable on output 0 channel 0 */
     sfr_bitfield POL1_0 : 1; /* Polarity on output 1 channel 0 */
     sfr_bitfield OC1_0 : 1; /* Output 1 control channel 0 */
     sfr_bitfield SL1_0 : 1; /* Signal level on output 1 channel 0 */
     sfr_bitfield DT1_0 : 1; /* Dead time path enable on output 1 channel 0 */
     sfr_bitfield POL0_1 : 1; /* Polarity on output 0 channel 1 */
     sfr_bitfield OC0_1 : 1; /* Output 0 control channel 1 */
     sfr_bitfield SL0_1 : 1; /* Signal level on output 0 channel 1 */
     sfr_bitfield DT0_1 : 1; /* Dead time path enable on output 0 channel 1 */
     sfr_bitfield POL1_1 : 1; /* Polarity on output 1 channel 1 */
     sfr_bitfield OC1_1 : 1; /* Output 1 control channel 1 */
     sfr_bitfield SL1_1 : 1; /* Signal level on output 1 channel 1 */
     sfr_bitfield DT1_1 : 1; /* Dead time path enable on output 1 channel 1 */
     sfr_bitfield POL0_2 : 1; /* Polarity on output 0 channel 2 */
     sfr_bitfield OC0_2 : 1; /* Output 0 control channel 2 */
     sfr_bitfield SL0_2 : 1; /* Signal level on output 0 channel 2 */
     sfr_bitfield DT0_2 : 1; /* Dead time path enable on output 0 channel 2 */
     sfr_bitfield POL1_2 : 1; /* Polarity on output 1 channel 2 */
     sfr_bitfield OC1_2 : 1; /* Output 1 control channel 2 */
     sfr_bitfield SL1_2 : 1; /* Signal level on output 1 channel 2 */
     sfr_bitfield DT1_2 : 1; /* Dead time path enable on output 1 channel 2 */
     sfr_bitfield POL0_3 : 1; /* Polarity on output 0 channel 3 */
     sfr_bitfield OC0_3 : 1; /* Output 0 control channel 3 */
     sfr_bitfield SL0_3 : 1; /* Signal level on output 0 channel 3 */
     sfr_bitfield DT0_3 : 1; /* Dead time path enable on output 0 channel 3 */
     sfr_bitfield POL1_3 : 1; /* Polarity on output 1 channel 3 */
     sfr_bitfield OC1_3 : 1; /* Output 1 control channel 3 */
     sfr_bitfield SL1_3 : 1; /* Signal level on output 1 channel 3 */
     sfr_bitfield DT1_3 : 1; /* Dead time path enable on output 1 channel 3 */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_DTM1_CH_CTRL2_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield POL0_0_SR : 1; /* Polarity on output 0 channel 0 shadow register */
     sfr_bitfield OC0_0_SR : 1; /* Output 0 control channel 0 shadow register */
     sfr_bitfield SL0_0_SR : 1; /* Signal level on output 0 channel 0 shadow register */
     sfr_bitfield DT0_0_SR : 1; /* Dead time path enable on output 0 channel 0 shadow register */
     sfr_bitfield POL1_0_SR : 1; /* Polarity on output 1 channel 0 shadow register */
     sfr_bitfield OC1_0_SR : 1; /* Output 1 control channel 0 shadow register */
     sfr_bitfield SL1_0_SR : 1; /* Signal level on output 1 channel 0 shadow register */
     sfr_bitfield DT1_0_SR : 1; /* Dead time path enable on output 1 channel 0 shadow register */
     sfr_bitfield POL0_1_SR : 1; /* Polarity on output 0 channel 1 shadow register */
     sfr_bitfield OC0_1_SR : 1; /* Output 0 control channel 1 shadow register */
     sfr_bitfield SL0_1_SR : 1; /* Signal level on output 0 channel 1 shadow register */
     sfr_bitfield DT0_1_SR : 1; /* Dead time path enable on output 0 channel 1 shadow register */
     sfr_bitfield POL1_1_SR : 1; /* Polarity on output 1 channel 1 shadow register */
     sfr_bitfield OC1_1_SR : 1; /* Output 1 control channel 1 shadow register */
     sfr_bitfield SL1_1_SR : 1; /* Signal level on output 1 channel 1 shadow register */
     sfr_bitfield DT1_1_SR : 1; /* Dead time path enable on output 1 channel 1 shadow register */
     sfr_bitfield POL0_2_SR : 1; /* Polarity on output 0 channel 2 shadow register */
     sfr_bitfield OC0_2_SR : 1; /* Output 0 control channel 2 shadow register */
     sfr_bitfield SL0_2_SR : 1; /* Signal level on output 0 channel 2 shadow register */
     sfr_bitfield DT0_2_SR : 1; /* Dead time path enable on output 0 channel 2 shadow register */
     sfr_bitfield POL1_2_SR : 1; /* Polarity on output 1 channel 2 shadow register */
     sfr_bitfield OC1_2_SR : 1; /* Output 1 control channel 2 shadow register */
     sfr_bitfield SL1_2_SR : 1; /* Signal level on output 1 channel 2 shadow register */
     sfr_bitfield DT1_2_SR : 1; /* Dead time path enable on output 1 channel 2 shadow register */
     sfr_bitfield POL0_3_SR : 1; /* Polarity on output 0 channel 3 shadow register */
     sfr_bitfield OC0_3_SR : 1; /* Output 0 control channel 3 shadow register */
     sfr_bitfield SL0_3_SR : 1; /* Signal level on output 0 channel 3 shadow register */
     sfr_bitfield DT0_3_SR : 1; /* Dead time path enable on output 0 channel 3 shadow register */
     sfr_bitfield POL1_3_SR : 1; /* Polarity on output 1 channel 3 shadow register */
     sfr_bitfield OC1_3_SR : 1; /* Output 1 control channel 3 shadow register */
     sfr_bitfield SL1_3_SR : 1; /* Signal level on output 1 channel 3 shadow register */
     sfr_bitfield DT1_3_SR : 1; /* Dead time path enable on output 1 channel 3 shadow register */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_DTM1_CH_CTRL2_SR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield RELBLK : 10; /* Reload value blanking window */
    /* const */ sfr_bitfield Reserved : 6; /* Reserved */
     sfr_bitfield PSU_IN_SEL : 1; /* PSU input select */
     sfr_bitfield IN_POL : 1; /* Input polarity */
    /* const */ sfr_bitfield Reserved_18 : 2; /* Reserved */
     sfr_bitfield SHIFT_SEL : 2; /* Shift select */
    /* const */ sfr_bitfield Reserved_22 : 10; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_DTM1_PS_CTRL_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield RELRISE : 10; /* Reload value for rising edge dead time */
    /* const */ sfr_bitfield Reserved : 6; /* Reserved */
     sfr_bitfield RELFALL : 10; /* Reload value for falling edge dead time */
    /* const */ sfr_bitfield Reserved_26 : 6; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_DTM1_CH0_DTV_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield Reserved : 4; /* Reserved */
    /* const */ sfr_bitfield AEI_IRQ : 1; /* AEI_IRQ interrupt */
    /* const */ sfr_bitfield Reserved_5 : 27; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_ICM_IRQG_0_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield TIM0_CH0_IRQ : 1; /* TIM0 shared interrupt channel 0 */
    /* const */ sfr_bitfield TIM0_CH1_IRQ : 1; /* TIM0 shared interrupt channel 1 */
    /* const */ sfr_bitfield TIM0_CH2_IRQ : 1; /* TIM0 shared interrupt channel 2 */
    /* const */ sfr_bitfield TIM0_CH3_IRQ : 1; /* TIM0 shared interrupt channel 3 */
    /* const */ sfr_bitfield TIM0_CH4_IRQ : 1; /* TIM0 shared interrupt channel 4 */
    /* const */ sfr_bitfield TIM0_CH5_IRQ : 1; /* TIM0 shared interrupt channel 5 */
    /* const */ sfr_bitfield TIM0_CH6_IRQ : 1; /* TIM0 shared interrupt channel 6 */
    /* const */ sfr_bitfield TIM0_CH7_IRQ : 1; /* TIM0 shared interrupt channel 7 */
    /* const */ sfr_bitfield Reserved : 24; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_ICM_IRQG_2_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield TOM0_CH0_IRQ : 1; /* TOM0 channel 0 shared interrupt */
    /* const */ sfr_bitfield TOM0_CH1_IRQ : 1; /* TOM0 channel 1 shared interrupt */
    /* const */ sfr_bitfield TOM0_CH2_IRQ : 1; /* TOM0 channel 2 shared interrupt */
    /* const */ sfr_bitfield TOM0_CH3_IRQ : 1; /* TOM0 channel 3 shared interrupt */
    /* const */ sfr_bitfield TOM0_CH4_IRQ : 1; /* TOM0 channel 4 shared interrupt */
    /* const */ sfr_bitfield TOM0_CH5_IRQ : 1; /* TOM0 channel 5 shared interrupt */
    /* const */ sfr_bitfield TOM0_CH6_IRQ : 1; /* TOM0 channel 6 shared interrupt */
    /* const */ sfr_bitfield TOM0_CH7_IRQ : 1; /* TOM0 channel 7 shared interrupt */
    /* const */ sfr_bitfield TOM0_CH8_IRQ : 1; /* TOM0 channel 8 shared interrupt */
    /* const */ sfr_bitfield TOM0_CH9_IRQ : 1; /* TOM0 channel 9 shared interrupt */
    /* const */ sfr_bitfield TOM0_CH10_IRQ : 1; /* TOM0 channel 10 shared interrupt */
    /* const */ sfr_bitfield TOM0_CH11_IRQ : 1; /* TOM0 channel 11 shared interrupt */
    /* const */ sfr_bitfield TOM0_CH12_IRQ : 1; /* TOM0 channel 12 shared interrupt */
    /* const */ sfr_bitfield TOM0_CH13_IRQ : 1; /* TOM0 channel 13 shared interrupt */
    /* const */ sfr_bitfield TOM0_CH14_IRQ : 1; /* TOM0 channel 14 shared interrupt */
    /* const */ sfr_bitfield TOM0_CH15_IRQ : 1; /* TOM0 channel 15 shared interrupt */
    /* const */ sfr_bitfield TOM1_CH0_IRQ : 1; /* TOM1 channel 0 shared interrupt */
    /* const */ sfr_bitfield TOM1_CH1_IRQ : 1; /* TOM1 channel 1 shared interrupt */
    /* const */ sfr_bitfield TOM1_CH2_IRQ : 1; /* TOM1 channel 2 shared interrupt */
    /* const */ sfr_bitfield TOM1_CH3_IRQ : 1; /* TOM1 channel 3 shared interrupt */
    /* const */ sfr_bitfield TOM1_CH4_IRQ : 1; /* TOM1 channel 4 shared interrupt */
    /* const */ sfr_bitfield TOM1_CH5_IRQ : 1; /* TOM1 channel 5 shared interrupt */
    /* const */ sfr_bitfield TOM1_CH6_IRQ : 1; /* TOM1 channel 6 shared interrupt */
    /* const */ sfr_bitfield TOM1_CH7_IRQ : 1; /* TOM1 channel 7 shared interrupt */
    /* const */ sfr_bitfield TOM1_CH8_IRQ : 1; /* TOM1 channel 8 shared interrupt */
    /* const */ sfr_bitfield TOM1_CH9_IRQ : 1; /* TOM1 channel 9 shared interrupt */
    /* const */ sfr_bitfield TOM1_CH10_IRQ : 1; /* TOM1 channel 10 shared interrupt */
    /* const */ sfr_bitfield TOM1_CH11_IRQ : 1; /* TOM1 channel 11 shared interrupt */
    /* const */ sfr_bitfield TOM1_CH12_IRQ : 1; /* TOM1 channel 12 shared interrupt */
    /* const */ sfr_bitfield TOM1_CH13_IRQ : 1; /* TOM1 channel 13 shared interrupt */
    /* const */ sfr_bitfield TOM1_CH14_IRQ : 1; /* TOM1 channel 14 shared interrupt */
    /* const */ sfr_bitfield TOM1_CH15_IRQ : 1; /* TOM1 channel 15 shared interrupt */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_ICM_IRQG_6_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield GTM_EIRQ : 1; /* GTM Error interrupt request */
    /* const */ sfr_bitfield Reserved : 3; /* Reserved */
    /* const */ sfr_bitfield TIM0_EIRQ : 1; /* TIM0 error interrupt */
    /* const */ sfr_bitfield Reserved_5 : 27; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_ICM_IRQG_MEI_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield TIM0_CH0_EIRQ : 1; /* TIM0 channel 0 error interrupt */
    /* const */ sfr_bitfield TIM0_CH1_EIRQ : 1; /* TIM0 channel 1 error interrupt */
    /* const */ sfr_bitfield TIM0_CH2_EIRQ : 1; /* TIM0 channel 2 error interrupt */
    /* const */ sfr_bitfield TIM0_CH3_EIRQ : 1; /* TIM0 channel 3 error interrupt */
    /* const */ sfr_bitfield TIM0_CH4_EIRQ : 1; /* TIM0 channel 4 error interrupt */
    /* const */ sfr_bitfield TIM0_CH5_EIRQ : 1; /* TIM0 channel 5 error interrupt */
    /* const */ sfr_bitfield TIM0_CH6_EIRQ : 1; /* TIM0 channel 6 error interrupt */
    /* const */ sfr_bitfield TIM0_CH7_EIRQ : 1; /* TIM0 channel 7 error interrupt */
    /* const */ sfr_bitfield Reserved : 24; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_ICM_IRQG_CEI1_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CH0SEL : 4; /* TIM Channel 0 Input Selection */
     sfr_bitfield CH1SEL : 4; /* TIM Channel 1 Input Selection */
     sfr_bitfield CH2SEL : 4; /* TIM Channel 2 Input Selection */
     sfr_bitfield CH3SEL : 4; /* TIM Channel 3 Input Selection */
     sfr_bitfield CH4SEL : 4; /* TIM Channel 4 Input Selection */
     sfr_bitfield CH5SEL : 4; /* TIM Channel 5 Input Selection */
     sfr_bitfield CH6SEL : 4; /* TIM Channel 6 Input Selection */
     sfr_bitfield CH7SEL : 4; /* TIM Channel 7 Input Selection */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TIM0INSEL_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield SEL0 : 2; /* TOUT(n*16+0) Output Selection */
     sfr_bitfield SEL1 : 2; /* TOUT(n*16+1) Output Selection */
     sfr_bitfield SEL2 : 2; /* TOUT(n*16+2) Output Selection */
     sfr_bitfield SEL3 : 2; /* TOUT(n*16+3) Output Selection */
     sfr_bitfield SEL4 : 2; /* TOUT(n*16+4) Output Selection */
     sfr_bitfield SEL5 : 2; /* TOUT(n*16+5) Output Selection */
     sfr_bitfield SEL6 : 2; /* TOUT(n*16+6) Output Selection */
     sfr_bitfield SEL7 : 2; /* TOUT(n*16+7) Output Selection */
     sfr_bitfield SEL8 : 2; /* TOUT(n*16+8) Output Selection */
     sfr_bitfield SEL9 : 2; /* TOUT(n*16+9) Output Selection */
     sfr_bitfield SEL10 : 2; /* TOUT(n*16+10) Output Selection */
     sfr_bitfield SEL11 : 2; /* TOUT(n*16+11) Output Selection */
     sfr_bitfield SEL12 : 2; /* TOUT(n*16+12) Output Selection */
     sfr_bitfield SEL13 : 2; /* TOUT(n*16+13) Output Selection */
     sfr_bitfield SEL14 : 2; /* TOUT(n*16+14) Output Selection */
     sfr_bitfield SEL15 : 2; /* TOUT(n*16+15) Output Selection */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_TOUTSEL0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield SEL0 : 4; /* Output Selection for ADC0 GTM connection */
     sfr_bitfield SEL1 : 4; /* Output Selection for ADC1 GTM connection */
     sfr_bitfield SEL2 : 4; /* Output Selection for ADC2 GTM connection */
     sfr_bitfield SEL3 : 4; /* Output Selection for ADC3 GTM connection */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_ADCTRIG0OUT0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield SEL0 : 4; /* Output Selection for CAN GTM connection */
     sfr_bitfield SEL1 : 4; /* Output Selection for CAN GTM connection */
     sfr_bitfield SEL2 : 4; /* Output Selection for CAN GTM connection */
     sfr_bitfield SEL3 : 4; /* Output Selection for CAN GTM connection */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_CANOUTSEL_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield OTGB0 : 4; /* Trigger Set for OTGB0 */
     sfr_bitfield resv4 : 4; /* reserved */
     sfr_bitfield OTGB1 : 4; /* Trigger Set for OTGB1 */
     sfr_bitfield resv12 : 4; /* reserved */
     sfr_bitfield OTGB2 : 4; /* Trigger Set for OTGB2 */
     sfr_bitfield resv20 : 12; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_OTSS_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield B0LMT : 3; /* OTGB0 TS16_IOS Low Byte Module Type */
     sfr_bitfield resv3 : 1; /* reserved */
     sfr_bitfield B0LMI : 4; /* OTGB0 TS16_IOS Low Byte Module Instance */
     sfr_bitfield B0HMT : 3; /* OTGB0 TS16_IOS High Byte Module Type */
     sfr_bitfield resv11 : 1; /* reserved */
     sfr_bitfield B0HMI : 4; /* OTGB0 TS16_IOS High Byte Module Instance */
     sfr_bitfield B1LMT : 3; /* OTGB1 TS16_IOS Low Byte Module Type */
     sfr_bitfield resv19 : 1; /* reserved */
     sfr_bitfield B1LMI : 4; /* OTGB1 TS16_IOS Low Byte Module Instance */
     sfr_bitfield B1HMT : 3; /* OTGB1 TS16_IOS High Byte Module Type */
     sfr_bitfield resv27 : 1; /* reserved */
     sfr_bitfield B1HMI : 4; /* OTGB1 TS16_IOS High Byte Module Instance */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_OTSC0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield DDREN : 1; /* Destructive Debug Read Enable */
     sfr_bitfield DREN : 1; /* Destructive Read Enable */
     sfr_bitfield resv2 : 30; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_ODA_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CV : 27; /* Compare Value */
     sfr_bitfield resv27 : 1; /* reserved */
     sfr_bitfield CM : 2; /* Compare Mode */
     sfr_bitfield resv30 : 2; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_OTBU0T_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CV : 24; /* Compare Value */
     sfr_bitfield resv24 : 4; /* reserved */
     sfr_bitfield EN : 1; /* Enable */
     sfr_bitfield resv29 : 3; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} GTM_OTBU1T_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield MOD_REV : 8; /* Module Revision */
    /* const */ sfr_bitfield MOD_TYPE : 8; /* Module Type */
    /* const */ sfr_bitfield MOD_NUMBER : 16; /* Module Number */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_ID_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield DIVA : 5; /* Divider Factor for the Analog Internal Clock */
     sfr_bitfield resv5 : 2; /* reserved */
     sfr_bitfield DCMSB : 1; /* Double Clock for the MSB Conversion */
     sfr_bitfield DIVD : 2; /* Divider Factor for the Arbiter Clock */
     sfr_bitfield resv10 : 2; /* reserved */
     sfr_bitfield REFPC : 1; /* Reference Precharge Control */
     sfr_bitfield resv13 : 1; /* reserved */
     sfr_bitfield LOSUP : 1; /* Low Power Supply Voltage Select */
     sfr_bitfield DIVWC : 1; /* Write Control for Divider Parameters */
     sfr_bitfield DPCAL0 : 1; /* Disable Post-Calibration */
     sfr_bitfield DPCAL1 : 1; /* Disable Post-Calibration */
     sfr_bitfield DPCAL2 : 1; /* Disable Post-Calibration */
     sfr_bitfield DPCAL3 : 1; /* Disable Post-Calibration */
     sfr_bitfield resv20 : 11; /* reserved */
     sfr_bitfield SUCAL : 1; /* Start-Up Calibration */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_GLOBCFG_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ASSCH0 : 1; /* Assignment for Channel 0 */
     sfr_bitfield ASSCH1 : 1; /* Assignment for Channel 1 */
     sfr_bitfield ASSCH2 : 1; /* Assignment for Channel 2 */
     sfr_bitfield ASSCH3 : 1; /* Assignment for Channel 3 */
     sfr_bitfield ASSCH4 : 1; /* Assignment for Channel 4 */
     sfr_bitfield ASSCH5 : 1; /* Assignment for Channel 5 */
     sfr_bitfield ASSCH6 : 1; /* Assignment for Channel 6 */
     sfr_bitfield ASSCH7 : 1; /* Assignment for Channel 7 */
     sfr_bitfield ASSCH8 : 1; /* Assignment for Channel 8 */
     sfr_bitfield ASSCH9 : 1; /* Assignment for Channel 9 */
     sfr_bitfield ASSCH10 : 1; /* Assignment for Channel 10 */
     sfr_bitfield ASSCH11 : 1; /* Assignment for Channel 11 */
     sfr_bitfield ASSCH12 : 1; /* Assignment for Channel 12 */
     sfr_bitfield ASSCH13 : 1; /* Assignment for Channel 13 */
     sfr_bitfield ASSCH14 : 1; /* Assignment for Channel 14 */
     sfr_bitfield ASSCH15 : 1; /* Assignment for Channel 15 */
     sfr_bitfield ASSCH16 : 1; /* Assignment for Channel 16 */
     sfr_bitfield ASSCH17 : 1; /* Assignment for Channel 17 */
     sfr_bitfield ASSCH18 : 1; /* Assignment for Channel 18 */
     sfr_bitfield ASSCH19 : 1; /* Assignment for Channel 19 */
     sfr_bitfield ASSCH20 : 1; /* Assignment for Channel 20 */
     sfr_bitfield ASSCH21 : 1; /* Assignment for Channel 21 */
     sfr_bitfield ASSCH22 : 1; /* Assignment for Channel 22 */
     sfr_bitfield ASSCH23 : 1; /* Assignment for Channel 23 */
     sfr_bitfield ASSCH24 : 1; /* Assignment for Channel 24 */
     sfr_bitfield ASSCH25 : 1; /* Assignment for Channel 25 */
     sfr_bitfield ASSCH26 : 1; /* Assignment for Channel 26 */
     sfr_bitfield ASSCH27 : 1; /* Assignment for Channel 27 */
     sfr_bitfield ASSCH28 : 1; /* Assignment for Channel 28 */
     sfr_bitfield ASSCH29 : 1; /* Assignment for Channel 29 */
     sfr_bitfield ASSCH30 : 1; /* Assignment for Channel 30 */
     sfr_bitfield ASSCH31 : 1; /* Assignment for Channel 31 */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0CHASS_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ASSRR0 : 1; /* Assignment for Result Register 0 */
     sfr_bitfield ASSRR1 : 1; /* Assignment for Result Register 1 */
     sfr_bitfield ASSRR2 : 1; /* Assignment for Result Register 2 */
     sfr_bitfield ASSRR3 : 1; /* Assignment for Result Register 3 */
     sfr_bitfield ASSRR4 : 1; /* Assignment for Result Register 4 */
     sfr_bitfield ASSRR5 : 1; /* Assignment for Result Register 5 */
     sfr_bitfield ASSRR6 : 1; /* Assignment for Result Register 6 */
     sfr_bitfield ASSRR7 : 1; /* Assignment for Result Register 7 */
     sfr_bitfield ASSRR8 : 1; /* Assignment for Result Register 8 */
     sfr_bitfield ASSRR9 : 1; /* Assignment for Result Register 9 */
     sfr_bitfield ASSRR10 : 1; /* Assignment for Result Register 10 */
     sfr_bitfield ASSRR11 : 1; /* Assignment for Result Register 11 */
     sfr_bitfield ASSRR12 : 1; /* Assignment for Result Register 12 */
     sfr_bitfield ASSRR13 : 1; /* Assignment for Result Register 13 */
     sfr_bitfield ASSRR14 : 1; /* Assignment for Result Register 14 */
     sfr_bitfield ASSRR15 : 1; /* Assignment for Result Register 15 */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0RRASS_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield APC0 : 1; /* Access Protection Channel Control, Group 0 - 3 */
     sfr_bitfield APC1 : 1; /* Access Protection Channel Control, Group 0 - 3 */
     sfr_bitfield APC2 : 1; /* Access Protection Channel Control, Group 0 - 3 */
     sfr_bitfield APC3 : 1; /* Access Protection Channel Control, Group 0 - 3 */
     sfr_bitfield resv4 : 11; /* reserved */
     sfr_bitfield APEM : 1; /* Access Protection External Multiplexer */
     sfr_bitfield API0 : 1; /* Access Protection Initialization, Group 0 - 3 */
     sfr_bitfield API1 : 1; /* Access Protection Initialization, Group 0 - 3 */
     sfr_bitfield API2 : 1; /* Access Protection Initialization, Group 0 - 3 */
     sfr_bitfield API3 : 1; /* Access Protection Initialization, Group 0 - 3 */
     sfr_bitfield resv20 : 11; /* reserved */
     sfr_bitfield APGC : 1; /* Access Protection Global Configuration */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_ACCPROT0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield APS0 : 1; /* Access Protection Service Request, Group 0 - 3 */
     sfr_bitfield APS1 : 1; /* Access Protection Service Request, Group 0 - 3 */
     sfr_bitfield APS2 : 1; /* Access Protection Service Request, Group 0 - 3 */
     sfr_bitfield APS3 : 1; /* Access Protection Service Request, Group 0 - 3 */
     sfr_bitfield resv4 : 11; /* reserved */
     sfr_bitfield APTF : 1; /* Access Protection Test Function */
     sfr_bitfield APR0 : 1; /* Access Protection Result Registers, Group 0 - 3 */
     sfr_bitfield APR1 : 1; /* Access Protection Result Registers, Group 0 - 3 */
     sfr_bitfield APR2 : 1; /* Access Protection Result Registers, Group 0 - 3 */
     sfr_bitfield APR3 : 1; /* Access Protection Result Registers, Group 0 - 3 */
     sfr_bitfield resv20 : 12; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_ACCPROT1_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield SRCRESREG : 4; /* Source-specific Result Register */
     sfr_bitfield resv4 : 4; /* reserved */
     sfr_bitfield XTSEL : 4; /* External Trigger Input Selection */
    /* const */ sfr_bitfield XTLVL : 1; /* External Trigger Level */
     sfr_bitfield XTMODE : 2; /* Trigger Operating Mode */
     sfr_bitfield XTWC : 1; /* Write Control for Trigger Configuration */
     sfr_bitfield GTSEL : 4; /* Gate Input Selection */
    /* const */ sfr_bitfield GTLVL : 1; /* Gate Input Level */
     sfr_bitfield resv21 : 2; /* reserved */
     sfr_bitfield GTWC : 1; /* Write Control for Gate Configuration */
     sfr_bitfield resv24 : 4; /* reserved */
     sfr_bitfield TMEN : 1; /* Timer Mode Enable */
     sfr_bitfield resv29 : 2; /* reserved */
     sfr_bitfield TMWC : 1; /* Write Control for Timer Mode */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0QCTRL0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ENGT : 2; /* Enable Gate */
     sfr_bitfield ENTR : 1; /* Enable External Trigger */
     sfr_bitfield resv3 : 5; /* reserved */
     sfr_bitfield CLRV : 1; /* Clear Valid Bit */
     sfr_bitfield TREV : 1; /* Trigger Event */
     sfr_bitfield FLUSH : 1; /* Flush Queue */
     sfr_bitfield CEV : 1; /* Clear Event Flag */
     sfr_bitfield resv12 : 4; /* reserved */
     sfr_bitfield RPTDIS : 1; /* Repeat Disable */
     sfr_bitfield resv17 : 15; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0QMR0_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield FILL : 4; /* Filling Level for Queue 0 */
     sfr_bitfield resv4 : 1; /* reserved */
    /* const */ sfr_bitfield EMPTY : 1; /* Queue Empty */
     sfr_bitfield resv6 : 1; /* reserved */
    /* const */ sfr_bitfield REQGT : 1; /* Request Gate Level */
    /* const */ sfr_bitfield EV : 1; /* Event Detected */
     sfr_bitfield resv9 : 23; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0QSR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield REQCHNR : 5; /* Request Channel Number */
     sfr_bitfield RF : 1; /* Refill */
     sfr_bitfield ENSI : 1; /* Enable Source Interrupt */
     sfr_bitfield EXTR : 1; /* External Trigger */
     sfr_bitfield resv8 : 24; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0QINR0_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield REQCHNR : 5; /* Request Channel Number */
    /* const */ sfr_bitfield RF : 1; /* Refill */
    /* const */ sfr_bitfield ENSI : 1; /* Enable Source Interrupt */
    /* const */ sfr_bitfield EXTR : 1; /* External Trigger */
    /* const */ sfr_bitfield V : 1; /* Request Channel Number Valid */
     sfr_bitfield resv9 : 23; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0Q0R0_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield FILL : 4; /* Filling Level for Queue 3 */
     sfr_bitfield resv4 : 1; /* reserved */
    /* const */ sfr_bitfield EMPTY : 1; /* Queue Empty */
     sfr_bitfield resv6 : 1; /* reserved */
    /* const */ sfr_bitfield REQGT : 1; /* Request Gate Level */
    /* const */ sfr_bitfield EV : 1; /* Event Detected */
     sfr_bitfield resv9 : 23; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0QSR3_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield REQCHNR : 5; /* Request Channel Number */
     sfr_bitfield RF : 1; /* Refill */
     sfr_bitfield ENSI : 1; /* Enable Source Interrupt */
     sfr_bitfield EXTR : 1; /* External Trigger */
     sfr_bitfield resv8 : 1; /* reserved */
     sfr_bitfield PDD : 1; /* Pull-Down Diagnostics Enable */
     sfr_bitfield MDPD : 1; /* Multiplexer Diagnostics Pull-Devices Enable */
     sfr_bitfield MDPU : 1; /* Multiplexer Diagnostics Pull-Devices Enable */
     sfr_bitfield CDEN : 1; /* Converter Diagnostics Enable */
     sfr_bitfield CDSEL : 2; /* Converter Diagnostics Pull-Devices Select */
     sfr_bitfield resv15 : 17; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0QINR3_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield REQCHNR : 5; /* Request Channel Number */
    /* const */ sfr_bitfield RF : 1; /* Refill */
    /* const */ sfr_bitfield ENSI : 1; /* Enable Source Interrupt */
    /* const */ sfr_bitfield EXTR : 1; /* External Trigger */
    /* const */ sfr_bitfield V : 1; /* Request Channel Number Valid */
    /* const */ sfr_bitfield PDD : 1; /* Pull-Down Diagnostics Enable */
    /* const */ sfr_bitfield MDPD : 1; /* Multiplexer Diagnostics Pull-Devices Enable */
    /* const */ sfr_bitfield MDPU : 1; /* Multiplexer Diagnostics Pull-Devices Enable */
    /* const */ sfr_bitfield CDEN : 1; /* Converter Diagnostics Enable */
    /* const */ sfr_bitfield CDSEL : 2; /* Converter Diagnostics Pull-Devices Select */
     sfr_bitfield resv15 : 17; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0Q0R3_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield TSC : 6; /* Trigger Sequence Counter */
     sfr_bitfield resv6 : 8; /* reserved */
    /* const */ sfr_bitfield Q3ACT : 1; /* Queue 3 Active */
    /* const */ sfr_bitfield OV : 1; /* Overflow Detected */
     sfr_bitfield TSCSET : 6; /* Trigger Sequence Counter Start Value */
     sfr_bitfield resv22 : 2; /* reserved */
     sfr_bitfield ITSEL : 2; /* Internal Trigger Input Selection */
     sfr_bitfield resv26 : 2; /* reserved */
     sfr_bitfield SRDIS : 1; /* Service Request Disable */
     sfr_bitfield resv29 : 2; /* reserved */
     sfr_bitfield COV : 1; /* Clear Overflow Flag */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0TRCTR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ENGT : 2; /* Enable Gate */
     sfr_bitfield ENTR : 1; /* Enable External Trigger */
     sfr_bitfield ENSI : 1; /* Enable Source Interrupt */
     sfr_bitfield SCAN : 1; /* Autoscan Enable */
     sfr_bitfield LDM : 1; /* Autoscan Source Load Event Mode */
     sfr_bitfield resv6 : 1; /* reserved */
    /* const */ sfr_bitfield REQGT : 1; /* Request Gate Level */
     sfr_bitfield CLRPND : 1; /* Clear Pending Bits */
     sfr_bitfield LDEV : 1; /* Generate Load Event */
     sfr_bitfield resv10 : 6; /* reserved */
     sfr_bitfield RPTDIS : 1; /* Repeat Disable */
     sfr_bitfield resv17 : 15; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0ASMR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CHSEL : 32; /* Channel Selection */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0ASSEL_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CHPND : 32; /* Channels Pending */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0ASPND_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield SRCRESREG : 4; /* Source-specific Result Register */
     sfr_bitfield resv4 : 4; /* reserved */
     sfr_bitfield XTSEL : 4; /* External Trigger Input Selection */
    /* const */ sfr_bitfield XTLVL : 1; /* External Trigger Level */
     sfr_bitfield XTMODE : 2; /* Trigger Operating Mode */
     sfr_bitfield XTWC : 1; /* Write Control for Trigger Configuration */
     sfr_bitfield GTSEL : 4; /* Gate Input Selection */
    /* const */ sfr_bitfield GTLVL : 1; /* Gate Input Level */
     sfr_bitfield resv21 : 2; /* reserved */
     sfr_bitfield GTWC : 1; /* Write Control for Gate Configuration */
     sfr_bitfield resv24 : 8; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_BRSCTRL_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CHSELGy : 32; /* Channel Selection Group x */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_BRSSEL0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CHPNDGy : 32; /* Channels Pending Group x */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_BRSPND0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ANONC : 2; /* Analog Converter Control */
     sfr_bitfield resv2 : 2; /* reserved */
     sfr_bitfield ARBRND : 2; /* Arbitration Round Length */
     sfr_bitfield resv6 : 1; /* reserved */
     sfr_bitfield ARBM : 1; /* Arbitration Mode */
     sfr_bitfield resv8 : 8; /* reserved */
    /* const */ sfr_bitfield ANONS : 2; /* Analog Converter Control Status */
    /* const */ sfr_bitfield CSRC : 2; /* Currently Converted Request Source */
    /* const */ sfr_bitfield CHNR : 5; /* Channel Number */
    /* const */ sfr_bitfield SYNRUN : 1; /* Synchronous Conversion Running */
     sfr_bitfield resv26 : 2; /* reserved */
    /* const */ sfr_bitfield CAL : 1; /* Start-Up Calibration Active Indication */
    /* const */ sfr_bitfield CALS : 1; /* Start-Up Calibration Started */
    /* const */ sfr_bitfield BUSY : 1; /* Converter Busy Flag */
    /* const */ sfr_bitfield SAMPLE : 1; /* Sample Phase Flag */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0ARBCFG_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PRIO0 : 2; /* Priority of Request Source x */
     sfr_bitfield resv2 : 1; /* reserved */
     sfr_bitfield CSM0 : 1; /* Conversion Start Mode of Request Source x */
     sfr_bitfield PRIO1 : 2; /* Priority of Request Source x */
     sfr_bitfield resv6 : 1; /* reserved */
     sfr_bitfield CSM1 : 1; /* Conversion Start Mode of Request Source x */
     sfr_bitfield PRIO2 : 2; /* Priority of Request Source x */
     sfr_bitfield resv10 : 1; /* reserved */
     sfr_bitfield CSM2 : 1; /* Conversion Start Mode of Request Source x */
     sfr_bitfield PRIO3 : 2; /* Priority of Request Source x */
     sfr_bitfield resv14 : 1; /* reserved */
     sfr_bitfield CSM3 : 1; /* Conversion Start Mode of Request Source x */
     sfr_bitfield resv16 : 8; /* reserved */
     sfr_bitfield ASEN0 : 1; /* Arbitration Slot 0 Enable */
     sfr_bitfield ASEN1 : 1; /* Arbitration Slot 1 Enable */
     sfr_bitfield ASEN2 : 1; /* Arbitration Slot 2 Enable */
     sfr_bitfield ASEN3 : 1; /* Arbitration Slot 3 Enable */
     sfr_bitfield resv28 : 4; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0ARBPR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ICLSEL : 2; /* Input Class Select */
     sfr_bitfield resv2 : 2; /* reserved */
     sfr_bitfield BNDSELL : 2; /* Lower Boundary Select */
     sfr_bitfield BNDSELU : 2; /* Upper Boundary Select */
     sfr_bitfield CHEVMODE : 2; /* Channel Event Mode */
     sfr_bitfield SYNC : 1; /* Synchronization Request */
     sfr_bitfield REFSEL : 1; /* Reference Input Selection */
     sfr_bitfield BNDSELX : 4; /* BoundaryExtension */
     sfr_bitfield RESREG : 4; /* Result Register */
     sfr_bitfield RESTBS : 1; /* Result Target for Background Source */
     sfr_bitfield RESPOS : 1; /* Result Position */
     sfr_bitfield resv22 : 6; /* reserved */
     sfr_bitfield BWDCH : 2; /* Broken Wire Detection Channel */
     sfr_bitfield BWDEN : 1; /* Broken Wire Detection Enable */
     sfr_bitfield resv31 : 1; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0CHCTR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield STCS : 5; /* Sample Time Control for Standard Conversions */
     sfr_bitfield resv5 : 3; /* reserved */
     sfr_bitfield CMS : 3; /* Conversion Mode for Standard Conversions */
     sfr_bitfield resv11 : 5; /* reserved */
     sfr_bitfield STCE : 5; /* Sample Time Control for EMUX Conversions */
     sfr_bitfield resv21 : 3; /* reserved */
     sfr_bitfield CME : 3; /* Conversion Mode for EMUX Conversions */
     sfr_bitfield resv27 : 5; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0ICLASS0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield ALIAS0 : 5; /* Alias Value for CH0 Conversion Requests */
     sfr_bitfield resv5 : 3; /* reserved */
     sfr_bitfield ALIAS1 : 5; /* Alias Value for CH1 Conversion Requests */
     sfr_bitfield resv13 : 19; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0ALIAS_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield BOUNDARY0 : 12; /* Boundary Value 0 for Limit Checking */
     sfr_bitfield resv12 : 4; /* reserved */
     sfr_bitfield BOUNDARY1 : 12; /* Boundary Value 1 for Limit Checking */
     sfr_bitfield resv28 : 4; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0BOUND_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield BFL0 : 1; /* Boundary Flag 0 */
    /* const */ sfr_bitfield BFL1 : 1; /* Boundary Flag 1 */
    /* const */ sfr_bitfield BFL2 : 1; /* Boundary Flag 2 */
    /* const */ sfr_bitfield BFL3 : 1; /* Boundary Flag 3 */
     sfr_bitfield resv4 : 4; /* reserved */
     sfr_bitfield BFA0 : 1; /* Boundary Flag 0 Activation Select */
     sfr_bitfield BFA1 : 1; /* Boundary Flag 1 Activation Select */
     sfr_bitfield BFA2 : 1; /* Boundary Flag 2 Activation Select */
     sfr_bitfield BFA3 : 1; /* Boundary Flag 3 Activation Select */
     sfr_bitfield resv12 : 4; /* reserved */
     sfr_bitfield BFI0 : 1; /* Boundary Flag 0 Inversion Control */
     sfr_bitfield BFI1 : 1; /* Boundary Flag 1 Inversion Control */
     sfr_bitfield BFI2 : 1; /* Boundary Flag 2 Inversion Control */
     sfr_bitfield BFI3 : 1; /* Boundary Flag 3 Inversion Control */
     sfr_bitfield resv20 : 12; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0BFL_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield BFC0 : 1; /* Boundary Flag 0 Clear */
     sfr_bitfield BFC1 : 1; /* Boundary Flag 1 Clear */
     sfr_bitfield BFC2 : 1; /* Boundary Flag 2 Clear */
     sfr_bitfield BFC3 : 1; /* Boundary Flag 3 Clear */
     sfr_bitfield resv4 : 12; /* reserved */
     sfr_bitfield BFS0 : 1; /* Boundary Flag 0 Set */
     sfr_bitfield BFS1 : 1; /* Boundary Flag 1 Set */
     sfr_bitfield BFS2 : 1; /* Boundary Flag 2 Set */
     sfr_bitfield BFS3 : 1; /* Boundary Flag 3 Set */
     sfr_bitfield resv20 : 12; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0BFLS_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield BFM0 : 4; /* Boundary Flag y Mode Control */
     sfr_bitfield BFM1 : 4; /* Boundary Flag y Mode Control */
     sfr_bitfield BFM2 : 4; /* Boundary Flag y Mode Control */
     sfr_bitfield BFM3 : 4; /* Boundary Flag y Mode Control */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0BFLC_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield BFL0NP : 4; /* Boundary Flag y Node Pointer */
     sfr_bitfield BFL1NP : 4; /* Boundary Flag y Node Pointer */
     sfr_bitfield BFL2NP : 4; /* Boundary Flag y Node Pointer */
     sfr_bitfield BFL3NP : 4; /* Boundary Flag y Node Pointer */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0BFLNP_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 16; /* reserved */
     sfr_bitfield DRCTR : 4; /* Data Reduction Control */
     sfr_bitfield DMM : 2; /* Data Modification Mode */
     sfr_bitfield resv22 : 2; /* reserved */
     sfr_bitfield WFR : 1; /* Wait-for-Read Mode Enable */
     sfr_bitfield FEN : 2; /* FIFO Mode Enable */
     sfr_bitfield resv27 : 4; /* reserved */
     sfr_bitfield SRGEN : 1; /* Service Request Generation Enable */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0RCR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield RESULT : 16; /* Result of Most Recent Conversion */
    /* const */ sfr_bitfield DRC : 4; /* Data Reduction Counter */
    /* const */ sfr_bitfield CHNR : 5; /* Channel Number */
    /* const */ sfr_bitfield EMUX : 3; /* External Multiplexer Setting */
    /* const */ sfr_bitfield CRS : 2; /* Converted Request Source */
    /* const */ sfr_bitfield FCR : 1; /* Fast Compare Result */
    /* const */ sfr_bitfield VF : 1; /* Valid Flag */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0RES0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 16; /* reserved */
     sfr_bitfield DRCTR : 4; /* Data Reduction Control */
     sfr_bitfield resv20 : 4; /* reserved */
     sfr_bitfield WFR : 1; /* Wait-for-Read Mode Enable */
     sfr_bitfield resv25 : 6; /* reserved */
     sfr_bitfield SRGEN : 1; /* Service Request Generation Enable */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_GLOBRCR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield RESULT : 16; /* Result of most recent conversion */
    /* const */ sfr_bitfield GNR : 4; /* Group Number */
    /* const */ sfr_bitfield CHNR : 5; /* Channel Number */
    /* const */ sfr_bitfield EMUX : 3; /* External Multiplexer Setting */
    /* const */ sfr_bitfield CRS : 2; /* Converted Request Source */
    /* const */ sfr_bitfield FCR : 1; /* Fast Compare Result */
     sfr_bitfield VF : 1; /* Valid Flag */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_GLOBRES_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield VF0 : 1; /* Valid Flag of Result Register x */
     sfr_bitfield VF1 : 1; /* Valid Flag of Result Register x */
     sfr_bitfield VF2 : 1; /* Valid Flag of Result Register x */
     sfr_bitfield VF3 : 1; /* Valid Flag of Result Register x */
     sfr_bitfield VF4 : 1; /* Valid Flag of Result Register x */
     sfr_bitfield VF5 : 1; /* Valid Flag of Result Register x */
     sfr_bitfield VF6 : 1; /* Valid Flag of Result Register x */
     sfr_bitfield VF7 : 1; /* Valid Flag of Result Register x */
     sfr_bitfield VF8 : 1; /* Valid Flag of Result Register x */
     sfr_bitfield VF9 : 1; /* Valid Flag of Result Register x */
     sfr_bitfield VF10 : 1; /* Valid Flag of Result Register x */
     sfr_bitfield VF11 : 1; /* Valid Flag of Result Register x */
     sfr_bitfield VF12 : 1; /* Valid Flag of Result Register x */
     sfr_bitfield VF13 : 1; /* Valid Flag of Result Register x */
     sfr_bitfield VF14 : 1; /* Valid Flag of Result Register x */
     sfr_bitfield VF15 : 1; /* Valid Flag of Result Register x */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0VFR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield STSEL : 2; /* Start Selection */
     sfr_bitfield resv2 : 2; /* reserved */
     sfr_bitfield EVALR1 : 1; /* Evaluate Ready Input Rx */
     sfr_bitfield EVALR2 : 1; /* Evaluate Ready Input Rx */
     sfr_bitfield EVALR3 : 1; /* Evaluate Ready Input Rx */
     sfr_bitfield resv7 : 25; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0SYNCTR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CDCH : 4; /* Conversion Diagnostics Channel */
     sfr_bitfield CDGR : 4; /* Conversion Diagnostics Group */
     sfr_bitfield CDEN : 1; /* Converter Diagnostics Enable */
     sfr_bitfield CDSEL : 2; /* Converter Diagnostics Pull-Devices Select */
     sfr_bitfield resv11 : 4; /* reserved */
     sfr_bitfield CDWC : 1; /* Write Control for Conversion Diagnostics */
     sfr_bitfield PDD : 1; /* Pull-Down Diagnostics Enable */
     sfr_bitfield MDPD : 1; /* Multiplexer Diagnostics Pull-Devices Enable */
     sfr_bitfield MDPU : 1; /* Multiplexer Diagnostics Pull-Devices Enable */
     sfr_bitfield resv19 : 4; /* reserved */
     sfr_bitfield MDWC : 1; /* Write Control for Multiplexer Diagnostics */
     sfr_bitfield resv24 : 6; /* reserved */
     sfr_bitfield RCEN : 1; /* Reference Channel Enable */
     sfr_bitfield RCWC : 1; /* Write Control for Reference Control */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_GLOBTF_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield TFEG0 : 1; /* Test Function Enable for Group x */
     sfr_bitfield TFEG1 : 1; /* Test Function Enable for Group x */
     sfr_bitfield resv2 : 30; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_GLOBTE_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield EMUXSET : 3; /* External Multiplexer Start Selection */
     sfr_bitfield resv3 : 5; /* reserved */
    /* const */ sfr_bitfield EMUXACT : 3; /* External Multiplexer Actual Selection */
     sfr_bitfield resv11 : 5; /* reserved */
     sfr_bitfield EMUXCH : 10; /* External Multiplexer Channel Select */
     sfr_bitfield EMUXMODE : 2; /* External Multiplexer Mode */
     sfr_bitfield EMXCOD : 1; /* External Multiplexer Coding Scheme */
     sfr_bitfield EMXST : 1; /* External Multiplexer Sample Time Control */
    /* const */ sfr_bitfield EMXCSS : 1; /* External Multiplexer Channel Selection Style */
     sfr_bitfield EMXWC : 1; /* Write Control for EMUX Configuration */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0EMUXCTR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield EMUXGRP0 : 4; /* External Multiplexer Group for Interface x */
     sfr_bitfield EMUXGRP1 : 4; /* External Multiplexer Group for Interface x */
     sfr_bitfield resv8 : 24; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_EMUXSEL_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield SEV0 : 1; /* Source Event 0/1/3 */
     sfr_bitfield SEV1 : 1; /* Source Event 0/1/3 */
     sfr_bitfield resv2 : 1; /* reserved */
     sfr_bitfield SEV3 : 1; /* Source Event 0/1/3 */
     sfr_bitfield resv4 : 28; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0SEFLAG_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CEV0 : 1; /* Channel Event for Channel 0 */
     sfr_bitfield CEV1 : 1; /* Channel Event for Channel 1 */
     sfr_bitfield CEV2 : 1; /* Channel Event for Channel 2 */
     sfr_bitfield CEV3 : 1; /* Channel Event for Channel 3 */
     sfr_bitfield CEV4 : 1; /* Channel Event for Channel 4 */
     sfr_bitfield CEV5 : 1; /* Channel Event for Channel 5 */
     sfr_bitfield CEV6 : 1; /* Channel Event for Channel 6 */
     sfr_bitfield CEV7 : 1; /* Channel Event for Channel 7 */
     sfr_bitfield CEV8 : 1; /* Channel Event for Channel 8 */
     sfr_bitfield CEV9 : 1; /* Channel Event for Channel 9 */
     sfr_bitfield CEV10 : 1; /* Channel Event for Channel 10 */
     sfr_bitfield CEV11 : 1; /* Channel Event for Channel 11 */
     sfr_bitfield CEV12 : 1; /* Channel Event for Channel 12 */
     sfr_bitfield CEV13 : 1; /* Channel Event for Channel 13 */
     sfr_bitfield CEV14 : 1; /* Channel Event for Channel 14 */
     sfr_bitfield CEV15 : 1; /* Channel Event for Channel 15 */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0CEFLAG_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield REV0 : 1; /* Result Event for Result Register 0 */
     sfr_bitfield REV1 : 1; /* Result Event for Result Register 1 */
     sfr_bitfield REV2 : 1; /* Result Event for Result Register 2 */
     sfr_bitfield REV3 : 1; /* Result Event for Result Register 3 */
     sfr_bitfield REV4 : 1; /* Result Event for Result Register 4 */
     sfr_bitfield REV5 : 1; /* Result Event for Result Register 5 */
     sfr_bitfield REV6 : 1; /* Result Event for Result Register 6 */
     sfr_bitfield REV7 : 1; /* Result Event for Result Register 7 */
     sfr_bitfield REV8 : 1; /* Result Event for Result Register 8 */
     sfr_bitfield REV9 : 1; /* Result Event for Result Register 9 */
     sfr_bitfield REV10 : 1; /* Result Event for Result Register 10 */
     sfr_bitfield REV11 : 1; /* Result Event for Result Register 11 */
     sfr_bitfield REV12 : 1; /* Result Event for Result Register 12 */
     sfr_bitfield REV13 : 1; /* Result Event for Result Register 13 */
     sfr_bitfield REV14 : 1; /* Result Event for Result Register 14 */
     sfr_bitfield REV15 : 1; /* Result Event for Result Register 15 */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0REFLAG_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield SEV0 : 1; /* Clear Source Event 0/1/3 */
     sfr_bitfield SEV1 : 1; /* Clear Source Event 0/1/3 */
     sfr_bitfield resv2 : 1; /* reserved */
     sfr_bitfield SEV3 : 1; /* Clear Source Event 0/1/3 */
     sfr_bitfield resv4 : 28; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0SEFCLR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CEV0 : 1; /* Clear Channel Event for Channel 0 */
     sfr_bitfield CEV1 : 1; /* Clear Channel Event for Channel 1 */
     sfr_bitfield CEV2 : 1; /* Clear Channel Event for Channel 2 */
     sfr_bitfield CEV3 : 1; /* Clear Channel Event for Channel 3 */
     sfr_bitfield CEV4 : 1; /* Clear Channel Event for Channel 4 */
     sfr_bitfield CEV5 : 1; /* Clear Channel Event for Channel 5 */
     sfr_bitfield CEV6 : 1; /* Clear Channel Event for Channel 6 */
     sfr_bitfield CEV7 : 1; /* Clear Channel Event for Channel 7 */
     sfr_bitfield CEV8 : 1; /* Clear Channel Event for Channel 8 */
     sfr_bitfield CEV9 : 1; /* Clear Channel Event for Channel 9 */
     sfr_bitfield CEV10 : 1; /* Clear Channel Event for Channel 10 */
     sfr_bitfield CEV11 : 1; /* Clear Channel Event for Channel 11 */
     sfr_bitfield CEV12 : 1; /* Clear Channel Event for Channel 12 */
     sfr_bitfield CEV13 : 1; /* Clear Channel Event for Channel 13 */
     sfr_bitfield CEV14 : 1; /* Clear Channel Event for Channel 14 */
     sfr_bitfield CEV15 : 1; /* Clear Channel Event for Channel 15 */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0CEFCLR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield REV0 : 1; /* Clear Result Event for Result Register 0 */
     sfr_bitfield REV1 : 1; /* Clear Result Event for Result Register 1 */
     sfr_bitfield REV2 : 1; /* Clear Result Event for Result Register 2 */
     sfr_bitfield REV3 : 1; /* Clear Result Event for Result Register 3 */
     sfr_bitfield REV4 : 1; /* Clear Result Event for Result Register 4 */
     sfr_bitfield REV5 : 1; /* Clear Result Event for Result Register 5 */
     sfr_bitfield REV6 : 1; /* Clear Result Event for Result Register 6 */
     sfr_bitfield REV7 : 1; /* Clear Result Event for Result Register 7 */
     sfr_bitfield REV8 : 1; /* Clear Result Event for Result Register 8 */
     sfr_bitfield REV9 : 1; /* Clear Result Event for Result Register 9 */
     sfr_bitfield REV10 : 1; /* Clear Result Event for Result Register 10 */
     sfr_bitfield REV11 : 1; /* Clear Result Event for Result Register 11 */
     sfr_bitfield REV12 : 1; /* Clear Result Event for Result Register 12 */
     sfr_bitfield REV13 : 1; /* Clear Result Event for Result Register 13 */
     sfr_bitfield REV14 : 1; /* Clear Result Event for Result Register 14 */
     sfr_bitfield REV15 : 1; /* Clear Result Event for Result Register 15 */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0REFCLR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield SEVGLB : 1; /* Source Event (Background) */
     sfr_bitfield resv1 : 7; /* reserved */
     sfr_bitfield REVGLB : 1; /* Global Result Event */
     sfr_bitfield resv9 : 7; /* reserved */
     sfr_bitfield SEVGLBCLR : 1; /* Clear Source Event (Background) */
     sfr_bitfield resv17 : 7; /* reserved */
     sfr_bitfield REVGLBCLR : 1; /* Clear Global Result Event */
     sfr_bitfield resv25 : 7; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_GLOBEFLAG_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield SEV0NP : 4; /* Service Request Node Pointer Source Event i */
     sfr_bitfield SEV1NP : 4; /* Service Request Node Pointer Source Event i */
     sfr_bitfield resv8 : 4; /* reserved */
     sfr_bitfield SEV3NP : 4; /* Service Request Node Pointer Source Event i */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0SEVNP_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CEV0NP : 4; /* Service Request Node Pointer Channel Event i */
     sfr_bitfield CEV1NP : 4; /* Service Request Node Pointer Channel Event i */
     sfr_bitfield CEV2NP : 4; /* Service Request Node Pointer Channel Event i */
     sfr_bitfield CEV3NP : 4; /* Service Request Node Pointer Channel Event i */
     sfr_bitfield CEV4NP : 4; /* Service Request Node Pointer Channel Event i */
     sfr_bitfield CEV5NP : 4; /* Service Request Node Pointer Channel Event i */
     sfr_bitfield CEV6NP : 4; /* Service Request Node Pointer Channel Event i */
     sfr_bitfield CEV7NP : 4; /* Service Request Node Pointer Channel Event i */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0CEVNP0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield CEV8NP : 4; /* Service Request Node Pointer Channel Event i */
     sfr_bitfield CEV9NP : 4; /* Service Request Node Pointer Channel Event i */
     sfr_bitfield CEV10NP : 4; /* Service Request Node Pointer Channel Event i */
     sfr_bitfield CEV11NP : 4; /* Service Request Node Pointer Channel Event i */
     sfr_bitfield CEV12NP : 4; /* Service Request Node Pointer Channel Event i */
     sfr_bitfield CEV13NP : 4; /* Service Request Node Pointer Channel Event i */
     sfr_bitfield CEV14NP : 4; /* Service Request Node Pointer Channel Event i */
     sfr_bitfield CEV15NP : 4; /* Service Request Node Pointer Channel Event i */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0CEVNP1_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield REV0NP : 4; /* Service Request Node Pointer Result Event i */
     sfr_bitfield REV1NP : 4; /* Service Request Node Pointer Result Event i */
     sfr_bitfield REV2NP : 4; /* Service Request Node Pointer Result Event i */
     sfr_bitfield REV3NP : 4; /* Service Request Node Pointer Result Event i */
     sfr_bitfield REV4NP : 4; /* Service Request Node Pointer Result Event i */
     sfr_bitfield REV5NP : 4; /* Service Request Node Pointer Result Event i */
     sfr_bitfield REV6NP : 4; /* Service Request Node Pointer Result Event i */
     sfr_bitfield REV7NP : 4; /* Service Request Node Pointer Result Event i */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0REVNP0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield REV8NP : 4; /* Service Request Node Pointer Result Event i */
     sfr_bitfield REV9NP : 4; /* Service Request Node Pointer Result Event i */
     sfr_bitfield REV10NP : 4; /* Service Request Node Pointer Result Event i */
     sfr_bitfield REV11NP : 4; /* Service Request Node Pointer Result Event i */
     sfr_bitfield REV12NP : 4; /* Service Request Node Pointer Result Event i */
     sfr_bitfield REV13NP : 4; /* Service Request Node Pointer Result Event i */
     sfr_bitfield REV14NP : 4; /* Service Request Node Pointer Result Event i */
     sfr_bitfield REV15NP : 4; /* Service Request Node Pointer Result Event i */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0REVNP1_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield SEV0NP : 4; /* Service Request Node Pointer Backgr. Source */
     sfr_bitfield resv4 : 12; /* reserved */
     sfr_bitfield REV0NP : 4; /* Service Request Node Pointer Global Result */
     sfr_bitfield resv20 : 12; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_GLOBEVNP_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield AGSR0 : 1; /* Activate Group Service Request Node 0 */
     sfr_bitfield AGSR1 : 1; /* Activate Group Service Request Node 1 */
     sfr_bitfield AGSR2 : 1; /* Activate Group Service Request Node 2 */
     sfr_bitfield AGSR3 : 1; /* Activate Group Service Request Node 3 */
     sfr_bitfield resv4 : 4; /* reserved */
     sfr_bitfield ASSR0 : 1; /* Activate Shared Service Request Node 0 */
     sfr_bitfield ASSR1 : 1; /* Activate Shared Service Request Node 1 */
     sfr_bitfield ASSR2 : 1; /* Activate Shared Service Request Node 2 */
     sfr_bitfield ASSR3 : 1; /* Activate Shared Service Request Node 3 */
     sfr_bitfield resv12 : 20; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} VADC_G0SRACT_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 3; /* reserved */
     sfr_bitfield PC0 : 5; /* Port Control for Port n Pin 0 to 3 */
     sfr_bitfield resv8 : 3; /* reserved */
     sfr_bitfield PC1 : 5; /* Port Control for Port n Pin 0 to 3 */
     sfr_bitfield resv16 : 3; /* reserved */
     sfr_bitfield PC2 : 5; /* Port Control for Port n Pin 0 to 3 */
     sfr_bitfield resv24 : 3; /* reserved */
     sfr_bitfield PC3 : 5; /* Port Control for Port n Pin 0 to 3 */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P00_IOCR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 3; /* reserved */
     sfr_bitfield PC4 : 5; /* Port Control for Port n Pin 4 to 7 */
     sfr_bitfield resv8 : 3; /* reserved */
     sfr_bitfield PC5 : 5; /* Port Control for Port n Pin 4 to 7 */
     sfr_bitfield resv16 : 3; /* reserved */
     sfr_bitfield PC6 : 5; /* Port Control for Port n Pin 4 to 7 */
     sfr_bitfield resv24 : 3; /* reserved */
     sfr_bitfield PC7 : 5; /* Port Control for Port n Pin 4 to 7 */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P00_IOCR4_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 3; /* reserved */
     sfr_bitfield PC8 : 5; /* Port Control for Port n Pin 8 to 11 */
     sfr_bitfield resv8 : 3; /* reserved */
     sfr_bitfield PC9 : 5; /* Port Control for Port n Pin 8 to 11 */
     sfr_bitfield resv16 : 3; /* reserved */
     sfr_bitfield PC10 : 5; /* Port Control for Port n Pin 8 to 11 */
     sfr_bitfield resv24 : 3; /* reserved */
     sfr_bitfield PC11 : 5; /* Port Control for Port n Pin 8 to 11 */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P00_IOCR8_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PD0 : 3; /* Pad Driver Mode for Port n Pin 0 to 7 See . */
     sfr_bitfield PL0 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD1 : 3; /* Pad Driver Mode for Port n Pin 0 to 7 See . */
     sfr_bitfield PL1 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD2 : 3; /* Pad Driver Mode for Port n Pin 0 to 7 See . */
     sfr_bitfield PL2 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD3 : 3; /* Pad Driver Mode for Port n Pin 0 to 7 See . */
     sfr_bitfield PL3 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD4 : 3; /* Pad Driver Mode for Port n Pin 0 to 7 See . */
     sfr_bitfield PL4 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD5 : 3; /* Pad Driver Mode for Port n Pin 0 to 7 See . */
     sfr_bitfield PL5 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD6 : 3; /* Pad Driver Mode for Port n Pin 0 to 7 See . */
     sfr_bitfield PL6 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD7 : 3; /* Pad Driver Mode for Port n Pin 0 to 7 See . */
     sfr_bitfield PL7 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P00_PDR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PDIS0 : 1; /* Pin Function Decision Control for Pin 0 */
     sfr_bitfield PDIS1 : 1; /* Pin Function Decision Control for Pin 1 */
     sfr_bitfield PDIS2 : 1; /* Pin Function Decision Control for Pin 2 */
     sfr_bitfield PDIS3 : 1; /* Pin Function Decision Control for Pin 3 */
     sfr_bitfield PDIS4 : 1; /* Pin Function Decision Control for Pin 4 */
     sfr_bitfield PDIS5 : 1; /* Pin Function Decision Control for Pin 5 */
     sfr_bitfield PDIS6 : 1; /* Pin Function Decision Control for Pin 6 */
     sfr_bitfield PDIS7 : 1; /* Pin Function Decision Control for Pin 7 */
     sfr_bitfield PDIS8 : 1; /* Pin Function Decision Control for Pin 8 */
     sfr_bitfield PDIS9 : 1; /* Pin Function Decision Control for Pin 9 */
     sfr_bitfield PDIS10 : 1; /* Pin Function Decision Control for Pin 10 */
     sfr_bitfield PDIS11 : 1; /* Pin Function Decision Control for Pin 11 */
     sfr_bitfield PDIS12 : 1; /* Pin Function Decision Control for Pin 12 */
     sfr_bitfield PDIS13 : 1; /* Pin Function Decision Control for Pin 13 */
     sfr_bitfield PDIS14 : 1; /* Pin Function Decision Control for Pin 14 */
     sfr_bitfield PDIS15 : 1; /* Pin Function Decision Control for Pin 15 */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P40_PDISC_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield P0 : 1; /* Port n Output Bit 0 */
     sfr_bitfield P1 : 1; /* Port n Output Bit 1 */
     sfr_bitfield P2 : 1; /* Port n Output Bit 2 */
     sfr_bitfield P3 : 1; /* Port n Output Bit 3 */
     sfr_bitfield P4 : 1; /* Port n Output Bit 4 */
     sfr_bitfield P5 : 1; /* Port n Output Bit 5 */
     sfr_bitfield P6 : 1; /* Port n Output Bit 6 */
     sfr_bitfield P7 : 1; /* Port n Output Bit 7 */
     sfr_bitfield P8 : 1; /* Port n Output Bit 8 */
     sfr_bitfield P9 : 1; /* Port n Output Bit 9 */
     sfr_bitfield P10 : 1; /* Port n Output Bit 10 */
     sfr_bitfield P11 : 1; /* Port n Output Bit 11 */
     sfr_bitfield P12 : 1; /* Port n Output Bit 12 */
     sfr_bitfield P13 : 1; /* Port n Output Bit 13 */
     sfr_bitfield P14 : 1; /* Port n Output Bit 14 */
     sfr_bitfield P15 : 1; /* Port n Output Bit 15 */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P00_OUT_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PS0 : 1; /* Port n Set Bit 0 */
     sfr_bitfield PS1 : 1; /* Port n Set Bit 1 */
     sfr_bitfield PS2 : 1; /* Port n Set Bit 2 */
     sfr_bitfield PS3 : 1; /* Port n Set Bit 3 */
     sfr_bitfield PS4 : 1; /* Port n Set Bit 4 */
     sfr_bitfield PS5 : 1; /* Port n Set Bit 5 */
     sfr_bitfield PS6 : 1; /* Port n Set Bit 6 */
     sfr_bitfield PS7 : 1; /* Port n Set Bit 7 */
     sfr_bitfield PS8 : 1; /* Port n Set Bit 8 */
     sfr_bitfield PS9 : 1; /* Port n Set Bit 9 */
     sfr_bitfield PS10 : 1; /* Port n Set Bit 10 */
     sfr_bitfield PS11 : 1; /* Port n Set Bit 11 */
     sfr_bitfield PS12 : 1; /* Port n Set Bit 12 */
     sfr_bitfield PS13 : 1; /* Port n Set Bit 13 */
     sfr_bitfield PS14 : 1; /* Port n Set Bit 14 */
     sfr_bitfield PS15 : 1; /* Port n Set Bit 15 */
     sfr_bitfield PCL0 : 1; /* Port n Clear Bit 0 */
     sfr_bitfield PCL1 : 1; /* Port n Clear Bit 1 */
     sfr_bitfield PCL2 : 1; /* Port n Clear Bit 2 */
     sfr_bitfield PCL3 : 1; /* Port n Clear Bit 3 */
     sfr_bitfield PCL4 : 1; /* Port n Clear Bit 4 */
     sfr_bitfield PCL5 : 1; /* Port n Clear Bit 5 */
     sfr_bitfield PCL6 : 1; /* Port n Clear Bit 6 */
     sfr_bitfield PCL7 : 1; /* Port n Clear Bit 7 */
     sfr_bitfield PCL8 : 1; /* Port n Clear Bit 8 */
     sfr_bitfield PCL9 : 1; /* Port n Clear Bit 9 */
     sfr_bitfield PCL10 : 1; /* Port n Clear Bit 10 */
     sfr_bitfield PCL11 : 1; /* Port n Clear Bit 11 */
     sfr_bitfield PCL12 : 1; /* Port n Clear Bit 12 */
     sfr_bitfield PCL13 : 1; /* Port n Clear Bit 13 */
     sfr_bitfield PCL14 : 1; /* Port n Clear Bit 14 */
     sfr_bitfield PCL15 : 1; /* Port n Clear Bit 15 */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P00_OMR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PS0 : 1; /* Port n Set Bit 0 */
     sfr_bitfield PS1 : 1; /* Port n Set Bit 1 */
     sfr_bitfield PS2 : 1; /* Port n Set Bit 2 */
     sfr_bitfield PS3 : 1; /* Port n Set Bit 3 */
     sfr_bitfield PS4 : 1; /* Port n Set Bit 4 */
     sfr_bitfield PS5 : 1; /* Port n Set Bit 5 */
     sfr_bitfield PS6 : 1; /* Port n Set Bit 6 */
     sfr_bitfield PS7 : 1; /* Port n Set Bit 7 */
     sfr_bitfield PS8 : 1; /* Port n Set Bit 8 */
     sfr_bitfield PS9 : 1; /* Port n Set Bit 9 */
     sfr_bitfield PS10 : 1; /* Port n Set Bit 10 */
     sfr_bitfield PS11 : 1; /* Port n Set Bit 11 */
     sfr_bitfield PS12 : 1; /* Port n Set Bit 12 */
     sfr_bitfield PS13 : 1; /* Port n Set Bit 13 */
     sfr_bitfield PS14 : 1; /* Port n Set Bit 14 */
     sfr_bitfield PS15 : 1; /* Port n Set Bit 15 */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P00_OMSR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PS0 : 1; /* Port n Set Bit 0 */
     sfr_bitfield PS1 : 1; /* Port n Set Bit 1 */
     sfr_bitfield PS2 : 1; /* Port n Set Bit 2 */
     sfr_bitfield PS3 : 1; /* Port n Set Bit 3 */
     sfr_bitfield resv4 : 28; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P00_OMSR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 4; /* reserved */
     sfr_bitfield PS4 : 1; /* Port n Set Bit 4 */
     sfr_bitfield PS5 : 1; /* Port n Set Bit 5 */
     sfr_bitfield PS6 : 1; /* Port n Set Bit 6 */
     sfr_bitfield PS7 : 1; /* Port n Set Bit 7 */
     sfr_bitfield resv8 : 24; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P00_OMSR4_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 8; /* reserved */
     sfr_bitfield PS8 : 1; /* Port n Set Bit 8 */
     sfr_bitfield PS9 : 1; /* Port n Set Bit 9 */
     sfr_bitfield PS10 : 1; /* Port n Set Bit 10 */
     sfr_bitfield PS11 : 1; /* Port n Set Bit 11 */
     sfr_bitfield resv12 : 20; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P00_OMSR8_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 12; /* reserved */
     sfr_bitfield PS12 : 1; /* Port n Set Bit 12 */
     sfr_bitfield PS13 : 1; /* Port n Set Bit 13 */
     sfr_bitfield PS14 : 1; /* Port n Set Bit 14 */
     sfr_bitfield PS15 : 1; /* Port n Set Bit 15 */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P00_OMSR12_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 16; /* reserved */
     sfr_bitfield PCL0 : 1; /* Port n Clear Bit 0 */
     sfr_bitfield PCL1 : 1; /* Port n Clear Bit 1 */
     sfr_bitfield PCL2 : 1; /* Port n Clear Bit 2 */
     sfr_bitfield PCL3 : 1; /* Port n Clear Bit 3 */
     sfr_bitfield PCL4 : 1; /* Port n Clear Bit 4 */
     sfr_bitfield PCL5 : 1; /* Port n Clear Bit 5 */
     sfr_bitfield PCL6 : 1; /* Port n Clear Bit 6 */
     sfr_bitfield PCL7 : 1; /* Port n Clear Bit 7 */
     sfr_bitfield PCL8 : 1; /* Port n Clear Bit 8 */
     sfr_bitfield PCL9 : 1; /* Port n Clear Bit 9 */
     sfr_bitfield PCL10 : 1; /* Port n Clear Bit 10 */
     sfr_bitfield PCL11 : 1; /* Port n Clear Bit 11 */
     sfr_bitfield PCL12 : 1; /* Port n Clear Bit 12 */
     sfr_bitfield PCL13 : 1; /* Port n Clear Bit 13 */
     sfr_bitfield PCL14 : 1; /* Port n Clear Bit 14 */
     sfr_bitfield PCL15 : 1; /* Port n Clear Bit 15 */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P00_OMCR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 16; /* reserved */
     sfr_bitfield PCL0 : 1; /* Port n Clear Bit 0 */
     sfr_bitfield PCL1 : 1; /* Port n Clear Bit 1 */
     sfr_bitfield PCL2 : 1; /* Port n Clear Bit 2 */
     sfr_bitfield PCL3 : 1; /* Port n Clear Bit 3 */
     sfr_bitfield resv20 : 12; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P00_OMCR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 20; /* reserved */
     sfr_bitfield PCL4 : 1; /* Port n Clear Bit 4 */
     sfr_bitfield PCL5 : 1; /* Port n Clear Bit 5 */
     sfr_bitfield PCL6 : 1; /* Port n Clear Bit 6 */
     sfr_bitfield PCL7 : 1; /* Port n Clear Bit 7 */
     sfr_bitfield resv24 : 8; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P00_OMCR4_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 24; /* reserved */
     sfr_bitfield PCL8 : 1; /* Port n Clear Bit 8 */
     sfr_bitfield PCL9 : 1; /* Port n Clear Bit 9 */
     sfr_bitfield PCL10 : 1; /* Port n Clear Bit 10 */
     sfr_bitfield PCL11 : 1; /* Port n Clear Bit 11 */
     sfr_bitfield resv28 : 4; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P00_OMCR8_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 28; /* reserved */
     sfr_bitfield PCL12 : 1; /* Port n Clear Bit 12 */
     sfr_bitfield PCL13 : 1; /* Port n Clear Bit 13 */
     sfr_bitfield PCL14 : 1; /* Port n Clear Bit 14 */
     sfr_bitfield PCL15 : 1; /* Port n Clear Bit 15 */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P00_OMCR12_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield EN0 : 1; /* Emergency Stop Enable for Port n Pin 0 */
     sfr_bitfield EN1 : 1; /* Emergency Stop Enable for Port n Pin 1 */
     sfr_bitfield EN2 : 1; /* Emergency Stop Enable for Port n Pin 2 */
     sfr_bitfield EN3 : 1; /* Emergency Stop Enable for Port n Pin 3 */
     sfr_bitfield EN4 : 1; /* Emergency Stop Enable for Port n Pin 4 */
     sfr_bitfield EN5 : 1; /* Emergency Stop Enable for Port n Pin 5 */
     sfr_bitfield EN6 : 1; /* Emergency Stop Enable for Port n Pin 6 */
     sfr_bitfield EN7 : 1; /* Emergency Stop Enable for Port n Pin 7 */
     sfr_bitfield EN8 : 1; /* Emergency Stop Enable for Port n Pin 8 */
     sfr_bitfield EN9 : 1; /* Emergency Stop Enable for Port n Pin 9 */
     sfr_bitfield EN10 : 1; /* Emergency Stop Enable for Port n Pin 10 */
     sfr_bitfield EN11 : 1; /* Emergency Stop Enable for Port n Pin 11 */
     sfr_bitfield EN12 : 1; /* Emergency Stop Enable for Port n Pin 12 */
     sfr_bitfield EN13 : 1; /* Emergency Stop Enable for Port n Pin 13 */
     sfr_bitfield EN14 : 1; /* Emergency Stop Enable for Port n Pin 14 */
     sfr_bitfield EN15 : 1; /* Emergency Stop Enable for Port n Pin 15 */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P00_ESR_type;
typedef volatile union
{
	struct
	{
    /* const */ sfr_bitfield P0 : 1; /* Port n Input Bit 0 */
    /* const */ sfr_bitfield P1 : 1; /* Port n Input Bit 1 */
    /* const */ sfr_bitfield P2 : 1; /* Port n Input Bit 2 */
    /* const */ sfr_bitfield P3 : 1; /* Port n Input Bit 3 */
    /* const */ sfr_bitfield P4 : 1; /* Port n Input Bit 4 */
    /* const */ sfr_bitfield P5 : 1; /* Port n Input Bit 5 */
    /* const */ sfr_bitfield P6 : 1; /* Port n Input Bit 6 */
    /* const */ sfr_bitfield P7 : 1; /* Port n Input Bit 7 */
    /* const */ sfr_bitfield P8 : 1; /* Port n Input Bit 8 */
    /* const */ sfr_bitfield P9 : 1; /* Port n Input Bit 9 */
    /* const */ sfr_bitfield P10 : 1; /* Port n Input Bit 10 */
    /* const */ sfr_bitfield P11 : 1; /* Port n Input Bit 11 */
    /* const */ sfr_bitfield P12 : 1; /* Port n Input Bit 12 */
    /* const */ sfr_bitfield P13 : 1; /* Port n Input Bit 13 */
    /* const */ sfr_bitfield P14 : 1; /* Port n Input Bit 14 */
    /* const */ sfr_bitfield P15 : 1; /* Port n Input Bit 15 */
     sfr_bitfield resv16 : 16; /* reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P00_IN_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield EN0 : 1; /* Access Enable for Master TAG ID n */
     sfr_bitfield EN1 : 1; /* Access Enable for Master TAG ID n */
     sfr_bitfield EN2 : 1; /* Access Enable for Master TAG ID n */
     sfr_bitfield EN3 : 1; /* Access Enable for Master TAG ID n */
     sfr_bitfield EN4 : 1; /* Access Enable for Master TAG ID n */
     sfr_bitfield EN5 : 1; /* Access Enable for Master TAG ID n */
     sfr_bitfield EN6 : 1; /* Access Enable for Master TAG ID n */
     sfr_bitfield EN7 : 1; /* Access Enable for Master TAG ID n */
     sfr_bitfield EN8 : 1; /* Access Enable for Master TAG ID n */
     sfr_bitfield EN9 : 1; /* Access Enable for Master TAG ID n */
     sfr_bitfield EN10 : 1; /* Access Enable for Master TAG ID n */
     sfr_bitfield EN11 : 1; /* Access Enable for Master TAG ID n */
     sfr_bitfield EN12 : 1; /* Access Enable for Master TAG ID n */
     sfr_bitfield EN13 : 1; /* Access Enable for Master TAG ID n */
     sfr_bitfield EN14 : 1; /* Access Enable for Master TAG ID n */
     sfr_bitfield EN15 : 1; /* Access Enable for Master TAG ID n */
     sfr_bitfield EN16 : 1; /* Access Enable for Master TAG ID n */
     sfr_bitfield EN17 : 1; /* Access Enable for Master TAG ID n */
     sfr_bitfield EN18 : 1; /* Access Enable for Master TAG ID n */
     sfr_bitfield EN19 : 1; /* Access Enable for Master TAG ID n */
     sfr_bitfield EN20 : 1; /* Access Enable for Master TAG ID n */
     sfr_bitfield EN21 : 1; /* Access Enable for Master TAG ID n */
     sfr_bitfield EN22 : 1; /* Access Enable for Master TAG ID n */
     sfr_bitfield EN23 : 1; /* Access Enable for Master TAG ID n */
     sfr_bitfield EN24 : 1; /* Access Enable for Master TAG ID n */
     sfr_bitfield EN25 : 1; /* Access Enable for Master TAG ID n */
     sfr_bitfield EN26 : 1; /* Access Enable for Master TAG ID n */
     sfr_bitfield EN27 : 1; /* Access Enable for Master TAG ID n */
     sfr_bitfield EN28 : 1; /* Access Enable for Master TAG ID n */
     sfr_bitfield EN29 : 1; /* Access Enable for Master TAG ID n */
     sfr_bitfield EN30 : 1; /* Access Enable for Master TAG ID n */
     sfr_bitfield EN31 : 1; /* Access Enable for Master TAG ID n */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P00_ACCEN0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 3; /* reserved */
     sfr_bitfield PC12 : 5; /* Port Control for Port 00.12 */
     sfr_bitfield resv8 : 3; /* reserved */
     sfr_bitfield PC13 : 5; /* Reserved */
     sfr_bitfield resv16 : 3; /* reserved */
     sfr_bitfield PC14 : 5; /* Reserved */
     sfr_bitfield resv24 : 3; /* reserved */
     sfr_bitfield PC15 : 5; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P00_IOCR12_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PD8 : 3; /* Pad Driver Mode for Port 00 Pin 8 */
     sfr_bitfield PL8 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD9 : 3; /* Pad Driver Mode for Port 00 Pin 9 */
     sfr_bitfield PL9 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD10 : 3; /* Pad Driver Mode for Port 00 Pin 10 */
     sfr_bitfield PL10 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD11 : 3; /* Pad Driver Mode for Port 00 Pin 11 */
     sfr_bitfield PL11 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD12 : 3; /* Pad Driver Mode for Port 00 Pin 12 */
     sfr_bitfield PL12 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD13 : 3; /* Reserved */
     sfr_bitfield PL13 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD14 : 3; /* Reserved */
     sfr_bitfield PL14 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD15 : 3; /* Reserved */
     sfr_bitfield PL15 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P00_PDR1_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 3; /* reserved */
     sfr_bitfield PC8 : 5; /* Port Control for Port 02 Pin 8 */
     sfr_bitfield resv8 : 3; /* reserved */
     sfr_bitfield PC9 : 5; /* Reserved */
     sfr_bitfield resv16 : 3; /* reserved */
     sfr_bitfield PC10 : 5; /* Reserved */
     sfr_bitfield resv24 : 3; /* reserved */
     sfr_bitfield PC11 : 5; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P02_IOCR8_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PD8 : 3; /* Pad Driver Mode for Port n Pin 8 */
     sfr_bitfield PL8 : 1; /* Reserved */
     sfr_bitfield PD9 : 3; /* Reserved */
     sfr_bitfield PL9 : 1; /* Reserved */
     sfr_bitfield PD10 : 3; /* Reserved */
     sfr_bitfield PL10 : 1; /* Reserved */
     sfr_bitfield PD11 : 3; /* Reserved */
     sfr_bitfield PL11 : 1; /* Reserved */
    /* const */ sfr_bitfield PD12 : 3; /* Reserved */
    /* const */ sfr_bitfield PL12 : 1; /* Reserved */
    /* const */ sfr_bitfield PD13 : 3; /* Reserved */
    /* const */ sfr_bitfield PL13 : 1; /* Reserved */
    /* const */ sfr_bitfield PD14 : 3; /* Reserved */
    /* const */ sfr_bitfield PL14 : 1; /* Reserved */
    /* const */ sfr_bitfield PD15 : 3; /* Reserved */
    /* const */ sfr_bitfield PL15 : 1; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P02_PDR1_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 3; /* reserved */
     sfr_bitfield PC0 : 5; /* Reserved */
     sfr_bitfield resv8 : 3; /* reserved */
     sfr_bitfield PC1 : 5; /* Port Control for Port 10 Pin 1 to 3 */
     sfr_bitfield resv16 : 3; /* reserved */
     sfr_bitfield PC2 : 5; /* Port Control for Port 10 Pin 1 to 3 */
     sfr_bitfield resv24 : 3; /* reserved */
     sfr_bitfield PC3 : 5; /* Port Control for Port 10 Pin 1 to 3 */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P10_IOCR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 3; /* reserved */
     sfr_bitfield PC4 : 5; /* Reserved */
     sfr_bitfield resv8 : 3; /* reserved */
     sfr_bitfield PC5 : 5; /* Port Control for Port 10 Pin 5 to 6 */
     sfr_bitfield resv16 : 3; /* reserved */
     sfr_bitfield PC6 : 5; /* Port Control for Port 10 Pin 5 to 6 */
     sfr_bitfield resv24 : 3; /* reserved */
     sfr_bitfield PC7 : 5; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P10_IOCR4_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PD0 : 3; /* Reserved */
     sfr_bitfield PL0 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD1 : 3; /* Pad Driver Mode for Port 20 Pin 1 */
     sfr_bitfield PL1 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD2 : 3; /* Pad Driver Mode for Port 20 Pin 2 */
     sfr_bitfield PL2 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD3 : 3; /* Pad Driver Mode for Port 20 Pin 3 */
     sfr_bitfield PL3 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD4 : 3; /* Reserved */
     sfr_bitfield PL4 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD5 : 3; /* Pad Driver Mode for Port 20 Pin 5 */
     sfr_bitfield PL5 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD6 : 3; /* Pad Driver Mode for Port 20 Pin 6 */
     sfr_bitfield PL6 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD7 : 3; /* Reserved */
     sfr_bitfield PL7 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P10_PDR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 3; /* reserved */
     sfr_bitfield PC0 : 5; /* Reserved */
     sfr_bitfield resv8 : 3; /* reserved */
     sfr_bitfield PC1 : 5; /* Reserved */
     sfr_bitfield resv16 : 3; /* reserved */
     sfr_bitfield PC2 : 5; /* Port Control for Port 11 Pin 2 */
     sfr_bitfield resv24 : 3; /* reserved */
     sfr_bitfield PC3 : 5; /* Port Control for Port 11 Pin 3 */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P11_IOCR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 3; /* reserved */
     sfr_bitfield PC4 : 5; /* Reserved */
     sfr_bitfield resv8 : 3; /* reserved */
     sfr_bitfield PC5 : 5; /* Reserved */
     sfr_bitfield resv16 : 3; /* reserved */
     sfr_bitfield PC6 : 5; /* Port Control for Port 11 Pin 6 */
     sfr_bitfield resv24 : 3; /* reserved */
     sfr_bitfield PC7 : 5; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P11_IOCR4_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 3; /* reserved */
     sfr_bitfield PC12 : 5; /* Port Control for Port 11.12 */
     sfr_bitfield resv8 : 3; /* reserved */
     sfr_bitfield PC13 : 5; /* Reserved */
     sfr_bitfield resv16 : 3; /* reserved */
     sfr_bitfield PC14 : 5; /* Reserved */
     sfr_bitfield resv24 : 3; /* reserved */
     sfr_bitfield PC15 : 5; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P11_IOCR12_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PD0 : 3; /* Reserved */
     sfr_bitfield PL0 : 1; /* Reserved */
     sfr_bitfield PD1 : 3; /* Reserved */
     sfr_bitfield PL1 : 1; /* Reserved */
     sfr_bitfield PD2 : 3; /* Pad Driver Mode for Port 11 Pin 2 */
     sfr_bitfield PL2 : 1; /* Pad Level Selection for Port 11 Pin 2 */
     sfr_bitfield PD3 : 3; /* Pad Driver Mode for Port 11 Pin 3 */
     sfr_bitfield PL3 : 1; /* Pad Level Selection for Port 11 Pin 3 */
     sfr_bitfield PD4 : 3; /* Reserved */
     sfr_bitfield PL4 : 1; /* Reserved */
     sfr_bitfield PD5 : 3; /* Reserved */
     sfr_bitfield PL5 : 1; /* Reserved */
     sfr_bitfield PD6 : 3; /* Pad Driver Mode for Port 11 Pin 6 */
     sfr_bitfield PL6 : 1; /* Pad Level Selection for Port 11 Pin 6 */
     sfr_bitfield PD7 : 3; /* Pad Driver Mode for Port 11 Pin 7 */
     sfr_bitfield PL7 : 1; /* Pad Level Selection for Port 11 Pin 7 */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P11_PDR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PD8 : 3; /* Pad Driver Mode for Port 11 Pin 8 */
     sfr_bitfield PL8 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD9 : 3; /* Pad Driver Mode for Port 11 Pin 9 */
     sfr_bitfield PL9 : 1; /* Pad Level Selection for Port 11 Pin 9 */
     sfr_bitfield PD10 : 3; /* Pad Driver Mode for Port 11 Pin 10 */
     sfr_bitfield PL10 : 1; /* Pad Level Selection for Port 11 Pin 10 */
     sfr_bitfield PD11 : 3; /* Pad Driver Mode for Port 11 Pin 11 */
     sfr_bitfield PL11 : 1; /* Pad Level Selection for Port 11 Pin 11 */
     sfr_bitfield PD12 : 3; /* Pad Driver Mode for Port 11 Pin 12 */
     sfr_bitfield PL12 : 1; /* Pad Level Selection for Port 11 Pin 12 */
     sfr_bitfield PD13 : 3; /* Reserved */
     sfr_bitfield PL13 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD14 : 3; /* Reserved */
     sfr_bitfield PL14 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD15 : 3; /* Reserved */
     sfr_bitfield PL15 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P11_PDR1_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PD0 : 3; /* Pad Driver Mode for Port 13 Pin 0 to 3 */
     sfr_bitfield PL0 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD1 : 3; /* Pad Driver Mode for Port 13 Pin 0 to 3 */
     sfr_bitfield PL1 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD2 : 3; /* Pad Driver Mode for Port 13 Pin 0 to 3 */
     sfr_bitfield PL2 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD3 : 3; /* Pad Driver Mode for Port 13 Pin 0 to 3 */
     sfr_bitfield PL3 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
    /* const */ sfr_bitfield PD4 : 3; /* Reserved */
    /* const */ sfr_bitfield PL4 : 1; /* Reserved */
    /* const */ sfr_bitfield PD5 : 3; /* Reserved */
    /* const */ sfr_bitfield PL5 : 1; /* Reserved */
    /* const */ sfr_bitfield PD6 : 3; /* Reserved */
    /* const */ sfr_bitfield PL6 : 1; /* Reserved */
    /* const */ sfr_bitfield PD7 : 3; /* Reserved */
    /* const */ sfr_bitfield PL7 : 1; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P13_PDR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 3; /* reserved */
     sfr_bitfield PC8 : 5; /* Port Control for Port 14 Pin 8 */
     sfr_bitfield resv8 : 3; /* reserved */
     sfr_bitfield PC9 : 5; /* Reserved */
     sfr_bitfield resv16 : 3; /* reserved */
     sfr_bitfield PC10 : 5; /* Reserved */
     sfr_bitfield resv24 : 3; /* reserved */
     sfr_bitfield PC11 : 5; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P14_IOCR8_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 3; /* reserved */
     sfr_bitfield PC8 : 5; /* Port Control for Port 15 Pin 8 */
     sfr_bitfield resv8 : 3; /* reserved */
     sfr_bitfield PC9 : 5; /* Reserved */
     sfr_bitfield resv16 : 3; /* reserved */
     sfr_bitfield PC10 : 5; /* Reserved */
     sfr_bitfield resv24 : 3; /* reserved */
     sfr_bitfield PC11 : 5; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P15_IOCR8_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 3; /* reserved */
     sfr_bitfield PC0 : 5; /* Port Control for Port 20 Pin 0 */
     sfr_bitfield resv8 : 3; /* reserved */
     sfr_bitfield PC1 : 5; /* Reserved */
     sfr_bitfield resv16 : 3; /* reserved */
     sfr_bitfield PC2 : 5; /* Reserved */
     sfr_bitfield resv24 : 3; /* reserved */
     sfr_bitfield PC3 : 5; /* Port Control for Port 20 Pin 3 */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P20_IOCR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 3; /* reserved */
     sfr_bitfield PC4 : 5; /* Reserved */
     sfr_bitfield resv8 : 3; /* reserved */
     sfr_bitfield PC5 : 5; /* Reserved */
     sfr_bitfield resv16 : 3; /* reserved */
     sfr_bitfield PC6 : 5; /* Port Control for Port 20 Pin 6 */
     sfr_bitfield resv24 : 3; /* reserved */
     sfr_bitfield PC7 : 5; /* Port Control for Port 20 Pin 7 */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P20_IOCR4_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 3; /* reserved */
     sfr_bitfield PC12 : 5; /* Port Control for Port 20 Pin 12 */
     sfr_bitfield resv8 : 3; /* reserved */
     sfr_bitfield PC13 : 5; /* Port Control for Port 20 Pin 13 */
     sfr_bitfield resv16 : 3; /* reserved */
     sfr_bitfield PC14 : 5; /* Port Control for Port 20 Pin 14 */
     sfr_bitfield resv24 : 3; /* reserved */
     sfr_bitfield PC15 : 5; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P20_IOCR12_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PD0 : 3; /* Pad Driver Mode for Port 20 Pin 0 */
     sfr_bitfield PL0 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD1 : 3; /* Reserved */
     sfr_bitfield PL1 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD2 : 3; /* Reserved */
     sfr_bitfield PL2 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD3 : 3; /* Pad Driver Mode for Port 20 Pin 3 */
     sfr_bitfield PL3 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD4 : 3; /* Reserved */
     sfr_bitfield PL4 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD5 : 3; /* Reserved */
     sfr_bitfield PL5 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD6 : 3; /* Pad Driver Mode for Port 20 Pin 6 */
     sfr_bitfield PL6 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD7 : 3; /* Pad Driver Mode for Port 20 Pin 7 */
     sfr_bitfield PL7 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P20_PDR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PD8 : 3; /* Pad Driver Mode for Port 20 Pin 8 */
     sfr_bitfield PL8 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD9 : 3; /* Pad Driver Mode for Port 20 Pin 9 */
     sfr_bitfield PL9 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD10 : 3; /* Pad Driver Mode for Port 20 Pin 10 */
     sfr_bitfield PL10 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD11 : 3; /* Pad Driver Mode for Port 20 Pin 11 */
     sfr_bitfield PL11 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD12 : 3; /* Pad Driver Mode for Port 20 Pin 12 */
     sfr_bitfield PL12 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD13 : 3; /* Pad Driver Mode for Port 20 Pin 13 */
     sfr_bitfield PL13 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD14 : 3; /* Pad Driver Mode for Port 20 Pin 14 */
     sfr_bitfield PL14 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD15 : 3; /* Reserved */
     sfr_bitfield PL15 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P20_PDR1_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 3; /* reserved */
     sfr_bitfield PC0 : 5; /* Reserved */
     sfr_bitfield resv8 : 3; /* reserved */
     sfr_bitfield PC1 : 5; /* Reserved */
     sfr_bitfield resv16 : 3; /* reserved */
     sfr_bitfield PC2 : 5; /* Port Control for Port 21 Pin 2 */
     sfr_bitfield resv24 : 3; /* reserved */
     sfr_bitfield PC3 : 5; /* Port Control for Port 21 Pin 3 */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P21_IOCR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PD0 : 3; /* Reserved */
     sfr_bitfield PL0 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD1 : 3; /* Reserved */
     sfr_bitfield PL1 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD2 : 3; /* Pad Driver Mode for Port 21 Pin 2 */
     sfr_bitfield PL2 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD3 : 3; /* Pad Driver Mode for Port 21 Pin 3 */
     sfr_bitfield PL3 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD4 : 3; /* Pad Driver Mode for Port 21 Pin 4 */
     sfr_bitfield PL4 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD5 : 3; /* Pad Driver Mode for Port 21 Pin 5 */
     sfr_bitfield PL5 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD6 : 3; /* Pad Driver Mode for Port 21 Pin 6 */
     sfr_bitfield PL6 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD7 : 3; /* Pad Driver Mode for Port 21 Pin 7 */
     sfr_bitfield PL7 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P21_PDR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 3; /* reserved */
     sfr_bitfield PC4 : 5; /* Port Control for Port 22 Pin 4 */
     sfr_bitfield resv8 : 3; /* reserved */
     sfr_bitfield PC5 : 5; /* Reserved */
     sfr_bitfield resv16 : 3; /* reserved */
     sfr_bitfield PC6 : 5; /* Reserved */
     sfr_bitfield resv24 : 3; /* reserved */
     sfr_bitfield PC7 : 5; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P22_IOCR4_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PD0 : 3; /* Pad Driver Mode for Port 22 Pin 0 */
     sfr_bitfield PL0 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD1 : 3; /* Pad Driver Mode for Port 22 Pin 1 */
     sfr_bitfield PL1 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD2 : 3; /* Pad Driver Mode for Port 22 Pin 2 */
     sfr_bitfield PL2 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD3 : 3; /* Pad Driver Mode for Port 22 Pin 3 */
     sfr_bitfield PL3 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD4 : 3; /* Pad Driver Mode for Port 22 Pin 4 */
     sfr_bitfield PL4 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD5 : 3; /* Reserved */
     sfr_bitfield PL5 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD6 : 3; /* Reserved */
     sfr_bitfield PL6 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD7 : 3; /* Reserved */
     sfr_bitfield PL7 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P22_PDR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 3; /* reserved */
     sfr_bitfield PC0 : 5; /* Reserved */
     sfr_bitfield resv8 : 3; /* reserved */
     sfr_bitfield PC1 : 5; /* Port Control for Port 23 Pin 1 */
     sfr_bitfield resv16 : 3; /* reserved */
     sfr_bitfield PC2 : 5; /* Reserved */
     sfr_bitfield resv24 : 3; /* reserved */
     sfr_bitfield PC3 : 5; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P23_IOCR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PD0 : 3; /* Reserved */
     sfr_bitfield PL0 : 1; /* Reserved */
     sfr_bitfield PD1 : 3; /* Pad Driver Mode for Port 23 Pin 1 */
     sfr_bitfield PL1 : 1; /* Pad Level Selection for Port 23 Pin 1 */
     sfr_bitfield PD2 : 3; /* Reserved */
     sfr_bitfield PL2 : 1; /* Reserved */
     sfr_bitfield PD3 : 3; /* Reserved */
     sfr_bitfield PL3 : 1; /* Reserved */
    /* const */ sfr_bitfield PD4 : 3; /* Reserved */
    /* const */ sfr_bitfield PL4 : 1; /* Reserved */
    /* const */ sfr_bitfield PD5 : 3; /* Reserved */
    /* const */ sfr_bitfield PL5 : 1; /* Reserved */
    /* const */ sfr_bitfield PD6 : 3; /* Reserved */
    /* const */ sfr_bitfield PL6 : 1; /* Reserved */
    /* const */ sfr_bitfield PD7 : 3; /* Reserved */
    /* const */ sfr_bitfield PL7 : 1; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P23_PDR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 3; /* reserved */
     sfr_bitfield PC12 : 5; /* Port Control for Port 33.12 */
     sfr_bitfield resv8 : 3; /* reserved */
     sfr_bitfield PC13 : 5; /* Reserved */
     sfr_bitfield resv16 : 3; /* reserved */
     sfr_bitfield PC14 : 5; /* Reserved */
     sfr_bitfield resv24 : 3; /* reserved */
     sfr_bitfield PC15 : 5; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P33_IOCR12_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PD8 : 3; /* Pad Driver Mode for Port 33 Pin 8 */
     sfr_bitfield PL8 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD9 : 3; /* Pad Driver Mode for Port 33 Pin 9 */
     sfr_bitfield PL9 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD10 : 3; /* Pad Driver Mode for Port 33 Pin 10 */
     sfr_bitfield PL10 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD11 : 3; /* Pad Driver Mode for Port 33 Pin 11 */
     sfr_bitfield PL11 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD12 : 3; /* Pad Driver Mode for Port 33 Pin 12 */
     sfr_bitfield PL12 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD13 : 3; /* Reserved */
     sfr_bitfield PL13 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD14 : 3; /* Reserved */
     sfr_bitfield PL14 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD15 : 3; /* Reserved */
     sfr_bitfield PL15 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P33_PDR1_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield PD0 : 3; /* Pad Driver Mode for Port 34 Pin 0 to 3 */
     sfr_bitfield PL0 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD1 : 3; /* Pad Driver Mode for Port 34 Pin 0 to 3 */
     sfr_bitfield PL1 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD2 : 3; /* Pad Driver Mode for Port 34 Pin 0 to 3 */
     sfr_bitfield PL2 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
     sfr_bitfield PD3 : 3; /* Pad Driver Mode for Port 34 Pin 0 to 3 */
     sfr_bitfield PL3 : 1; /* Reserved Read as 0, returns values last written, must be written with 0. */
    /* const */ sfr_bitfield PD4 : 3; /* Reserved */
    /* const */ sfr_bitfield PL4 : 1; /* Reserved */
    /* const */ sfr_bitfield PD5 : 3; /* Reserved */
    /* const */ sfr_bitfield PL5 : 1; /* Reserved */
    /* const */ sfr_bitfield PD6 : 3; /* Reserved */
    /* const */ sfr_bitfield PL6 : 1; /* Reserved */
    /* const */ sfr_bitfield PD7 : 3; /* Reserved */
    /* const */ sfr_bitfield PL7 : 1; /* Reserved */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P34_PDR0_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 3; /* reserved */
     sfr_bitfield PC8 : 5; /* Port Control for Port 40 Pin 8 to 11 */
     sfr_bitfield resv8 : 3; /* reserved */
     sfr_bitfield PC9 : 5; /* Port Control for Port 40 Pin 8 to 11 */
     sfr_bitfield resv16 : 3; /* reserved */
     sfr_bitfield PC10 : 5; /* Port Control for Port 40 Pin 8 to 11 */
     sfr_bitfield resv24 : 3; /* reserved */
     sfr_bitfield PC11 : 5; /* Port Control for Port 40 Pin 8 to 11 */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P40_IOCR8_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 1; /* reserved */
     sfr_bitfield SEL1 : 1; /* Pin Controller Select for Pin 1 */
     sfr_bitfield SEL2 : 1; /* Pin Controller Select for Pin 2 */
     sfr_bitfield resv3 : 6; /* reserved */
     sfr_bitfield SEL9 : 1; /* Pin Controller Select for Pin 9 */
     sfr_bitfield SEL10 : 1; /* Pin Controller Select for Pin 10 */
     sfr_bitfield resv11 : 20; /* reserved */
    /* const */ sfr_bitfield LCK : 1; /* Lock Status */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P40_PCSR_type;
typedef volatile union
{
	struct
	{
     sfr_bitfield resv0 : 3; /* reserved */
     sfr_bitfield PC8 : 5; /* Port Control for Port 41 Pin 8 to 11 */
     sfr_bitfield resv8 : 3; /* reserved */
     sfr_bitfield PC9 : 5; /* Port Control for Port 41 Pin 8 to 11 */
     sfr_bitfield resv16 : 3; /* reserved */
     sfr_bitfield PC10 : 5; /* Port Control for Port 41 Pin 8 to 11 */
     sfr_bitfield resv24 : 3; /* reserved */
     sfr_bitfield PC11 : 5; /* Port Control for Port 41 Pin 8 to 11 */
  } B;
  signed_sfr_access_type I;
  unsigned_sfr_access_type U;
} P41_IOCR8_type;
#define CPU0_TASK_ASI	(*( CPU0_TASK_ASI_type *) 0xF8818004U)	/* CPU0 Task Address Space Identifier Register */
#define CPU0_PMA0	(*( CPU0_PMA0_type *) 0xF8818100U)	/* Data Access CacheabilityRegister */
#define CPU0_PMA1	(*( CPU0_PMA1_type *) 0xF8818104U)	/* Code Access CacheabilityRegister */
#define CPU0_PMA2	(*( CPU0_PMA2_type *) 0xF8818108U)	/* Peripheral Space Identifier register */
#define CPU0_SMACON	(*( CPU0_SMACON_type *) 0xF881900CU)	/* SIST Mode Access Control Register */
#define CPU0_DIEAR	(*( CPU0_DIEAR_type *) 0xF8819020U)	/* Data Integrity Error Address Register */
#define CPU0_DIETR	(*( CPU0_DIETR_type *) 0xF8819024U)	/* Data Integrity Error Trap Register */
#define CPU0_PCON1	(*( CPU0_PCON1_type *) 0xF8819204U)	/* Program Control 1 */
#define CPU0_PCON2	(*( CPU0_PCON2_type *) 0xF8819208U)	/* Program Control 2 */
#define CPU0_PCON0	(*( CPU0_PCON0_type *) 0xF881920CU)	/* Program Control 0 */
#define CPU0_PSTR	(*( CPU0_PSTR_type *) 0xF8819200U)	/* Program Synchronous Trap Register */
#define CPU0_DCON0	(*( CPU0_DCON0_type *) 0xF8819040U)	/* Data Memory Control Register */
#define CPU0_DCON2	(*( CPU0_DCON2_type *) 0xF8819000U)	/* Data Control Register 2 */
#define CPU0_DSTR	(*( CPU0_DSTR_type *) 0xF8819010U)	/* Data Synchronous Trap Register */
#define CPU0_DATR	(*( CPU0_DATR_type *) 0xF8819018U)	/* Data Asynchronous Trap Register */
#define CPU0_DEADD	(*( CPU0_DEADD_type *) 0xF881901CU)	/* Data Error Address Register */
#define CPU0_PIEAR	(*( CPU0_DIEAR_type *) 0xF8819210U)	/* Program Integrity Error Address Register */
#define CPU0_PIETR	(*( CPU0_PIETR_type *) 0xF8819214U)	/* Program Integrity Error Trap Register */
#define CPU0_COMPAT	(*( CPU0_COMPAT_type *) 0xF8819400U)	/* Compatibility Control Register */
#define CPU0_FPU_TRAP_CON	(*( CPU0_FPU_TRAP_CON_type *) 0xF881A000U)	/* CPU0 Trap Control Register */
#define CPU0_FPU_TRAP_PC	(*( CPU0_FPU_TRAP_PC_type *) 0xF881A004U)	/* CPU0 Trapping Instruction Program Counter Register */
#define CPU0_FPU_TRAP_OPC	(*( CPU0_FPU_TRAP_OPC_type *) 0xF881A008U)	/* CPU0 Trapping Instruction Opcode Register */
#define CPU0_FPU_TRAP_SRC1	(*( CPU0_FPU_TRAP_SRC1_type *) 0xF881A010U)	/* CPU0 Trapping Instruction Operand Register */
#define CPU0_FPU_TRAP_SRC2	(*( CPU0_FPU_TRAP_SRC2_type *) 0xF881A014U)	/* CPU0 Trapping Instruction Operand Register */
#define CPU0_FPU_TRAP_SRC3	(*( CPU0_FPU_TRAP_SRC3_type *) 0xF881A018U)	/* Trapping Instruction Operand Register */
#define CPU0_DPR0_L	(*( CPU0_DPR0_L_type *) 0xF881C000U)	/* CPU0 Data Protection Range 0, Lower Bound Register */
#define CPU0_DPR1_L	(*( CPU0_DPR0_L_type *) 0xF881C008U)	/* CPU0 Data Protection Range 1, Lower Bound Register */
#define CPU0_DPR2_L	(*( CPU0_DPR0_L_type *) 0xF881C010U)	/* CPU0 Data Protection Range 2, Lower Bound Register */
#define CPU0_DPR3_L	(*( CPU0_DPR0_L_type *) 0xF881C018U)	/* CPU0 Data Protection Range 3, Lower Bound Register */
#define CPU0_DPR4_L	(*( CPU0_DPR0_L_type *) 0xF881C020U)	/* CPU0 Data Protection Range 4, Lower Bound Register */
#define CPU0_DPR5_L	(*( CPU0_DPR0_L_type *) 0xF881C028U)	/* CPU0 Data Protection Range 5, Lower Bound Register */
#define CPU0_DPR6_L	(*( CPU0_DPR0_L_type *) 0xF881C030U)	/* CPU0 Data Protection Range 6, Lower Bound Register */
#define CPU0_DPR7_L	(*( CPU0_DPR0_L_type *) 0xF881C038U)	/* CPU0 Data Protection Range 7, Lower Bound Register */
#define CPU0_DPR8_L	(*( CPU0_DPR0_L_type *) 0xF881C040U)	/* CPU0 Data Protection Range 8, Lower Bound Register */
#define CPU0_DPR9_L	(*( CPU0_DPR0_L_type *) 0xF881C048U)	/* CPU0 Data Protection Range 9, Lower Bound Register */
#define CPU0_DPR10_L	(*( CPU0_DPR0_L_type *) 0xF881C050U)	/* CPU0 Data Protection Range 10, Lower Bound Register */
#define CPU0_DPR11_L	(*( CPU0_DPR0_L_type *) 0xF881C058U)	/* CPU0 Data Protection Range 11, Lower Bound Register */
#define CPU0_DPR12_L	(*( CPU0_DPR0_L_type *) 0xF881C060U)	/* CPU0 Data Protection Range 12, Lower Bound Register */
#define CPU0_DPR13_L	(*( CPU0_DPR0_L_type *) 0xF881C068U)	/* CPU0 Data Protection Range 13, Lower Bound Register */
#define CPU0_DPR14_L	(*( CPU0_DPR0_L_type *) 0xF881C070U)	/* CPU0 Data Protection Range 14, Lower Bound Register */
#define CPU0_DPR15_L	(*( CPU0_DPR0_L_type *) 0xF881C078U)	/* CPU0 Data Protection Range 15, Lower Bound Register */
#define CPU0_DPR0_U	(*( CPU0_DPR0_U_type *) 0xF881C004U)	/* CPU0 Data Protection Range 0, Upper Bound Register */
#define CPU0_DPR1_U	(*( CPU0_DPR0_U_type *) 0xF881C00CU)	/* CPU0 Data Protection Range 1, Upper Bound Register */
#define CPU0_DPR2_U	(*( CPU0_DPR0_U_type *) 0xF881C014U)	/* CPU0 Data Protection Range 2, Upper Bound Register */
#define CPU0_DPR3_U	(*( CPU0_DPR0_U_type *) 0xF881C01CU)	/* CPU0 Data Protection Range 3, Upper Bound Register */
#define CPU0_DPR4_U	(*( CPU0_DPR0_U_type *) 0xF881C024U)	/* CPU0 Data Protection Range 4, Upper Bound Register */
#define CPU0_DPR5_U	(*( CPU0_DPR0_U_type *) 0xF881C02CU)	/* CPU0 Data Protection Range 5, Upper Bound Register */
#define CPU0_DPR6_U	(*( CPU0_DPR0_U_type *) 0xF881C034U)	/* CPU0 Data Protection Range 6, Upper Bound Register */
#define CPU0_DPR7_U	(*( CPU0_DPR0_U_type *) 0xF881C03CU)	/* CPU0 Data Protection Range 7, Upper Bound Register */
#define CPU0_DPR8_U	(*( CPU0_DPR0_U_type *) 0xF881C044U)	/* CPU0 Data Protection Range 8, Upper Bound Register */
#define CPU0_DPR9_U	(*( CPU0_DPR0_U_type *) 0xF881C04CU)	/* CPU0 Data Protection Range 9, Upper Bound Register */
#define CPU0_DPR10_U	(*( CPU0_DPR0_U_type *) 0xF881C054U)	/* CPU0 Data Protection Range 10, Upper Bound Register */
#define CPU0_DPR11_U	(*( CPU0_DPR0_U_type *) 0xF881C05CU)	/* CPU0 Data Protection Range 11, Upper Bound Register */
#define CPU0_DPR12_U	(*( CPU0_DPR0_U_type *) 0xF881C064U)	/* CPU0 Data Protection Range 12, Upper Bound Register */
#define CPU0_DPR13_U	(*( CPU0_DPR0_U_type *) 0xF881C06CU)	/* CPU0 Data Protection Range 13, Upper Bound Register */
#define CPU0_DPR14_U	(*( CPU0_DPR0_U_type *) 0xF881C074U)	/* CPU0 Data Protection Range 14, Upper Bound Register */
#define CPU0_DPR15_U	(*( CPU0_DPR0_U_type *) 0xF881C07CU)	/* CPU0 Data Protection Range 15, Upper Bound Register */
#define CPU0_CPR0_L	(*( CPU0_CPR0_L_type *) 0xF881D000U)	/* CPU0Code Protection Range 0 Lower Bound Register */
#define CPU0_CPR1_L	(*( CPU0_CPR0_L_type *) 0xF881D008U)	/* CPU0Code Protection Range 1 Lower Bound Register */
#define CPU0_CPR2_L	(*( CPU0_CPR0_L_type *) 0xF881D010U)	/* CPU0Code Protection Range 2 Lower Bound Register */
#define CPU0_CPR3_L	(*( CPU0_CPR0_L_type *) 0xF881D018U)	/* CPU0Code Protection Range 3 Lower Bound Register */
#define CPU0_CPR4_L	(*( CPU0_CPR0_L_type *) 0xF881D020U)	/* CPU0Code Protection Range 4 Lower Bound Register */
#define CPU0_CPR5_L	(*( CPU0_CPR0_L_type *) 0xF881D028U)	/* CPU0Code Protection Range 5 Lower Bound Register */
#define CPU0_CPR6_L	(*( CPU0_CPR0_L_type *) 0xF881D030U)	/* CPU0Code Protection Range 6 Lower Bound Register */
#define CPU0_CPR7_L	(*( CPU0_CPR0_L_type *) 0xF881D038U)	/* CPU0Code Protection Range 7 Lower Bound Register */
#define CPU0_CPR0_U	(*( CPU0_CPR0_U_type *) 0xF881D004U)	/* CPU0 Code Protection Range 0 Upper Bound Register */
#define CPU0_CPR1_U	(*( CPU0_CPR0_U_type *) 0xF881D00CU)	/* CPU0 Code Protection Range 1 Upper Bound Register */
#define CPU0_CPR2_U	(*( CPU0_CPR0_U_type *) 0xF881D014U)	/* CPU0 Code Protection Range 2 Upper Bound Register */
#define CPU0_CPR3_U	(*( CPU0_CPR0_U_type *) 0xF881D01CU)	/* CPU0 Code Protection Range 3 Upper Bound Register */
#define CPU0_CPR4_U	(*( CPU0_CPR0_U_type *) 0xF881D024U)	/* CPU0 Code Protection Range 4 Upper Bound Register */
#define CPU0_CPR5_U	(*( CPU0_CPR0_U_type *) 0xF881D02CU)	/* CPU0 Code Protection Range 5 Upper Bound Register */
#define CPU0_CPR6_U	(*( CPU0_CPR0_U_type *) 0xF881D034U)	/* CPU0 Code Protection Range 6 Upper Bound Register */
#define CPU0_CPR7_U	(*( CPU0_CPR0_U_type *) 0xF881D03CU)	/* CPU0 Code Protection Range 7 Upper Bound Register */
#define CPU0_DPRE_0	(*( CPU0_DPRE_0_type *) 0xF881E010U)	/* CPU0 Data Protection Read Enable Register Set 0 */
#define CPU0_DPRE_1	(*( CPU0_DPRE_0_type *) 0xF881E014U)	/* CPU0 Data Protection Read Enable Register Set 1 */
#define CPU0_DPRE_2	(*( CPU0_DPRE_0_type *) 0xF881E018U)	/* CPU0 Data Protection Read Enable Register Set 2 */
#define CPU0_DPRE_3	(*( CPU0_DPRE_0_type *) 0xF881E01CU)	/* CPU0 Data Protection Read Enable Register Set 3 */
#define CPU0_DPWE_0	(*( CPU0_DPWE_0_type *) 0xF881E020U)	/* CPU0 Data Protection Write Enable Register Set 0 */
#define CPU0_DPWE_1	(*( CPU0_DPWE_0_type *) 0xF881E024U)	/* CPU0 Data Protection Write Enable Register Set 1 */
#define CPU0_DPWE_2	(*( CPU0_DPWE_0_type *) 0xF881E028U)	/* CPU0 Data Protection Write Enable Register Set 2 */
#define CPU0_DPWE_3	(*( CPU0_DPWE_0_type *) 0xF881E02CU)	/* CPU0 Data Protection Write Enable Register Set 3 */
#define CPU0_CPXE_0	(*( CPU0_CPXE_0_type *) 0xF881E000U)	/* CPU0 Code Protection Execute Enable Register Set 0 */
#define CPU0_CPXE_1	(*( CPU0_CPXE_0_type *) 0xF881E004U)	/* CPU0 Code Protection Execute Enable Register Set 1 */
#define CPU0_CPXE_2	(*( CPU0_CPXE_0_type *) 0xF881E008U)	/* CPU0 Code Protection Execute Enable Register Set 2 */
#define CPU0_CPXE_3	(*( CPU0_CPXE_0_type *) 0xF881E00CU)	/* CPU0 Code Protection Execute Enable Register Set 3 */
#define CPU0_TPS_TIMER0	(*( CPU0_TPS_TIMER0_type *) 0xF881E404U)	/* CPU0 Temporal Protection System Timer Register 0 */
#define CPU0_TPS_TIMER1	(*( CPU0_TPS_TIMER0_type *) 0xF881E408U)	/* CPU0 Temporal Protection System Timer Register 0 */
#define CPU0_TPS_TIMER2	(*( CPU0_TPS_TIMER0_type *) 0xF881E40CU)	/* CPU0 Temporal Protection System Timer Register 0 */
#define CPU0_TPS_CON	(*( CPU0_TPS_CON_type *) 0xF881E400U)	/* CPU0 Temporal Protection System Control Register */
#define CPU0_DBGSR	(*( CPU0_DBGSR_type *) 0xF881FD00U)	/* Debug Status Register */
#define CPU0_EXEVT	(*( CPU0_EXEVT_type *) 0xF881FD08U)	/* External Event Register */
#define CPU0_CREVT	(*( CPU0_EXEVT_type *) 0xF881FD0CU)	/* Core Register Access Event */
#define CPU0_SWEVT	(*( CPU0_EXEVT_type *) 0xF881FD10U)	/* Software Debug Event */
#define CPU0_TR0EVT	(*( CPU0_TR0EVT_type *) 0xF881F000U)	/* Trigger Event 0 */
#define CPU0_TR1EVT	(*( CPU0_TR0EVT_type *) 0xF881F008U)	/* Trigger Event 1 */
#define CPU0_TR2EVT	(*( CPU0_TR0EVT_type *) 0xF881F010U)	/* Trigger Event 2 */
#define CPU0_TR3EVT	(*( CPU0_TR0EVT_type *) 0xF881F018U)	/* Trigger Event 3 */
#define CPU0_TR4EVT	(*( CPU0_TR0EVT_type *) 0xF881F020U)	/* Trigger Event 4 */
#define CPU0_TR5EVT	(*( CPU0_TR0EVT_type *) 0xF881F028U)	/* Trigger Event 5 */
#define CPU0_TR6EVT	(*( CPU0_TR0EVT_type *) 0xF881F030U)	/* Trigger Event 6 */
#define CPU0_TR7EVT	(*( CPU0_TR0EVT_type *) 0xF881F038U)	/* Trigger Event 7 */
#define CPU0_TR0ADR	(*( CPU0_TR0ADR_type *) 0xF881F004U)	/* Trigger Address 0 */
#define CPU0_TR1ADR	(*( CPU0_TR0ADR_type *) 0xF881F00CU)	/* Trigger Address 1 */
#define CPU0_TR2ADR	(*( CPU0_TR0ADR_type *) 0xF881F014U)	/* Trigger Address 2 */
#define CPU0_TR3ADR	(*( CPU0_TR0ADR_type *) 0xF881F01CU)	/* Trigger Address 3 */
#define CPU0_TR4ADR	(*( CPU0_TR0ADR_type *) 0xF881F024U)	/* Trigger Address 4 */
#define CPU0_TR5ADR	(*( CPU0_TR0ADR_type *) 0xF881F02CU)	/* Trigger Address 5 */
#define CPU0_TR6ADR	(*( CPU0_TR0ADR_type *) 0xF881F034U)	/* Trigger Address 6 */
#define CPU0_TR7ADR	(*( CPU0_TR0ADR_type *) 0xF881F03CU)	/* Trigger Address 7 */
#define CPU0_TRIG_ACC	(*( CPU0_TRIG_ACC_type *) 0xF881FD30U)	/* CPU0 Trigger Address x */
#define CPU0_DMS	(*( CPU0_DMS_type *) 0xF881FD40U)	/* CPU0 Debug Monitor Start Address */
#define CPU0_DCX	(*( CPU0_DCX_type *) 0xF881FD44U)	/* CPU0 Debug Context Save Area Pointer */
#define CPU0_DBGTCR	(*( CPU0_DBGTCR_type *) 0xF881FD48U)	/* Debug Trap Control Register */
#define CPU0_CCTRL	(*( CPU0_CCTRL_type *) 0xF881FC00U)	/* Counter Control */
#define CPU0_CCNT	(*( CPU0_CCNT_type *) 0xF881FC04U)	/* CPU Clock Cycle Count */
#define CPU0_ICNT	(*( CPU0_CCNT_type *) 0xF881FC08U)	/* Instruction Count */
#define CPU0_M1CNT	(*( CPU0_CCNT_type *) 0xF881FC0CU)	/* Multi-Count Register 1 */
#define CPU0_M2CNT	(*( CPU0_CCNT_type *) 0xF881FC10U)	/* Multi-Count Register 2 */
#define CPU0_M3CNT	(*( CPU0_CCNT_type *) 0xF881FC14U)	/* Multi-Count Register 3 */
#define CPU0_PCXI	(*( CPU0_PCXI_type *) 0xF881FE00U)	/* Previous Context Information Register */
#define CPU0_PSW	(*( CPU0_PSW_type *) 0xF881FE04U)	/* Program Status Word */
#define CPU0_PC	(*( CPU0_PC_type *) 0xF881FE08U)	/* Program Counter */
#define CPU0_SYSCON	(*( CPU0_SYSCON_type *) 0xF881FE14U)	/* System Configuration Register */
#define CPU0_CORE_ID	(*( CPU0_CORE_ID_type *) 0xF881FE1CU)	/* CPU0 Core Identification Register */
#define CPU0_CPU_ID	(*( CPU0_CPU_ID_type *) 0xF881FE18U)	/* CPU0 Identification Register TC1.6P */
#define CPU0_CUS_ID	(*( CPU0_CUS_ID_type *) 0xF881FE50U)	/* CPU0 Customer ID register */
#define CPU0_BIV	(*( CPU0_BIV_type *) 0xF881FE20U)	/* Base Interrupt Vector Table Pointer */
#define CPU0_BTV	(*( CPU0_BTV_type *) 0xF881FE24U)	/* Base Trap Vector Table Pointer */
#define CPU0_ISP	(*( CPU0_ISP_type *) 0xF881FE28U)	/* Interrupt Stack Pointer */
#define CPU0_ICR	(*( CPU0_ICR_type *) 0xF881FE2CU)	/* Interrupt Control Register */
#define CPU0_FCX	(*( CPU0_FCX_type *) 0xF881FE38U)	/* Free CSA List Head Pointer */
#define CPU0_LCX	(*( CPU0_LCX_type *) 0xF881FE3CU)	/* Free CSA List Limit Pointer */
#define CPU0_D0	(*( CPU0_D0_type *) 0xF881FF00U)	/* Data General Purpose Register 0 */
#define CPU0_D1	(*( CPU0_D0_type *) 0xF881FF04U)	/* Data General Purpose Register 1 */
#define CPU0_D2	(*( CPU0_D0_type *) 0xF881FF08U)	/* Data General Purpose Register 2 */
#define CPU0_D3	(*( CPU0_D0_type *) 0xF881FF0CU)	/* Data General Purpose Register 3 */
#define CPU0_D4	(*( CPU0_D0_type *) 0xF881FF10U)	/* Data General Purpose Register 4 */
#define CPU0_D5	(*( CPU0_D0_type *) 0xF881FF14U)	/* Data General Purpose Register 5 */
#define CPU0_D6	(*( CPU0_D0_type *) 0xF881FF18U)	/* Data General Purpose Register 6 */
#define CPU0_D7	(*( CPU0_D0_type *) 0xF881FF1CU)	/* Data General Purpose Register 7 */
#define CPU0_D8	(*( CPU0_D0_type *) 0xF881FF20U)	/* Data General Purpose Register 8 */
#define CPU0_D9	(*( CPU0_D0_type *) 0xF881FF24U)	/* Data General Purpose Register 9 */
#define CPU0_D10	(*( CPU0_D0_type *) 0xF881FF28U)	/* Data General Purpose Register 10 */
#define CPU0_D11	(*( CPU0_D0_type *) 0xF881FF2CU)	/* Data General Purpose Register 11 */
#define CPU0_D12	(*( CPU0_D0_type *) 0xF881FF30U)	/* Data General Purpose Register 12 */
#define CPU0_D13	(*( CPU0_D0_type *) 0xF881FF34U)	/* Data General Purpose Register 13 */
#define CPU0_D14	(*( CPU0_D0_type *) 0xF881FF38U)	/* Data General Purpose Register 14 */
#define CPU0_D15	(*( CPU0_D0_type *) 0xF881FF3CU)	/* Data General Purpose Register 15 */
#define CPU0_A0	(*( CPU0_A0_type *) 0xF881FF80U)	/* Address General Purpose Register 0 */
#define CPU0_A1	(*( CPU0_A0_type *) 0xF881FF84U)	/* Address General Purpose Register 1 */
#define CPU0_A2	(*( CPU0_A0_type *) 0xF881FF88U)	/* Address General Purpose Register 2 */
#define CPU0_A3	(*( CPU0_A0_type *) 0xF881FF8CU)	/* Address General Purpose Register 3 */
#define CPU0_A4	(*( CPU0_A0_type *) 0xF881FF90U)	/* Address General Purpose Register 4 */
#define CPU0_A5	(*( CPU0_A0_type *) 0xF881FF94U)	/* Address General Purpose Register 5 */
#define CPU0_A6	(*( CPU0_A0_type *) 0xF881FF98U)	/* Address General Purpose Register 6 */
#define CPU0_A7	(*( CPU0_A0_type *) 0xF881FF9CU)	/* Address General Purpose Register 7 */
#define CPU0_A8	(*( CPU0_A0_type *) 0xF881FFA0U)	/* Address General Purpose Register 8 */
#define CPU0_A9	(*( CPU0_A0_type *) 0xF881FFA4U)	/* Address General Purpose Register 9 */
#define CPU0_A10	(*( CPU0_A0_type *) 0xF881FFA8U)	/* Address General Purpose Register 10 */
#define CPU0_A11	(*( CPU0_A0_type *) 0xF881FFACU)	/* Address General Purpose Register 11 */
#define CPU0_A12	(*( CPU0_A0_type *) 0xF881FFB0U)	/* Address General Purpose Register 12 */
#define CPU0_A13	(*( CPU0_A0_type *) 0xF881FFB4U)	/* Address General Purpose Register 13 */
#define CPU0_A14	(*( CPU0_A0_type *) 0xF881FFB8U)	/* Address General Purpose Register 14 */
#define CPU0_A15	(*( CPU0_A0_type *) 0xF881FFBCU)	/* Address General Purpose Register 15 */
#define CPU0_SEGEN	(*( CPU0_SEGEN_type *) 0xF8811030U)	/* SRI Error Generation Register */
#define CPU0_SPROT_RGNLA0	(*( CPU0_SPROT_RGNLA0_type *) 0xF880E000U)	/* CPU0_Safety Protection Region Lower Address Register */
#define CPU0_SPROT_RGNLA1	(*( CPU0_SPROT_RGNLA0_type *) 0xF880E010U)	/* CPU0_Safety Protection Region Lower Address Register */
#define CPU0_SPROT_RGNLA2	(*( CPU0_SPROT_RGNLA0_type *) 0xF880E020U)	/* CPU0_Safety Protection Region Lower Address Register */
#define CPU0_SPROT_RGNLA3	(*( CPU0_SPROT_RGNLA0_type *) 0xF880E030U)	/* CPU0_Safety Protection Region Lower Address Register */
#define CPU0_SPROT_RGNLA4	(*( CPU0_SPROT_RGNLA0_type *) 0xF880E040U)	/* CPU0_Safety Protection Region Lower Address Register */
#define CPU0_SPROT_RGNLA5	(*( CPU0_SPROT_RGNLA0_type *) 0xF880E050U)	/* CPU0_Safety Protection Region Lower Address Register */
#define CPU0_SPROT_RGNLA6	(*( CPU0_SPROT_RGNLA0_type *) 0xF880E060U)	/* CPU0_Safety Protection Region Lower Address Register */
#define CPU0_SPROT_RGNLA7	(*( CPU0_SPROT_RGNLA0_type *) 0xF880E070U)	/* CPU0_Safety Protection Region Lower Address Register */
#define CPU0_SPROT_RGNUA0	(*( CPU0_SPROT_RGNUA0_type *) 0xF880E004U)	/* CPU0 Safety protection Region Upper Address Register */
#define CPU0_SPROT_RGNUA1	(*( CPU0_SPROT_RGNUA0_type *) 0xF880E014U)	/* CPU0 Safety protection Region Upper Address Register */
#define CPU0_SPROT_RGNUA2	(*( CPU0_SPROT_RGNUA0_type *) 0xF880E024U)	/* CPU0 Safety protection Region Upper Address Register */
#define CPU0_SPROT_RGNUA3	(*( CPU0_SPROT_RGNUA0_type *) 0xF880E034U)	/* CPU0 Safety protection Region Upper Address Register */
#define CPU0_SPROT_RGNUA4	(*( CPU0_SPROT_RGNUA0_type *) 0xF880E044U)	/* CPU0 Safety protection Region Upper Address Register */
#define CPU0_SPROT_RGNUA5	(*( CPU0_SPROT_RGNUA0_type *) 0xF880E054U)	/* CPU0 Safety protection Region Upper Address Register */
#define CPU0_SPROT_RGNUA6	(*( CPU0_SPROT_RGNUA0_type *) 0xF880E064U)	/* CPU0 Safety protection Region Upper Address Register */
#define CPU0_SPROT_RGNUA7	(*( CPU0_SPROT_RGNUA0_type *) 0xF880E074U)	/* CPU0 Safety protection Region Upper Address Register */
#define CPU0_SPROT_RGNACCENA0	(*( CPU0_SPROT_RGNACCENA0_type *) 0xF880E008U)	/* CPU0 Safety Protection Region Access Enable Register A */
#define CPU0_SPROT_RGNACCENA1	(*( CPU0_SPROT_RGNACCENA0_type *) 0xF880E018U)	/* CPU0 Safety Protection Region Access Enable Register A */
#define CPU0_SPROT_RGNACCENA2	(*( CPU0_SPROT_RGNACCENA0_type *) 0xF880E028U)	/* CPU0 Safety Protection Region Access Enable Register A */
#define CPU0_SPROT_RGNACCENA3	(*( CPU0_SPROT_RGNACCENA0_type *) 0xF880E038U)	/* CPU0 Safety Protection Region Access Enable Register A */
#define CPU0_SPROT_RGNACCENA4	(*( CPU0_SPROT_RGNACCENA0_type *) 0xF880E048U)	/* CPU0 Safety Protection Region Access Enable Register A */
#define CPU0_SPROT_RGNACCENA5	(*( CPU0_SPROT_RGNACCENA0_type *) 0xF880E058U)	/* CPU0 Safety Protection Region Access Enable Register A */
#define CPU0_SPROT_RGNACCENA6	(*( CPU0_SPROT_RGNACCENA0_type *) 0xF880E068U)	/* CPU0 Safety Protection Region Access Enable Register A */
#define CPU0_SPROT_RGNACCENA7	(*( CPU0_SPROT_RGNACCENA0_type *) 0xF880E078U)	/* CPU0 Safety Protection Region Access Enable Register A */
#define CPU0_SPROT_RGNACCENB0	(*( CPU0_SPROT_RGNACCENB0_type *) 0xF880E00CU)	/* CPU0 Safety Protection Region Access Enable Register B */
#define CPU0_SPROT_RGNACCENB1	(*( CPU0_SPROT_RGNACCENB0_type *) 0xF880E01CU)	/* CPU0 Safety Protection Region Access Enable Register B */
#define CPU0_SPROT_RGNACCENB2	(*( CPU0_SPROT_RGNACCENB0_type *) 0xF880E02CU)	/* CPU0 Safety Protection Region Access Enable Register B */
#define CPU0_SPROT_RGNACCENB3	(*( CPU0_SPROT_RGNACCENB0_type *) 0xF880E03CU)	/* CPU0 Safety Protection Region Access Enable Register B */
#define CPU0_SPROT_RGNACCENB4	(*( CPU0_SPROT_RGNACCENB0_type *) 0xF880E04CU)	/* CPU0 Safety Protection Region Access Enable Register B */
#define CPU0_SPROT_RGNACCENB5	(*( CPU0_SPROT_RGNACCENB0_type *) 0xF880E05CU)	/* CPU0 Safety Protection Region Access Enable Register B */
#define CPU0_SPROT_RGNACCENB6	(*( CPU0_SPROT_RGNACCENB0_type *) 0xF880E06CU)	/* CPU0 Safety Protection Region Access Enable Register B */
#define CPU0_SPROT_RGNACCENB7	(*( CPU0_SPROT_RGNACCENB0_type *) 0xF880E07CU)	/* CPU0 Safety Protection Region Access Enable Register B */
#define CPU0_SPROT_ACCENA	(*( CPU0_SPROT_ACCENA_type *) 0xF880E100U)	/* CPU0 Safety Protection Register Access Enable Register A */
#define CPU0_SPROT_ACCENB	(*( CPU0_SPROT_RGNACCENB0_type *) 0xF880E104U)	/* CPU0 Safety Protection Region Access Enable Register B */
#define XBAR_ID	(*( XBAR_ID_type *) 0xF8700408U)	/* Module Identification Register */
#define XBAR_DBSAT	(*( XBAR_DBSAT_type *) 0xF870040CU)	/* Debug Trigger Event Status Register */
#define XBAR_INTSAT	(*( XBAR_INTSAT_type *) 0xF8700410U)	/* Arbiter Interrupt Status Register */
#define XBAR_IDINTSAT	(*( XBAR_IDINTSAT_type *) 0xF8700414U)	/* Transaction ID Interrupt Status Register */
#define XBAR_IDINTEN	(*( XBAR_IDINTEN_type *) 0xF8700418U)	/* Transaction ID Interrupt Enable Register */
#define XBAR_EXTCOND	(*( XBAR_EXTCOND_type *) 0xF8700000U)	/* External Control Register D */
#define XBAR_ARBCON0	(*( XBAR_ARBCON0_type *) 0xF8700044U)	/* Arbiter Control Register 0 */
#define XBAR_ARBCON4	(*( XBAR_ARBCON0_type *) 0xF8700144U)	/* Arbiter Control Register 4 */
#define XBAR_ARBCON6	(*( XBAR_ARBCON0_type *) 0xF87001C4U)	/* Arbiter Control Register 6 */
#define XBAR_ARBCON7	(*( XBAR_ARBCON0_type *) 0xF8700204U)	/* Arbiter Control Register 7 */
#define XBAR_ARBCOND	(*( XBAR_ARBCON0_type *) 0xF8700004U)	/* Arbiter Control Register D */
#define XBAR_PRIOH0	(*( XBAR_PRIOH0_type *) 0xF8700048U)	/* Arbiter Priority Register 0 */
#define XBAR_PRIOH4	(*( XBAR_PRIOH0_type *) 0xF8700148U)	/* Arbiter Priority Register 4 */
#define XBAR_PRIOH6	(*( XBAR_PRIOH0_type *) 0xF87001C8U)	/* Arbiter Priority Register 6 */
#define XBAR_PRIOH7	(*( XBAR_PRIOH0_type *) 0xF8700208U)	/* Arbiter Priority Register 7 */
#define XBAR_PRIOHD	(*( XBAR_PRIOH0_type *) 0xF8700008U)	/* Arbiter Priority Register D */
#define XBAR_PRIOLD	(*( XBAR_PRIOLD_type *) 0xF870000CU)	/* Arbiter Priority Register D */
#define XBAR_PRIOL0	(*( XBAR_PRIOLD_type *) 0xF870004CU)	/* Arbiter Priority Register 0 */
#define XBAR_PRIOL4	(*( XBAR_PRIOLD_type *) 0xF870014CU)	/* Arbiter Priority Register 4 */
#define XBAR_PRIOL6	(*( XBAR_PRIOLD_type *) 0xF87001CCU)	/* Arbiter Priority Register 6 */
#define XBAR_PRIOL7	(*( XBAR_PRIOLD_type *) 0xF870020CU)	/* Arbiter Priority Register 7 */
#define XBAR_ERRADDRD	(*( XBAR_ERRADDRD_type *) 0xF8700010U)	/* Error/Debug Address Capture Register D */
#define XBAR_ERRADDR0	(*( XBAR_ERRADDRD_type *) 0xF8700050U)	/* Error/Debug Address Capture Register 0 */
#define XBAR_ERRADDR4	(*( XBAR_ERRADDRD_type *) 0xF8700150U)	/* Error/Debug Address Capture Register 4 */
#define XBAR_ERRADDR6	(*( XBAR_ERRADDRD_type *) 0xF87001D0U)	/* Error/Debug Address Capture Register 6 */
#define XBAR_ERRADDR7	(*( XBAR_ERRADDRD_type *) 0xF8700210U)	/* Error/Debug Address Capture Register 7 */
#define XBAR_ERR0	(*( XBAR_ERR0_type *) 0xF8700054U)	/* Error/Debug Capture Register 0 */
#define XBAR_ERR4	(*( XBAR_ERR0_type *) 0xF8700154U)	/* Error/Debug Capture Register 4 */
#define XBAR_ERR6	(*( XBAR_ERR0_type *) 0xF87001D4U)	/* Error/Debug Capture Register 6 */
#define XBAR_ERR7	(*( XBAR_ERR0_type *) 0xF8700214U)	/* Error/Debug Capture Register 7 */
#define XBAR_ERRD	(*( XBAR_ERR0_type *) 0xF8700014U)	/* Error/Debug Capture Register D */
#define XBAR_DBCON0	(*( XBAR_DBCON0_type *) 0xF8700058U)	/* Debug Control Register 0 */
#define XBAR_DBCON4	(*( XBAR_DBCON0_type *) 0xF8700158U)	/* Debug Control Register 4 */
#define XBAR_DBCON6	(*( XBAR_DBCON0_type *) 0xF87001D8U)	/* Debug Control Register 6 */
#define XBAR_DBCON7	(*( XBAR_DBCON0_type *) 0xF8700218U)	/* Debug Control Register 7 */
#define XBAR_DBCOND	(*( XBAR_DBCON0_type *) 0xF8700018U)	/* Debug Control Register D */
#define XBAR_DBADDD	(*( XBAR_DBADDD_type *) 0xF870001CU)	/* Debug Address Register D */
#define XBAR_DBADD0	(*( XBAR_DBADD0_type *) 0xF870005CU)	/* Debug Address Register 0 */
#define XBAR_DBADD4	(*( XBAR_DBADD4_type *) 0xF870015CU)	/* Debug Address Register 4 */
#define XBAR_DBADD6	(*( XBAR_DBADD6_type *) 0xF87001DCU)	/* Debug Address Register 6 */
#define XBAR_DBADD7	(*( XBAR_DBADD7_type *) 0xF870021CU)	/* Debug Address Register 7 */
#define XBAR_DBMADDD	(*( XBAR_DBMADDD_type *) 0xF8700020U)	/* Debug Mask Address Register D */
#define XBAR_DBMADD0	(*( XBAR_DBMADD0_type *) 0xF8700060U)	/* Debug Mask Address Register 0 */
#define XBAR_DBMADD4	(*( XBAR_DBADD4_type *) 0xF8700160U)	/* Debug Mask Address Register 4 */
#define XBAR_DBMADD6	(*( XBAR_DBMADD6_type *) 0xF87001E0U)	/* Debug Mask Address Register 6 */
#define XBAR_DBMADD7	(*( XBAR_DBMADD7_type *) 0xF8700220U)	/* Debug Mask Address Register 7 */
#define XBAR_ACCEN0	(*( XBAR_ACCEN0_type *) 0xF87004FCU)	/* Access Enable Register 0 */
#define XBAR_ACCEN1	(*( XBAR_PRIOH0_type *) 0xF87004F8U)	/* Access Enable Register 1 */
#define SBCU_ID	(*( SBCU_ID_type *) 0xF0030008U)	/* Module Identification Register */
#define SBCU_ACCEN0	(*( XBAR_ACCEN0_type *) 0xF00300FCU)	/* Access Enable Register 0 */
#define SBCU_ACCEN1	(*( XBAR_PRIOH0_type *) 0xF00300F8U)	/* Access Enable Register 1 */
#define SBCU_CON	(*( SBCU_CON_type *) 0xF0030010U)	/* SBCU Control Register */
#define SBCU_PRIOH	(*( SBCU_PRIOH_type *) 0xF0030014U)	/* Arbiter Priority Register High */
#define SBCU_PRIOL	(*( SBCU_PRIOL_type *) 0xF0030018U)	/* Arbiter Priority Register Low */
#define SBCU_ECON	(*( SBCU_ECON_type *) 0xF0030020U)	/* SBCU Error Control Capture Register */
#define SBCU_EADD	(*( SBCU_EADD_type *) 0xF0030024U)	/* SBCU Error Address Capture Register */
#define SBCU_EDAT	(*( SBCU_EDAT_type *) 0xF0030028U)	/* SBCU Error Data Capture Register */
#define SBCU_DBCNTL	(*( SBCU_DBCNTL_type *) 0xF0030030U)	/* SBCU Debug Control Register */
#define SBCU_DBGRNT	(*( SBCU_DBGRNT_type *) 0xF0030034U)	/* SBCU Debug Grant Mask Register */
#define SBCU_DBADR1	(*( SBCU_DBADR1_type *) 0xF0030038U)	/* SBCU Debug Address 1 Register */
#define SBCU_DBADR2	(*( SBCU_DBADR2_type *) 0xF003003CU)	/* SBCU Debug Address 2 Register */
#define SBCU_DBBOS	(*( SBCU_DBBOS_type *) 0xF0030040U)	/* SBCU Debug Bus Operation Signals Register */
#define SBCU_DBGNTT	(*( SBCU_DBGNTT_type *) 0xF0030044U)	/* SBCU Debug Trapped Master Register */
#define SBCU_DBADRT	(*( SBCU_DBADRT_type *) 0xF0030048U)	/* SBCU Debug Trapped Address Register */
#define SBCU_DBBOST	(*( SBCU_DBBOST_type *) 0xF003004CU)	/* SBCU Debug Trapped Bus Operation Signals Register */
#define SBCU_DBDAT	(*( SBCU_DBDAT_type *) 0xF0030050U)	/* SBCU Debug Data Status Register */
#define INT_ID	(*( XBAR_ID_type *) 0xF0037008U)	/* Module Identification Register */
#define INT_SRB0	(*( INT_SRB0_type *) 0xF0037010U)	/* Service Request Broadcast Register 0 */
#define INT_ACCEN00	(*( XBAR_ACCEN0_type *) 0xF00370F4U)	/* Access Enable Register 0 */
#define INT_ACCEN10	(*( XBAR_ACCEN0_type *) 0xF00370FCU)	/* Kernel 1 Access Enable Register 0 */
#define INT_ACCEN01	(*( XBAR_PRIOH0_type *) 0xF00370F0U)	/* Kernel 0 Access Enable Register 1 */
#define INT_ACCEN11	(*( XBAR_PRIOH0_type *) 0xF00370F8U)	/* Kernel 1 Access Enable Register 1 */
#define INT_LWSR0	(*( INT_LWSR0_type *) 0xF0037100U)	/* Latest Winning Service Request Register 0 */
#define INT_LWSR1	(*( INT_LWSR0_type *) 0xF0037110U)	/* Latest Winning Service Request Register 1 */
#define INT_LASR0	(*( INT_LASR0_type *) 0xF0037104U)	/* Last Acknowledged Service Request Register 0 */
#define INT_LASR1	(*( INT_LASR0_type *) 0xF0037114U)	/* Last Acknowledged Service Request Register 1 */
#define INT_ECR0	(*( INT_ECR0_type *) 0xF0037108U)	/* Error Capture Register 0 */
#define INT_ECR1	(*( INT_ECR0_type *) 0xF0037118U)	/* Error Capture Register 1 */
#define INT_OOBS	(*( INT_OOBS_type *) 0xF0037080U)	/* OTGM OTGB0/1 Status */
#define INT_OSSIC	(*( INT_OSSIC_type *) 0xF0037084U)	/* OTGM SSI Control */
#define INT_OIXTS	(*( INT_OIXTS_type *) 0xF0037088U)	/* OTGM IRQ MUX Trigger Set Select */
#define INT_OIXMS	(*( INT_OIXMS_type *) 0xF003708CU)	/* OTGM IRQ MUX Missed IRQ Select */
#define INT_OIXS0	(*( INT_OIXS0_type *) 0xF0037090U)	/* OTGM IRQ MUX Select 0 */
#define INT_OIXS1	(*( INT_OIXS1_type *) 0xF0037094U)	/* OTGM IRQ MUX Select 1 */
#define INT_OIT	(*( INT_OIT_type *) 0xF00370A0U)	/* OTGM IRQ Trace */
#define INT_OMISP	(*( INT_OMISP_type *) 0xF00370A4U)	/* OTGM MCDS I/F Sensitivity Posedge */
#define INT_OMISN	(*( INT_OMISN_type *) 0xF00370A8U)	/* OTGM MCDS I/F Sensitivity Negedge */
#define SRC_CPU0SBSRC	(*( SRC_CPU0SBSRC_type *) 0xF0038000U)	/* CPU 0Software Breakpoint Service Request */
#define SRC_EMEM	(*( SRC_CPU0SBSRC_type *) 0xF0038020U)	/* Emulation Memory Service Request */
#define SRC_BCUSPBSBSRC	(*( SRC_CPU0SBSRC_type *) 0xF0038040U)	/* Bus Control Unit SPB Service Request */
#define SRC_XBARSRC	(*( SRC_CPU0SBSRC_type *) 0xF0038048U)	/* XBAR_SRI Service Request */
#define SRC_CERBERUS0	(*( SRC_CPU0SBSRC_type *) 0xF0038050U)	/* Cerberus Service Request 0 */
#define SRC_CERBERUS1	(*( SRC_CPU0SBSRC_type *) 0xF0038054U)	/* Cerberus Service Request 1 */
#define SRC_ASCLIN0TX	(*( SRC_CPU0SBSRC_type *) 0xF0038080U)	/* ASCLIN 0 Transmit Service Request */
#define SRC_ASCLIN1TX	(*( SRC_CPU0SBSRC_type *) 0xF003808CU)	/* ASCLIN 1 Transmit Service Request */
#define SRC_ASCLIN0RX	(*( SRC_CPU0SBSRC_type *) 0xF0038084U)	/* ASCLIN 0 Receive Service Request */
#define SRC_ASCLIN1RX	(*( SRC_CPU0SBSRC_type *) 0xF0038090U)	/* ASCLIN 1 Receive Service Request */
#define SRC_ASCLIN0ERR	(*( SRC_CPU0SBSRC_type *) 0xF0038088U)	/* ASCLIN 0 Error Service Request */
#define SRC_ASCLIN1ERR	(*( SRC_CPU0SBSRC_type *) 0xF0038094U)	/* ASCLIN 1 Error Service Request */
#define SRC_QSPI0TX	(*( SRC_CPU0SBSRC_type *) 0xF0038190U)	/* QSPI 0 Transmit Service Request */
#define SRC_QSPI1TX	(*( SRC_CPU0SBSRC_type *) 0xF00381A8U)	/* QSPI 1 Transmit Service Request */
#define SRC_QSPI2TX	(*( SRC_CPU0SBSRC_type *) 0xF00381C0U)	/* QSPI 2 Transmit Service Request */
#define SRC_QSPI3TX	(*( SRC_CPU0SBSRC_type *) 0xF00381D8U)	/* QSPI 3 Transmit Service Request */
#define SRC_QSPI0RX	(*( SRC_CPU0SBSRC_type *) 0xF0038194U)	/* QSPI 0 Receive Service Request */
#define SRC_QSPI1RX	(*( SRC_CPU0SBSRC_type *) 0xF00381ACU)	/* QSPI 1 Receive Service Request */
#define SRC_QSPI2RX	(*( SRC_CPU0SBSRC_type *) 0xF00381C4U)	/* QSPI 2 Receive Service Request */
#define SRC_QSPI3RX	(*( SRC_CPU0SBSRC_type *) 0xF00381DCU)	/* QSPI 3 Receive Service Request */
#define SRC_QSPI0ERR	(*( SRC_CPU0SBSRC_type *) 0xF0038198U)	/* QSPI 0 Error Service Request */
#define SRC_QSPI1ERR	(*( SRC_CPU0SBSRC_type *) 0xF00381B0U)	/* QSPI 1 Error Service Request */
#define SRC_QSPI2ERR	(*( SRC_CPU0SBSRC_type *) 0xF00381C8U)	/* QSPI 2 Error Service Request */
#define SRC_QSPI3ERR	(*( SRC_CPU0SBSRC_type *) 0xF00381E0U)	/* QSPI 3 Error Service Request */
#define SRC_QSPI0PT	(*( SRC_CPU0SBSRC_type *) 0xF003819CU)	/* QSPI 0 Phase Transition Service Request */
#define SRC_QSPI1PT	(*( SRC_CPU0SBSRC_type *) 0xF00381B4U)	/* QSPI 1 Phase Transition Service Request */
#define SRC_QSPI2PT	(*( SRC_CPU0SBSRC_type *) 0xF00381CCU)	/* QSPI 2 Phase Transition Service Request */
#define SRC_QSPI3PT	(*( SRC_CPU0SBSRC_type *) 0xF00381E4U)	/* QSPI 3 Phase Transition Service Request */
#define SRC_RESERVED10	(*( SRC_CPU0SBSRC_type *) 0xF00381A0U)	/* Reserved Service Request 10 */
#define SRC_RESERVED11	(*( SRC_CPU0SBSRC_type *) 0xF00381B8U)	/* Reserved Service Request 11 */
#define SRC_QSPI2HC	(*( SRC_CPU0SBSRC_type *) 0xF00381D0U)	/* QSPI 2 High Speed Capture Service Request */
#define SRC_QSPI3HC	(*( SRC_CPU0SBSRC_type *) 0xF00381E8U)	/* QSPI 3 High Speed Capture Service Request */
#define SRC_QSPI0U	(*( SRC_CPU0SBSRC_type *) 0xF00381A4U)	/* QSPI 0 User Defined Service Request */
#define SRC_QSPI1U	(*( SRC_CPU0SBSRC_type *) 0xF00381BCU)	/* QSPI 1 User Defined Service Request */
#define SRC_QSPI2U	(*( SRC_CPU0SBSRC_type *) 0xF00381D4U)	/* QSPI 2 User Defined Service Request */
#define SRC_QSPI3U	(*( SRC_CPU0SBSRC_type *) 0xF00381ECU)	/* QSPI 3 User Defined Service Request */
#define SRC_SENT0	(*( SRC_CPU0SBSRC_type *) 0xF0038350U)	/* SENT TRIG0 Service Request */
#define SRC_SENT1	(*( SRC_CPU0SBSRC_type *) 0xF0038354U)	/* SENT TRIG1 Service Request */
#define SRC_SENT2	(*( SRC_CPU0SBSRC_type *) 0xF0038358U)	/* SENT TRIG2 Service Request */
#define SRC_SENT3	(*( SRC_CPU0SBSRC_type *) 0xF003835CU)	/* SENT TRIG3 Service Request */
#define SRC_CCU60SR0	(*( SRC_CPU0SBSRC_type *) 0xF0038420U)	/* CCU6 0 Service Request 0 */
#define SRC_CCU61SR0	(*( SRC_CPU0SBSRC_type *) 0xF0038430U)	/* CCU6 1 Service Request 0 */
#define SRC_CCU60SR1	(*( SRC_CPU0SBSRC_type *) 0xF0038424U)	/* CCU6 0 Service Request 1 */
#define SRC_CCU61SR1	(*( SRC_CPU0SBSRC_type *) 0xF0038434U)	/* CCU6 1 Service Request 1 */
#define SRC_CCU60SR2	(*( SRC_CPU0SBSRC_type *) 0xF0038428U)	/* CCU6 0 Service Request 2 */
#define SRC_CCU61SR2	(*( SRC_CPU0SBSRC_type *) 0xF0038438U)	/* CCU6 1 Service Request 2 */
#define SRC_CCU60SR3	(*( SRC_CPU0SBSRC_type *) 0xF003842CU)	/* CCU6 0 Service Request 3 */
#define SRC_CCU61SR3	(*( SRC_CPU0SBSRC_type *) 0xF003843CU)	/* CCU6 1 Service Request 3 */
#define SRC_GPT120CIRQ	(*( SRC_CPU0SBSRC_type *) 0xF0038460U)	/* GPT120 CAPREL Service Request */
#define SRC_GPT120T2	(*( SRC_CPU0SBSRC_type *) 0xF0038464U)	/* GPT120 T2 Overflow/Underflow Service Request */
#define SRC_GPT120T3	(*( SRC_CPU0SBSRC_type *) 0xF0038468U)	/* GPT120 T3 Overflow/Underflow Service Request */
#define SRC_GPT120T4	(*( SRC_CPU0SBSRC_type *) 0xF003846CU)	/* GPT120 T4 Overflow/Underflow Service Request */
#define SRC_GPT120T5	(*( SRC_CPU0SBSRC_type *) 0xF0038470U)	/* GPT120 T5 Overflow/Underflow Service Request */
#define SRC_GPT120T6	(*( SRC_CPU0SBSRC_type *) 0xF0038474U)	/* GPT120 T6 Overflow/Underflow Service Request */
#define SRC_STM0SR0	(*( SRC_CPU0SBSRC_type *) 0xF0038490U)	/* System Timer 0 Service Request 0 */
#define SRC_STM0SR1	(*( SRC_CPU0SBSRC_type *) 0xF0038494U)	/* System Timer 0 Service Request 1 */
#define SRC_DMAERR	(*( SRC_CPU0SBSRC_type *) 0xF00384F0U)	/* DMA Error Service Request */
#define SRC_DMACH0	(*( SRC_CPU0SBSRC_type *) 0xF0038500U)	/* DMA Channel 0 Service Request */
#define SRC_DMACH1	(*( SRC_CPU0SBSRC_type *) 0xF0038504U)	/* DMA Channel 1 Service Request */
#define SRC_DMACH2	(*( SRC_CPU0SBSRC_type *) 0xF0038508U)	/* DMA Channel 2 Service Request */
#define SRC_DMACH3	(*( SRC_CPU0SBSRC_type *) 0xF003850CU)	/* DMA Channel 3 Service Request */
#define SRC_DMACH4	(*( SRC_CPU0SBSRC_type *) 0xF0038510U)	/* DMA Channel 4 Service Request */
#define SRC_DMACH5	(*( SRC_CPU0SBSRC_type *) 0xF0038514U)	/* DMA Channel 5 Service Request */
#define SRC_DMACH6	(*( SRC_CPU0SBSRC_type *) 0xF0038518U)	/* DMA Channel 6 Service Request */
#define SRC_DMACH7	(*( SRC_CPU0SBSRC_type *) 0xF003851CU)	/* DMA Channel 7 Service Request */
#define SRC_DMACH8	(*( SRC_CPU0SBSRC_type *) 0xF0038520U)	/* DMA Channel 8 Service Request */
#define SRC_DMACH9	(*( SRC_CPU0SBSRC_type *) 0xF0038524U)	/* DMA Channel 9 Service Request */
#define SRC_DMACH10	(*( SRC_CPU0SBSRC_type *) 0xF0038528U)	/* DMA Channel 10 Service Request */
#define SRC_DMACH11	(*( SRC_CPU0SBSRC_type *) 0xF003852CU)	/* DMA Channel 11 Service Request */
#define SRC_DMACH12	(*( SRC_CPU0SBSRC_type *) 0xF0038530U)	/* DMA Channel 12 Service Request */
#define SRC_DMACH13	(*( SRC_CPU0SBSRC_type *) 0xF0038534U)	/* DMA Channel 13 Service Request */
#define SRC_DMACH14	(*( SRC_CPU0SBSRC_type *) 0xF0038538U)	/* DMA Channel 14 Service Request */
#define SRC_DMACH15	(*( SRC_CPU0SBSRC_type *) 0xF003853CU)	/* DMA Channel 15 Service Request */
#define SRC_ETH	(*( SRC_CPU0SBSRC_type *) 0xF00388F0U)	/* Ethernet Service Request */
#define SRC_CANINT0	(*( SRC_CPU0SBSRC_type *) 0xF0038900U)	/* MULTICAN Service Request 0 */
#define SRC_CANINT1	(*( SRC_CPU0SBSRC_type *) 0xF0038904U)	/* MULTICAN Service Request 1 */
#define SRC_CANINT2	(*( SRC_CPU0SBSRC_type *) 0xF0038908U)	/* MULTICAN Service Request 2 */
#define SRC_CANINT3	(*( SRC_CPU0SBSRC_type *) 0xF003890CU)	/* MULTICAN Service Request 3 */
#define SRC_CANINT4	(*( SRC_CPU0SBSRC_type *) 0xF0038910U)	/* MULTICAN Service Request 4 */
#define SRC_CANINT5	(*( SRC_CPU0SBSRC_type *) 0xF0038914U)	/* MULTICAN Service Request 5 */
#define SRC_CANINT6	(*( SRC_CPU0SBSRC_type *) 0xF0038918U)	/* MULTICAN Service Request 6 */
#define SRC_CANINT7	(*( SRC_CPU0SBSRC_type *) 0xF003891CU)	/* MULTICAN Service Request 7 */
#define SRC_CANINT8	(*( SRC_CPU0SBSRC_type *) 0xF0038920U)	/* MULTICAN Service Request 8 */
#define SRC_CANINT9	(*( SRC_CPU0SBSRC_type *) 0xF0038924U)	/* MULTICAN Service Request 9 */
#define SRC_CANINT10	(*( SRC_CPU0SBSRC_type *) 0xF0038928U)	/* MULTICAN Service Request 10 */
#define SRC_CANINT11	(*( SRC_CPU0SBSRC_type *) 0xF003892CU)	/* MULTICAN Service Request 11 */
#define SRC_CANINT12	(*( SRC_CPU0SBSRC_type *) 0xF0038930U)	/* MULTICAN Service Request 12 */
#define SRC_CANINT13	(*( SRC_CPU0SBSRC_type *) 0xF0038934U)	/* MULTICAN Service Request 13 */
#define SRC_CANINT14	(*( SRC_CPU0SBSRC_type *) 0xF0038938U)	/* MULTICAN Service Request 14 */
#define SRC_CANINT15	(*( SRC_CPU0SBSRC_type *) 0xF003893CU)	/* MULTICAN Service Request 15 */
#define SRC_CAN1INT0	(*( SRC_CPU0SBSRC_type *) 0xF0038940U)	/* MULTICAN1 Service Request 0 */
#define SRC_CAN1INT1	(*( SRC_CPU0SBSRC_type *) 0xF0038944U)	/* MULTICAN1 Service Request 1 */
#define SRC_CAN1INT2	(*( SRC_CPU0SBSRC_type *) 0xF0038948U)	/* MULTICAN1 Service Request 2 */
#define SRC_CAN1INT3	(*( SRC_CPU0SBSRC_type *) 0xF003894CU)	/* MULTICAN1 Service Request 3 */
#define SRC_CAN1INT4	(*( SRC_CPU0SBSRC_type *) 0xF0038950U)	/* MULTICAN1 Service Request 4 */
#define SRC_CAN1INT5	(*( SRC_CPU0SBSRC_type *) 0xF0038954U)	/* MULTICAN1 Service Request 5 */
#define SRC_CAN1INT6	(*( SRC_CPU0SBSRC_type *) 0xF0038958U)	/* MULTICAN1 Service Request 6 */
#define SRC_CAN1INT7	(*( SRC_CPU0SBSRC_type *) 0xF003895CU)	/* MULTICAN1 Service Request 7 */
#define SRC_VADCG0SR0	(*( SRC_CPU0SBSRC_type *) 0xF0038980U)	/* VADC Group 0 Service Request 0 */
#define SRC_VADCG0SR1	(*( SRC_CPU0SBSRC_type *) 0xF0038984U)	/* VADC Group 0 Service Request 1 */
#define SRC_VADCG0SR2	(*( SRC_CPU0SBSRC_type *) 0xF0038988U)	/* VADC Group 0 Service Request 2 */
#define SRC_VADCG0SR3	(*( SRC_CPU0SBSRC_type *) 0xF003898CU)	/* VADC Group 0 Service Request 3 */
#define SRC_VADCG1SR0	(*( SRC_CPU0SBSRC_type *) 0xF0038990U)	/* VADC Group 1 Service Request 0 */
#define SRC_VADCG1SR1	(*( SRC_CPU0SBSRC_type *) 0xF0038994U)	/* VADC Group 1 Service Request 1 */
#define SRC_VADCG1SR2	(*( SRC_CPU0SBSRC_type *) 0xF0038998U)	/* VADC Group 1 Service Request 2 */
#define SRC_VADCG1SR3	(*( SRC_CPU0SBSRC_type *) 0xF003899CU)	/* VADC Group 1 Service Request 3 */
#define SRC_VADCG2SR0	(*( SRC_CPU0SBSRC_type *) 0xF00389A0U)	/* VADC Group 2 Service Request 0 */
#define SRC_VADCG2SR1	(*( SRC_CPU0SBSRC_type *) 0xF00389A4U)	/* VADC Group 2 Service Request 1 */
#define SRC_VADCG2SR2	(*( SRC_CPU0SBSRC_type *) 0xF00389A8U)	/* VADC Group 2 Service Request 2 */
#define SRC_VADCG2SR3	(*( SRC_CPU0SBSRC_type *) 0xF00389ACU)	/* VADC Group 2 Service Request 3 */
#define SRC_VADCG3SR0	(*( SRC_CPU0SBSRC_type *) 0xF00389B0U)	/* VADC Group 3 Service Request 0 */
#define SRC_VADCG3SR1	(*( SRC_CPU0SBSRC_type *) 0xF00389B4U)	/* VADC Group 3 Service Request 1 */
#define SRC_VADCG3SR2	(*( SRC_CPU0SBSRC_type *) 0xF00389B8U)	/* VADC Group 3 Service Request 2 */
#define SRC_VADCG3SR3	(*( SRC_CPU0SBSRC_type *) 0xF00389BCU)	/* VADC Group 3 Service Request 3 */
#define SRC_VADCCG0SR0	(*( SRC_CPU0SBSRC_type *) 0xF0038AA0U)	/* VADC Common Group 0 Service Request 0 */
#define SRC_VADCCG0SR1	(*( SRC_CPU0SBSRC_type *) 0xF0038AA4U)	/* VADC Common Group 0 Service Request 1 */
#define SRC_VADCCG0SR2	(*( SRC_CPU0SBSRC_type *) 0xF0038AA8U)	/* VADC Common Group 0 Service Request 2 */
#define SRC_VADCCG0SR3	(*( SRC_CPU0SBSRC_type *) 0xF0038AACU)	/* VADC Common Group 0 Service Request 3 */
#define SRC_ERAYINT0	(*( SRC_CPU0SBSRC_type *) 0xF0038BE0U)	/* E-RAY Service Request 0 */
#define SRC_ERAYINT1	(*( SRC_CPU0SBSRC_type *) 0xF0038BE4U)	/* E-RAY Service Request 1 */
#define SRC_ERAYTINT0	(*( SRC_CPU0SBSRC_type *) 0xF0038BE8U)	/* E-RAY Timer Interrupt 0 Service Request */
#define SRC_ERAYTINT1	(*( SRC_CPU0SBSRC_type *) 0xF0038BECU)	/* E-RAY Timer Interrupt 1 Service Request */
#define SRC_ERAYNDAT0	(*( SRC_CPU0SBSRC_type *) 0xF0038BF0U)	/* E-RAY New Data 0 Service Request */
#define SRC_ERAYNDAT1	(*( SRC_CPU0SBSRC_type *) 0xF0038BF4U)	/* E-RAY New Data 1 Service Request */
#define SRC_ERAYMBSC0	(*( SRC_CPU0SBSRC_type *) 0xF0038BF8U)	/* E-RAY Message Buffer Status Changed 0 Service Request */
#define SRC_ERAYMBSC1	(*( SRC_CPU0SBSRC_type *) 0xF0038BFCU)	/* E-RAY Message Buffer Status Changed 1 Service Request */
#define SRC_ERAYOBUSY	(*( SRC_CPU0SBSRC_type *) 0xF0038C00U)	/* E-RAY Output Buffer Busy Service Request */
#define SRC_ERAYIBUSY	(*( SRC_CPU0SBSRC_type *) 0xF0038C04U)	/* E-RAY Input Buffer Busy Service Request */
#define SRC_PMU00	(*( SRC_CPU0SBSRC_type *) 0xF0038C30U)	/* PMU 0 Service Request 0 */
#define SRC_PMU01	(*( SRC_CPU0SBSRC_type *) 0xF0038C34U)	/* PMU 0 Service Request 1 */
#define SRC_HSM0	(*( SRC_CPU0SBSRC_type *) 0xF0038CC0U)	/* HSM Service Request 0 */
#define SRC_HSM1	(*( SRC_CPU0SBSRC_type *) 0xF0038CC4U)	/* HSM Service Request 1 */
#define SRC_SCUDTS	(*( SRC_CPU0SBSRC_type *) 0xF0038CD0U)	/* SCU DTS Busy Service Request */
#define SRC_SCUERU0	(*( SRC_CPU0SBSRC_type *) 0xF0038CD4U)	/* SCU ERU Service Request 0 */
#define SRC_SCUERU1	(*( SRC_CPU0SBSRC_type *) 0xF0038CD8U)	/* SCU ERU Service Request 1 */
#define SRC_SCUERU2	(*( SRC_CPU0SBSRC_type *) 0xF0038CDCU)	/* SCU ERU Service Request 2 */
#define SRC_SCUERU3	(*( SRC_CPU0SBSRC_type *) 0xF0038CE0U)	/* SCU ERU Service Request 3 */
#define SRC_SMU0	(*( SRC_CPU0SBSRC_type *) 0xF0038D10U)	/* SMU Service Request 0 */
#define SRC_SMU1	(*( SRC_CPU0SBSRC_type *) 0xF0038D14U)	/* SMU Service Request 1 */
#define SRC_SMU2	(*( SRC_CPU0SBSRC_type *) 0xF0038D18U)	/* SMU Service Request 2 */
#define SRC_LMU	(*( SRC_CPU0SBSRC_type *) 0xF0038DE0U)	/* LMU Service Request */
#define SRC_EVRWUT	(*( SRC_CPU0SBSRC_type *) 0xF0038FB0U)	/* EVR Wake Up Timer Service Request */
#define SRC_EVRSCDC	(*( SRC_CPU0SBSRC_type *) 0xF0038FB4U)	/* EVR Supply Service Request */
#define SRC_FFTDONE	(*( SRC_CPU0SBSRC_type *) 0xF0038FC0U)	/* FFT Done Service Request */
#define SRC_FFTERR	(*( SRC_CPU0SBSRC_type *) 0xF0038FC4U)	/* FFT Error Service Request */
#define SRC_FFTRFS	(*( SRC_CPU0SBSRC_type *) 0xF0038FC8U)	/* FFT Ready For Start Service Request */
#define SRC_GPSR00	(*( SRC_CPU0SBSRC_type *) 0xF0039000U)	/* General Purpose Service Request 00 */
#define SRC_GPSR01	(*( SRC_CPU0SBSRC_type *) 0xF0039004U)	/* General Purpose Service Request 01 */
#define SRC_GPSR02	(*( SRC_CPU0SBSRC_type *) 0xF0039008U)	/* General Purpose Service Request 02 */
#define SRC_GPSR03	(*( SRC_CPU0SBSRC_type *) 0xF003900CU)	/* General Purpose Service Request 03 */
#define SRC_GTMAEIIRQ	(*( SRC_CPU0SBSRC_type *) 0xF0039600U)	/* GTM AEI Shared Service Request */
#define SRC_GTMERR	(*( SRC_CPU0SBSRC_type *) 0xF0039770U)	/* GTM Error Service Request */
#define SRC_GTMTIM00	(*( SRC_CPU0SBSRC_type *) 0xF0039780U)	/* GTM TIM0 Shared Service Request 0 */
#define SRC_GTMTIM01	(*( SRC_CPU0SBSRC_type *) 0xF0039784U)	/* GTM TIM0 Shared Service Request 1 */
#define SRC_GTMTIM02	(*( SRC_CPU0SBSRC_type *) 0xF0039788U)	/* GTM TIM0 Shared Service Request 2 */
#define SRC_GTMTIM03	(*( SRC_CPU0SBSRC_type *) 0xF003978CU)	/* GTM TIM0 Shared Service Request 3 */
#define SRC_GTMTIM04	(*( SRC_CPU0SBSRC_type *) 0xF0039790U)	/* GTM TIM0 Shared Service Request 4 */
#define SRC_GTMTIM05	(*( SRC_CPU0SBSRC_type *) 0xF0039794U)	/* GTM TIM0 Shared Service Request 5 */
#define SRC_GTMTIM06	(*( SRC_CPU0SBSRC_type *) 0xF0039798U)	/* GTM TIM0 Shared Service Request 6 */
#define SRC_GTMTIM07	(*( SRC_CPU0SBSRC_type *) 0xF003979CU)	/* GTM TIM0 Shared Service Request 7 */
#define SRC_GTMTOM00	(*( SRC_CPU0SBSRC_type *) 0xF0039B80U)	/* GTM TOM0 Shared Service Request 0 */
#define SRC_GTMTOM01	(*( SRC_CPU0SBSRC_type *) 0xF0039B84U)	/* GTM TOM0 Shared Service Request 1 */
#define SRC_GTMTOM02	(*( SRC_CPU0SBSRC_type *) 0xF0039B88U)	/* GTM TOM0 Shared Service Request 2 */
#define SRC_GTMTOM03	(*( SRC_CPU0SBSRC_type *) 0xF0039B8CU)	/* GTM TOM0 Shared Service Request 3 */
#define SRC_GTMTOM04	(*( SRC_CPU0SBSRC_type *) 0xF0039B90U)	/* GTM TOM0 Shared Service Request 4 */
#define SRC_GTMTOM05	(*( SRC_CPU0SBSRC_type *) 0xF0039B94U)	/* GTM TOM0 Shared Service Request 5 */
#define SRC_GTMTOM06	(*( SRC_CPU0SBSRC_type *) 0xF0039B98U)	/* GTM TOM0 Shared Service Request 6 */
#define SRC_GTMTOM07	(*( SRC_CPU0SBSRC_type *) 0xF0039B9CU)	/* GTM TOM0 Shared Service Request 7 */
#define SRC_GTMTOM10	(*( SRC_CPU0SBSRC_type *) 0xF0039BA0U)	/* GTM TOM1 Shared Service Request 0 */
#define SRC_GTMTOM11	(*( SRC_CPU0SBSRC_type *) 0xF0039BA4U)	/* GTM TOM1 Shared Service Request 1 */
#define SRC_GTMTOM12	(*( SRC_CPU0SBSRC_type *) 0xF0039BA8U)	/* GTM TOM1 Shared Service Request 2 */
#define SRC_GTMTOM13	(*( SRC_CPU0SBSRC_type *) 0xF0039BACU)	/* GTM TOM1 Shared Service Request 3 */
#define SRC_GTMTOM14	(*( SRC_CPU0SBSRC_type *) 0xF0039BB0U)	/* GTM TOM1 Shared Service Request 4 */
#define SRC_GTMTOM15	(*( SRC_CPU0SBSRC_type *) 0xF0039BB4U)	/* GTM TOM1 Shared Service Request 5 */
#define SRC_GTMTOM16	(*( SRC_CPU0SBSRC_type *) 0xF0039BB8U)	/* GTM TOM1 Shared Service Request 6 */
#define SRC_GTMTOM17	(*( SRC_CPU0SBSRC_type *) 0xF0039BBCU)	/* GTM TOM1 Shared Service Request 7 */
#define DMA_CLC	(*( DMA_CLC_type *) 0xF0010000U)	/* DMA Clock Control Register */
#define DMA_ID	(*( XBAR_ID_type *) 0xF0010008U)	/* Module Identification Register */
#define DMA_MEMCON	(*( DMA_MEMCON_type *) 0xF0010020U)	/* DMA Memory Control Register */
#define DMA_ACCEN00	(*( XBAR_ACCEN0_type *) 0xF0010040U)	/* DMA Hardware Resource 0 Access Enable Register 0 */
#define DMA_ACCEN10	(*( XBAR_ACCEN0_type *) 0xF0010048U)	/* DMA Hardware Resource 1 Access Enable Register 0 */
#define DMA_ACCEN20	(*( XBAR_ACCEN0_type *) 0xF0010050U)	/* DMA Hardware Resource 2 Access Enable Register 0 */
#define DMA_ACCEN30	(*( XBAR_ACCEN0_type *) 0xF0010058U)	/* DMA Hardware Resource 3 Access Enable Register 0 */
#define DMA_ACCEN01	(*( CPU0_SPROT_RGNACCENB0_type *) 0xF0010044U)	/* DMA Hardware Resource 0 Access Enable Register 1 */
#define DMA_ACCEN11	(*( CPU0_SPROT_RGNACCENB0_type *) 0xF001004CU)	/* DMA Hardware Resource 1 Access Enable Register 1 */
#define DMA_ACCEN21	(*( CPU0_SPROT_RGNACCENB0_type *) 0xF0010054U)	/* DMA Hardware Resource 2 Access Enable Register 1 */
#define DMA_ACCEN31	(*( CPU0_SPROT_RGNACCENB0_type *) 0xF001005CU)	/* DMA Hardware Resource 3 Access Enable Register 1 */
#define DMA_EER0	(*( DMA_EER0_type *) 0xF0010120U)	/* DMA Enable Error Register 0 */
#define DMA_EER1	(*( DMA_EER0_type *) 0xF0011120U)	/* DMA Enable Error Register 1 */
#define DMA_ERRSR0	(*( DMA_ERRSR0_type *) 0xF0010124U)	/* DMA Error Status Register 0 */
#define DMA_ERRSR1	(*( DMA_ERRSR0_type *) 0xF0011124U)	/* DMA Error Status Register 1 */
#define DMA_CLRE0	(*( DMA_CLRE0_type *) 0xF0010128U)	/* DMA Clear Error Register 0 */
#define DMA_CLRE1	(*( DMA_CLRE0_type *) 0xF0011128U)	/* DMA Clear Error Register 1 */
#define DMA_ME0SR	(*( DMA_ME0SR_type *) 0xF0010130U)	/* DMA Move Engine 0 Status Register */
#define DMA_ME1SR	(*( DMA_ME0SR_type *) 0xF0011130U)	/* DMA Move Engine 1 Status Register */
#define DMA_ME00R	(*( DMA_ME00R_type *) 0xF0010140U)	/* DMA Move Engine 0 Read Register 0 */
#define DMA_ME10R	(*( DMA_ME00R_type *) 0xF0011140U)	/* DMA Move Engine 1 Read Register 0 */
#define DMA_ME01R	(*( DMA_ME01R_type *) 0xF0010144U)	/* DMA Move Engine 0 Read Register 1 */
#define DMA_ME11R	(*( DMA_ME01R_type *) 0xF0011144U)	/* DMA Move Engine 1 Read Register 1 */
#define DMA_ME02R	(*( DMA_ME02R_type *) 0xF0010148U)	/* DMA Move Engine 0 Read Register 2 */
#define DMA_ME12R	(*( DMA_ME02R_type *) 0xF0011148U)	/* DMA Move Engine 1 Read Register 2 */
#define DMA_ME03R	(*( DMA_ME03R_type *) 0xF001014CU)	/* DMA Move Engine 0 Read Register 3 */
#define DMA_ME13R	(*( DMA_ME03R_type *) 0xF001114CU)	/* DMA Move Engine 1 Read Register 3 */
#define DMA_ME04R	(*( DMA_ME04R_type *) 0xF0010150U)	/* DMA Move Engine 0 Read Register 4 */
#define DMA_ME14R	(*( DMA_ME04R_type *) 0xF0011150U)	/* DMA Move Engine 1 Read Register 4 */
#define DMA_ME05R	(*( DMA_ME05R_type *) 0xF0010154U)	/* DMA Move Engine 0 Read Register 5 */
#define DMA_ME15R	(*( DMA_ME05R_type *) 0xF0011154U)	/* DMA Move Engine 1 Read Register 5 */
#define DMA_ME06R	(*( DMA_ME06R_type *) 0xF0010158U)	/* DMA Move Engine 0 Read Register 6 */
#define DMA_ME16R	(*( DMA_ME06R_type *) 0xF0011158U)	/* DMA Move Engine 1 Read Register 6 */
#define DMA_ME07R	(*( DMA_ME07R_type *) 0xF001015CU)	/* DMA Move Engine 0 Read Register 7 */
#define DMA_ME17R	(*( DMA_ME07R_type *) 0xF001115CU)	/* DMA Move Engine 1 Read Register 7 */
#define DMA_ME0CHSR	(*( DMA_ME0CHSR_type *) 0xF001019CU)	/* DMA Move Engine 0 Channel Status Register */
#define DMA_ME1CHSR	(*( DMA_ME0CHSR_type *) 0xF001119CU)	/* DMA Move Engine 1 Channel Status Register */
#define DMA_ME0SHADR	(*( DMA_ME0SHADR_type *) 0xF0010198U)	/* DMA Move Engine 0 Channel Shadow Address Register */
#define DMA_ME1SHADR	(*( DMA_ME0SHADR_type *) 0xF0011198U)	/* DMA Move Engine 1 Channel Shadow Address Register */
#define DMA_ME0CHCR	(*( DMA_ME0CHCR_type *) 0xF0010194U)	/* DMA Move Engine 0 Channel Control Register */
#define DMA_ME1CHCR	(*( DMA_ME0CHCR_type *) 0xF0011194U)	/* DMA Move Engine 1 Channel Control Register */
#define DMA_ME0ADICR	(*( DMA_ME0ADICR_type *) 0xF0010190U)	/* DMA Move Engine 0 Channel Address and Interrupt Control Register */
#define DMA_ME1ADICR	(*( DMA_ME0ADICR_type *) 0xF0011190U)	/* DMA Move Engine 1 Channel Address and Interrupt Control Register */
#define DMA_ME0DADR	(*( DMA_ME0DADR_type *) 0xF001018CU)	/* DMA Move Engine 0 Channel Destination Address Register x */
#define DMA_ME1DADR	(*( DMA_ME0DADR_type *) 0xF001118CU)	/* DMA Move Engine 1 Channel Destination Address Register x */
#define DMA_ME0SADR	(*( DMA_ME0SADR_type *) 0xF0010188U)	/* DMA Move Engine 0 Channel Source Address Register */
#define DMA_ME1SADR	(*( DMA_ME0SADR_type *) 0xF0011188U)	/* DMA Move Engine 1 Channel Source Address Register */
#define DMA_ME0SDCRC	(*( DMA_ME0SDCRC_type *) 0xF0010184U)	/* DMA Move Engine 0 Channel Source and Destination Address CRC Register */
#define DMA_ME1SDCRC	(*( DMA_ME0SDCRC_type *) 0xF0011184U)	/* DMA Move Engine 1 Channel Source and Destination Address CRC Register */
#define DMA_ME0RDCRC	(*( DMA_ME0RDCRC_type *) 0xF0010180U)	/* DMA Move Engine 0 Channel Read Data CRC Register */
#define DMA_ME1RDCRC	(*( DMA_ME0RDCRC_type *) 0xF0011180U)	/* DMA Move Engine 1 Channel Read Data CRC Register */
#define DMA_OTSS	(*( DMA_OTSS_type *) 0xF0011200U)	/* DMA OCDS Trigger Set Select */
#define DMA_ERRINTR	(*( DMA_ERRINTR_type *) 0xF0011204U)	/* DMA Error Interrupt Set Register */
#define DMA_PRR0	(*( DMA_PRR0_type *) 0xF0011208U)	/* Pattern Read Register 0 */
#define DMA_PRR1	(*( DMA_PRR1_type *) 0xF001120CU)	/* Pattern Read Register 1 */
#define DMA_TIME	(*( DMA_TIME_type *) 0xF0011210U)	/* Time Register */
#define DMA_MODE0	(*( DMA_MODE0_type *) 0xF0011300U)	/* DMA Mode Register 0 */
#define DMA_MODE1	(*( DMA_MODE0_type *) 0xF0011304U)	/* DMA Mode Register 1 */
#define DMA_MODE2	(*( DMA_MODE0_type *) 0xF0011308U)	/* DMA Mode Register 2 */
#define DMA_MODE3	(*( DMA_MODE0_type *) 0xF001130CU)	/* DMA Mode Register 3 */
#define DMA_HRR000	(*( DMA_HRR000_type *) 0xF0011800U)	/* DMA Channel Hardware Resource Register 000 */
#define DMA_HRR001	(*( DMA_HRR000_type *) 0xF0011804U)	/* DMA Channel Hardware Resource Register 001 */
#define DMA_HRR002	(*( DMA_HRR000_type *) 0xF0011808U)	/* DMA Channel Hardware Resource Register 002 */
#define DMA_HRR003	(*( DMA_HRR000_type *) 0xF001180CU)	/* DMA Channel Hardware Resource Register 003 */
#define DMA_HRR004	(*( DMA_HRR000_type *) 0xF0011810U)	/* DMA Channel Hardware Resource Register 004 */
#define DMA_HRR005	(*( DMA_HRR000_type *) 0xF0011814U)	/* DMA Channel Hardware Resource Register 005 */
#define DMA_HRR006	(*( DMA_HRR000_type *) 0xF0011818U)	/* DMA Channel Hardware Resource Register 006 */
#define DMA_HRR007	(*( DMA_HRR000_type *) 0xF001181CU)	/* DMA Channel Hardware Resource Register 007 */
#define DMA_HRR008	(*( DMA_HRR000_type *) 0xF0011820U)	/* DMA Channel Hardware Resource Register 008 */
#define DMA_HRR009	(*( DMA_HRR000_type *) 0xF0011824U)	/* DMA Channel Hardware Resource Register 009 */
#define DMA_HRR010	(*( DMA_HRR000_type *) 0xF0011828U)	/* DMA Channel Hardware Resource Register 010 */
#define DMA_HRR011	(*( DMA_HRR000_type *) 0xF001182CU)	/* DMA Channel Hardware Resource Register 011 */
#define DMA_HRR012	(*( DMA_HRR000_type *) 0xF0011830U)	/* DMA Channel Hardware Resource Register 012 */
#define DMA_HRR013	(*( DMA_HRR000_type *) 0xF0011834U)	/* DMA Channel Hardware Resource Register 013 */
#define DMA_HRR014	(*( DMA_HRR000_type *) 0xF0011838U)	/* DMA Channel Hardware Resource Register 014 */
#define DMA_HRR015	(*( DMA_HRR000_type *) 0xF001183CU)	/* DMA Channel Hardware Resource Register 015 */
#define DMA_SUSENR000	(*( DMA_SUSENR000_type *) 0xF0011A00U)	/* DMA Suspend Enable Register 000 */
#define DMA_SUSENR001	(*( DMA_SUSENR000_type *) 0xF0011A04U)	/* DMA Suspend Enable Register 001 */
#define DMA_SUSENR002	(*( DMA_SUSENR000_type *) 0xF0011A08U)	/* DMA Suspend Enable Register 002 */
#define DMA_SUSENR003	(*( DMA_SUSENR000_type *) 0xF0011A0CU)	/* DMA Suspend Enable Register 003 */
#define DMA_SUSENR004	(*( DMA_SUSENR000_type *) 0xF0011A10U)	/* DMA Suspend Enable Register 004 */
#define DMA_SUSENR005	(*( DMA_SUSENR000_type *) 0xF0011A14U)	/* DMA Suspend Enable Register 005 */
#define DMA_SUSENR006	(*( DMA_SUSENR000_type *) 0xF0011A18U)	/* DMA Suspend Enable Register 006 */
#define DMA_SUSENR007	(*( DMA_SUSENR000_type *) 0xF0011A1CU)	/* DMA Suspend Enable Register 007 */
#define DMA_SUSENR008	(*( DMA_SUSENR000_type *) 0xF0011A20U)	/* DMA Suspend Enable Register 008 */
#define DMA_SUSENR009	(*( DMA_SUSENR000_type *) 0xF0011A24U)	/* DMA Suspend Enable Register 009 */
#define DMA_SUSENR010	(*( DMA_SUSENR000_type *) 0xF0011A28U)	/* DMA Suspend Enable Register 010 */
#define DMA_SUSENR011	(*( DMA_SUSENR000_type *) 0xF0011A2CU)	/* DMA Suspend Enable Register 011 */
#define DMA_SUSENR012	(*( DMA_SUSENR000_type *) 0xF0011A30U)	/* DMA Suspend Enable Register 012 */
#define DMA_SUSENR013	(*( DMA_SUSENR000_type *) 0xF0011A34U)	/* DMA Suspend Enable Register 013 */
#define DMA_SUSENR014	(*( DMA_SUSENR000_type *) 0xF0011A38U)	/* DMA Suspend Enable Register 014 */
#define DMA_SUSENR015	(*( DMA_SUSENR000_type *) 0xF0011A3CU)	/* DMA Suspend Enable Register 015 */
#define DMA_SUSACR000	(*( DMA_SUSACR000_type *) 0xF0011C00U)	/* DMA Suspend Acknowledge Register 000 */
#define DMA_SUSACR001	(*( DMA_SUSACR000_type *) 0xF0011C04U)	/* DMA Suspend Acknowledge Register 001 */
#define DMA_SUSACR002	(*( DMA_SUSACR000_type *) 0xF0011C08U)	/* DMA Suspend Acknowledge Register 002 */
#define DMA_SUSACR003	(*( DMA_SUSACR000_type *) 0xF0011C0CU)	/* DMA Suspend Acknowledge Register 003 */
#define DMA_SUSACR004	(*( DMA_SUSACR000_type *) 0xF0011C10U)	/* DMA Suspend Acknowledge Register 004 */
#define DMA_SUSACR005	(*( DMA_SUSACR000_type *) 0xF0011C14U)	/* DMA Suspend Acknowledge Register 005 */
#define DMA_SUSACR006	(*( DMA_SUSACR000_type *) 0xF0011C18U)	/* DMA Suspend Acknowledge Register 006 */
#define DMA_SUSACR007	(*( DMA_SUSACR000_type *) 0xF0011C1CU)	/* DMA Suspend Acknowledge Register 007 */
#define DMA_SUSACR008	(*( DMA_SUSACR000_type *) 0xF0011C20U)	/* DMA Suspend Acknowledge Register 008 */
#define DMA_SUSACR009	(*( DMA_SUSACR000_type *) 0xF0011C24U)	/* DMA Suspend Acknowledge Register 009 */
#define DMA_SUSACR010	(*( DMA_SUSACR000_type *) 0xF0011C28U)	/* DMA Suspend Acknowledge Register 010 */
#define DMA_SUSACR011	(*( DMA_SUSACR000_type *) 0xF0011C2CU)	/* DMA Suspend Acknowledge Register 011 */
#define DMA_SUSACR012	(*( DMA_SUSACR000_type *) 0xF0011C30U)	/* DMA Suspend Acknowledge Register 012 */
#define DMA_SUSACR013	(*( DMA_SUSACR000_type *) 0xF0011C34U)	/* DMA Suspend Acknowledge Register 013 */
#define DMA_SUSACR014	(*( DMA_SUSACR000_type *) 0xF0011C38U)	/* DMA Suspend Acknowledge Register 014 */
#define DMA_SUSACR015	(*( DMA_SUSACR000_type *) 0xF0011C3CU)	/* DMA Suspend Acknowledge Register 015 */
#define DMA_TSR000	(*( DMA_TSR000_type *) 0xF0011E00U)	/* DMA Transaction State Register 000 */
#define DMA_TSR001	(*( DMA_TSR000_type *) 0xF0011E04U)	/* DMA Transaction State Register 001 */
#define DMA_TSR002	(*( DMA_TSR000_type *) 0xF0011E08U)	/* DMA Transaction State Register 002 */
#define DMA_TSR003	(*( DMA_TSR000_type *) 0xF0011E0CU)	/* DMA Transaction State Register 003 */
#define DMA_TSR004	(*( DMA_TSR000_type *) 0xF0011E10U)	/* DMA Transaction State Register 004 */
#define DMA_TSR005	(*( DMA_TSR000_type *) 0xF0011E14U)	/* DMA Transaction State Register 005 */
#define DMA_TSR006	(*( DMA_TSR000_type *) 0xF0011E18U)	/* DMA Transaction State Register 006 */
#define DMA_TSR007	(*( DMA_TSR000_type *) 0xF0011E1CU)	/* DMA Transaction State Register 007 */
#define DMA_TSR008	(*( DMA_TSR000_type *) 0xF0011E20U)	/* DMA Transaction State Register 008 */
#define DMA_TSR009	(*( DMA_TSR000_type *) 0xF0011E24U)	/* DMA Transaction State Register 009 */
#define DMA_TSR010	(*( DMA_TSR000_type *) 0xF0011E28U)	/* DMA Transaction State Register 010 */
#define DMA_TSR011	(*( DMA_TSR000_type *) 0xF0011E2CU)	/* DMA Transaction State Register 011 */
#define DMA_TSR012	(*( DMA_TSR000_type *) 0xF0011E30U)	/* DMA Transaction State Register 012 */
#define DMA_TSR013	(*( DMA_TSR000_type *) 0xF0011E34U)	/* DMA Transaction State Register 013 */
#define DMA_TSR014	(*( DMA_TSR000_type *) 0xF0011E38U)	/* DMA Transaction State Register 014 */
#define DMA_TSR015	(*( DMA_TSR000_type *) 0xF0011E3CU)	/* DMA Transaction State Register 015 */
#define DMA_RDCRCR000	(*( DMA_ME0RDCRC_type *) 0xF0012000U)	/* DMA Channel Read Data CRC Register 000 */
#define DMA_RDCRCR001	(*( DMA_ME0RDCRC_type *) 0xF0012020U)	/* DMA Channel Read Data CRC Register 001 */
#define DMA_RDCRCR002	(*( DMA_ME0RDCRC_type *) 0xF0012040U)	/* DMA Channel Read Data CRC Register 002 */
#define DMA_RDCRCR003	(*( DMA_ME0RDCRC_type *) 0xF0012060U)	/* DMA Channel Read Data CRC Register 003 */
#define DMA_RDCRCR004	(*( DMA_ME0RDCRC_type *) 0xF0012080U)	/* DMA Channel Read Data CRC Register 004 */
#define DMA_RDCRCR005	(*( DMA_ME0RDCRC_type *) 0xF00120A0U)	/* DMA Channel Read Data CRC Register 005 */
#define DMA_RDCRCR006	(*( DMA_ME0RDCRC_type *) 0xF00120C0U)	/* DMA Channel Read Data CRC Register 006 */
#define DMA_RDCRCR007	(*( DMA_ME0RDCRC_type *) 0xF00120E0U)	/* DMA Channel Read Data CRC Register 007 */
#define DMA_RDCRCR008	(*( DMA_ME0RDCRC_type *) 0xF0012100U)	/* DMA Channel Read Data CRC Register 008 */
#define DMA_RDCRCR009	(*( DMA_ME0RDCRC_type *) 0xF0012120U)	/* DMA Channel Read Data CRC Register 009 */
#define DMA_RDCRCR010	(*( DMA_ME0RDCRC_type *) 0xF0012140U)	/* DMA Channel Read Data CRC Register 010 */
#define DMA_RDCRCR011	(*( DMA_ME0RDCRC_type *) 0xF0012160U)	/* DMA Channel Read Data CRC Register 011 */
#define DMA_RDCRCR012	(*( DMA_ME0RDCRC_type *) 0xF0012180U)	/* DMA Channel Read Data CRC Register 012 */
#define DMA_RDCRCR013	(*( DMA_ME0RDCRC_type *) 0xF00121A0U)	/* DMA Channel Read Data CRC Register 013 */
#define DMA_RDCRCR014	(*( DMA_ME0RDCRC_type *) 0xF00121C0U)	/* DMA Channel Read Data CRC Register 014 */
#define DMA_RDCRCR015	(*( DMA_ME0RDCRC_type *) 0xF00121E0U)	/* DMA Channel Read Data CRC Register 015 */
#define DMA_SDCRCR000	(*( DMA_ME0SDCRC_type *) 0xF0012004U)	/* DMA Channel Source and Destination Address CRC Register 000 */
#define DMA_SDCRCR001	(*( DMA_ME0SDCRC_type *) 0xF0012024U)	/* DMA Channel Source and Destination Address CRC Register 001 */
#define DMA_SDCRCR002	(*( DMA_ME0SDCRC_type *) 0xF0012044U)	/* DMA Channel Source and Destination Address CRC Register 002 */
#define DMA_SDCRCR003	(*( DMA_ME0SDCRC_type *) 0xF0012064U)	/* DMA Channel Source and Destination Address CRC Register 003 */
#define DMA_SDCRCR004	(*( DMA_ME0SDCRC_type *) 0xF0012084U)	/* DMA Channel Source and Destination Address CRC Register 004 */
#define DMA_SDCRCR005	(*( DMA_ME0SDCRC_type *) 0xF00120A4U)	/* DMA Channel Source and Destination Address CRC Register 005 */
#define DMA_SDCRCR006	(*( DMA_ME0SDCRC_type *) 0xF00120C4U)	/* DMA Channel Source and Destination Address CRC Register 006 */
#define DMA_SDCRCR007	(*( DMA_ME0SDCRC_type *) 0xF00120E4U)	/* DMA Channel Source and Destination Address CRC Register 007 */
#define DMA_SDCRCR008	(*( DMA_ME0SDCRC_type *) 0xF0012104U)	/* DMA Channel Source and Destination Address CRC Register 008 */
#define DMA_SDCRCR009	(*( DMA_ME0SDCRC_type *) 0xF0012124U)	/* DMA Channel Source and Destination Address CRC Register 009 */
#define DMA_SDCRCR010	(*( DMA_ME0SDCRC_type *) 0xF0012144U)	/* DMA Channel Source and Destination Address CRC Register 010 */
#define DMA_SDCRCR011	(*( DMA_ME0SDCRC_type *) 0xF0012164U)	/* DMA Channel Source and Destination Address CRC Register 011 */
#define DMA_SDCRCR012	(*( DMA_ME0SDCRC_type *) 0xF0012184U)	/* DMA Channel Source and Destination Address CRC Register 012 */
#define DMA_SDCRCR013	(*( DMA_ME0SDCRC_type *) 0xF00121A4U)	/* DMA Channel Source and Destination Address CRC Register 013 */
#define DMA_SDCRCR014	(*( DMA_ME0SDCRC_type *) 0xF00121C4U)	/* DMA Channel Source and Destination Address CRC Register 014 */
#define DMA_SDCRCR015	(*( DMA_ME0SDCRC_type *) 0xF00121E4U)	/* DMA Channel Source and Destination Address CRC Register 015 */
#define DMA_SADR000	(*( DMA_SADR000_type *) 0xF0012008U)	/* DMA Channel Source Address Register 000 */
#define DMA_SADR001	(*( DMA_SADR000_type *) 0xF0012028U)	/* DMA Channel Source Address Register 001 */
#define DMA_SADR002	(*( DMA_SADR000_type *) 0xF0012048U)	/* DMA Channel Source Address Register 002 */
#define DMA_SADR003	(*( DMA_SADR000_type *) 0xF0012068U)	/* DMA Channel Source Address Register 003 */
#define DMA_SADR004	(*( DMA_SADR000_type *) 0xF0012088U)	/* DMA Channel Source Address Register 004 */
#define DMA_SADR005	(*( DMA_SADR000_type *) 0xF00120A8U)	/* DMA Channel Source Address Register 005 */
#define DMA_SADR006	(*( DMA_SADR000_type *) 0xF00120C8U)	/* DMA Channel Source Address Register 006 */
#define DMA_SADR007	(*( DMA_SADR000_type *) 0xF00120E8U)	/* DMA Channel Source Address Register 007 */
#define DMA_SADR008	(*( DMA_SADR000_type *) 0xF0012108U)	/* DMA Channel Source Address Register 008 */
#define DMA_SADR009	(*( DMA_SADR000_type *) 0xF0012128U)	/* DMA Channel Source Address Register 009 */
#define DMA_SADR010	(*( DMA_SADR000_type *) 0xF0012148U)	/* DMA Channel Source Address Register 010 */
#define DMA_SADR011	(*( DMA_SADR000_type *) 0xF0012168U)	/* DMA Channel Source Address Register 011 */
#define DMA_SADR012	(*( DMA_SADR000_type *) 0xF0012188U)	/* DMA Channel Source Address Register 012 */
#define DMA_SADR013	(*( DMA_SADR000_type *) 0xF00121A8U)	/* DMA Channel Source Address Register 013 */
#define DMA_SADR014	(*( DMA_SADR000_type *) 0xF00121C8U)	/* DMA Channel Source Address Register 014 */
#define DMA_SADR015	(*( DMA_SADR000_type *) 0xF00121E8U)	/* DMA Channel Source Address Register 015 */
#define DMA_DADR000	(*( DMA_ME0DADR_type *) 0xF001200CU)	/* DMA Channel Destination Address Register x */
#define DMA_DADR001	(*( DMA_ME0DADR_type *) 0xF001202CU)	/* DMA Channel Destination Address Register x */
#define DMA_DADR002	(*( DMA_ME0DADR_type *) 0xF001204CU)	/* DMA Channel Destination Address Register x */
#define DMA_DADR003	(*( DMA_ME0DADR_type *) 0xF001206CU)	/* DMA Channel Destination Address Register x */
#define DMA_DADR004	(*( DMA_ME0DADR_type *) 0xF001208CU)	/* DMA Channel Destination Address Register x */
#define DMA_DADR005	(*( DMA_ME0DADR_type *) 0xF00120ACU)	/* DMA Channel Destination Address Register x */
#define DMA_DADR006	(*( DMA_ME0DADR_type *) 0xF00120CCU)	/* DMA Channel Destination Address Register x */
#define DMA_DADR007	(*( DMA_ME0DADR_type *) 0xF00120ECU)	/* DMA Channel Destination Address Register x */
#define DMA_DADR008	(*( DMA_ME0DADR_type *) 0xF001210CU)	/* DMA Channel Destination Address Register x */
#define DMA_DADR009	(*( DMA_ME0DADR_type *) 0xF001212CU)	/* DMA Channel Destination Address Register x */
#define DMA_DADR010	(*( DMA_ME0DADR_type *) 0xF001214CU)	/* DMA Channel Destination Address Register x */
#define DMA_DADR011	(*( DMA_ME0DADR_type *) 0xF001216CU)	/* DMA Channel Destination Address Register x */
#define DMA_DADR012	(*( DMA_ME0DADR_type *) 0xF001218CU)	/* DMA Channel Destination Address Register x */
#define DMA_DADR013	(*( DMA_ME0DADR_type *) 0xF00121ACU)	/* DMA Channel Destination Address Register x */
#define DMA_DADR014	(*( DMA_ME0DADR_type *) 0xF00121CCU)	/* DMA Channel Destination Address Register x */
#define DMA_DADR015	(*( DMA_ME0DADR_type *) 0xF00121ECU)	/* DMA Channel Destination Address Register x */
#define DMA_ADICR000	(*( DMA_ME0ADICR_type *) 0xF0012010U)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR001	(*( DMA_ME0ADICR_type *) 0xF0012030U)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR002	(*( DMA_ME0ADICR_type *) 0xF0012050U)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR003	(*( DMA_ME0ADICR_type *) 0xF0012070U)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR004	(*( DMA_ME0ADICR_type *) 0xF0012090U)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR005	(*( DMA_ME0ADICR_type *) 0xF00120B0U)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR006	(*( DMA_ME0ADICR_type *) 0xF00120D0U)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR007	(*( DMA_ME0ADICR_type *) 0xF00120F0U)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR008	(*( DMA_ME0ADICR_type *) 0xF0012110U)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR009	(*( DMA_ME0ADICR_type *) 0xF0012130U)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR010	(*( DMA_ME0ADICR_type *) 0xF0012150U)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR011	(*( DMA_ME0ADICR_type *) 0xF0012170U)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR012	(*( DMA_ME0ADICR_type *) 0xF0012190U)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR013	(*( DMA_ME0ADICR_type *) 0xF00121B0U)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR014	(*( DMA_ME0ADICR_type *) 0xF00121D0U)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_ADICR015	(*( DMA_ME0ADICR_type *) 0xF00121F0U)	/* DMA Channel Address and Interrupt Control Register x */
#define DMA_CHCFGR000	(*( DMA_ME0CHCR_type *) 0xF0012014U)	/* DMA Channel Configuration Register 000 */
#define DMA_CHCFGR001	(*( DMA_ME0CHCR_type *) 0xF0012034U)	/* DMA Channel Configuration Register 001 */
#define DMA_CHCFGR002	(*( DMA_ME0CHCR_type *) 0xF0012054U)	/* DMA Channel Configuration Register 002 */
#define DMA_CHCFGR003	(*( DMA_ME0CHCR_type *) 0xF0012074U)	/* DMA Channel Configuration Register 003 */
#define DMA_CHCFGR004	(*( DMA_ME0CHCR_type *) 0xF0012094U)	/* DMA Channel Configuration Register 004 */
#define DMA_CHCFGR005	(*( DMA_ME0CHCR_type *) 0xF00120B4U)	/* DMA Channel Configuration Register 005 */
#define DMA_CHCFGR006	(*( DMA_ME0CHCR_type *) 0xF00120D4U)	/* DMA Channel Configuration Register 006 */
#define DMA_CHCFGR007	(*( DMA_ME0CHCR_type *) 0xF00120F4U)	/* DMA Channel Configuration Register 007 */
#define DMA_CHCFGR008	(*( DMA_ME0CHCR_type *) 0xF0012114U)	/* DMA Channel Configuration Register 008 */
#define DMA_CHCFGR009	(*( DMA_ME0CHCR_type *) 0xF0012134U)	/* DMA Channel Configuration Register 009 */
#define DMA_CHCFGR010	(*( DMA_ME0CHCR_type *) 0xF0012154U)	/* DMA Channel Configuration Register 010 */
#define DMA_CHCFGR011	(*( DMA_ME0CHCR_type *) 0xF0012174U)	/* DMA Channel Configuration Register 011 */
#define DMA_CHCFGR012	(*( DMA_ME0CHCR_type *) 0xF0012194U)	/* DMA Channel Configuration Register 012 */
#define DMA_CHCFGR013	(*( DMA_ME0CHCR_type *) 0xF00121B4U)	/* DMA Channel Configuration Register 013 */
#define DMA_CHCFGR014	(*( DMA_ME0CHCR_type *) 0xF00121D4U)	/* DMA Channel Configuration Register 014 */
#define DMA_CHCFGR015	(*( DMA_ME0CHCR_type *) 0xF00121F4U)	/* DMA Channel Configuration Register 015 */
#define DMA_SHADR000	(*( DMA_ME0SHADR_type *) 0xF0012018U)	/* DMA Channel Shadow Address Register 000 */
#define DMA_SHADR001	(*( DMA_ME0SHADR_type *) 0xF0012038U)	/* DMA Channel Shadow Address Register 001 */
#define DMA_SHADR002	(*( DMA_ME0SHADR_type *) 0xF0012058U)	/* DMA Channel Shadow Address Register 002 */
#define DMA_SHADR003	(*( DMA_ME0SHADR_type *) 0xF0012078U)	/* DMA Channel Shadow Address Register 003 */
#define DMA_SHADR004	(*( DMA_ME0SHADR_type *) 0xF0012098U)	/* DMA Channel Shadow Address Register 004 */
#define DMA_SHADR005	(*( DMA_ME0SHADR_type *) 0xF00120B8U)	/* DMA Channel Shadow Address Register 005 */
#define DMA_SHADR006	(*( DMA_ME0SHADR_type *) 0xF00120D8U)	/* DMA Channel Shadow Address Register 006 */
#define DMA_SHADR007	(*( DMA_ME0SHADR_type *) 0xF00120F8U)	/* DMA Channel Shadow Address Register 007 */
#define DMA_SHADR008	(*( DMA_ME0SHADR_type *) 0xF0012118U)	/* DMA Channel Shadow Address Register 008 */
#define DMA_SHADR009	(*( DMA_ME0SHADR_type *) 0xF0012138U)	/* DMA Channel Shadow Address Register 009 */
#define DMA_SHADR010	(*( DMA_ME0SHADR_type *) 0xF0012158U)	/* DMA Channel Shadow Address Register 010 */
#define DMA_SHADR011	(*( DMA_ME0SHADR_type *) 0xF0012178U)	/* DMA Channel Shadow Address Register 011 */
#define DMA_SHADR012	(*( DMA_ME0SHADR_type *) 0xF0012198U)	/* DMA Channel Shadow Address Register 012 */
#define DMA_SHADR013	(*( DMA_ME0SHADR_type *) 0xF00121B8U)	/* DMA Channel Shadow Address Register 013 */
#define DMA_SHADR014	(*( DMA_ME0SHADR_type *) 0xF00121D8U)	/* DMA Channel Shadow Address Register 014 */
#define DMA_SHADR015	(*( DMA_ME0SHADR_type *) 0xF00121F8U)	/* DMA Channel Shadow Address Register 015 */
#define DMA_CHCSR000	(*( DMA_CHCSR000_type *) 0xF001201CU)	/* DMARAM Channel Control and Status Register 000 */
#define DMA_CHCSR001	(*( DMA_CHCSR000_type *) 0xF001203CU)	/* DMARAM Channel Control and Status Register 001 */
#define DMA_CHCSR002	(*( DMA_CHCSR000_type *) 0xF001205CU)	/* DMARAM Channel Control and Status Register 002 */
#define DMA_CHCSR003	(*( DMA_CHCSR000_type *) 0xF001207CU)	/* DMARAM Channel Control and Status Register 003 */
#define DMA_CHCSR004	(*( DMA_CHCSR000_type *) 0xF001209CU)	/* DMARAM Channel Control and Status Register 004 */
#define DMA_CHCSR005	(*( DMA_CHCSR000_type *) 0xF00120BCU)	/* DMARAM Channel Control and Status Register 005 */
#define DMA_CHCSR006	(*( DMA_CHCSR000_type *) 0xF00120DCU)	/* DMARAM Channel Control and Status Register 006 */
#define DMA_CHCSR007	(*( DMA_CHCSR000_type *) 0xF00120FCU)	/* DMARAM Channel Control and Status Register 007 */
#define DMA_CHCSR008	(*( DMA_CHCSR000_type *) 0xF001211CU)	/* DMARAM Channel Control and Status Register 008 */
#define DMA_CHCSR009	(*( DMA_CHCSR000_type *) 0xF001213CU)	/* DMARAM Channel Control and Status Register 009 */
#define DMA_CHCSR010	(*( DMA_CHCSR000_type *) 0xF001215CU)	/* DMARAM Channel Control and Status Register 010 */
#define DMA_CHCSR011	(*( DMA_CHCSR000_type *) 0xF001217CU)	/* DMARAM Channel Control and Status Register 011 */
#define DMA_CHCSR012	(*( DMA_CHCSR000_type *) 0xF001219CU)	/* DMARAM Channel Control and Status Register 012 */
#define DMA_CHCSR013	(*( DMA_CHCSR000_type *) 0xF00121BCU)	/* DMARAM Channel Control and Status Register 013 */
#define DMA_CHCSR014	(*( DMA_CHCSR000_type *) 0xF00121DCU)	/* DMARAM Channel Control and Status Register 014 */
#define DMA_CHCSR015	(*( DMA_CHCSR000_type *) 0xF00121FCU)	/* DMARAM Channel Control and Status Register 015 */
#define PMU0_ID	(*( XBAR_ID_type *) 0xF8000508U)	/* PMU0 Identification Register */
#define FLASH0_ACCEN0	(*( XBAR_ACCEN0_type *) 0xF80023FCU)	/* Access Enable Register 0 */
#define FLASH0_ACCEN1	(*( CPU0_SPROT_RGNACCENB0_type *) 0xF80023F8U)	/* Access Enable Register 1 */
#define FLASH0_ID	(*( XBAR_ID_type *) 0xF8002008U)	/* Flash Module Identification Register */
#define FLASH0_FSR	(*( FLASH0_FSR_type *) 0xF8002010U)	/* Flash Status Register */
#define FLASH0_FCON	(*( FLASH0_FCON_type *) 0xF8002014U)	/* Flash Configuration Register */
#define FLASH0_FPRO	(*( FLASH0_FPRO_type *) 0xF800201CU)	/* Flash Protection Control and Status Register */
#define FLASH0_PROCONP0	(*( FLASH0_PROCONP0_type *) 0xF8002020U)	/* PFlash Protection Configuration PF0 */
#define FLASH0_PROCOND	(*( FLASH0_PROCOND_type *) 0xF8002030U)	/* DFlash Protection Configuration */
#define FLASH0_PROCONOTP0	(*( FLASH0_PROCONOTP0_type *) 0xF8002038U)	/* OTP Protection Configuration PF0 */
#define FLASH0_PROCONWOP0	(*( FLASH0_PROCONWOP0_type *) 0xF8002048U)	/* Write-Once Protection Configuration PF0 */
#define FLASH0_PROCONDBG	(*( FLASH0_PROCONDBG_type *) 0xF8002058U)	/* Debug Interface Protection Configuration */
#define FLASH0_PROCONHSMCOTP	(*( FLASH0_PROCONHSMCOTP_type *) 0xF8002034U)	/* HSM Code Flash OTP Protection Configuration */
#define FLASH0_PROCONHSM	(*( FLASH0_PROCONHSM_type *) 0xF800205CU)	/* HSM Interface Configuration */
#define FLASH0_RDBCFG00	(*( FLASH0_RDBCFG00_type *) 0xF8002060U)	/* Read Buffer Port 0 Cfg 0 */
#define FLASH0_RDBCFG01	(*( FLASH0_RDBCFG00_type *) 0xF8002064U)	/* Read Buffer Port 0 Cfg 1 */
#define FLASH0_RDBCFG02	(*( FLASH0_RDBCFG00_type *) 0xF8002068U)	/* Read Buffer Port 0 Cfg 2 */
#define FLASH0_RRCT	(*( FLASH0_RRCT_type *) 0xF8002140U)	/* Requested Read Control Register */
#define FLASH0_RRD0	(*( FLASH0_RRD0_type *) 0xF8002144U)	/* Requested Read Data Register 0 */
#define FLASH0_RRD1	(*( FLASH0_RRD0_type *) 0xF8002148U)	/* Requested Read Data Register 1 */
#define FLASH0_RRAD	(*( FLASH0_RRAD_type *) 0xF800214CU)	/* Requested Read Address Register */
#define FLASH0_ECCW	(*( FLASH0_ECCW_type *) 0xF8002090U)	/* ECC Write Register */
#define FLASH0_ECCRP0	(*( FLASH0_ECCRP0_type *) 0xF8002094U)	/* ECC Read Register PF0 */
#define FLASH0_ECCRD	(*( FLASH0_ECCRP0_type *) 0xF80020A4U)	/* ECC Read Register DF */
#define FLASH0_HSMFSR	(*( FLASH0_HSMFSR_type *) 0xF8002200U)	/* Flash Status Register */
#define FLASH0_HSMFCON	(*( FLASH0_HSMFCON_type *) 0xF8002204U)	/* HSM Flash Configuration Register */
#define FLASH0_HSMMARD	(*( FLASH0_HSMMARD_type *) 0xF8002208U)	/* Margin Control Register HSM DFlash */
#define FLASH0_HSMRRCT	(*( FLASH0_RRCT_type *) 0xF800220CU)	/* Requested Read Control Register HSM */
#define FLASH0_HSMRRD0	(*( FLASH0_RRD0_type *) 0xF8002210U)	/* HSM Requested Read Data Register 0 */
#define FLASH0_HSMRRD1	(*( FLASH0_RRD0_type *) 0xF8002214U)	/* HSM Requested Read Data Register 1 */
#define FLASH0_HSMRRAD	(*( FLASH0_RRAD_type *) 0xF8002218U)	/* HSM Requested Read Address Register */
#define FLASH0_MARP	(*( FLASH0_MARP_type *) 0xF80020A8U)	/* Margin Control Register PFlash */
#define FLASH0_MARD	(*( FLASH0_MARD_type *) 0xF80020ACU)	/* Margin Control Register DFlash */
#define FLASH0_CBABCFG0	(*( FLASH0_CBABCFG0_type *) 0xF80020B4U)	/* CBAB Configuration Port 0 */
#define FLASH0_CBABSTAT0	(*( FLASH0_CBABSTAT0_type *) 0xF80020B8U)	/* CBAB Status Port 0 */
#define FLASH0_CBABTOP0	(*( FLASH0_CBABTOP0_type *) 0xF80020BCU)	/* CBAB FIFO TOP Entry Port 0 */
#define FLASH0_UBABCFG0	(*( FLASH0_CBABCFG0_type *) 0xF80020E4U)	/* UBAB Configuration Port 0 */
#define FLASH0_UBABSTAT0	(*( FLASH0_UBABSTAT0_type *) 0xF80020E8U)	/* UBAB Status Port 0 */
#define FLASH0_UBABTOP0	(*( FLASH0_CBABTOP0_type *) 0xF80020ECU)	/* UBAB FIFO TOP Entry Port 0 */
#define FLASH0_COMM0	(*( FLASH0_COMM0_type *) 0xF8001000U)	/* FSI Communication Register 0 */
#define FLASH0_COMM1	(*( FLASH0_COMM1_type *) 0xF8001004U)	/* FSI Communication Register 1 */
#define FLASH0_COMM2	(*( FLASH0_COMM1_type *) 0xF8001008U)	/* FSI Communication Register 2 */
#define LMU_CLC	(*( LMU_CLC_type *) 0xF8700800U)	/* LMU Clock Control Register */
#define LMU_MODID	(*( LMU_MODID_type *) 0xF8700808U)	/* LMU Module ID Register */
#define LMU_ACCEN0	(*( XBAR_ACCEN0_type *) 0xF8700810U)	/* LMU Access Enable Register 0 */
#define LMU_ACCEN1	(*( CPU0_SPROT_RGNACCENB0_type *) 0xF8700814U)	/* LMU Access Enable Register 1 */
#define LMU_MEMCON	(*( LMU_MEMCON_type *) 0xF8700820U)	/* LMU Memory Control Register */
#define LMU_BUFCON0	(*( LMU_BUFCON0_type *) 0xF8700830U)	/* LMU Buffer Control Register */
#define LMU_BUFCON1	(*( LMU_BUFCON0_type *) 0xF8700834U)	/* LMU Buffer Control Register */
#define LMU_BUFCON2	(*( LMU_BUFCON0_type *) 0xF8700838U)	/* LMU Buffer Control Register */
#define OVC0_OSEL	(*( OVC0_OSEL_type *) 0xF880FB00U)	/* Overlay Range Select Register */
#define OVC0_RABR0	(*( OVC0_RABR0_type *) 0xF880FB10U)	/* Redirected Address Base Register 0 */
#define OVC0_RABR1	(*( OVC0_RABR0_type *) 0xF880FB1CU)	/* Redirected Address Base Register 1 */
#define OVC0_RABR2	(*( OVC0_RABR0_type *) 0xF880FB28U)	/* Redirected Address Base Register 2 */
#define OVC0_RABR3	(*( OVC0_RABR0_type *) 0xF880FB34U)	/* Redirected Address Base Register 3 */
#define OVC0_RABR4	(*( OVC0_RABR0_type *) 0xF880FB40U)	/* Redirected Address Base Register 4 */
#define OVC0_RABR5	(*( OVC0_RABR0_type *) 0xF880FB4CU)	/* Redirected Address Base Register 5 */
#define OVC0_RABR6	(*( OVC0_RABR0_type *) 0xF880FB58U)	/* Redirected Address Base Register 6 */
#define OVC0_RABR7	(*( OVC0_RABR0_type *) 0xF880FB64U)	/* Redirected Address Base Register 7 */
#define OVC0_OTAR0	(*( OVC0_OTAR0_type *) 0xF880FB14U)	/* Overlay Target Address Register 0 */
#define OVC0_OTAR1	(*( OVC0_OTAR0_type *) 0xF880FB20U)	/* Overlay Target Address Register 1 */
#define OVC0_OTAR2	(*( OVC0_OTAR0_type *) 0xF880FB2CU)	/* Overlay Target Address Register 2 */
#define OVC0_OTAR3	(*( OVC0_OTAR0_type *) 0xF880FB38U)	/* Overlay Target Address Register 3 */
#define OVC0_OTAR4	(*( OVC0_OTAR0_type *) 0xF880FB44U)	/* Overlay Target Address Register 4 */
#define OVC0_OTAR5	(*( OVC0_OTAR0_type *) 0xF880FB50U)	/* Overlay Target Address Register 5 */
#define OVC0_OTAR6	(*( OVC0_OTAR0_type *) 0xF880FB5CU)	/* Overlay Target Address Register 6 */
#define OVC0_OTAR7	(*( OVC0_OTAR0_type *) 0xF880FB68U)	/* Overlay Target Address Register 7 */
#define OVC0_OMASK0	(*( OVC0_OMASK0_type *) 0xF880FB18U)	/* Overlay Mask Register 0 */
#define OVC0_OMASK1	(*( OVC0_OMASK0_type *) 0xF880FB24U)	/* Overlay Mask Register 1 */
#define OVC0_OMASK2	(*( OVC0_OMASK0_type *) 0xF880FB30U)	/* Overlay Mask Register 2 */
#define OVC0_OMASK3	(*( OVC0_OMASK0_type *) 0xF880FB3CU)	/* Overlay Mask Register 3 */
#define OVC0_OMASK4	(*( OVC0_OMASK0_type *) 0xF880FB48U)	/* Overlay Mask Register 4 */
#define OVC0_OMASK5	(*( OVC0_OMASK0_type *) 0xF880FB54U)	/* Overlay Mask Register 5 */
#define OVC0_OMASK6	(*( OVC0_OMASK0_type *) 0xF880FB60U)	/* Overlay Mask Register 6 */
#define OVC0_OMASK7	(*( OVC0_OMASK0_type *) 0xF880FB6CU)	/* Overlay Mask Register 7 */
#define MTU_CLC	(*( MTU_CLC_type *) 0xF0060000U)	/* Identification Register */
#define MTU_ID	(*( MTU_ID_type *) 0xF0060008U)	/* Identification Register */
#define MTU_RES0	(*( MTU_RES0_type *) 0xF0060020U)	/* Reserved Register */
#define MTU_RES1	(*( MTU_RES1_type *) 0xF0060024U)	/* Reserved Register */
#define MTU_RES2	(*( MTU_RES2_type *) 0xF0060030U)	/* Reserved Register */
#define MTU_RES3	(*( MTU_RES3_type *) 0xF0060034U)	/* Reserved Register */
#define MTU_ACCEN0	(*( XBAR_ACCEN0_type *) 0xF00600FCU)	/* Access Enable Register 0 */
#define MTU_ACCEN1	(*( MTU_RES3_type *) 0xF00600F8U)	/* Access Enable Register 1 */
#define MC0_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0061000U)	/* Configuration Register 0 */
#define MC1_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0061100U)	/* Configuration Register 0 */
#define MC2_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0061200U)	/* Configuration Register 0 */
#define MC3_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0061300U)	/* Configuration Register 0 */
#define MC4_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0061400U)	/* Configuration Register 0 */
#define MC5_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0061500U)	/* Configuration Register 0 */
#define MC6_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0061600U)	/* Configuration Register 0 */
#define MC7_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0061700U)	/* Configuration Register 0 */
#define MC8_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0061800U)	/* Configuration Register 0 */
#define MC9_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0061900U)	/* Configuration Register 0 */
#define MC10_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0061A00U)	/* Configuration Register 0 */
#define MC11_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0061B00U)	/* Configuration Register 0 */
#define MC12_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0061C00U)	/* Configuration Register 0 */
#define MC13_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0061D00U)	/* Configuration Register 0 */
#define MC14_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0061E00U)	/* Configuration Register 0 */
#define MC15_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0061F00U)	/* Configuration Register 0 */
#define MC16_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0062000U)	/* Configuration Register 0 */
#define MC17_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0062100U)	/* Configuration Register 0 */
#define MC18_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0062200U)	/* Configuration Register 0 */
#define MC19_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0062300U)	/* Configuration Register 0 */
#define MC20_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0062400U)	/* Configuration Register 0 */
#define MC21_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0062500U)	/* Configuration Register 0 */
#define MC22_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0062600U)	/* Configuration Register 0 */
#define MC23_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0062700U)	/* Configuration Register 0 */
#define MC24_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0062800U)	/* Configuration Register 0 */
#define MC25_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0062900U)	/* Configuration Register 0 */
#define MC26_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0062A00U)	/* Configuration Register 0 */
#define MC27_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0062B00U)	/* Configuration Register 0 */
#define MC28_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0062C00U)	/* Configuration Register 0 */
#define MC29_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0062D00U)	/* Configuration Register 0 */
#define MC30_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0062E00U)	/* Configuration Register 0 */
#define MC31_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0062F00U)	/* Configuration Register 0 */
#define MC32_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0063000U)	/* Configuration Register 0 */
#define MC33_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0063100U)	/* Configuration Register 0 */
#define MC34_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0063200U)	/* Configuration Register 0 */
#define MC35_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0063300U)	/* Configuration Register 0 */
#define MC36_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0063400U)	/* Configuration Register 0 */
#define MC37_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0063500U)	/* Configuration Register 0 */
#define MC38_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0063600U)	/* Configuration Register 0 */
#define MC39_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0063700U)	/* Configuration Register 0 */
#define MC40_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0063800U)	/* Configuration Register 0 */
#define MC41_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0063900U)	/* Configuration Register 0 */
#define MC42_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0063A00U)	/* Configuration Register 0 */
#define MC43_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0063B00U)	/* Configuration Register 0 */
#define MC44_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0063C00U)	/* Configuration Register 0 */
#define MC45_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0063D00U)	/* Configuration Register 0 */
#define MC46_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0063E00U)	/* Configuration Register 0 */
#define MC47_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0063F00U)	/* Configuration Register 0 */
#define MC48_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0064000U)	/* Configuration Register 0 */
#define MC49_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0064100U)	/* Configuration Register 0 */
#define MC50_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0064200U)	/* Configuration Register 0 */
#define MC51_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0064300U)	/* Configuration Register 0 */
#define MC52_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0064400U)	/* Configuration Register 0 */
#define MC53_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0064500U)	/* Configuration Register 0 */
#define MC54_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0064600U)	/* Configuration Register 0 */
#define MC55_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0064700U)	/* Configuration Register 0 */
#define MC56_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0064800U)	/* Configuration Register 0 */
#define MC57_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0064900U)	/* Configuration Register 0 */
#define MC58_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0064A00U)	/* Configuration Register 0 */
#define MC59_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0064B00U)	/* Configuration Register 0 */
#define MC60_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0064C00U)	/* Configuration Register 0 */
#define MC61_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0064D00U)	/* Configuration Register 0 */
#define MC62_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0064E00U)	/* Configuration Register 0 */
#define MC63_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0064F00U)	/* Configuration Register 0 */
#define MC64_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0065000U)	/* Configuration Register 0 */
#define MC65_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0065100U)	/* Configuration Register 0 */
#define MC66_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0065200U)	/* Configuration Register 0 */
#define MC67_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0065300U)	/* Configuration Register 0 */
#define MC68_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0065400U)	/* Configuration Register 0 */
#define MC69_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0065500U)	/* Configuration Register 0 */
#define MC70_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0065600U)	/* Configuration Register 0 */
#define MC71_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0065700U)	/* Configuration Register 0 */
#define MC72_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0065800U)	/* Configuration Register 0 */
#define MC73_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0065900U)	/* Configuration Register 0 */
#define MC74_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0065A00U)	/* Configuration Register 0 */
#define MC75_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0065B00U)	/* Configuration Register 0 */
#define MC76_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0065C00U)	/* Configuration Register 0 */
#define MC77_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0065D00U)	/* Configuration Register 0 */
#define MC78_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0065E00U)	/* Configuration Register 0 */
#define MC79_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0065F00U)	/* Configuration Register 0 */
#define MC80_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0066000U)	/* Configuration Register 0 */
#define MC81_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0066100U)	/* Configuration Register 0 */
#define MC82_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0066200U)	/* Configuration Register 0 */
#define MC83_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0066300U)	/* Configuration Register 0 */
#define MC84_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0066400U)	/* Configuration Register 0 */
#define MC85_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0066500U)	/* Configuration Register 0 */
#define MC86_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0066600U)	/* Configuration Register 0 */
#define MC87_CONFIG0	(*( MC0_CONFIG0_type *) 0xF0066700U)	/* Configuration Register 0 */
#define MC0_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0061002U)	/* Configuration Register 1 */
#define MC1_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0061102U)	/* Configuration Register 1 */
#define MC2_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0061202U)	/* Configuration Register 1 */
#define MC3_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0061302U)	/* Configuration Register 1 */
#define MC4_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0061402U)	/* Configuration Register 1 */
#define MC5_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0061502U)	/* Configuration Register 1 */
#define MC6_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0061602U)	/* Configuration Register 1 */
#define MC7_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0061702U)	/* Configuration Register 1 */
#define MC8_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0061802U)	/* Configuration Register 1 */
#define MC9_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0061902U)	/* Configuration Register 1 */
#define MC10_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0061A02U)	/* Configuration Register 1 */
#define MC11_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0061B02U)	/* Configuration Register 1 */
#define MC12_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0061C02U)	/* Configuration Register 1 */
#define MC13_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0061D02U)	/* Configuration Register 1 */
#define MC14_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0061E02U)	/* Configuration Register 1 */
#define MC15_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0061F02U)	/* Configuration Register 1 */
#define MC16_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0062002U)	/* Configuration Register 1 */
#define MC17_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0062102U)	/* Configuration Register 1 */
#define MC18_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0062202U)	/* Configuration Register 1 */
#define MC19_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0062302U)	/* Configuration Register 1 */
#define MC20_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0062402U)	/* Configuration Register 1 */
#define MC21_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0062502U)	/* Configuration Register 1 */
#define MC22_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0062602U)	/* Configuration Register 1 */
#define MC23_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0062702U)	/* Configuration Register 1 */
#define MC24_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0062802U)	/* Configuration Register 1 */
#define MC25_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0062902U)	/* Configuration Register 1 */
#define MC26_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0062A02U)	/* Configuration Register 1 */
#define MC27_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0062B02U)	/* Configuration Register 1 */
#define MC28_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0062C02U)	/* Configuration Register 1 */
#define MC29_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0062D02U)	/* Configuration Register 1 */
#define MC30_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0062E02U)	/* Configuration Register 1 */
#define MC31_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0062F02U)	/* Configuration Register 1 */
#define MC32_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0063002U)	/* Configuration Register 1 */
#define MC33_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0063102U)	/* Configuration Register 1 */
#define MC34_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0063202U)	/* Configuration Register 1 */
#define MC35_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0063302U)	/* Configuration Register 1 */
#define MC36_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0063402U)	/* Configuration Register 1 */
#define MC37_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0063502U)	/* Configuration Register 1 */
#define MC38_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0063602U)	/* Configuration Register 1 */
#define MC39_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0063702U)	/* Configuration Register 1 */
#define MC40_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0063802U)	/* Configuration Register 1 */
#define MC41_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0063902U)	/* Configuration Register 1 */
#define MC42_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0063A02U)	/* Configuration Register 1 */
#define MC43_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0063B02U)	/* Configuration Register 1 */
#define MC44_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0063C02U)	/* Configuration Register 1 */
#define MC45_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0063D02U)	/* Configuration Register 1 */
#define MC46_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0063E02U)	/* Configuration Register 1 */
#define MC47_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0063F02U)	/* Configuration Register 1 */
#define MC48_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0064002U)	/* Configuration Register 1 */
#define MC49_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0064102U)	/* Configuration Register 1 */
#define MC50_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0064202U)	/* Configuration Register 1 */
#define MC51_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0064302U)	/* Configuration Register 1 */
#define MC52_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0064402U)	/* Configuration Register 1 */
#define MC53_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0064502U)	/* Configuration Register 1 */
#define MC54_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0064602U)	/* Configuration Register 1 */
#define MC55_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0064702U)	/* Configuration Register 1 */
#define MC56_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0064802U)	/* Configuration Register 1 */
#define MC57_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0064902U)	/* Configuration Register 1 */
#define MC58_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0064A02U)	/* Configuration Register 1 */
#define MC59_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0064B02U)	/* Configuration Register 1 */
#define MC60_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0064C02U)	/* Configuration Register 1 */
#define MC61_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0064D02U)	/* Configuration Register 1 */
#define MC62_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0064E02U)	/* Configuration Register 1 */
#define MC63_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0064F02U)	/* Configuration Register 1 */
#define MC64_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0065002U)	/* Configuration Register 1 */
#define MC65_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0065102U)	/* Configuration Register 1 */
#define MC66_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0065202U)	/* Configuration Register 1 */
#define MC67_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0065302U)	/* Configuration Register 1 */
#define MC68_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0065402U)	/* Configuration Register 1 */
#define MC69_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0065502U)	/* Configuration Register 1 */
#define MC70_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0065602U)	/* Configuration Register 1 */
#define MC71_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0065702U)	/* Configuration Register 1 */
#define MC72_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0065802U)	/* Configuration Register 1 */
#define MC73_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0065902U)	/* Configuration Register 1 */
#define MC74_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0065A02U)	/* Configuration Register 1 */
#define MC75_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0065B02U)	/* Configuration Register 1 */
#define MC76_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0065C02U)	/* Configuration Register 1 */
#define MC77_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0065D02U)	/* Configuration Register 1 */
#define MC78_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0065E02U)	/* Configuration Register 1 */
#define MC79_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0065F02U)	/* Configuration Register 1 */
#define MC80_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0066002U)	/* Configuration Register 1 */
#define MC81_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0066102U)	/* Configuration Register 1 */
#define MC82_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0066202U)	/* Configuration Register 1 */
#define MC83_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0066302U)	/* Configuration Register 1 */
#define MC84_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0066402U)	/* Configuration Register 1 */
#define MC85_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0066502U)	/* Configuration Register 1 */
#define MC86_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0066602U)	/* Configuration Register 1 */
#define MC87_CONFIG1	(*( MC0_CONFIG1_type *) 0xF0066702U)	/* Configuration Register 1 */
#define MC0_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0061004U)	/* MBIST Control Register */
#define MC1_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0061104U)	/* MBIST Control Register */
#define MC2_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0061204U)	/* MBIST Control Register */
#define MC3_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0061304U)	/* MBIST Control Register */
#define MC4_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0061404U)	/* MBIST Control Register */
#define MC5_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0061504U)	/* MBIST Control Register */
#define MC6_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0061604U)	/* MBIST Control Register */
#define MC7_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0061704U)	/* MBIST Control Register */
#define MC8_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0061804U)	/* MBIST Control Register */
#define MC9_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0061904U)	/* MBIST Control Register */
#define MC10_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0061A04U)	/* MBIST Control Register */
#define MC11_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0061B04U)	/* MBIST Control Register */
#define MC12_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0061C04U)	/* MBIST Control Register */
#define MC13_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0061D04U)	/* MBIST Control Register */
#define MC14_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0061E04U)	/* MBIST Control Register */
#define MC15_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0061F04U)	/* MBIST Control Register */
#define MC16_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0062004U)	/* MBIST Control Register */
#define MC17_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0062104U)	/* MBIST Control Register */
#define MC18_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0062204U)	/* MBIST Control Register */
#define MC19_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0062304U)	/* MBIST Control Register */
#define MC20_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0062404U)	/* MBIST Control Register */
#define MC21_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0062504U)	/* MBIST Control Register */
#define MC22_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0062604U)	/* MBIST Control Register */
#define MC23_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0062704U)	/* MBIST Control Register */
#define MC24_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0062804U)	/* MBIST Control Register */
#define MC25_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0062904U)	/* MBIST Control Register */
#define MC26_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0062A04U)	/* MBIST Control Register */
#define MC27_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0062B04U)	/* MBIST Control Register */
#define MC28_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0062C04U)	/* MBIST Control Register */
#define MC29_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0062D04U)	/* MBIST Control Register */
#define MC30_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0062E04U)	/* MBIST Control Register */
#define MC31_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0062F04U)	/* MBIST Control Register */
#define MC32_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0063004U)	/* MBIST Control Register */
#define MC33_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0063104U)	/* MBIST Control Register */
#define MC34_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0063204U)	/* MBIST Control Register */
#define MC35_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0063304U)	/* MBIST Control Register */
#define MC36_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0063404U)	/* MBIST Control Register */
#define MC37_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0063504U)	/* MBIST Control Register */
#define MC38_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0063604U)	/* MBIST Control Register */
#define MC39_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0063704U)	/* MBIST Control Register */
#define MC40_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0063804U)	/* MBIST Control Register */
#define MC41_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0063904U)	/* MBIST Control Register */
#define MC42_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0063A04U)	/* MBIST Control Register */
#define MC43_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0063B04U)	/* MBIST Control Register */
#define MC44_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0063C04U)	/* MBIST Control Register */
#define MC45_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0063D04U)	/* MBIST Control Register */
#define MC46_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0063E04U)	/* MBIST Control Register */
#define MC47_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0063F04U)	/* MBIST Control Register */
#define MC48_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0064004U)	/* MBIST Control Register */
#define MC49_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0064104U)	/* MBIST Control Register */
#define MC50_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0064204U)	/* MBIST Control Register */
#define MC51_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0064304U)	/* MBIST Control Register */
#define MC52_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0064404U)	/* MBIST Control Register */
#define MC53_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0064504U)	/* MBIST Control Register */
#define MC54_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0064604U)	/* MBIST Control Register */
#define MC55_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0064704U)	/* MBIST Control Register */
#define MC56_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0064804U)	/* MBIST Control Register */
#define MC57_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0064904U)	/* MBIST Control Register */
#define MC58_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0064A04U)	/* MBIST Control Register */
#define MC59_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0064B04U)	/* MBIST Control Register */
#define MC60_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0064C04U)	/* MBIST Control Register */
#define MC61_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0064D04U)	/* MBIST Control Register */
#define MC62_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0064E04U)	/* MBIST Control Register */
#define MC63_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0064F04U)	/* MBIST Control Register */
#define MC64_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0065004U)	/* MBIST Control Register */
#define MC65_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0065104U)	/* MBIST Control Register */
#define MC66_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0065204U)	/* MBIST Control Register */
#define MC67_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0065304U)	/* MBIST Control Register */
#define MC68_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0065404U)	/* MBIST Control Register */
#define MC69_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0065504U)	/* MBIST Control Register */
#define MC70_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0065604U)	/* MBIST Control Register */
#define MC71_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0065704U)	/* MBIST Control Register */
#define MC72_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0065804U)	/* MBIST Control Register */
#define MC73_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0065904U)	/* MBIST Control Register */
#define MC74_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0065A04U)	/* MBIST Control Register */
#define MC75_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0065B04U)	/* MBIST Control Register */
#define MC76_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0065C04U)	/* MBIST Control Register */
#define MC77_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0065D04U)	/* MBIST Control Register */
#define MC78_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0065E04U)	/* MBIST Control Register */
#define MC79_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0065F04U)	/* MBIST Control Register */
#define MC80_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0066004U)	/* MBIST Control Register */
#define MC81_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0066104U)	/* MBIST Control Register */
#define MC82_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0066204U)	/* MBIST Control Register */
#define MC83_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0066304U)	/* MBIST Control Register */
#define MC84_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0066404U)	/* MBIST Control Register */
#define MC85_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0066504U)	/* MBIST Control Register */
#define MC86_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0066604U)	/* MBIST Control Register */
#define MC87_MCONTROL	(*( MC0_MCONTROL_type *) 0xF0066704U)	/* MBIST Control Register */
#define MC0_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0061006U)	/* Status Register */
#define MC1_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0061106U)	/* Status Register */
#define MC2_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0061206U)	/* Status Register */
#define MC3_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0061306U)	/* Status Register */
#define MC4_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0061406U)	/* Status Register */
#define MC5_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0061506U)	/* Status Register */
#define MC6_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0061606U)	/* Status Register */
#define MC7_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0061706U)	/* Status Register */
#define MC8_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0061806U)	/* Status Register */
#define MC9_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0061906U)	/* Status Register */
#define MC10_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0061A06U)	/* Status Register */
#define MC11_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0061B06U)	/* Status Register */
#define MC12_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0061C06U)	/* Status Register */
#define MC13_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0061D06U)	/* Status Register */
#define MC14_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0061E06U)	/* Status Register */
#define MC15_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0061F06U)	/* Status Register */
#define MC16_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0062006U)	/* Status Register */
#define MC17_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0062106U)	/* Status Register */
#define MC18_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0062206U)	/* Status Register */
#define MC19_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0062306U)	/* Status Register */
#define MC20_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0062406U)	/* Status Register */
#define MC21_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0062506U)	/* Status Register */
#define MC22_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0062606U)	/* Status Register */
#define MC23_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0062706U)	/* Status Register */
#define MC24_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0062806U)	/* Status Register */
#define MC25_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0062906U)	/* Status Register */
#define MC26_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0062A06U)	/* Status Register */
#define MC27_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0062B06U)	/* Status Register */
#define MC28_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0062C06U)	/* Status Register */
#define MC29_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0062D06U)	/* Status Register */
#define MC30_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0062E06U)	/* Status Register */
#define MC31_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0062F06U)	/* Status Register */
#define MC32_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0063006U)	/* Status Register */
#define MC33_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0063106U)	/* Status Register */
#define MC34_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0063206U)	/* Status Register */
#define MC35_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0063306U)	/* Status Register */
#define MC36_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0063406U)	/* Status Register */
#define MC37_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0063506U)	/* Status Register */
#define MC38_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0063606U)	/* Status Register */
#define MC39_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0063706U)	/* Status Register */
#define MC40_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0063806U)	/* Status Register */
#define MC41_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0063906U)	/* Status Register */
#define MC42_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0063A06U)	/* Status Register */
#define MC43_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0063B06U)	/* Status Register */
#define MC44_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0063C06U)	/* Status Register */
#define MC45_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0063D06U)	/* Status Register */
#define MC46_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0063E06U)	/* Status Register */
#define MC47_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0063F06U)	/* Status Register */
#define MC48_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0064006U)	/* Status Register */
#define MC49_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0064106U)	/* Status Register */
#define MC50_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0064206U)	/* Status Register */
#define MC51_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0064306U)	/* Status Register */
#define MC52_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0064406U)	/* Status Register */
#define MC53_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0064506U)	/* Status Register */
#define MC54_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0064606U)	/* Status Register */
#define MC55_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0064706U)	/* Status Register */
#define MC56_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0064806U)	/* Status Register */
#define MC57_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0064906U)	/* Status Register */
#define MC58_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0064A06U)	/* Status Register */
#define MC59_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0064B06U)	/* Status Register */
#define MC60_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0064C06U)	/* Status Register */
#define MC61_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0064D06U)	/* Status Register */
#define MC62_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0064E06U)	/* Status Register */
#define MC63_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0064F06U)	/* Status Register */
#define MC64_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0065006U)	/* Status Register */
#define MC65_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0065106U)	/* Status Register */
#define MC66_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0065206U)	/* Status Register */
#define MC67_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0065306U)	/* Status Register */
#define MC68_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0065406U)	/* Status Register */
#define MC69_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0065506U)	/* Status Register */
#define MC70_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0065606U)	/* Status Register */
#define MC71_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0065706U)	/* Status Register */
#define MC72_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0065806U)	/* Status Register */
#define MC73_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0065906U)	/* Status Register */
#define MC74_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0065A06U)	/* Status Register */
#define MC75_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0065B06U)	/* Status Register */
#define MC76_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0065C06U)	/* Status Register */
#define MC77_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0065D06U)	/* Status Register */
#define MC78_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0065E06U)	/* Status Register */
#define MC79_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0065F06U)	/* Status Register */
#define MC80_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0066006U)	/* Status Register */
#define MC81_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0066106U)	/* Status Register */
#define MC82_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0066206U)	/* Status Register */
#define MC83_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0066306U)	/* Status Register */
#define MC84_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0066406U)	/* Status Register */
#define MC85_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0066506U)	/* Status Register */
#define MC86_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0066606U)	/* Status Register */
#define MC87_MSTATUS	(*( MC0_MSTATUS_type *) 0xF0066706U)	/* Status Register */
#define MC0_RANGE	(*( MC0_RANGE_type *) 0xF0061008U)	/* Range Register, single address mode */
#define MC1_RANGE	(*( MC0_RANGE_type *) 0xF0061108U)	/* Range Register, single address mode */
#define MC2_RANGE	(*( MC0_RANGE_type *) 0xF0061208U)	/* Range Register, single address mode */
#define MC3_RANGE	(*( MC0_RANGE_type *) 0xF0061308U)	/* Range Register, single address mode */
#define MC4_RANGE	(*( MC0_RANGE_type *) 0xF0061408U)	/* Range Register, single address mode */
#define MC5_RANGE	(*( MC0_RANGE_type *) 0xF0061508U)	/* Range Register, single address mode */
#define MC6_RANGE	(*( MC0_RANGE_type *) 0xF0061608U)	/* Range Register, single address mode */
#define MC7_RANGE	(*( MC0_RANGE_type *) 0xF0061708U)	/* Range Register, single address mode */
#define MC8_RANGE	(*( MC0_RANGE_type *) 0xF0061808U)	/* Range Register, single address mode */
#define MC9_RANGE	(*( MC0_RANGE_type *) 0xF0061908U)	/* Range Register, single address mode */
#define MC10_RANGE	(*( MC0_RANGE_type *) 0xF0061A08U)	/* Range Register, single address mode */
#define MC11_RANGE	(*( MC0_RANGE_type *) 0xF0061B08U)	/* Range Register, single address mode */
#define MC12_RANGE	(*( MC0_RANGE_type *) 0xF0061C08U)	/* Range Register, single address mode */
#define MC13_RANGE	(*( MC0_RANGE_type *) 0xF0061D08U)	/* Range Register, single address mode */
#define MC14_RANGE	(*( MC0_RANGE_type *) 0xF0061E08U)	/* Range Register, single address mode */
#define MC15_RANGE	(*( MC0_RANGE_type *) 0xF0061F08U)	/* Range Register, single address mode */
#define MC16_RANGE	(*( MC0_RANGE_type *) 0xF0062008U)	/* Range Register, single address mode */
#define MC17_RANGE	(*( MC0_RANGE_type *) 0xF0062108U)	/* Range Register, single address mode */
#define MC18_RANGE	(*( MC0_RANGE_type *) 0xF0062208U)	/* Range Register, single address mode */
#define MC19_RANGE	(*( MC0_RANGE_type *) 0xF0062308U)	/* Range Register, single address mode */
#define MC20_RANGE	(*( MC0_RANGE_type *) 0xF0062408U)	/* Range Register, single address mode */
#define MC21_RANGE	(*( MC0_RANGE_type *) 0xF0062508U)	/* Range Register, single address mode */
#define MC22_RANGE	(*( MC0_RANGE_type *) 0xF0062608U)	/* Range Register, single address mode */
#define MC23_RANGE	(*( MC0_RANGE_type *) 0xF0062708U)	/* Range Register, single address mode */
#define MC24_RANGE	(*( MC0_RANGE_type *) 0xF0062808U)	/* Range Register, single address mode */
#define MC25_RANGE	(*( MC0_RANGE_type *) 0xF0062908U)	/* Range Register, single address mode */
#define MC26_RANGE	(*( MC0_RANGE_type *) 0xF0062A08U)	/* Range Register, single address mode */
#define MC27_RANGE	(*( MC0_RANGE_type *) 0xF0062B08U)	/* Range Register, single address mode */
#define MC28_RANGE	(*( MC0_RANGE_type *) 0xF0062C08U)	/* Range Register, single address mode */
#define MC29_RANGE	(*( MC0_RANGE_type *) 0xF0062D08U)	/* Range Register, single address mode */
#define MC30_RANGE	(*( MC0_RANGE_type *) 0xF0062E08U)	/* Range Register, single address mode */
#define MC31_RANGE	(*( MC0_RANGE_type *) 0xF0062F08U)	/* Range Register, single address mode */
#define MC32_RANGE	(*( MC0_RANGE_type *) 0xF0063008U)	/* Range Register, single address mode */
#define MC33_RANGE	(*( MC0_RANGE_type *) 0xF0063108U)	/* Range Register, single address mode */
#define MC34_RANGE	(*( MC0_RANGE_type *) 0xF0063208U)	/* Range Register, single address mode */
#define MC35_RANGE	(*( MC0_RANGE_type *) 0xF0063308U)	/* Range Register, single address mode */
#define MC36_RANGE	(*( MC0_RANGE_type *) 0xF0063408U)	/* Range Register, single address mode */
#define MC37_RANGE	(*( MC0_RANGE_type *) 0xF0063508U)	/* Range Register, single address mode */
#define MC38_RANGE	(*( MC0_RANGE_type *) 0xF0063608U)	/* Range Register, single address mode */
#define MC39_RANGE	(*( MC0_RANGE_type *) 0xF0063708U)	/* Range Register, single address mode */
#define MC40_RANGE	(*( MC0_RANGE_type *) 0xF0063808U)	/* Range Register, single address mode */
#define MC41_RANGE	(*( MC0_RANGE_type *) 0xF0063908U)	/* Range Register, single address mode */
#define MC42_RANGE	(*( MC0_RANGE_type *) 0xF0063A08U)	/* Range Register, single address mode */
#define MC43_RANGE	(*( MC0_RANGE_type *) 0xF0063B08U)	/* Range Register, single address mode */
#define MC44_RANGE	(*( MC0_RANGE_type *) 0xF0063C08U)	/* Range Register, single address mode */
#define MC45_RANGE	(*( MC0_RANGE_type *) 0xF0063D08U)	/* Range Register, single address mode */
#define MC46_RANGE	(*( MC0_RANGE_type *) 0xF0063E08U)	/* Range Register, single address mode */
#define MC47_RANGE	(*( MC0_RANGE_type *) 0xF0063F08U)	/* Range Register, single address mode */
#define MC48_RANGE	(*( MC0_RANGE_type *) 0xF0064008U)	/* Range Register, single address mode */
#define MC49_RANGE	(*( MC0_RANGE_type *) 0xF0064108U)	/* Range Register, single address mode */
#define MC50_RANGE	(*( MC0_RANGE_type *) 0xF0064208U)	/* Range Register, single address mode */
#define MC51_RANGE	(*( MC0_RANGE_type *) 0xF0064308U)	/* Range Register, single address mode */
#define MC52_RANGE	(*( MC0_RANGE_type *) 0xF0064408U)	/* Range Register, single address mode */
#define MC53_RANGE	(*( MC0_RANGE_type *) 0xF0064508U)	/* Range Register, single address mode */
#define MC54_RANGE	(*( MC0_RANGE_type *) 0xF0064608U)	/* Range Register, single address mode */
#define MC55_RANGE	(*( MC0_RANGE_type *) 0xF0064708U)	/* Range Register, single address mode */
#define MC56_RANGE	(*( MC0_RANGE_type *) 0xF0064808U)	/* Range Register, single address mode */
#define MC57_RANGE	(*( MC0_RANGE_type *) 0xF0064908U)	/* Range Register, single address mode */
#define MC58_RANGE	(*( MC0_RANGE_type *) 0xF0064A08U)	/* Range Register, single address mode */
#define MC59_RANGE	(*( MC0_RANGE_type *) 0xF0064B08U)	/* Range Register, single address mode */
#define MC60_RANGE	(*( MC0_RANGE_type *) 0xF0064C08U)	/* Range Register, single address mode */
#define MC61_RANGE	(*( MC0_RANGE_type *) 0xF0064D08U)	/* Range Register, single address mode */
#define MC62_RANGE	(*( MC0_RANGE_type *) 0xF0064E08U)	/* Range Register, single address mode */
#define MC63_RANGE	(*( MC0_RANGE_type *) 0xF0064F08U)	/* Range Register, single address mode */
#define MC64_RANGE	(*( MC0_RANGE_type *) 0xF0065008U)	/* Range Register, single address mode */
#define MC65_RANGE	(*( MC0_RANGE_type *) 0xF0065108U)	/* Range Register, single address mode */
#define MC66_RANGE	(*( MC0_RANGE_type *) 0xF0065208U)	/* Range Register, single address mode */
#define MC67_RANGE	(*( MC0_RANGE_type *) 0xF0065308U)	/* Range Register, single address mode */
#define MC68_RANGE	(*( MC0_RANGE_type *) 0xF0065408U)	/* Range Register, single address mode */
#define MC69_RANGE	(*( MC0_RANGE_type *) 0xF0065508U)	/* Range Register, single address mode */
#define MC70_RANGE	(*( MC0_RANGE_type *) 0xF0065608U)	/* Range Register, single address mode */
#define MC71_RANGE	(*( MC0_RANGE_type *) 0xF0065708U)	/* Range Register, single address mode */
#define MC72_RANGE	(*( MC0_RANGE_type *) 0xF0065808U)	/* Range Register, single address mode */
#define MC73_RANGE	(*( MC0_RANGE_type *) 0xF0065908U)	/* Range Register, single address mode */
#define MC74_RANGE	(*( MC0_RANGE_type *) 0xF0065A08U)	/* Range Register, single address mode */
#define MC75_RANGE	(*( MC0_RANGE_type *) 0xF0065B08U)	/* Range Register, single address mode */
#define MC76_RANGE	(*( MC0_RANGE_type *) 0xF0065C08U)	/* Range Register, single address mode */
#define MC77_RANGE	(*( MC0_RANGE_type *) 0xF0065D08U)	/* Range Register, single address mode */
#define MC78_RANGE	(*( MC0_RANGE_type *) 0xF0065E08U)	/* Range Register, single address mode */
#define MC79_RANGE	(*( MC0_RANGE_type *) 0xF0065F08U)	/* Range Register, single address mode */
#define MC80_RANGE	(*( MC0_RANGE_type *) 0xF0066008U)	/* Range Register, single address mode */
#define MC81_RANGE	(*( MC0_RANGE_type *) 0xF0066108U)	/* Range Register, single address mode */
#define MC82_RANGE	(*( MC0_RANGE_type *) 0xF0066208U)	/* Range Register, single address mode */
#define MC83_RANGE	(*( MC0_RANGE_type *) 0xF0066308U)	/* Range Register, single address mode */
#define MC84_RANGE	(*( MC0_RANGE_type *) 0xF0066408U)	/* Range Register, single address mode */
#define MC85_RANGE	(*( MC0_RANGE_type *) 0xF0066508U)	/* Range Register, single address mode */
#define MC86_RANGE	(*( MC0_RANGE_type *) 0xF0066608U)	/* Range Register, single address mode */
#define MC87_RANGE	(*( MC0_RANGE_type *) 0xF0066708U)	/* Range Register, single address mode */
#define MC0_REVID	(*( MC0_REVID_type *) 0xF006100CU)	/* Revision ID Register */
#define MC1_REVID	(*( MC0_REVID_type *) 0xF006110CU)	/* Revision ID Register */
#define MC2_REVID	(*( MC0_REVID_type *) 0xF006120CU)	/* Revision ID Register */
#define MC3_REVID	(*( MC0_REVID_type *) 0xF006130CU)	/* Revision ID Register */
#define MC4_REVID	(*( MC0_REVID_type *) 0xF006140CU)	/* Revision ID Register */
#define MC5_REVID	(*( MC0_REVID_type *) 0xF006150CU)	/* Revision ID Register */
#define MC6_REVID	(*( MC0_REVID_type *) 0xF006160CU)	/* Revision ID Register */
#define MC7_REVID	(*( MC0_REVID_type *) 0xF006170CU)	/* Revision ID Register */
#define MC8_REVID	(*( MC0_REVID_type *) 0xF006180CU)	/* Revision ID Register */
#define MC9_REVID	(*( MC0_REVID_type *) 0xF006190CU)	/* Revision ID Register */
#define MC10_REVID	(*( MC0_REVID_type *) 0xF0061A0CU)	/* Revision ID Register */
#define MC11_REVID	(*( MC0_REVID_type *) 0xF0061B0CU)	/* Revision ID Register */
#define MC12_REVID	(*( MC0_REVID_type *) 0xF0061C0CU)	/* Revision ID Register */
#define MC13_REVID	(*( MC0_REVID_type *) 0xF0061D0CU)	/* Revision ID Register */
#define MC14_REVID	(*( MC0_REVID_type *) 0xF0061E0CU)	/* Revision ID Register */
#define MC15_REVID	(*( MC0_REVID_type *) 0xF0061F0CU)	/* Revision ID Register */
#define MC16_REVID	(*( MC0_REVID_type *) 0xF006200CU)	/* Revision ID Register */
#define MC17_REVID	(*( MC0_REVID_type *) 0xF006210CU)	/* Revision ID Register */
#define MC18_REVID	(*( MC0_REVID_type *) 0xF006220CU)	/* Revision ID Register */
#define MC19_REVID	(*( MC0_REVID_type *) 0xF006230CU)	/* Revision ID Register */
#define MC20_REVID	(*( MC0_REVID_type *) 0xF006240CU)	/* Revision ID Register */
#define MC21_REVID	(*( MC0_REVID_type *) 0xF006250CU)	/* Revision ID Register */
#define MC22_REVID	(*( MC0_REVID_type *) 0xF006260CU)	/* Revision ID Register */
#define MC23_REVID	(*( MC0_REVID_type *) 0xF006270CU)	/* Revision ID Register */
#define MC24_REVID	(*( MC0_REVID_type *) 0xF006280CU)	/* Revision ID Register */
#define MC25_REVID	(*( MC0_REVID_type *) 0xF006290CU)	/* Revision ID Register */
#define MC26_REVID	(*( MC0_REVID_type *) 0xF0062A0CU)	/* Revision ID Register */
#define MC27_REVID	(*( MC0_REVID_type *) 0xF0062B0CU)	/* Revision ID Register */
#define MC28_REVID	(*( MC0_REVID_type *) 0xF0062C0CU)	/* Revision ID Register */
#define MC29_REVID	(*( MC0_REVID_type *) 0xF0062D0CU)	/* Revision ID Register */
#define MC30_REVID	(*( MC0_REVID_type *) 0xF0062E0CU)	/* Revision ID Register */
#define MC31_REVID	(*( MC0_REVID_type *) 0xF0062F0CU)	/* Revision ID Register */
#define MC32_REVID	(*( MC0_REVID_type *) 0xF006300CU)	/* Revision ID Register */
#define MC33_REVID	(*( MC0_REVID_type *) 0xF006310CU)	/* Revision ID Register */
#define MC34_REVID	(*( MC0_REVID_type *) 0xF006320CU)	/* Revision ID Register */
#define MC35_REVID	(*( MC0_REVID_type *) 0xF006330CU)	/* Revision ID Register */
#define MC36_REVID	(*( MC0_REVID_type *) 0xF006340CU)	/* Revision ID Register */
#define MC37_REVID	(*( MC0_REVID_type *) 0xF006350CU)	/* Revision ID Register */
#define MC38_REVID	(*( MC0_REVID_type *) 0xF006360CU)	/* Revision ID Register */
#define MC39_REVID	(*( MC0_REVID_type *) 0xF006370CU)	/* Revision ID Register */
#define MC40_REVID	(*( MC0_REVID_type *) 0xF006380CU)	/* Revision ID Register */
#define MC41_REVID	(*( MC0_REVID_type *) 0xF006390CU)	/* Revision ID Register */
#define MC42_REVID	(*( MC0_REVID_type *) 0xF0063A0CU)	/* Revision ID Register */
#define MC43_REVID	(*( MC0_REVID_type *) 0xF0063B0CU)	/* Revision ID Register */
#define MC44_REVID	(*( MC0_REVID_type *) 0xF0063C0CU)	/* Revision ID Register */
#define MC45_REVID	(*( MC0_REVID_type *) 0xF0063D0CU)	/* Revision ID Register */
#define MC46_REVID	(*( MC0_REVID_type *) 0xF0063E0CU)	/* Revision ID Register */
#define MC47_REVID	(*( MC0_REVID_type *) 0xF0063F0CU)	/* Revision ID Register */
#define MC48_REVID	(*( MC0_REVID_type *) 0xF006400CU)	/* Revision ID Register */
#define MC49_REVID	(*( MC0_REVID_type *) 0xF006410CU)	/* Revision ID Register */
#define MC50_REVID	(*( MC0_REVID_type *) 0xF006420CU)	/* Revision ID Register */
#define MC51_REVID	(*( MC0_REVID_type *) 0xF006430CU)	/* Revision ID Register */
#define MC52_REVID	(*( MC0_REVID_type *) 0xF006440CU)	/* Revision ID Register */
#define MC53_REVID	(*( MC0_REVID_type *) 0xF006450CU)	/* Revision ID Register */
#define MC54_REVID	(*( MC0_REVID_type *) 0xF006460CU)	/* Revision ID Register */
#define MC55_REVID	(*( MC0_REVID_type *) 0xF006470CU)	/* Revision ID Register */
#define MC56_REVID	(*( MC0_REVID_type *) 0xF006480CU)	/* Revision ID Register */
#define MC57_REVID	(*( MC0_REVID_type *) 0xF006490CU)	/* Revision ID Register */
#define MC58_REVID	(*( MC0_REVID_type *) 0xF0064A0CU)	/* Revision ID Register */
#define MC59_REVID	(*( MC0_REVID_type *) 0xF0064B0CU)	/* Revision ID Register */
#define MC60_REVID	(*( MC0_REVID_type *) 0xF0064C0CU)	/* Revision ID Register */
#define MC61_REVID	(*( MC0_REVID_type *) 0xF0064D0CU)	/* Revision ID Register */
#define MC62_REVID	(*( MC0_REVID_type *) 0xF0064E0CU)	/* Revision ID Register */
#define MC63_REVID	(*( MC0_REVID_type *) 0xF0064F0CU)	/* Revision ID Register */
#define MC64_REVID	(*( MC0_REVID_type *) 0xF006500CU)	/* Revision ID Register */
#define MC65_REVID	(*( MC0_REVID_type *) 0xF006510CU)	/* Revision ID Register */
#define MC66_REVID	(*( MC0_REVID_type *) 0xF006520CU)	/* Revision ID Register */
#define MC67_REVID	(*( MC0_REVID_type *) 0xF006530CU)	/* Revision ID Register */
#define MC68_REVID	(*( MC0_REVID_type *) 0xF006540CU)	/* Revision ID Register */
#define MC69_REVID	(*( MC0_REVID_type *) 0xF006550CU)	/* Revision ID Register */
#define MC70_REVID	(*( MC0_REVID_type *) 0xF006560CU)	/* Revision ID Register */
#define MC71_REVID	(*( MC0_REVID_type *) 0xF006570CU)	/* Revision ID Register */
#define MC72_REVID	(*( MC0_REVID_type *) 0xF006580CU)	/* Revision ID Register */
#define MC73_REVID	(*( MC0_REVID_type *) 0xF006590CU)	/* Revision ID Register */
#define MC74_REVID	(*( MC0_REVID_type *) 0xF0065A0CU)	/* Revision ID Register */
#define MC75_REVID	(*( MC0_REVID_type *) 0xF0065B0CU)	/* Revision ID Register */
#define MC76_REVID	(*( MC0_REVID_type *) 0xF0065C0CU)	/* Revision ID Register */
#define MC77_REVID	(*( MC0_REVID_type *) 0xF0065D0CU)	/* Revision ID Register */
#define MC78_REVID	(*( MC0_REVID_type *) 0xF0065E0CU)	/* Revision ID Register */
#define MC79_REVID	(*( MC0_REVID_type *) 0xF0065F0CU)	/* Revision ID Register */
#define MC80_REVID	(*( MC0_REVID_type *) 0xF006600CU)	/* Revision ID Register */
#define MC81_REVID	(*( MC0_REVID_type *) 0xF006610CU)	/* Revision ID Register */
#define MC82_REVID	(*( MC0_REVID_type *) 0xF006620CU)	/* Revision ID Register */
#define MC83_REVID	(*( MC0_REVID_type *) 0xF006630CU)	/* Revision ID Register */
#define MC84_REVID	(*( MC0_REVID_type *) 0xF006640CU)	/* Revision ID Register */
#define MC85_REVID	(*( MC0_REVID_type *) 0xF006650CU)	/* Revision ID Register */
#define MC86_REVID	(*( MC0_REVID_type *) 0xF006660CU)	/* Revision ID Register */
#define MC87_REVID	(*( MC0_REVID_type *) 0xF006670CU)	/* Revision ID Register */
#define MC0_ECCS	(*( MC0_ECCS_type *) 0xF006100EU)	/* ECC Safety Register */
#define MC1_ECCS	(*( MC0_ECCS_type *) 0xF006110EU)	/* ECC Safety Register */
#define MC2_ECCS	(*( MC0_ECCS_type *) 0xF006120EU)	/* ECC Safety Register */
#define MC3_ECCS	(*( MC0_ECCS_type *) 0xF006130EU)	/* ECC Safety Register */
#define MC4_ECCS	(*( MC0_ECCS_type *) 0xF006140EU)	/* ECC Safety Register */
#define MC5_ECCS	(*( MC0_ECCS_type *) 0xF006150EU)	/* ECC Safety Register */
#define MC6_ECCS	(*( MC0_ECCS_type *) 0xF006160EU)	/* ECC Safety Register */
#define MC7_ECCS	(*( MC0_ECCS_type *) 0xF006170EU)	/* ECC Safety Register */
#define MC8_ECCS	(*( MC0_ECCS_type *) 0xF006180EU)	/* ECC Safety Register */
#define MC9_ECCS	(*( MC0_ECCS_type *) 0xF006190EU)	/* ECC Safety Register */
#define MC10_ECCS	(*( MC0_ECCS_type *) 0xF0061A0EU)	/* ECC Safety Register */
#define MC11_ECCS	(*( MC0_ECCS_type *) 0xF0061B0EU)	/* ECC Safety Register */
#define MC12_ECCS	(*( MC0_ECCS_type *) 0xF0061C0EU)	/* ECC Safety Register */
#define MC13_ECCS	(*( MC0_ECCS_type *) 0xF0061D0EU)	/* ECC Safety Register */
#define MC14_ECCS	(*( MC0_ECCS_type *) 0xF0061E0EU)	/* ECC Safety Register */
#define MC15_ECCS	(*( MC0_ECCS_type *) 0xF0061F0EU)	/* ECC Safety Register */
#define MC16_ECCS	(*( MC0_ECCS_type *) 0xF006200EU)	/* ECC Safety Register */
#define MC17_ECCS	(*( MC0_ECCS_type *) 0xF006210EU)	/* ECC Safety Register */
#define MC18_ECCS	(*( MC0_ECCS_type *) 0xF006220EU)	/* ECC Safety Register */
#define MC19_ECCS	(*( MC0_ECCS_type *) 0xF006230EU)	/* ECC Safety Register */
#define MC20_ECCS	(*( MC0_ECCS_type *) 0xF006240EU)	/* ECC Safety Register */
#define MC21_ECCS	(*( MC0_ECCS_type *) 0xF006250EU)	/* ECC Safety Register */
#define MC22_ECCS	(*( MC0_ECCS_type *) 0xF006260EU)	/* ECC Safety Register */
#define MC23_ECCS	(*( MC0_ECCS_type *) 0xF006270EU)	/* ECC Safety Register */
#define MC24_ECCS	(*( MC0_ECCS_type *) 0xF006280EU)	/* ECC Safety Register */
#define MC25_ECCS	(*( MC0_ECCS_type *) 0xF006290EU)	/* ECC Safety Register */
#define MC26_ECCS	(*( MC0_ECCS_type *) 0xF0062A0EU)	/* ECC Safety Register */
#define MC27_ECCS	(*( MC0_ECCS_type *) 0xF0062B0EU)	/* ECC Safety Register */
#define MC28_ECCS	(*( MC0_ECCS_type *) 0xF0062C0EU)	/* ECC Safety Register */
#define MC29_ECCS	(*( MC0_ECCS_type *) 0xF0062D0EU)	/* ECC Safety Register */
#define MC30_ECCS	(*( MC0_ECCS_type *) 0xF0062E0EU)	/* ECC Safety Register */
#define MC31_ECCS	(*( MC0_ECCS_type *) 0xF0062F0EU)	/* ECC Safety Register */
#define MC32_ECCS	(*( MC0_ECCS_type *) 0xF006300EU)	/* ECC Safety Register */
#define MC33_ECCS	(*( MC0_ECCS_type *) 0xF006310EU)	/* ECC Safety Register */
#define MC34_ECCS	(*( MC0_ECCS_type *) 0xF006320EU)	/* ECC Safety Register */
#define MC35_ECCS	(*( MC0_ECCS_type *) 0xF006330EU)	/* ECC Safety Register */
#define MC36_ECCS	(*( MC0_ECCS_type *) 0xF006340EU)	/* ECC Safety Register */
#define MC37_ECCS	(*( MC0_ECCS_type *) 0xF006350EU)	/* ECC Safety Register */
#define MC38_ECCS	(*( MC0_ECCS_type *) 0xF006360EU)	/* ECC Safety Register */
#define MC39_ECCS	(*( MC0_ECCS_type *) 0xF006370EU)	/* ECC Safety Register */
#define MC40_ECCS	(*( MC0_ECCS_type *) 0xF006380EU)	/* ECC Safety Register */
#define MC41_ECCS	(*( MC0_ECCS_type *) 0xF006390EU)	/* ECC Safety Register */
#define MC42_ECCS	(*( MC0_ECCS_type *) 0xF0063A0EU)	/* ECC Safety Register */
#define MC43_ECCS	(*( MC0_ECCS_type *) 0xF0063B0EU)	/* ECC Safety Register */
#define MC44_ECCS	(*( MC0_ECCS_type *) 0xF0063C0EU)	/* ECC Safety Register */
#define MC45_ECCS	(*( MC0_ECCS_type *) 0xF0063D0EU)	/* ECC Safety Register */
#define MC46_ECCS	(*( MC0_ECCS_type *) 0xF0063E0EU)	/* ECC Safety Register */
#define MC47_ECCS	(*( MC0_ECCS_type *) 0xF0063F0EU)	/* ECC Safety Register */
#define MC48_ECCS	(*( MC0_ECCS_type *) 0xF006400EU)	/* ECC Safety Register */
#define MC49_ECCS	(*( MC0_ECCS_type *) 0xF006410EU)	/* ECC Safety Register */
#define MC50_ECCS	(*( MC0_ECCS_type *) 0xF006420EU)	/* ECC Safety Register */
#define MC51_ECCS	(*( MC0_ECCS_type *) 0xF006430EU)	/* ECC Safety Register */
#define MC52_ECCS	(*( MC0_ECCS_type *) 0xF006440EU)	/* ECC Safety Register */
#define MC53_ECCS	(*( MC0_ECCS_type *) 0xF006450EU)	/* ECC Safety Register */
#define MC54_ECCS	(*( MC0_ECCS_type *) 0xF006460EU)	/* ECC Safety Register */
#define MC55_ECCS	(*( MC0_ECCS_type *) 0xF006470EU)	/* ECC Safety Register */
#define MC56_ECCS	(*( MC0_ECCS_type *) 0xF006480EU)	/* ECC Safety Register */
#define MC57_ECCS	(*( MC0_ECCS_type *) 0xF006490EU)	/* ECC Safety Register */
#define MC58_ECCS	(*( MC0_ECCS_type *) 0xF0064A0EU)	/* ECC Safety Register */
#define MC59_ECCS	(*( MC0_ECCS_type *) 0xF0064B0EU)	/* ECC Safety Register */
#define MC60_ECCS	(*( MC0_ECCS_type *) 0xF0064C0EU)	/* ECC Safety Register */
#define MC61_ECCS	(*( MC0_ECCS_type *) 0xF0064D0EU)	/* ECC Safety Register */
#define MC62_ECCS	(*( MC0_ECCS_type *) 0xF0064E0EU)	/* ECC Safety Register */
#define MC63_ECCS	(*( MC0_ECCS_type *) 0xF0064F0EU)	/* ECC Safety Register */
#define MC64_ECCS	(*( MC0_ECCS_type *) 0xF006500EU)	/* ECC Safety Register */
#define MC65_ECCS	(*( MC0_ECCS_type *) 0xF006510EU)	/* ECC Safety Register */
#define MC66_ECCS	(*( MC0_ECCS_type *) 0xF006520EU)	/* ECC Safety Register */
#define MC67_ECCS	(*( MC0_ECCS_type *) 0xF006530EU)	/* ECC Safety Register */
#define MC68_ECCS	(*( MC0_ECCS_type *) 0xF006540EU)	/* ECC Safety Register */
#define MC69_ECCS	(*( MC0_ECCS_type *) 0xF006550EU)	/* ECC Safety Register */
#define MC70_ECCS	(*( MC0_ECCS_type *) 0xF006560EU)	/* ECC Safety Register */
#define MC71_ECCS	(*( MC0_ECCS_type *) 0xF006570EU)	/* ECC Safety Register */
#define MC72_ECCS	(*( MC0_ECCS_type *) 0xF006580EU)	/* ECC Safety Register */
#define MC73_ECCS	(*( MC0_ECCS_type *) 0xF006590EU)	/* ECC Safety Register */
#define MC74_ECCS	(*( MC0_ECCS_type *) 0xF0065A0EU)	/* ECC Safety Register */
#define MC75_ECCS	(*( MC0_ECCS_type *) 0xF0065B0EU)	/* ECC Safety Register */
#define MC76_ECCS	(*( MC0_ECCS_type *) 0xF0065C0EU)	/* ECC Safety Register */
#define MC77_ECCS	(*( MC0_ECCS_type *) 0xF0065D0EU)	/* ECC Safety Register */
#define MC78_ECCS	(*( MC0_ECCS_type *) 0xF0065E0EU)	/* ECC Safety Register */
#define MC79_ECCS	(*( MC0_ECCS_type *) 0xF0065F0EU)	/* ECC Safety Register */
#define MC80_ECCS	(*( MC0_ECCS_type *) 0xF006600EU)	/* ECC Safety Register */
#define MC81_ECCS	(*( MC0_ECCS_type *) 0xF006610EU)	/* ECC Safety Register */
#define MC82_ECCS	(*( MC0_ECCS_type *) 0xF006620EU)	/* ECC Safety Register */
#define MC83_ECCS	(*( MC0_ECCS_type *) 0xF006630EU)	/* ECC Safety Register */
#define MC84_ECCS	(*( MC0_ECCS_type *) 0xF006640EU)	/* ECC Safety Register */
#define MC85_ECCS	(*( MC0_ECCS_type *) 0xF006650EU)	/* ECC Safety Register */
#define MC86_ECCS	(*( MC0_ECCS_type *) 0xF006660EU)	/* ECC Safety Register */
#define MC87_ECCS	(*( MC0_ECCS_type *) 0xF006670EU)	/* ECC Safety Register */
#define MC0_ECCD	(*( MC0_ECCD_type *) 0xF0061010U)	/* Memory ECC Detection Register */
#define MC1_ECCD	(*( MC0_ECCD_type *) 0xF0061110U)	/* Memory ECC Detection Register */
#define MC2_ECCD	(*( MC0_ECCD_type *) 0xF0061210U)	/* Memory ECC Detection Register */
#define MC3_ECCD	(*( MC0_ECCD_type *) 0xF0061310U)	/* Memory ECC Detection Register */
#define MC4_ECCD	(*( MC0_ECCD_type *) 0xF0061410U)	/* Memory ECC Detection Register */
#define MC5_ECCD	(*( MC0_ECCD_type *) 0xF0061510U)	/* Memory ECC Detection Register */
#define MC6_ECCD	(*( MC0_ECCD_type *) 0xF0061610U)	/* Memory ECC Detection Register */
#define MC7_ECCD	(*( MC0_ECCD_type *) 0xF0061710U)	/* Memory ECC Detection Register */
#define MC8_ECCD	(*( MC0_ECCD_type *) 0xF0061810U)	/* Memory ECC Detection Register */
#define MC9_ECCD	(*( MC0_ECCD_type *) 0xF0061910U)	/* Memory ECC Detection Register */
#define MC10_ECCD	(*( MC0_ECCD_type *) 0xF0061A10U)	/* Memory ECC Detection Register */
#define MC11_ECCD	(*( MC0_ECCD_type *) 0xF0061B10U)	/* Memory ECC Detection Register */
#define MC12_ECCD	(*( MC0_ECCD_type *) 0xF0061C10U)	/* Memory ECC Detection Register */
#define MC13_ECCD	(*( MC0_ECCD_type *) 0xF0061D10U)	/* Memory ECC Detection Register */
#define MC14_ECCD	(*( MC0_ECCD_type *) 0xF0061E10U)	/* Memory ECC Detection Register */
#define MC15_ECCD	(*( MC0_ECCD_type *) 0xF0061F10U)	/* Memory ECC Detection Register */
#define MC16_ECCD	(*( MC0_ECCD_type *) 0xF0062010U)	/* Memory ECC Detection Register */
#define MC17_ECCD	(*( MC0_ECCD_type *) 0xF0062110U)	/* Memory ECC Detection Register */
#define MC18_ECCD	(*( MC0_ECCD_type *) 0xF0062210U)	/* Memory ECC Detection Register */
#define MC19_ECCD	(*( MC0_ECCD_type *) 0xF0062310U)	/* Memory ECC Detection Register */
#define MC20_ECCD	(*( MC0_ECCD_type *) 0xF0062410U)	/* Memory ECC Detection Register */
#define MC21_ECCD	(*( MC0_ECCD_type *) 0xF0062510U)	/* Memory ECC Detection Register */
#define MC22_ECCD	(*( MC0_ECCD_type *) 0xF0062610U)	/* Memory ECC Detection Register */
#define MC23_ECCD	(*( MC0_ECCD_type *) 0xF0062710U)	/* Memory ECC Detection Register */
#define MC24_ECCD	(*( MC0_ECCD_type *) 0xF0062810U)	/* Memory ECC Detection Register */
#define MC25_ECCD	(*( MC0_ECCD_type *) 0xF0062910U)	/* Memory ECC Detection Register */
#define MC26_ECCD	(*( MC0_ECCD_type *) 0xF0062A10U)	/* Memory ECC Detection Register */
#define MC27_ECCD	(*( MC0_ECCD_type *) 0xF0062B10U)	/* Memory ECC Detection Register */
#define MC28_ECCD	(*( MC0_ECCD_type *) 0xF0062C10U)	/* Memory ECC Detection Register */
#define MC29_ECCD	(*( MC0_ECCD_type *) 0xF0062D10U)	/* Memory ECC Detection Register */
#define MC30_ECCD	(*( MC0_ECCD_type *) 0xF0062E10U)	/* Memory ECC Detection Register */
#define MC31_ECCD	(*( MC0_ECCD_type *) 0xF0062F10U)	/* Memory ECC Detection Register */
#define MC32_ECCD	(*( MC0_ECCD_type *) 0xF0063010U)	/* Memory ECC Detection Register */
#define MC33_ECCD	(*( MC0_ECCD_type *) 0xF0063110U)	/* Memory ECC Detection Register */
#define MC34_ECCD	(*( MC0_ECCD_type *) 0xF0063210U)	/* Memory ECC Detection Register */
#define MC35_ECCD	(*( MC0_ECCD_type *) 0xF0063310U)	/* Memory ECC Detection Register */
#define MC36_ECCD	(*( MC0_ECCD_type *) 0xF0063410U)	/* Memory ECC Detection Register */
#define MC37_ECCD	(*( MC0_ECCD_type *) 0xF0063510U)	/* Memory ECC Detection Register */
#define MC38_ECCD	(*( MC0_ECCD_type *) 0xF0063610U)	/* Memory ECC Detection Register */
#define MC39_ECCD	(*( MC0_ECCD_type *) 0xF0063710U)	/* Memory ECC Detection Register */
#define MC40_ECCD	(*( MC0_ECCD_type *) 0xF0063810U)	/* Memory ECC Detection Register */
#define MC41_ECCD	(*( MC0_ECCD_type *) 0xF0063910U)	/* Memory ECC Detection Register */
#define MC42_ECCD	(*( MC0_ECCD_type *) 0xF0063A10U)	/* Memory ECC Detection Register */
#define MC43_ECCD	(*( MC0_ECCD_type *) 0xF0063B10U)	/* Memory ECC Detection Register */
#define MC44_ECCD	(*( MC0_ECCD_type *) 0xF0063C10U)	/* Memory ECC Detection Register */
#define MC45_ECCD	(*( MC0_ECCD_type *) 0xF0063D10U)	/* Memory ECC Detection Register */
#define MC46_ECCD	(*( MC0_ECCD_type *) 0xF0063E10U)	/* Memory ECC Detection Register */
#define MC47_ECCD	(*( MC0_ECCD_type *) 0xF0063F10U)	/* Memory ECC Detection Register */
#define MC48_ECCD	(*( MC0_ECCD_type *) 0xF0064010U)	/* Memory ECC Detection Register */
#define MC49_ECCD	(*( MC0_ECCD_type *) 0xF0064110U)	/* Memory ECC Detection Register */
#define MC50_ECCD	(*( MC0_ECCD_type *) 0xF0064210U)	/* Memory ECC Detection Register */
#define MC51_ECCD	(*( MC0_ECCD_type *) 0xF0064310U)	/* Memory ECC Detection Register */
#define MC52_ECCD	(*( MC0_ECCD_type *) 0xF0064410U)	/* Memory ECC Detection Register */
#define MC53_ECCD	(*( MC0_ECCD_type *) 0xF0064510U)	/* Memory ECC Detection Register */
#define MC54_ECCD	(*( MC0_ECCD_type *) 0xF0064610U)	/* Memory ECC Detection Register */
#define MC55_ECCD	(*( MC0_ECCD_type *) 0xF0064710U)	/* Memory ECC Detection Register */
#define MC56_ECCD	(*( MC0_ECCD_type *) 0xF0064810U)	/* Memory ECC Detection Register */
#define MC57_ECCD	(*( MC0_ECCD_type *) 0xF0064910U)	/* Memory ECC Detection Register */
#define MC58_ECCD	(*( MC0_ECCD_type *) 0xF0064A10U)	/* Memory ECC Detection Register */
#define MC59_ECCD	(*( MC0_ECCD_type *) 0xF0064B10U)	/* Memory ECC Detection Register */
#define MC60_ECCD	(*( MC0_ECCD_type *) 0xF0064C10U)	/* Memory ECC Detection Register */
#define MC61_ECCD	(*( MC0_ECCD_type *) 0xF0064D10U)	/* Memory ECC Detection Register */
#define MC62_ECCD	(*( MC0_ECCD_type *) 0xF0064E10U)	/* Memory ECC Detection Register */
#define MC63_ECCD	(*( MC0_ECCD_type *) 0xF0064F10U)	/* Memory ECC Detection Register */
#define MC64_ECCD	(*( MC0_ECCD_type *) 0xF0065010U)	/* Memory ECC Detection Register */
#define MC65_ECCD	(*( MC0_ECCD_type *) 0xF0065110U)	/* Memory ECC Detection Register */
#define MC66_ECCD	(*( MC0_ECCD_type *) 0xF0065210U)	/* Memory ECC Detection Register */
#define MC67_ECCD	(*( MC0_ECCD_type *) 0xF0065310U)	/* Memory ECC Detection Register */
#define MC68_ECCD	(*( MC0_ECCD_type *) 0xF0065410U)	/* Memory ECC Detection Register */
#define MC69_ECCD	(*( MC0_ECCD_type *) 0xF0065510U)	/* Memory ECC Detection Register */
#define MC70_ECCD	(*( MC0_ECCD_type *) 0xF0065610U)	/* Memory ECC Detection Register */
#define MC71_ECCD	(*( MC0_ECCD_type *) 0xF0065710U)	/* Memory ECC Detection Register */
#define MC72_ECCD	(*( MC0_ECCD_type *) 0xF0065810U)	/* Memory ECC Detection Register */
#define MC73_ECCD	(*( MC0_ECCD_type *) 0xF0065910U)	/* Memory ECC Detection Register */
#define MC74_ECCD	(*( MC0_ECCD_type *) 0xF0065A10U)	/* Memory ECC Detection Register */
#define MC75_ECCD	(*( MC0_ECCD_type *) 0xF0065B10U)	/* Memory ECC Detection Register */
#define MC76_ECCD	(*( MC0_ECCD_type *) 0xF0065C10U)	/* Memory ECC Detection Register */
#define MC77_ECCD	(*( MC0_ECCD_type *) 0xF0065D10U)	/* Memory ECC Detection Register */
#define MC78_ECCD	(*( MC0_ECCD_type *) 0xF0065E10U)	/* Memory ECC Detection Register */
#define MC79_ECCD	(*( MC0_ECCD_type *) 0xF0065F10U)	/* Memory ECC Detection Register */
#define MC80_ECCD	(*( MC0_ECCD_type *) 0xF0066010U)	/* Memory ECC Detection Register */
#define MC81_ECCD	(*( MC0_ECCD_type *) 0xF0066110U)	/* Memory ECC Detection Register */
#define MC82_ECCD	(*( MC0_ECCD_type *) 0xF0066210U)	/* Memory ECC Detection Register */
#define MC83_ECCD	(*( MC0_ECCD_type *) 0xF0066310U)	/* Memory ECC Detection Register */
#define MC84_ECCD	(*( MC0_ECCD_type *) 0xF0066410U)	/* Memory ECC Detection Register */
#define MC85_ECCD	(*( MC0_ECCD_type *) 0xF0066510U)	/* Memory ECC Detection Register */
#define MC86_ECCD	(*( MC0_ECCD_type *) 0xF0066610U)	/* Memory ECC Detection Register */
#define MC87_ECCD	(*( MC0_ECCD_type *) 0xF0066710U)	/* Memory ECC Detection Register */
#define MC0_ETRR0	(*( MC0_ETRR0_type *) 0xF0061012U)	/* Error Tracking Register 0 */
#define MC0_ETRR1	(*( MC0_ETRR0_type *) 0xF0061014U)	/* Error Tracking Register 1 */
#define MC0_ETRR2	(*( MC0_ETRR0_type *) 0xF0061016U)	/* Error Tracking Register 2 */
#define MC0_ETRR3	(*( MC0_ETRR0_type *) 0xF0061018U)	/* Error Tracking Register 3 */
#define MC0_ETRR4	(*( MC0_ETRR0_type *) 0xF006101AU)	/* Error Tracking Register 4 */
#define MC1_ETRR0	(*( MC0_ETRR0_type *) 0xF0061112U)	/* Error Tracking Register 0 */
#define MC1_ETRR1	(*( MC0_ETRR0_type *) 0xF0061114U)	/* Error Tracking Register 1 */
#define MC1_ETRR2	(*( MC0_ETRR0_type *) 0xF0061116U)	/* Error Tracking Register 2 */
#define MC1_ETRR3	(*( MC0_ETRR0_type *) 0xF0061118U)	/* Error Tracking Register 3 */
#define MC1_ETRR4	(*( MC0_ETRR0_type *) 0xF006111AU)	/* Error Tracking Register 4 */
#define MC2_ETRR0	(*( MC0_ETRR0_type *) 0xF0061212U)	/* Error Tracking Register 0 */
#define MC2_ETRR1	(*( MC0_ETRR0_type *) 0xF0061214U)	/* Error Tracking Register 1 */
#define MC2_ETRR2	(*( MC0_ETRR0_type *) 0xF0061216U)	/* Error Tracking Register 2 */
#define MC2_ETRR3	(*( MC0_ETRR0_type *) 0xF0061218U)	/* Error Tracking Register 3 */
#define MC2_ETRR4	(*( MC0_ETRR0_type *) 0xF006121AU)	/* Error Tracking Register 4 */
#define MC3_ETRR0	(*( MC0_ETRR0_type *) 0xF0061312U)	/* Error Tracking Register 0 */
#define MC3_ETRR1	(*( MC0_ETRR0_type *) 0xF0061314U)	/* Error Tracking Register 1 */
#define MC3_ETRR2	(*( MC0_ETRR0_type *) 0xF0061316U)	/* Error Tracking Register 2 */
#define MC3_ETRR3	(*( MC0_ETRR0_type *) 0xF0061318U)	/* Error Tracking Register 3 */
#define MC3_ETRR4	(*( MC0_ETRR0_type *) 0xF006131AU)	/* Error Tracking Register 4 */
#define MC4_ETRR0	(*( MC0_ETRR0_type *) 0xF0061412U)	/* Error Tracking Register 0 */
#define MC4_ETRR1	(*( MC0_ETRR0_type *) 0xF0061414U)	/* Error Tracking Register 1 */
#define MC4_ETRR2	(*( MC0_ETRR0_type *) 0xF0061416U)	/* Error Tracking Register 2 */
#define MC4_ETRR3	(*( MC0_ETRR0_type *) 0xF0061418U)	/* Error Tracking Register 3 */
#define MC4_ETRR4	(*( MC0_ETRR0_type *) 0xF006141AU)	/* Error Tracking Register 4 */
#define MC5_ETRR0	(*( MC0_ETRR0_type *) 0xF0061512U)	/* Error Tracking Register 0 */
#define MC5_ETRR1	(*( MC0_ETRR0_type *) 0xF0061514U)	/* Error Tracking Register 1 */
#define MC5_ETRR2	(*( MC0_ETRR0_type *) 0xF0061516U)	/* Error Tracking Register 2 */
#define MC5_ETRR3	(*( MC0_ETRR0_type *) 0xF0061518U)	/* Error Tracking Register 3 */
#define MC5_ETRR4	(*( MC0_ETRR0_type *) 0xF006151AU)	/* Error Tracking Register 4 */
#define MC6_ETRR0	(*( MC0_ETRR0_type *) 0xF0061612U)	/* Error Tracking Register 0 */
#define MC6_ETRR1	(*( MC0_ETRR0_type *) 0xF0061614U)	/* Error Tracking Register 1 */
#define MC6_ETRR2	(*( MC0_ETRR0_type *) 0xF0061616U)	/* Error Tracking Register 2 */
#define MC6_ETRR3	(*( MC0_ETRR0_type *) 0xF0061618U)	/* Error Tracking Register 3 */
#define MC6_ETRR4	(*( MC0_ETRR0_type *) 0xF006161AU)	/* Error Tracking Register 4 */
#define MC7_ETRR0	(*( MC0_ETRR0_type *) 0xF0061712U)	/* Error Tracking Register 0 */
#define MC7_ETRR1	(*( MC0_ETRR0_type *) 0xF0061714U)	/* Error Tracking Register 1 */
#define MC7_ETRR2	(*( MC0_ETRR0_type *) 0xF0061716U)	/* Error Tracking Register 2 */
#define MC7_ETRR3	(*( MC0_ETRR0_type *) 0xF0061718U)	/* Error Tracking Register 3 */
#define MC7_ETRR4	(*( MC0_ETRR0_type *) 0xF006171AU)	/* Error Tracking Register 4 */
#define MC8_ETRR0	(*( MC0_ETRR0_type *) 0xF0061812U)	/* Error Tracking Register 0 */
#define MC8_ETRR1	(*( MC0_ETRR0_type *) 0xF0061814U)	/* Error Tracking Register 1 */
#define MC8_ETRR2	(*( MC0_ETRR0_type *) 0xF0061816U)	/* Error Tracking Register 2 */
#define MC8_ETRR3	(*( MC0_ETRR0_type *) 0xF0061818U)	/* Error Tracking Register 3 */
#define MC8_ETRR4	(*( MC0_ETRR0_type *) 0xF006181AU)	/* Error Tracking Register 4 */
#define MC9_ETRR0	(*( MC0_ETRR0_type *) 0xF0061912U)	/* Error Tracking Register 0 */
#define MC9_ETRR1	(*( MC0_ETRR0_type *) 0xF0061914U)	/* Error Tracking Register 1 */
#define MC9_ETRR2	(*( MC0_ETRR0_type *) 0xF0061916U)	/* Error Tracking Register 2 */
#define MC9_ETRR3	(*( MC0_ETRR0_type *) 0xF0061918U)	/* Error Tracking Register 3 */
#define MC9_ETRR4	(*( MC0_ETRR0_type *) 0xF006191AU)	/* Error Tracking Register 4 */
#define MC10_ETRR0	(*( MC0_ETRR0_type *) 0xF0061A12U)	/* Error Tracking Register 0 */
#define MC10_ETRR1	(*( MC0_ETRR0_type *) 0xF0061A14U)	/* Error Tracking Register 1 */
#define MC10_ETRR2	(*( MC0_ETRR0_type *) 0xF0061A16U)	/* Error Tracking Register 2 */
#define MC10_ETRR3	(*( MC0_ETRR0_type *) 0xF0061A18U)	/* Error Tracking Register 3 */
#define MC10_ETRR4	(*( MC0_ETRR0_type *) 0xF0061A1AU)	/* Error Tracking Register 4 */
#define MC11_ETRR0	(*( MC0_ETRR0_type *) 0xF0061B12U)	/* Error Tracking Register 0 */
#define MC11_ETRR1	(*( MC0_ETRR0_type *) 0xF0061B14U)	/* Error Tracking Register 1 */
#define MC11_ETRR2	(*( MC0_ETRR0_type *) 0xF0061B16U)	/* Error Tracking Register 2 */
#define MC11_ETRR3	(*( MC0_ETRR0_type *) 0xF0061B18U)	/* Error Tracking Register 3 */
#define MC11_ETRR4	(*( MC0_ETRR0_type *) 0xF0061B1AU)	/* Error Tracking Register 4 */
#define MC12_ETRR0	(*( MC0_ETRR0_type *) 0xF0061C12U)	/* Error Tracking Register 0 */
#define MC12_ETRR1	(*( MC0_ETRR0_type *) 0xF0061C14U)	/* Error Tracking Register 1 */
#define MC12_ETRR2	(*( MC0_ETRR0_type *) 0xF0061C16U)	/* Error Tracking Register 2 */
#define MC12_ETRR3	(*( MC0_ETRR0_type *) 0xF0061C18U)	/* Error Tracking Register 3 */
#define MC12_ETRR4	(*( MC0_ETRR0_type *) 0xF0061C1AU)	/* Error Tracking Register 4 */
#define MC13_ETRR0	(*( MC0_ETRR0_type *) 0xF0061D12U)	/* Error Tracking Register 0 */
#define MC13_ETRR1	(*( MC0_ETRR0_type *) 0xF0061D14U)	/* Error Tracking Register 1 */
#define MC13_ETRR2	(*( MC0_ETRR0_type *) 0xF0061D16U)	/* Error Tracking Register 2 */
#define MC13_ETRR3	(*( MC0_ETRR0_type *) 0xF0061D18U)	/* Error Tracking Register 3 */
#define MC13_ETRR4	(*( MC0_ETRR0_type *) 0xF0061D1AU)	/* Error Tracking Register 4 */
#define MC14_ETRR0	(*( MC0_ETRR0_type *) 0xF0061E12U)	/* Error Tracking Register 0 */
#define MC14_ETRR1	(*( MC0_ETRR0_type *) 0xF0061E14U)	/* Error Tracking Register 1 */
#define MC14_ETRR2	(*( MC0_ETRR0_type *) 0xF0061E16U)	/* Error Tracking Register 2 */
#define MC14_ETRR3	(*( MC0_ETRR0_type *) 0xF0061E18U)	/* Error Tracking Register 3 */
#define MC14_ETRR4	(*( MC0_ETRR0_type *) 0xF0061E1AU)	/* Error Tracking Register 4 */
#define MC15_ETRR0	(*( MC0_ETRR0_type *) 0xF0061F12U)	/* Error Tracking Register 0 */
#define MC15_ETRR1	(*( MC0_ETRR0_type *) 0xF0061F14U)	/* Error Tracking Register 1 */
#define MC15_ETRR2	(*( MC0_ETRR0_type *) 0xF0061F16U)	/* Error Tracking Register 2 */
#define MC15_ETRR3	(*( MC0_ETRR0_type *) 0xF0061F18U)	/* Error Tracking Register 3 */
#define MC15_ETRR4	(*( MC0_ETRR0_type *) 0xF0061F1AU)	/* Error Tracking Register 4 */
#define MC16_ETRR0	(*( MC0_ETRR0_type *) 0xF0062012U)	/* Error Tracking Register 0 */
#define MC16_ETRR1	(*( MC0_ETRR0_type *) 0xF0062014U)	/* Error Tracking Register 1 */
#define MC16_ETRR2	(*( MC0_ETRR0_type *) 0xF0062016U)	/* Error Tracking Register 2 */
#define MC16_ETRR3	(*( MC0_ETRR0_type *) 0xF0062018U)	/* Error Tracking Register 3 */
#define MC16_ETRR4	(*( MC0_ETRR0_type *) 0xF006201AU)	/* Error Tracking Register 4 */
#define MC17_ETRR0	(*( MC0_ETRR0_type *) 0xF0062112U)	/* Error Tracking Register 0 */
#define MC17_ETRR1	(*( MC0_ETRR0_type *) 0xF0062114U)	/* Error Tracking Register 1 */
#define MC17_ETRR2	(*( MC0_ETRR0_type *) 0xF0062116U)	/* Error Tracking Register 2 */
#define MC17_ETRR3	(*( MC0_ETRR0_type *) 0xF0062118U)	/* Error Tracking Register 3 */
#define MC17_ETRR4	(*( MC0_ETRR0_type *) 0xF006211AU)	/* Error Tracking Register 4 */
#define MC18_ETRR0	(*( MC0_ETRR0_type *) 0xF0062212U)	/* Error Tracking Register 0 */
#define MC18_ETRR1	(*( MC0_ETRR0_type *) 0xF0062214U)	/* Error Tracking Register 1 */
#define MC18_ETRR2	(*( MC0_ETRR0_type *) 0xF0062216U)	/* Error Tracking Register 2 */
#define MC18_ETRR3	(*( MC0_ETRR0_type *) 0xF0062218U)	/* Error Tracking Register 3 */
#define MC18_ETRR4	(*( MC0_ETRR0_type *) 0xF006221AU)	/* Error Tracking Register 4 */
#define MC19_ETRR0	(*( MC0_ETRR0_type *) 0xF0062312U)	/* Error Tracking Register 0 */
#define MC19_ETRR1	(*( MC0_ETRR0_type *) 0xF0062314U)	/* Error Tracking Register 1 */
#define MC19_ETRR2	(*( MC0_ETRR0_type *) 0xF0062316U)	/* Error Tracking Register 2 */
#define MC19_ETRR3	(*( MC0_ETRR0_type *) 0xF0062318U)	/* Error Tracking Register 3 */
#define MC19_ETRR4	(*( MC0_ETRR0_type *) 0xF006231AU)	/* Error Tracking Register 4 */
#define MC20_ETRR0	(*( MC0_ETRR0_type *) 0xF0062412U)	/* Error Tracking Register 0 */
#define MC20_ETRR1	(*( MC0_ETRR0_type *) 0xF0062414U)	/* Error Tracking Register 1 */
#define MC20_ETRR2	(*( MC0_ETRR0_type *) 0xF0062416U)	/* Error Tracking Register 2 */
#define MC20_ETRR3	(*( MC0_ETRR0_type *) 0xF0062418U)	/* Error Tracking Register 3 */
#define MC20_ETRR4	(*( MC0_ETRR0_type *) 0xF006241AU)	/* Error Tracking Register 4 */
#define MC21_ETRR0	(*( MC0_ETRR0_type *) 0xF0062512U)	/* Error Tracking Register 0 */
#define MC21_ETRR1	(*( MC0_ETRR0_type *) 0xF0062514U)	/* Error Tracking Register 1 */
#define MC21_ETRR2	(*( MC0_ETRR0_type *) 0xF0062516U)	/* Error Tracking Register 2 */
#define MC21_ETRR3	(*( MC0_ETRR0_type *) 0xF0062518U)	/* Error Tracking Register 3 */
#define MC21_ETRR4	(*( MC0_ETRR0_type *) 0xF006251AU)	/* Error Tracking Register 4 */
#define MC22_ETRR0	(*( MC0_ETRR0_type *) 0xF0062612U)	/* Error Tracking Register 0 */
#define MC22_ETRR1	(*( MC0_ETRR0_type *) 0xF0062614U)	/* Error Tracking Register 1 */
#define MC22_ETRR2	(*( MC0_ETRR0_type *) 0xF0062616U)	/* Error Tracking Register 2 */
#define MC22_ETRR3	(*( MC0_ETRR0_type *) 0xF0062618U)	/* Error Tracking Register 3 */
#define MC22_ETRR4	(*( MC0_ETRR0_type *) 0xF006261AU)	/* Error Tracking Register 4 */
#define MC23_ETRR0	(*( MC0_ETRR0_type *) 0xF0062712U)	/* Error Tracking Register 0 */
#define MC23_ETRR1	(*( MC0_ETRR0_type *) 0xF0062714U)	/* Error Tracking Register 1 */
#define MC23_ETRR2	(*( MC0_ETRR0_type *) 0xF0062716U)	/* Error Tracking Register 2 */
#define MC23_ETRR3	(*( MC0_ETRR0_type *) 0xF0062718U)	/* Error Tracking Register 3 */
#define MC23_ETRR4	(*( MC0_ETRR0_type *) 0xF006271AU)	/* Error Tracking Register 4 */
#define MC24_ETRR0	(*( MC0_ETRR0_type *) 0xF0062812U)	/* Error Tracking Register 0 */
#define MC24_ETRR1	(*( MC0_ETRR0_type *) 0xF0062814U)	/* Error Tracking Register 1 */
#define MC24_ETRR2	(*( MC0_ETRR0_type *) 0xF0062816U)	/* Error Tracking Register 2 */
#define MC24_ETRR3	(*( MC0_ETRR0_type *) 0xF0062818U)	/* Error Tracking Register 3 */
#define MC24_ETRR4	(*( MC0_ETRR0_type *) 0xF006281AU)	/* Error Tracking Register 4 */
#define MC25_ETRR0	(*( MC0_ETRR0_type *) 0xF0062912U)	/* Error Tracking Register 0 */
#define MC25_ETRR1	(*( MC0_ETRR0_type *) 0xF0062914U)	/* Error Tracking Register 1 */
#define MC25_ETRR2	(*( MC0_ETRR0_type *) 0xF0062916U)	/* Error Tracking Register 2 */
#define MC25_ETRR3	(*( MC0_ETRR0_type *) 0xF0062918U)	/* Error Tracking Register 3 */
#define MC25_ETRR4	(*( MC0_ETRR0_type *) 0xF006291AU)	/* Error Tracking Register 4 */
#define MC26_ETRR0	(*( MC0_ETRR0_type *) 0xF0062A12U)	/* Error Tracking Register 0 */
#define MC26_ETRR1	(*( MC0_ETRR0_type *) 0xF0062A14U)	/* Error Tracking Register 1 */
#define MC26_ETRR2	(*( MC0_ETRR0_type *) 0xF0062A16U)	/* Error Tracking Register 2 */
#define MC26_ETRR3	(*( MC0_ETRR0_type *) 0xF0062A18U)	/* Error Tracking Register 3 */
#define MC26_ETRR4	(*( MC0_ETRR0_type *) 0xF0062A1AU)	/* Error Tracking Register 4 */
#define MC27_ETRR0	(*( MC0_ETRR0_type *) 0xF0062B12U)	/* Error Tracking Register 0 */
#define MC27_ETRR1	(*( MC0_ETRR0_type *) 0xF0062B14U)	/* Error Tracking Register 1 */
#define MC27_ETRR2	(*( MC0_ETRR0_type *) 0xF0062B16U)	/* Error Tracking Register 2 */
#define MC27_ETRR3	(*( MC0_ETRR0_type *) 0xF0062B18U)	/* Error Tracking Register 3 */
#define MC27_ETRR4	(*( MC0_ETRR0_type *) 0xF0062B1AU)	/* Error Tracking Register 4 */
#define MC28_ETRR0	(*( MC0_ETRR0_type *) 0xF0062C12U)	/* Error Tracking Register 0 */
#define MC28_ETRR1	(*( MC0_ETRR0_type *) 0xF0062C14U)	/* Error Tracking Register 1 */
#define MC28_ETRR2	(*( MC0_ETRR0_type *) 0xF0062C16U)	/* Error Tracking Register 2 */
#define MC28_ETRR3	(*( MC0_ETRR0_type *) 0xF0062C18U)	/* Error Tracking Register 3 */
#define MC28_ETRR4	(*( MC0_ETRR0_type *) 0xF0062C1AU)	/* Error Tracking Register 4 */
#define MC29_ETRR0	(*( MC0_ETRR0_type *) 0xF0062D12U)	/* Error Tracking Register 0 */
#define MC29_ETRR1	(*( MC0_ETRR0_type *) 0xF0062D14U)	/* Error Tracking Register 1 */
#define MC29_ETRR2	(*( MC0_ETRR0_type *) 0xF0062D16U)	/* Error Tracking Register 2 */
#define MC29_ETRR3	(*( MC0_ETRR0_type *) 0xF0062D18U)	/* Error Tracking Register 3 */
#define MC29_ETRR4	(*( MC0_ETRR0_type *) 0xF0062D1AU)	/* Error Tracking Register 4 */
#define MC30_ETRR0	(*( MC0_ETRR0_type *) 0xF0062E12U)	/* Error Tracking Register 0 */
#define MC30_ETRR1	(*( MC0_ETRR0_type *) 0xF0062E14U)	/* Error Tracking Register 1 */
#define MC30_ETRR2	(*( MC0_ETRR0_type *) 0xF0062E16U)	/* Error Tracking Register 2 */
#define MC30_ETRR3	(*( MC0_ETRR0_type *) 0xF0062E18U)	/* Error Tracking Register 3 */
#define MC30_ETRR4	(*( MC0_ETRR0_type *) 0xF0062E1AU)	/* Error Tracking Register 4 */
#define MC31_ETRR0	(*( MC0_ETRR0_type *) 0xF0062F12U)	/* Error Tracking Register 0 */
#define MC31_ETRR1	(*( MC0_ETRR0_type *) 0xF0062F14U)	/* Error Tracking Register 1 */
#define MC31_ETRR2	(*( MC0_ETRR0_type *) 0xF0062F16U)	/* Error Tracking Register 2 */
#define MC31_ETRR3	(*( MC0_ETRR0_type *) 0xF0062F18U)	/* Error Tracking Register 3 */
#define MC31_ETRR4	(*( MC0_ETRR0_type *) 0xF0062F1AU)	/* Error Tracking Register 4 */
#define MC32_ETRR0	(*( MC0_ETRR0_type *) 0xF0063012U)	/* Error Tracking Register 0 */
#define MC32_ETRR1	(*( MC0_ETRR0_type *) 0xF0063014U)	/* Error Tracking Register 1 */
#define MC32_ETRR2	(*( MC0_ETRR0_type *) 0xF0063016U)	/* Error Tracking Register 2 */
#define MC32_ETRR3	(*( MC0_ETRR0_type *) 0xF0063018U)	/* Error Tracking Register 3 */
#define MC32_ETRR4	(*( MC0_ETRR0_type *) 0xF006301AU)	/* Error Tracking Register 4 */
#define MC33_ETRR0	(*( MC0_ETRR0_type *) 0xF0063112U)	/* Error Tracking Register 0 */
#define MC33_ETRR1	(*( MC0_ETRR0_type *) 0xF0063114U)	/* Error Tracking Register 1 */
#define MC33_ETRR2	(*( MC0_ETRR0_type *) 0xF0063116U)	/* Error Tracking Register 2 */
#define MC33_ETRR3	(*( MC0_ETRR0_type *) 0xF0063118U)	/* Error Tracking Register 3 */
#define MC33_ETRR4	(*( MC0_ETRR0_type *) 0xF006311AU)	/* Error Tracking Register 4 */
#define MC34_ETRR0	(*( MC0_ETRR0_type *) 0xF0063212U)	/* Error Tracking Register 0 */
#define MC34_ETRR1	(*( MC0_ETRR0_type *) 0xF0063214U)	/* Error Tracking Register 1 */
#define MC34_ETRR2	(*( MC0_ETRR0_type *) 0xF0063216U)	/* Error Tracking Register 2 */
#define MC34_ETRR3	(*( MC0_ETRR0_type *) 0xF0063218U)	/* Error Tracking Register 3 */
#define MC34_ETRR4	(*( MC0_ETRR0_type *) 0xF006321AU)	/* Error Tracking Register 4 */
#define MC35_ETRR0	(*( MC0_ETRR0_type *) 0xF0063312U)	/* Error Tracking Register 0 */
#define MC35_ETRR1	(*( MC0_ETRR0_type *) 0xF0063314U)	/* Error Tracking Register 1 */
#define MC35_ETRR2	(*( MC0_ETRR0_type *) 0xF0063316U)	/* Error Tracking Register 2 */
#define MC35_ETRR3	(*( MC0_ETRR0_type *) 0xF0063318U)	/* Error Tracking Register 3 */
#define MC35_ETRR4	(*( MC0_ETRR0_type *) 0xF006331AU)	/* Error Tracking Register 4 */
#define MC36_ETRR0	(*( MC0_ETRR0_type *) 0xF0063412U)	/* Error Tracking Register 0 */
#define MC36_ETRR1	(*( MC0_ETRR0_type *) 0xF0063414U)	/* Error Tracking Register 1 */
#define MC36_ETRR2	(*( MC0_ETRR0_type *) 0xF0063416U)	/* Error Tracking Register 2 */
#define MC36_ETRR3	(*( MC0_ETRR0_type *) 0xF0063418U)	/* Error Tracking Register 3 */
#define MC36_ETRR4	(*( MC0_ETRR0_type *) 0xF006341AU)	/* Error Tracking Register 4 */
#define MC37_ETRR0	(*( MC0_ETRR0_type *) 0xF0063512U)	/* Error Tracking Register 0 */
#define MC37_ETRR1	(*( MC0_ETRR0_type *) 0xF0063514U)	/* Error Tracking Register 1 */
#define MC37_ETRR2	(*( MC0_ETRR0_type *) 0xF0063516U)	/* Error Tracking Register 2 */
#define MC37_ETRR3	(*( MC0_ETRR0_type *) 0xF0063518U)	/* Error Tracking Register 3 */
#define MC37_ETRR4	(*( MC0_ETRR0_type *) 0xF006351AU)	/* Error Tracking Register 4 */
#define MC38_ETRR0	(*( MC0_ETRR0_type *) 0xF0063612U)	/* Error Tracking Register 0 */
#define MC38_ETRR1	(*( MC0_ETRR0_type *) 0xF0063614U)	/* Error Tracking Register 1 */
#define MC38_ETRR2	(*( MC0_ETRR0_type *) 0xF0063616U)	/* Error Tracking Register 2 */
#define MC38_ETRR3	(*( MC0_ETRR0_type *) 0xF0063618U)	/* Error Tracking Register 3 */
#define MC38_ETRR4	(*( MC0_ETRR0_type *) 0xF006361AU)	/* Error Tracking Register 4 */
#define MC39_ETRR0	(*( MC0_ETRR0_type *) 0xF0063712U)	/* Error Tracking Register 0 */
#define MC39_ETRR1	(*( MC0_ETRR0_type *) 0xF0063714U)	/* Error Tracking Register 1 */
#define MC39_ETRR2	(*( MC0_ETRR0_type *) 0xF0063716U)	/* Error Tracking Register 2 */
#define MC39_ETRR3	(*( MC0_ETRR0_type *) 0xF0063718U)	/* Error Tracking Register 3 */
#define MC39_ETRR4	(*( MC0_ETRR0_type *) 0xF006371AU)	/* Error Tracking Register 4 */
#define MC40_ETRR0	(*( MC0_ETRR0_type *) 0xF0063812U)	/* Error Tracking Register 0 */
#define MC40_ETRR1	(*( MC0_ETRR0_type *) 0xF0063814U)	/* Error Tracking Register 1 */
#define MC40_ETRR2	(*( MC0_ETRR0_type *) 0xF0063816U)	/* Error Tracking Register 2 */
#define MC40_ETRR3	(*( MC0_ETRR0_type *) 0xF0063818U)	/* Error Tracking Register 3 */
#define MC40_ETRR4	(*( MC0_ETRR0_type *) 0xF006381AU)	/* Error Tracking Register 4 */
#define MC41_ETRR0	(*( MC0_ETRR0_type *) 0xF0063912U)	/* Error Tracking Register 0 */
#define MC41_ETRR1	(*( MC0_ETRR0_type *) 0xF0063914U)	/* Error Tracking Register 1 */
#define MC41_ETRR2	(*( MC0_ETRR0_type *) 0xF0063916U)	/* Error Tracking Register 2 */
#define MC41_ETRR3	(*( MC0_ETRR0_type *) 0xF0063918U)	/* Error Tracking Register 3 */
#define MC41_ETRR4	(*( MC0_ETRR0_type *) 0xF006391AU)	/* Error Tracking Register 4 */
#define MC42_ETRR0	(*( MC0_ETRR0_type *) 0xF0063A12U)	/* Error Tracking Register 0 */
#define MC42_ETRR1	(*( MC0_ETRR0_type *) 0xF0063A14U)	/* Error Tracking Register 1 */
#define MC42_ETRR2	(*( MC0_ETRR0_type *) 0xF0063A16U)	/* Error Tracking Register 2 */
#define MC42_ETRR3	(*( MC0_ETRR0_type *) 0xF0063A18U)	/* Error Tracking Register 3 */
#define MC42_ETRR4	(*( MC0_ETRR0_type *) 0xF0063A1AU)	/* Error Tracking Register 4 */
#define MC43_ETRR0	(*( MC0_ETRR0_type *) 0xF0063B12U)	/* Error Tracking Register 0 */
#define MC43_ETRR1	(*( MC0_ETRR0_type *) 0xF0063B14U)	/* Error Tracking Register 1 */
#define MC43_ETRR2	(*( MC0_ETRR0_type *) 0xF0063B16U)	/* Error Tracking Register 2 */
#define MC43_ETRR3	(*( MC0_ETRR0_type *) 0xF0063B18U)	/* Error Tracking Register 3 */
#define MC43_ETRR4	(*( MC0_ETRR0_type *) 0xF0063B1AU)	/* Error Tracking Register 4 */
#define MC44_ETRR0	(*( MC0_ETRR0_type *) 0xF0063C12U)	/* Error Tracking Register 0 */
#define MC44_ETRR1	(*( MC0_ETRR0_type *) 0xF0063C14U)	/* Error Tracking Register 1 */
#define MC44_ETRR2	(*( MC0_ETRR0_type *) 0xF0063C16U)	/* Error Tracking Register 2 */
#define MC44_ETRR3	(*( MC0_ETRR0_type *) 0xF0063C18U)	/* Error Tracking Register 3 */
#define MC44_ETRR4	(*( MC0_ETRR0_type *) 0xF0063C1AU)	/* Error Tracking Register 4 */
#define MC45_ETRR0	(*( MC0_ETRR0_type *) 0xF0063D12U)	/* Error Tracking Register 0 */
#define MC45_ETRR1	(*( MC0_ETRR0_type *) 0xF0063D14U)	/* Error Tracking Register 1 */
#define MC45_ETRR2	(*( MC0_ETRR0_type *) 0xF0063D16U)	/* Error Tracking Register 2 */
#define MC45_ETRR3	(*( MC0_ETRR0_type *) 0xF0063D18U)	/* Error Tracking Register 3 */
#define MC45_ETRR4	(*( MC0_ETRR0_type *) 0xF0063D1AU)	/* Error Tracking Register 4 */
#define MC46_ETRR0	(*( MC0_ETRR0_type *) 0xF0063E12U)	/* Error Tracking Register 0 */
#define MC46_ETRR1	(*( MC0_ETRR0_type *) 0xF0063E14U)	/* Error Tracking Register 1 */
#define MC46_ETRR2	(*( MC0_ETRR0_type *) 0xF0063E16U)	/* Error Tracking Register 2 */
#define MC46_ETRR3	(*( MC0_ETRR0_type *) 0xF0063E18U)	/* Error Tracking Register 3 */
#define MC46_ETRR4	(*( MC0_ETRR0_type *) 0xF0063E1AU)	/* Error Tracking Register 4 */
#define MC47_ETRR0	(*( MC0_ETRR0_type *) 0xF0063F12U)	/* Error Tracking Register 0 */
#define MC47_ETRR1	(*( MC0_ETRR0_type *) 0xF0063F14U)	/* Error Tracking Register 1 */
#define MC47_ETRR2	(*( MC0_ETRR0_type *) 0xF0063F16U)	/* Error Tracking Register 2 */
#define MC47_ETRR3	(*( MC0_ETRR0_type *) 0xF0063F18U)	/* Error Tracking Register 3 */
#define MC47_ETRR4	(*( MC0_ETRR0_type *) 0xF0063F1AU)	/* Error Tracking Register 4 */
#define MC48_ETRR0	(*( MC0_ETRR0_type *) 0xF0064012U)	/* Error Tracking Register 0 */
#define MC48_ETRR1	(*( MC0_ETRR0_type *) 0xF0064014U)	/* Error Tracking Register 1 */
#define MC48_ETRR2	(*( MC0_ETRR0_type *) 0xF0064016U)	/* Error Tracking Register 2 */
#define MC48_ETRR3	(*( MC0_ETRR0_type *) 0xF0064018U)	/* Error Tracking Register 3 */
#define MC48_ETRR4	(*( MC0_ETRR0_type *) 0xF006401AU)	/* Error Tracking Register 4 */
#define MC49_ETRR0	(*( MC0_ETRR0_type *) 0xF0064112U)	/* Error Tracking Register 0 */
#define MC49_ETRR1	(*( MC0_ETRR0_type *) 0xF0064114U)	/* Error Tracking Register 1 */
#define MC49_ETRR2	(*( MC0_ETRR0_type *) 0xF0064116U)	/* Error Tracking Register 2 */
#define MC49_ETRR3	(*( MC0_ETRR0_type *) 0xF0064118U)	/* Error Tracking Register 3 */
#define MC49_ETRR4	(*( MC0_ETRR0_type *) 0xF006411AU)	/* Error Tracking Register 4 */
#define MC50_ETRR0	(*( MC0_ETRR0_type *) 0xF0064212U)	/* Error Tracking Register 0 */
#define MC50_ETRR1	(*( MC0_ETRR0_type *) 0xF0064214U)	/* Error Tracking Register 1 */
#define MC50_ETRR2	(*( MC0_ETRR0_type *) 0xF0064216U)	/* Error Tracking Register 2 */
#define MC50_ETRR3	(*( MC0_ETRR0_type *) 0xF0064218U)	/* Error Tracking Register 3 */
#define MC50_ETRR4	(*( MC0_ETRR0_type *) 0xF006421AU)	/* Error Tracking Register 4 */
#define MC51_ETRR0	(*( MC0_ETRR0_type *) 0xF0064312U)	/* Error Tracking Register 0 */
#define MC51_ETRR1	(*( MC0_ETRR0_type *) 0xF0064314U)	/* Error Tracking Register 1 */
#define MC51_ETRR2	(*( MC0_ETRR0_type *) 0xF0064316U)	/* Error Tracking Register 2 */
#define MC51_ETRR3	(*( MC0_ETRR0_type *) 0xF0064318U)	/* Error Tracking Register 3 */
#define MC51_ETRR4	(*( MC0_ETRR0_type *) 0xF006431AU)	/* Error Tracking Register 4 */
#define MC52_ETRR0	(*( MC0_ETRR0_type *) 0xF0064412U)	/* Error Tracking Register 0 */
#define MC52_ETRR1	(*( MC0_ETRR0_type *) 0xF0064414U)	/* Error Tracking Register 1 */
#define MC52_ETRR2	(*( MC0_ETRR0_type *) 0xF0064416U)	/* Error Tracking Register 2 */
#define MC52_ETRR3	(*( MC0_ETRR0_type *) 0xF0064418U)	/* Error Tracking Register 3 */
#define MC52_ETRR4	(*( MC0_ETRR0_type *) 0xF006441AU)	/* Error Tracking Register 4 */
#define MC53_ETRR0	(*( MC0_ETRR0_type *) 0xF0064512U)	/* Error Tracking Register 0 */
#define MC53_ETRR1	(*( MC0_ETRR0_type *) 0xF0064514U)	/* Error Tracking Register 1 */
#define MC53_ETRR2	(*( MC0_ETRR0_type *) 0xF0064516U)	/* Error Tracking Register 2 */
#define MC53_ETRR3	(*( MC0_ETRR0_type *) 0xF0064518U)	/* Error Tracking Register 3 */
#define MC53_ETRR4	(*( MC0_ETRR0_type *) 0xF006451AU)	/* Error Tracking Register 4 */
#define MC54_ETRR0	(*( MC0_ETRR0_type *) 0xF0064612U)	/* Error Tracking Register 0 */
#define MC54_ETRR1	(*( MC0_ETRR0_type *) 0xF0064614U)	/* Error Tracking Register 1 */
#define MC54_ETRR2	(*( MC0_ETRR0_type *) 0xF0064616U)	/* Error Tracking Register 2 */
#define MC54_ETRR3	(*( MC0_ETRR0_type *) 0xF0064618U)	/* Error Tracking Register 3 */
#define MC54_ETRR4	(*( MC0_ETRR0_type *) 0xF006461AU)	/* Error Tracking Register 4 */
#define MC55_ETRR0	(*( MC0_ETRR0_type *) 0xF0064712U)	/* Error Tracking Register 0 */
#define MC55_ETRR1	(*( MC0_ETRR0_type *) 0xF0064714U)	/* Error Tracking Register 1 */
#define MC55_ETRR2	(*( MC0_ETRR0_type *) 0xF0064716U)	/* Error Tracking Register 2 */
#define MC55_ETRR3	(*( MC0_ETRR0_type *) 0xF0064718U)	/* Error Tracking Register 3 */
#define MC55_ETRR4	(*( MC0_ETRR0_type *) 0xF006471AU)	/* Error Tracking Register 4 */
#define MC56_ETRR0	(*( MC0_ETRR0_type *) 0xF0064812U)	/* Error Tracking Register 0 */
#define MC56_ETRR1	(*( MC0_ETRR0_type *) 0xF0064814U)	/* Error Tracking Register 1 */
#define MC56_ETRR2	(*( MC0_ETRR0_type *) 0xF0064816U)	/* Error Tracking Register 2 */
#define MC56_ETRR3	(*( MC0_ETRR0_type *) 0xF0064818U)	/* Error Tracking Register 3 */
#define MC56_ETRR4	(*( MC0_ETRR0_type *) 0xF006481AU)	/* Error Tracking Register 4 */
#define MC57_ETRR0	(*( MC0_ETRR0_type *) 0xF0064912U)	/* Error Tracking Register 0 */
#define MC57_ETRR1	(*( MC0_ETRR0_type *) 0xF0064914U)	/* Error Tracking Register 1 */
#define MC57_ETRR2	(*( MC0_ETRR0_type *) 0xF0064916U)	/* Error Tracking Register 2 */
#define MC57_ETRR3	(*( MC0_ETRR0_type *) 0xF0064918U)	/* Error Tracking Register 3 */
#define MC57_ETRR4	(*( MC0_ETRR0_type *) 0xF006491AU)	/* Error Tracking Register 4 */
#define MC58_ETRR0	(*( MC0_ETRR0_type *) 0xF0064A12U)	/* Error Tracking Register 0 */
#define MC58_ETRR1	(*( MC0_ETRR0_type *) 0xF0064A14U)	/* Error Tracking Register 1 */
#define MC58_ETRR2	(*( MC0_ETRR0_type *) 0xF0064A16U)	/* Error Tracking Register 2 */
#define MC58_ETRR3	(*( MC0_ETRR0_type *) 0xF0064A18U)	/* Error Tracking Register 3 */
#define MC58_ETRR4	(*( MC0_ETRR0_type *) 0xF0064A1AU)	/* Error Tracking Register 4 */
#define MC59_ETRR0	(*( MC0_ETRR0_type *) 0xF0064B12U)	/* Error Tracking Register 0 */
#define MC59_ETRR1	(*( MC0_ETRR0_type *) 0xF0064B14U)	/* Error Tracking Register 1 */
#define MC59_ETRR2	(*( MC0_ETRR0_type *) 0xF0064B16U)	/* Error Tracking Register 2 */
#define MC59_ETRR3	(*( MC0_ETRR0_type *) 0xF0064B18U)	/* Error Tracking Register 3 */
#define MC59_ETRR4	(*( MC0_ETRR0_type *) 0xF0064B1AU)	/* Error Tracking Register 4 */
#define MC60_ETRR0	(*( MC0_ETRR0_type *) 0xF0064C12U)	/* Error Tracking Register 0 */
#define MC60_ETRR1	(*( MC0_ETRR0_type *) 0xF0064C14U)	/* Error Tracking Register 1 */
#define MC60_ETRR2	(*( MC0_ETRR0_type *) 0xF0064C16U)	/* Error Tracking Register 2 */
#define MC60_ETRR3	(*( MC0_ETRR0_type *) 0xF0064C18U)	/* Error Tracking Register 3 */
#define MC60_ETRR4	(*( MC0_ETRR0_type *) 0xF0064C1AU)	/* Error Tracking Register 4 */
#define MC61_ETRR0	(*( MC0_ETRR0_type *) 0xF0064D12U)	/* Error Tracking Register 0 */
#define MC61_ETRR1	(*( MC0_ETRR0_type *) 0xF0064D14U)	/* Error Tracking Register 1 */
#define MC61_ETRR2	(*( MC0_ETRR0_type *) 0xF0064D16U)	/* Error Tracking Register 2 */
#define MC61_ETRR3	(*( MC0_ETRR0_type *) 0xF0064D18U)	/* Error Tracking Register 3 */
#define MC61_ETRR4	(*( MC0_ETRR0_type *) 0xF0064D1AU)	/* Error Tracking Register 4 */
#define MC62_ETRR0	(*( MC0_ETRR0_type *) 0xF0064E12U)	/* Error Tracking Register 0 */
#define MC62_ETRR1	(*( MC0_ETRR0_type *) 0xF0064E14U)	/* Error Tracking Register 1 */
#define MC62_ETRR2	(*( MC0_ETRR0_type *) 0xF0064E16U)	/* Error Tracking Register 2 */
#define MC62_ETRR3	(*( MC0_ETRR0_type *) 0xF0064E18U)	/* Error Tracking Register 3 */
#define MC62_ETRR4	(*( MC0_ETRR0_type *) 0xF0064E1AU)	/* Error Tracking Register 4 */
#define MC63_ETRR0	(*( MC0_ETRR0_type *) 0xF0064F12U)	/* Error Tracking Register 0 */
#define MC63_ETRR1	(*( MC0_ETRR0_type *) 0xF0064F14U)	/* Error Tracking Register 1 */
#define MC63_ETRR2	(*( MC0_ETRR0_type *) 0xF0064F16U)	/* Error Tracking Register 2 */
#define MC63_ETRR3	(*( MC0_ETRR0_type *) 0xF0064F18U)	/* Error Tracking Register 3 */
#define MC63_ETRR4	(*( MC0_ETRR0_type *) 0xF0064F1AU)	/* Error Tracking Register 4 */
#define MC64_ETRR0	(*( MC0_ETRR0_type *) 0xF0065012U)	/* Error Tracking Register 0 */
#define MC64_ETRR1	(*( MC0_ETRR0_type *) 0xF0065014U)	/* Error Tracking Register 1 */
#define MC64_ETRR2	(*( MC0_ETRR0_type *) 0xF0065016U)	/* Error Tracking Register 2 */
#define MC64_ETRR3	(*( MC0_ETRR0_type *) 0xF0065018U)	/* Error Tracking Register 3 */
#define MC64_ETRR4	(*( MC0_ETRR0_type *) 0xF006501AU)	/* Error Tracking Register 4 */
#define MC65_ETRR0	(*( MC0_ETRR0_type *) 0xF0065112U)	/* Error Tracking Register 0 */
#define MC65_ETRR1	(*( MC0_ETRR0_type *) 0xF0065114U)	/* Error Tracking Register 1 */
#define MC65_ETRR2	(*( MC0_ETRR0_type *) 0xF0065116U)	/* Error Tracking Register 2 */
#define MC65_ETRR3	(*( MC0_ETRR0_type *) 0xF0065118U)	/* Error Tracking Register 3 */
#define MC65_ETRR4	(*( MC0_ETRR0_type *) 0xF006511AU)	/* Error Tracking Register 4 */
#define MC66_ETRR0	(*( MC0_ETRR0_type *) 0xF0065212U)	/* Error Tracking Register 0 */
#define MC66_ETRR1	(*( MC0_ETRR0_type *) 0xF0065214U)	/* Error Tracking Register 1 */
#define MC66_ETRR2	(*( MC0_ETRR0_type *) 0xF0065216U)	/* Error Tracking Register 2 */
#define MC66_ETRR3	(*( MC0_ETRR0_type *) 0xF0065218U)	/* Error Tracking Register 3 */
#define MC66_ETRR4	(*( MC0_ETRR0_type *) 0xF006521AU)	/* Error Tracking Register 4 */
#define MC67_ETRR0	(*( MC0_ETRR0_type *) 0xF0065312U)	/* Error Tracking Register 0 */
#define MC67_ETRR1	(*( MC0_ETRR0_type *) 0xF0065314U)	/* Error Tracking Register 1 */
#define MC67_ETRR2	(*( MC0_ETRR0_type *) 0xF0065316U)	/* Error Tracking Register 2 */
#define MC67_ETRR3	(*( MC0_ETRR0_type *) 0xF0065318U)	/* Error Tracking Register 3 */
#define MC67_ETRR4	(*( MC0_ETRR0_type *) 0xF006531AU)	/* Error Tracking Register 4 */
#define MC68_ETRR0	(*( MC0_ETRR0_type *) 0xF0065412U)	/* Error Tracking Register 0 */
#define MC68_ETRR1	(*( MC0_ETRR0_type *) 0xF0065414U)	/* Error Tracking Register 1 */
#define MC68_ETRR2	(*( MC0_ETRR0_type *) 0xF0065416U)	/* Error Tracking Register 2 */
#define MC68_ETRR3	(*( MC0_ETRR0_type *) 0xF0065418U)	/* Error Tracking Register 3 */
#define MC68_ETRR4	(*( MC0_ETRR0_type *) 0xF006541AU)	/* Error Tracking Register 4 */
#define MC69_ETRR0	(*( MC0_ETRR0_type *) 0xF0065512U)	/* Error Tracking Register 0 */
#define MC69_ETRR1	(*( MC0_ETRR0_type *) 0xF0065514U)	/* Error Tracking Register 1 */
#define MC69_ETRR2	(*( MC0_ETRR0_type *) 0xF0065516U)	/* Error Tracking Register 2 */
#define MC69_ETRR3	(*( MC0_ETRR0_type *) 0xF0065518U)	/* Error Tracking Register 3 */
#define MC69_ETRR4	(*( MC0_ETRR0_type *) 0xF006551AU)	/* Error Tracking Register 4 */
#define MC70_ETRR0	(*( MC0_ETRR0_type *) 0xF0065612U)	/* Error Tracking Register 0 */
#define MC70_ETRR1	(*( MC0_ETRR0_type *) 0xF0065614U)	/* Error Tracking Register 1 */
#define MC70_ETRR2	(*( MC0_ETRR0_type *) 0xF0065616U)	/* Error Tracking Register 2 */
#define MC70_ETRR3	(*( MC0_ETRR0_type *) 0xF0065618U)	/* Error Tracking Register 3 */
#define MC70_ETRR4	(*( MC0_ETRR0_type *) 0xF006561AU)	/* Error Tracking Register 4 */
#define MC71_ETRR0	(*( MC0_ETRR0_type *) 0xF0065712U)	/* Error Tracking Register 0 */
#define MC71_ETRR1	(*( MC0_ETRR0_type *) 0xF0065714U)	/* Error Tracking Register 1 */
#define MC71_ETRR2	(*( MC0_ETRR0_type *) 0xF0065716U)	/* Error Tracking Register 2 */
#define MC71_ETRR3	(*( MC0_ETRR0_type *) 0xF0065718U)	/* Error Tracking Register 3 */
#define MC71_ETRR4	(*( MC0_ETRR0_type *) 0xF006571AU)	/* Error Tracking Register 4 */
#define MC72_ETRR0	(*( MC0_ETRR0_type *) 0xF0065812U)	/* Error Tracking Register 0 */
#define MC72_ETRR1	(*( MC0_ETRR0_type *) 0xF0065814U)	/* Error Tracking Register 1 */
#define MC72_ETRR2	(*( MC0_ETRR0_type *) 0xF0065816U)	/* Error Tracking Register 2 */
#define MC72_ETRR3	(*( MC0_ETRR0_type *) 0xF0065818U)	/* Error Tracking Register 3 */
#define MC72_ETRR4	(*( MC0_ETRR0_type *) 0xF006581AU)	/* Error Tracking Register 4 */
#define MC73_ETRR0	(*( MC0_ETRR0_type *) 0xF0065912U)	/* Error Tracking Register 0 */
#define MC73_ETRR1	(*( MC0_ETRR0_type *) 0xF0065914U)	/* Error Tracking Register 1 */
#define MC73_ETRR2	(*( MC0_ETRR0_type *) 0xF0065916U)	/* Error Tracking Register 2 */
#define MC73_ETRR3	(*( MC0_ETRR0_type *) 0xF0065918U)	/* Error Tracking Register 3 */
#define MC73_ETRR4	(*( MC0_ETRR0_type *) 0xF006591AU)	/* Error Tracking Register 4 */
#define MC74_ETRR0	(*( MC0_ETRR0_type *) 0xF0065A12U)	/* Error Tracking Register 0 */
#define MC74_ETRR1	(*( MC0_ETRR0_type *) 0xF0065A14U)	/* Error Tracking Register 1 */
#define MC74_ETRR2	(*( MC0_ETRR0_type *) 0xF0065A16U)	/* Error Tracking Register 2 */
#define MC74_ETRR3	(*( MC0_ETRR0_type *) 0xF0065A18U)	/* Error Tracking Register 3 */
#define MC74_ETRR4	(*( MC0_ETRR0_type *) 0xF0065A1AU)	/* Error Tracking Register 4 */
#define MC75_ETRR0	(*( MC0_ETRR0_type *) 0xF0065B12U)	/* Error Tracking Register 0 */
#define MC75_ETRR1	(*( MC0_ETRR0_type *) 0xF0065B14U)	/* Error Tracking Register 1 */
#define MC75_ETRR2	(*( MC0_ETRR0_type *) 0xF0065B16U)	/* Error Tracking Register 2 */
#define MC75_ETRR3	(*( MC0_ETRR0_type *) 0xF0065B18U)	/* Error Tracking Register 3 */
#define MC75_ETRR4	(*( MC0_ETRR0_type *) 0xF0065B1AU)	/* Error Tracking Register 4 */
#define MC76_ETRR0	(*( MC0_ETRR0_type *) 0xF0065C12U)	/* Error Tracking Register 0 */
#define MC76_ETRR1	(*( MC0_ETRR0_type *) 0xF0065C14U)	/* Error Tracking Register 1 */
#define MC76_ETRR2	(*( MC0_ETRR0_type *) 0xF0065C16U)	/* Error Tracking Register 2 */
#define MC76_ETRR3	(*( MC0_ETRR0_type *) 0xF0065C18U)	/* Error Tracking Register 3 */
#define MC76_ETRR4	(*( MC0_ETRR0_type *) 0xF0065C1AU)	/* Error Tracking Register 4 */
#define MC77_ETRR0	(*( MC0_ETRR0_type *) 0xF0065D12U)	/* Error Tracking Register 0 */
#define MC77_ETRR1	(*( MC0_ETRR0_type *) 0xF0065D14U)	/* Error Tracking Register 1 */
#define MC77_ETRR2	(*( MC0_ETRR0_type *) 0xF0065D16U)	/* Error Tracking Register 2 */
#define MC77_ETRR3	(*( MC0_ETRR0_type *) 0xF0065D18U)	/* Error Tracking Register 3 */
#define MC77_ETRR4	(*( MC0_ETRR0_type *) 0xF0065D1AU)	/* Error Tracking Register 4 */
#define MC78_ETRR0	(*( MC0_ETRR0_type *) 0xF0065E12U)	/* Error Tracking Register 0 */
#define MC78_ETRR1	(*( MC0_ETRR0_type *) 0xF0065E14U)	/* Error Tracking Register 1 */
#define MC78_ETRR2	(*( MC0_ETRR0_type *) 0xF0065E16U)	/* Error Tracking Register 2 */
#define MC78_ETRR3	(*( MC0_ETRR0_type *) 0xF0065E18U)	/* Error Tracking Register 3 */
#define MC78_ETRR4	(*( MC0_ETRR0_type *) 0xF0065E1AU)	/* Error Tracking Register 4 */
#define MC79_ETRR0	(*( MC0_ETRR0_type *) 0xF0065F12U)	/* Error Tracking Register 0 */
#define MC79_ETRR1	(*( MC0_ETRR0_type *) 0xF0065F14U)	/* Error Tracking Register 1 */
#define MC79_ETRR2	(*( MC0_ETRR0_type *) 0xF0065F16U)	/* Error Tracking Register 2 */
#define MC79_ETRR3	(*( MC0_ETRR0_type *) 0xF0065F18U)	/* Error Tracking Register 3 */
#define MC79_ETRR4	(*( MC0_ETRR0_type *) 0xF0065F1AU)	/* Error Tracking Register 4 */
#define MC80_ETRR0	(*( MC0_ETRR0_type *) 0xF0066012U)	/* Error Tracking Register 0 */
#define MC80_ETRR1	(*( MC0_ETRR0_type *) 0xF0066014U)	/* Error Tracking Register 1 */
#define MC80_ETRR2	(*( MC0_ETRR0_type *) 0xF0066016U)	/* Error Tracking Register 2 */
#define MC80_ETRR3	(*( MC0_ETRR0_type *) 0xF0066018U)	/* Error Tracking Register 3 */
#define MC80_ETRR4	(*( MC0_ETRR0_type *) 0xF006601AU)	/* Error Tracking Register 4 */
#define MC81_ETRR0	(*( MC0_ETRR0_type *) 0xF0066112U)	/* Error Tracking Register 0 */
#define MC81_ETRR1	(*( MC0_ETRR0_type *) 0xF0066114U)	/* Error Tracking Register 1 */
#define MC81_ETRR2	(*( MC0_ETRR0_type *) 0xF0066116U)	/* Error Tracking Register 2 */
#define MC81_ETRR3	(*( MC0_ETRR0_type *) 0xF0066118U)	/* Error Tracking Register 3 */
#define MC81_ETRR4	(*( MC0_ETRR0_type *) 0xF006611AU)	/* Error Tracking Register 4 */
#define MC82_ETRR0	(*( MC0_ETRR0_type *) 0xF0066212U)	/* Error Tracking Register 0 */
#define MC82_ETRR1	(*( MC0_ETRR0_type *) 0xF0066214U)	/* Error Tracking Register 1 */
#define MC82_ETRR2	(*( MC0_ETRR0_type *) 0xF0066216U)	/* Error Tracking Register 2 */
#define MC82_ETRR3	(*( MC0_ETRR0_type *) 0xF0066218U)	/* Error Tracking Register 3 */
#define MC82_ETRR4	(*( MC0_ETRR0_type *) 0xF006621AU)	/* Error Tracking Register 4 */
#define MC83_ETRR0	(*( MC0_ETRR0_type *) 0xF0066312U)	/* Error Tracking Register 0 */
#define MC83_ETRR1	(*( MC0_ETRR0_type *) 0xF0066314U)	/* Error Tracking Register 1 */
#define MC83_ETRR2	(*( MC0_ETRR0_type *) 0xF0066316U)	/* Error Tracking Register 2 */
#define MC83_ETRR3	(*( MC0_ETRR0_type *) 0xF0066318U)	/* Error Tracking Register 3 */
#define MC83_ETRR4	(*( MC0_ETRR0_type *) 0xF006631AU)	/* Error Tracking Register 4 */
#define MC84_ETRR0	(*( MC0_ETRR0_type *) 0xF0066412U)	/* Error Tracking Register 0 */
#define MC84_ETRR1	(*( MC0_ETRR0_type *) 0xF0066414U)	/* Error Tracking Register 1 */
#define MC84_ETRR2	(*( MC0_ETRR0_type *) 0xF0066416U)	/* Error Tracking Register 2 */
#define MC84_ETRR3	(*( MC0_ETRR0_type *) 0xF0066418U)	/* Error Tracking Register 3 */
#define MC84_ETRR4	(*( MC0_ETRR0_type *) 0xF006641AU)	/* Error Tracking Register 4 */
#define MC85_ETRR0	(*( MC0_ETRR0_type *) 0xF0066512U)	/* Error Tracking Register 0 */
#define MC85_ETRR1	(*( MC0_ETRR0_type *) 0xF0066514U)	/* Error Tracking Register 1 */
#define MC85_ETRR2	(*( MC0_ETRR0_type *) 0xF0066516U)	/* Error Tracking Register 2 */
#define MC85_ETRR3	(*( MC0_ETRR0_type *) 0xF0066518U)	/* Error Tracking Register 3 */
#define MC85_ETRR4	(*( MC0_ETRR0_type *) 0xF006651AU)	/* Error Tracking Register 4 */
#define MC86_ETRR0	(*( MC0_ETRR0_type *) 0xF0066612U)	/* Error Tracking Register 0 */
#define MC86_ETRR1	(*( MC0_ETRR0_type *) 0xF0066614U)	/* Error Tracking Register 1 */
#define MC86_ETRR2	(*( MC0_ETRR0_type *) 0xF0066616U)	/* Error Tracking Register 2 */
#define MC86_ETRR3	(*( MC0_ETRR0_type *) 0xF0066618U)	/* Error Tracking Register 3 */
#define MC86_ETRR4	(*( MC0_ETRR0_type *) 0xF006661AU)	/* Error Tracking Register 4 */
#define MC87_ETRR0	(*( MC0_ETRR0_type *) 0xF0066712U)	/* Error Tracking Register 0 */
#define MC87_ETRR1	(*( MC0_ETRR0_type *) 0xF0066714U)	/* Error Tracking Register 1 */
#define MC87_ETRR2	(*( MC0_ETRR0_type *) 0xF0066716U)	/* Error Tracking Register 2 */
#define MC87_ETRR3	(*( MC0_ETRR0_type *) 0xF0066718U)	/* Error Tracking Register 3 */
#define MC87_ETRR4	(*( MC0_ETRR0_type *) 0xF006671AU)	/* Error Tracking Register 4 */
#define MC0_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00610A0U)	/* Read Data and Bit Flip Register 0 */
#define MC0_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00610A2U)	/* Read Data and Bit Flip Register 1 */
#define MC0_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00610A4U)	/* Read Data and Bit Flip Register 2 */
#define MC0_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00610A6U)	/* Read Data and Bit Flip Register 3 */
#define MC0_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00610A8U)	/* Read Data and Bit Flip Register 4 */
#define MC0_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00610AAU)	/* Read Data and Bit Flip Register 5 */
#define MC0_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00610ACU)	/* Read Data and Bit Flip Register 6 */
#define MC0_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00610AEU)	/* Read Data and Bit Flip Register 7 */
#define MC0_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00610B0U)	/* Read Data and Bit Flip Register 8 */
#define MC0_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00610B2U)	/* Read Data and Bit Flip Register 9 */
#define MC0_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00610B4U)	/* Read Data and Bit Flip Register 10 */
#define MC0_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00610B6U)	/* Read Data and Bit Flip Register 11 */
#define MC0_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00610B8U)	/* Read Data and Bit Flip Register 12 */
#define MC0_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00610BAU)	/* Read Data and Bit Flip Register 13 */
#define MC0_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00610BCU)	/* Read Data and Bit Flip Register 14 */
#define MC0_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00610BEU)	/* Read Data and Bit Flip Register 15 */
#define MC0_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00610C0U)	/* Read Data and Bit Flip Register 16 */
#define MC0_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00610C2U)	/* Read Data and Bit Flip Register 17 */
#define MC0_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00610C4U)	/* Read Data and Bit Flip Register 18 */
#define MC0_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00610C6U)	/* Read Data and Bit Flip Register 19 */
#define MC0_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00610C8U)	/* Read Data and Bit Flip Register 20 */
#define MC0_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00610CAU)	/* Read Data and Bit Flip Register 21 */
#define MC0_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00610CCU)	/* Read Data and Bit Flip Register 22 */
#define MC0_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00610CEU)	/* Read Data and Bit Flip Register 23 */
#define MC0_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00610D0U)	/* Read Data and Bit Flip Register 24 */
#define MC0_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00610D2U)	/* Read Data and Bit Flip Register 25 */
#define MC0_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00610D4U)	/* Read Data and Bit Flip Register 26 */
#define MC0_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00610D6U)	/* Read Data and Bit Flip Register 27 */
#define MC0_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00610D8U)	/* Read Data and Bit Flip Register 28 */
#define MC0_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00610DAU)	/* Read Data and Bit Flip Register 29 */
#define MC0_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00610DCU)	/* Read Data and Bit Flip Register 30 */
#define MC0_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00610DEU)	/* Read Data and Bit Flip Register 31 */
#define MC0_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00610E0U)	/* Read Data and Bit Flip Register 32 */
#define MC0_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00610E2U)	/* Read Data and Bit Flip Register 33 */
#define MC0_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00610E4U)	/* Read Data and Bit Flip Register 34 */
#define MC0_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00610E6U)	/* Read Data and Bit Flip Register 35 */
#define MC0_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00610E8U)	/* Read Data and Bit Flip Register 36 */
#define MC0_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00610EAU)	/* Read Data and Bit Flip Register 37 */
#define MC0_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00610ECU)	/* Read Data and Bit Flip Register 38 */
#define MC0_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00610EEU)	/* Read Data and Bit Flip Register 39 */
#define MC1_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00611A0U)	/* Read Data and Bit Flip Register 0 */
#define MC1_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00611A2U)	/* Read Data and Bit Flip Register 1 */
#define MC1_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00611A4U)	/* Read Data and Bit Flip Register 2 */
#define MC1_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00611A6U)	/* Read Data and Bit Flip Register 3 */
#define MC1_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00611A8U)	/* Read Data and Bit Flip Register 4 */
#define MC1_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00611AAU)	/* Read Data and Bit Flip Register 5 */
#define MC1_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00611ACU)	/* Read Data and Bit Flip Register 6 */
#define MC1_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00611AEU)	/* Read Data and Bit Flip Register 7 */
#define MC1_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00611B0U)	/* Read Data and Bit Flip Register 8 */
#define MC1_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00611B2U)	/* Read Data and Bit Flip Register 9 */
#define MC1_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00611B4U)	/* Read Data and Bit Flip Register 10 */
#define MC1_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00611B6U)	/* Read Data and Bit Flip Register 11 */
#define MC1_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00611B8U)	/* Read Data and Bit Flip Register 12 */
#define MC1_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00611BAU)	/* Read Data and Bit Flip Register 13 */
#define MC1_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00611BCU)	/* Read Data and Bit Flip Register 14 */
#define MC1_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00611BEU)	/* Read Data and Bit Flip Register 15 */
#define MC1_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00611C0U)	/* Read Data and Bit Flip Register 16 */
#define MC1_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00611C2U)	/* Read Data and Bit Flip Register 17 */
#define MC1_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00611C4U)	/* Read Data and Bit Flip Register 18 */
#define MC1_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00611C6U)	/* Read Data and Bit Flip Register 19 */
#define MC1_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00611C8U)	/* Read Data and Bit Flip Register 20 */
#define MC1_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00611CAU)	/* Read Data and Bit Flip Register 21 */
#define MC1_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00611CCU)	/* Read Data and Bit Flip Register 22 */
#define MC1_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00611CEU)	/* Read Data and Bit Flip Register 23 */
#define MC1_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00611D0U)	/* Read Data and Bit Flip Register 24 */
#define MC1_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00611D2U)	/* Read Data and Bit Flip Register 25 */
#define MC1_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00611D4U)	/* Read Data and Bit Flip Register 26 */
#define MC1_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00611D6U)	/* Read Data and Bit Flip Register 27 */
#define MC1_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00611D8U)	/* Read Data and Bit Flip Register 28 */
#define MC1_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00611DAU)	/* Read Data and Bit Flip Register 29 */
#define MC1_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00611DCU)	/* Read Data and Bit Flip Register 30 */
#define MC1_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00611DEU)	/* Read Data and Bit Flip Register 31 */
#define MC1_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00611E0U)	/* Read Data and Bit Flip Register 32 */
#define MC1_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00611E2U)	/* Read Data and Bit Flip Register 33 */
#define MC1_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00611E4U)	/* Read Data and Bit Flip Register 34 */
#define MC1_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00611E6U)	/* Read Data and Bit Flip Register 35 */
#define MC1_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00611E8U)	/* Read Data and Bit Flip Register 36 */
#define MC1_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00611EAU)	/* Read Data and Bit Flip Register 37 */
#define MC1_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00611ECU)	/* Read Data and Bit Flip Register 38 */
#define MC1_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00611EEU)	/* Read Data and Bit Flip Register 39 */
#define MC2_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00612A0U)	/* Read Data and Bit Flip Register 0 */
#define MC2_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00612A2U)	/* Read Data and Bit Flip Register 1 */
#define MC2_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00612A4U)	/* Read Data and Bit Flip Register 2 */
#define MC2_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00612A6U)	/* Read Data and Bit Flip Register 3 */
#define MC2_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00612A8U)	/* Read Data and Bit Flip Register 4 */
#define MC2_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00612AAU)	/* Read Data and Bit Flip Register 5 */
#define MC2_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00612ACU)	/* Read Data and Bit Flip Register 6 */
#define MC2_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00612AEU)	/* Read Data and Bit Flip Register 7 */
#define MC2_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00612B0U)	/* Read Data and Bit Flip Register 8 */
#define MC2_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00612B2U)	/* Read Data and Bit Flip Register 9 */
#define MC2_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00612B4U)	/* Read Data and Bit Flip Register 10 */
#define MC2_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00612B6U)	/* Read Data and Bit Flip Register 11 */
#define MC2_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00612B8U)	/* Read Data and Bit Flip Register 12 */
#define MC2_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00612BAU)	/* Read Data and Bit Flip Register 13 */
#define MC2_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00612BCU)	/* Read Data and Bit Flip Register 14 */
#define MC2_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00612BEU)	/* Read Data and Bit Flip Register 15 */
#define MC2_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00612C0U)	/* Read Data and Bit Flip Register 16 */
#define MC2_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00612C2U)	/* Read Data and Bit Flip Register 17 */
#define MC2_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00612C4U)	/* Read Data and Bit Flip Register 18 */
#define MC2_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00612C6U)	/* Read Data and Bit Flip Register 19 */
#define MC2_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00612C8U)	/* Read Data and Bit Flip Register 20 */
#define MC2_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00612CAU)	/* Read Data and Bit Flip Register 21 */
#define MC2_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00612CCU)	/* Read Data and Bit Flip Register 22 */
#define MC2_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00612CEU)	/* Read Data and Bit Flip Register 23 */
#define MC2_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00612D0U)	/* Read Data and Bit Flip Register 24 */
#define MC2_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00612D2U)	/* Read Data and Bit Flip Register 25 */
#define MC2_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00612D4U)	/* Read Data and Bit Flip Register 26 */
#define MC2_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00612D6U)	/* Read Data and Bit Flip Register 27 */
#define MC2_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00612D8U)	/* Read Data and Bit Flip Register 28 */
#define MC2_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00612DAU)	/* Read Data and Bit Flip Register 29 */
#define MC2_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00612DCU)	/* Read Data and Bit Flip Register 30 */
#define MC2_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00612DEU)	/* Read Data and Bit Flip Register 31 */
#define MC2_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00612E0U)	/* Read Data and Bit Flip Register 32 */
#define MC2_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00612E2U)	/* Read Data and Bit Flip Register 33 */
#define MC2_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00612E4U)	/* Read Data and Bit Flip Register 34 */
#define MC2_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00612E6U)	/* Read Data and Bit Flip Register 35 */
#define MC2_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00612E8U)	/* Read Data and Bit Flip Register 36 */
#define MC2_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00612EAU)	/* Read Data and Bit Flip Register 37 */
#define MC2_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00612ECU)	/* Read Data and Bit Flip Register 38 */
#define MC2_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00612EEU)	/* Read Data and Bit Flip Register 39 */
#define MC3_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00613A0U)	/* Read Data and Bit Flip Register 0 */
#define MC3_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00613A2U)	/* Read Data and Bit Flip Register 1 */
#define MC3_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00613A4U)	/* Read Data and Bit Flip Register 2 */
#define MC3_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00613A6U)	/* Read Data and Bit Flip Register 3 */
#define MC3_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00613A8U)	/* Read Data and Bit Flip Register 4 */
#define MC3_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00613AAU)	/* Read Data and Bit Flip Register 5 */
#define MC3_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00613ACU)	/* Read Data and Bit Flip Register 6 */
#define MC3_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00613AEU)	/* Read Data and Bit Flip Register 7 */
#define MC3_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00613B0U)	/* Read Data and Bit Flip Register 8 */
#define MC3_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00613B2U)	/* Read Data and Bit Flip Register 9 */
#define MC3_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00613B4U)	/* Read Data and Bit Flip Register 10 */
#define MC3_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00613B6U)	/* Read Data and Bit Flip Register 11 */
#define MC3_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00613B8U)	/* Read Data and Bit Flip Register 12 */
#define MC3_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00613BAU)	/* Read Data and Bit Flip Register 13 */
#define MC3_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00613BCU)	/* Read Data and Bit Flip Register 14 */
#define MC3_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00613BEU)	/* Read Data and Bit Flip Register 15 */
#define MC3_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00613C0U)	/* Read Data and Bit Flip Register 16 */
#define MC3_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00613C2U)	/* Read Data and Bit Flip Register 17 */
#define MC3_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00613C4U)	/* Read Data and Bit Flip Register 18 */
#define MC3_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00613C6U)	/* Read Data and Bit Flip Register 19 */
#define MC3_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00613C8U)	/* Read Data and Bit Flip Register 20 */
#define MC3_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00613CAU)	/* Read Data and Bit Flip Register 21 */
#define MC3_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00613CCU)	/* Read Data and Bit Flip Register 22 */
#define MC3_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00613CEU)	/* Read Data and Bit Flip Register 23 */
#define MC3_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00613D0U)	/* Read Data and Bit Flip Register 24 */
#define MC3_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00613D2U)	/* Read Data and Bit Flip Register 25 */
#define MC3_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00613D4U)	/* Read Data and Bit Flip Register 26 */
#define MC3_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00613D6U)	/* Read Data and Bit Flip Register 27 */
#define MC3_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00613D8U)	/* Read Data and Bit Flip Register 28 */
#define MC3_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00613DAU)	/* Read Data and Bit Flip Register 29 */
#define MC3_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00613DCU)	/* Read Data and Bit Flip Register 30 */
#define MC3_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00613DEU)	/* Read Data and Bit Flip Register 31 */
#define MC3_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00613E0U)	/* Read Data and Bit Flip Register 32 */
#define MC3_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00613E2U)	/* Read Data and Bit Flip Register 33 */
#define MC3_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00613E4U)	/* Read Data and Bit Flip Register 34 */
#define MC3_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00613E6U)	/* Read Data and Bit Flip Register 35 */
#define MC3_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00613E8U)	/* Read Data and Bit Flip Register 36 */
#define MC3_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00613EAU)	/* Read Data and Bit Flip Register 37 */
#define MC3_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00613ECU)	/* Read Data and Bit Flip Register 38 */
#define MC3_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00613EEU)	/* Read Data and Bit Flip Register 39 */
#define MC4_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00614A0U)	/* Read Data and Bit Flip Register 0 */
#define MC4_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00614A2U)	/* Read Data and Bit Flip Register 1 */
#define MC4_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00614A4U)	/* Read Data and Bit Flip Register 2 */
#define MC4_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00614A6U)	/* Read Data and Bit Flip Register 3 */
#define MC4_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00614A8U)	/* Read Data and Bit Flip Register 4 */
#define MC4_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00614AAU)	/* Read Data and Bit Flip Register 5 */
#define MC4_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00614ACU)	/* Read Data and Bit Flip Register 6 */
#define MC4_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00614AEU)	/* Read Data and Bit Flip Register 7 */
#define MC4_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00614B0U)	/* Read Data and Bit Flip Register 8 */
#define MC4_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00614B2U)	/* Read Data and Bit Flip Register 9 */
#define MC4_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00614B4U)	/* Read Data and Bit Flip Register 10 */
#define MC4_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00614B6U)	/* Read Data and Bit Flip Register 11 */
#define MC4_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00614B8U)	/* Read Data and Bit Flip Register 12 */
#define MC4_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00614BAU)	/* Read Data and Bit Flip Register 13 */
#define MC4_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00614BCU)	/* Read Data and Bit Flip Register 14 */
#define MC4_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00614BEU)	/* Read Data and Bit Flip Register 15 */
#define MC4_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00614C0U)	/* Read Data and Bit Flip Register 16 */
#define MC4_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00614C2U)	/* Read Data and Bit Flip Register 17 */
#define MC4_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00614C4U)	/* Read Data and Bit Flip Register 18 */
#define MC4_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00614C6U)	/* Read Data and Bit Flip Register 19 */
#define MC4_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00614C8U)	/* Read Data and Bit Flip Register 20 */
#define MC4_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00614CAU)	/* Read Data and Bit Flip Register 21 */
#define MC4_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00614CCU)	/* Read Data and Bit Flip Register 22 */
#define MC4_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00614CEU)	/* Read Data and Bit Flip Register 23 */
#define MC4_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00614D0U)	/* Read Data and Bit Flip Register 24 */
#define MC4_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00614D2U)	/* Read Data and Bit Flip Register 25 */
#define MC4_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00614D4U)	/* Read Data and Bit Flip Register 26 */
#define MC4_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00614D6U)	/* Read Data and Bit Flip Register 27 */
#define MC4_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00614D8U)	/* Read Data and Bit Flip Register 28 */
#define MC4_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00614DAU)	/* Read Data and Bit Flip Register 29 */
#define MC4_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00614DCU)	/* Read Data and Bit Flip Register 30 */
#define MC4_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00614DEU)	/* Read Data and Bit Flip Register 31 */
#define MC4_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00614E0U)	/* Read Data and Bit Flip Register 32 */
#define MC4_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00614E2U)	/* Read Data and Bit Flip Register 33 */
#define MC4_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00614E4U)	/* Read Data and Bit Flip Register 34 */
#define MC4_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00614E6U)	/* Read Data and Bit Flip Register 35 */
#define MC4_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00614E8U)	/* Read Data and Bit Flip Register 36 */
#define MC4_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00614EAU)	/* Read Data and Bit Flip Register 37 */
#define MC4_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00614ECU)	/* Read Data and Bit Flip Register 38 */
#define MC4_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00614EEU)	/* Read Data and Bit Flip Register 39 */
#define MC5_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00615A0U)	/* Read Data and Bit Flip Register 0 */
#define MC5_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00615A2U)	/* Read Data and Bit Flip Register 1 */
#define MC5_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00615A4U)	/* Read Data and Bit Flip Register 2 */
#define MC5_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00615A6U)	/* Read Data and Bit Flip Register 3 */
#define MC5_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00615A8U)	/* Read Data and Bit Flip Register 4 */
#define MC5_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00615AAU)	/* Read Data and Bit Flip Register 5 */
#define MC5_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00615ACU)	/* Read Data and Bit Flip Register 6 */
#define MC5_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00615AEU)	/* Read Data and Bit Flip Register 7 */
#define MC5_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00615B0U)	/* Read Data and Bit Flip Register 8 */
#define MC5_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00615B2U)	/* Read Data and Bit Flip Register 9 */
#define MC5_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00615B4U)	/* Read Data and Bit Flip Register 10 */
#define MC5_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00615B6U)	/* Read Data and Bit Flip Register 11 */
#define MC5_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00615B8U)	/* Read Data and Bit Flip Register 12 */
#define MC5_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00615BAU)	/* Read Data and Bit Flip Register 13 */
#define MC5_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00615BCU)	/* Read Data and Bit Flip Register 14 */
#define MC5_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00615BEU)	/* Read Data and Bit Flip Register 15 */
#define MC5_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00615C0U)	/* Read Data and Bit Flip Register 16 */
#define MC5_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00615C2U)	/* Read Data and Bit Flip Register 17 */
#define MC5_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00615C4U)	/* Read Data and Bit Flip Register 18 */
#define MC5_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00615C6U)	/* Read Data and Bit Flip Register 19 */
#define MC5_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00615C8U)	/* Read Data and Bit Flip Register 20 */
#define MC5_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00615CAU)	/* Read Data and Bit Flip Register 21 */
#define MC5_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00615CCU)	/* Read Data and Bit Flip Register 22 */
#define MC5_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00615CEU)	/* Read Data and Bit Flip Register 23 */
#define MC5_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00615D0U)	/* Read Data and Bit Flip Register 24 */
#define MC5_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00615D2U)	/* Read Data and Bit Flip Register 25 */
#define MC5_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00615D4U)	/* Read Data and Bit Flip Register 26 */
#define MC5_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00615D6U)	/* Read Data and Bit Flip Register 27 */
#define MC5_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00615D8U)	/* Read Data and Bit Flip Register 28 */
#define MC5_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00615DAU)	/* Read Data and Bit Flip Register 29 */
#define MC5_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00615DCU)	/* Read Data and Bit Flip Register 30 */
#define MC5_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00615DEU)	/* Read Data and Bit Flip Register 31 */
#define MC5_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00615E0U)	/* Read Data and Bit Flip Register 32 */
#define MC5_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00615E2U)	/* Read Data and Bit Flip Register 33 */
#define MC5_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00615E4U)	/* Read Data and Bit Flip Register 34 */
#define MC5_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00615E6U)	/* Read Data and Bit Flip Register 35 */
#define MC5_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00615E8U)	/* Read Data and Bit Flip Register 36 */
#define MC5_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00615EAU)	/* Read Data and Bit Flip Register 37 */
#define MC5_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00615ECU)	/* Read Data and Bit Flip Register 38 */
#define MC5_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00615EEU)	/* Read Data and Bit Flip Register 39 */
#define MC6_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00616A0U)	/* Read Data and Bit Flip Register 0 */
#define MC6_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00616A2U)	/* Read Data and Bit Flip Register 1 */
#define MC6_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00616A4U)	/* Read Data and Bit Flip Register 2 */
#define MC6_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00616A6U)	/* Read Data and Bit Flip Register 3 */
#define MC6_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00616A8U)	/* Read Data and Bit Flip Register 4 */
#define MC6_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00616AAU)	/* Read Data and Bit Flip Register 5 */
#define MC6_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00616ACU)	/* Read Data and Bit Flip Register 6 */
#define MC6_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00616AEU)	/* Read Data and Bit Flip Register 7 */
#define MC6_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00616B0U)	/* Read Data and Bit Flip Register 8 */
#define MC6_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00616B2U)	/* Read Data and Bit Flip Register 9 */
#define MC6_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00616B4U)	/* Read Data and Bit Flip Register 10 */
#define MC6_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00616B6U)	/* Read Data and Bit Flip Register 11 */
#define MC6_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00616B8U)	/* Read Data and Bit Flip Register 12 */
#define MC6_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00616BAU)	/* Read Data and Bit Flip Register 13 */
#define MC6_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00616BCU)	/* Read Data and Bit Flip Register 14 */
#define MC6_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00616BEU)	/* Read Data and Bit Flip Register 15 */
#define MC6_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00616C0U)	/* Read Data and Bit Flip Register 16 */
#define MC6_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00616C2U)	/* Read Data and Bit Flip Register 17 */
#define MC6_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00616C4U)	/* Read Data and Bit Flip Register 18 */
#define MC6_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00616C6U)	/* Read Data and Bit Flip Register 19 */
#define MC6_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00616C8U)	/* Read Data and Bit Flip Register 20 */
#define MC6_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00616CAU)	/* Read Data and Bit Flip Register 21 */
#define MC6_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00616CCU)	/* Read Data and Bit Flip Register 22 */
#define MC6_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00616CEU)	/* Read Data and Bit Flip Register 23 */
#define MC6_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00616D0U)	/* Read Data and Bit Flip Register 24 */
#define MC6_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00616D2U)	/* Read Data and Bit Flip Register 25 */
#define MC6_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00616D4U)	/* Read Data and Bit Flip Register 26 */
#define MC6_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00616D6U)	/* Read Data and Bit Flip Register 27 */
#define MC6_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00616D8U)	/* Read Data and Bit Flip Register 28 */
#define MC6_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00616DAU)	/* Read Data and Bit Flip Register 29 */
#define MC6_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00616DCU)	/* Read Data and Bit Flip Register 30 */
#define MC6_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00616DEU)	/* Read Data and Bit Flip Register 31 */
#define MC6_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00616E0U)	/* Read Data and Bit Flip Register 32 */
#define MC6_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00616E2U)	/* Read Data and Bit Flip Register 33 */
#define MC6_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00616E4U)	/* Read Data and Bit Flip Register 34 */
#define MC6_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00616E6U)	/* Read Data and Bit Flip Register 35 */
#define MC6_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00616E8U)	/* Read Data and Bit Flip Register 36 */
#define MC6_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00616EAU)	/* Read Data and Bit Flip Register 37 */
#define MC6_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00616ECU)	/* Read Data and Bit Flip Register 38 */
#define MC6_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00616EEU)	/* Read Data and Bit Flip Register 39 */
#define MC7_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00617A0U)	/* Read Data and Bit Flip Register 0 */
#define MC7_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00617A2U)	/* Read Data and Bit Flip Register 1 */
#define MC7_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00617A4U)	/* Read Data and Bit Flip Register 2 */
#define MC7_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00617A6U)	/* Read Data and Bit Flip Register 3 */
#define MC7_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00617A8U)	/* Read Data and Bit Flip Register 4 */
#define MC7_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00617AAU)	/* Read Data and Bit Flip Register 5 */
#define MC7_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00617ACU)	/* Read Data and Bit Flip Register 6 */
#define MC7_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00617AEU)	/* Read Data and Bit Flip Register 7 */
#define MC7_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00617B0U)	/* Read Data and Bit Flip Register 8 */
#define MC7_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00617B2U)	/* Read Data and Bit Flip Register 9 */
#define MC7_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00617B4U)	/* Read Data and Bit Flip Register 10 */
#define MC7_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00617B6U)	/* Read Data and Bit Flip Register 11 */
#define MC7_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00617B8U)	/* Read Data and Bit Flip Register 12 */
#define MC7_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00617BAU)	/* Read Data and Bit Flip Register 13 */
#define MC7_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00617BCU)	/* Read Data and Bit Flip Register 14 */
#define MC7_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00617BEU)	/* Read Data and Bit Flip Register 15 */
#define MC7_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00617C0U)	/* Read Data and Bit Flip Register 16 */
#define MC7_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00617C2U)	/* Read Data and Bit Flip Register 17 */
#define MC7_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00617C4U)	/* Read Data and Bit Flip Register 18 */
#define MC7_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00617C6U)	/* Read Data and Bit Flip Register 19 */
#define MC7_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00617C8U)	/* Read Data and Bit Flip Register 20 */
#define MC7_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00617CAU)	/* Read Data and Bit Flip Register 21 */
#define MC7_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00617CCU)	/* Read Data and Bit Flip Register 22 */
#define MC7_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00617CEU)	/* Read Data and Bit Flip Register 23 */
#define MC7_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00617D0U)	/* Read Data and Bit Flip Register 24 */
#define MC7_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00617D2U)	/* Read Data and Bit Flip Register 25 */
#define MC7_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00617D4U)	/* Read Data and Bit Flip Register 26 */
#define MC7_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00617D6U)	/* Read Data and Bit Flip Register 27 */
#define MC7_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00617D8U)	/* Read Data and Bit Flip Register 28 */
#define MC7_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00617DAU)	/* Read Data and Bit Flip Register 29 */
#define MC7_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00617DCU)	/* Read Data and Bit Flip Register 30 */
#define MC7_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00617DEU)	/* Read Data and Bit Flip Register 31 */
#define MC7_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00617E0U)	/* Read Data and Bit Flip Register 32 */
#define MC7_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00617E2U)	/* Read Data and Bit Flip Register 33 */
#define MC7_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00617E4U)	/* Read Data and Bit Flip Register 34 */
#define MC7_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00617E6U)	/* Read Data and Bit Flip Register 35 */
#define MC7_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00617E8U)	/* Read Data and Bit Flip Register 36 */
#define MC7_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00617EAU)	/* Read Data and Bit Flip Register 37 */
#define MC7_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00617ECU)	/* Read Data and Bit Flip Register 38 */
#define MC7_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00617EEU)	/* Read Data and Bit Flip Register 39 */
#define MC8_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00618A0U)	/* Read Data and Bit Flip Register 0 */
#define MC8_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00618A2U)	/* Read Data and Bit Flip Register 1 */
#define MC8_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00618A4U)	/* Read Data and Bit Flip Register 2 */
#define MC8_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00618A6U)	/* Read Data and Bit Flip Register 3 */
#define MC8_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00618A8U)	/* Read Data and Bit Flip Register 4 */
#define MC8_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00618AAU)	/* Read Data and Bit Flip Register 5 */
#define MC8_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00618ACU)	/* Read Data and Bit Flip Register 6 */
#define MC8_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00618AEU)	/* Read Data and Bit Flip Register 7 */
#define MC8_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00618B0U)	/* Read Data and Bit Flip Register 8 */
#define MC8_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00618B2U)	/* Read Data and Bit Flip Register 9 */
#define MC8_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00618B4U)	/* Read Data and Bit Flip Register 10 */
#define MC8_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00618B6U)	/* Read Data and Bit Flip Register 11 */
#define MC8_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00618B8U)	/* Read Data and Bit Flip Register 12 */
#define MC8_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00618BAU)	/* Read Data and Bit Flip Register 13 */
#define MC8_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00618BCU)	/* Read Data and Bit Flip Register 14 */
#define MC8_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00618BEU)	/* Read Data and Bit Flip Register 15 */
#define MC8_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00618C0U)	/* Read Data and Bit Flip Register 16 */
#define MC8_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00618C2U)	/* Read Data and Bit Flip Register 17 */
#define MC8_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00618C4U)	/* Read Data and Bit Flip Register 18 */
#define MC8_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00618C6U)	/* Read Data and Bit Flip Register 19 */
#define MC8_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00618C8U)	/* Read Data and Bit Flip Register 20 */
#define MC8_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00618CAU)	/* Read Data and Bit Flip Register 21 */
#define MC8_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00618CCU)	/* Read Data and Bit Flip Register 22 */
#define MC8_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00618CEU)	/* Read Data and Bit Flip Register 23 */
#define MC8_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00618D0U)	/* Read Data and Bit Flip Register 24 */
#define MC8_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00618D2U)	/* Read Data and Bit Flip Register 25 */
#define MC8_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00618D4U)	/* Read Data and Bit Flip Register 26 */
#define MC8_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00618D6U)	/* Read Data and Bit Flip Register 27 */
#define MC8_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00618D8U)	/* Read Data and Bit Flip Register 28 */
#define MC8_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00618DAU)	/* Read Data and Bit Flip Register 29 */
#define MC8_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00618DCU)	/* Read Data and Bit Flip Register 30 */
#define MC8_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00618DEU)	/* Read Data and Bit Flip Register 31 */
#define MC8_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00618E0U)	/* Read Data and Bit Flip Register 32 */
#define MC8_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00618E2U)	/* Read Data and Bit Flip Register 33 */
#define MC8_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00618E4U)	/* Read Data and Bit Flip Register 34 */
#define MC8_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00618E6U)	/* Read Data and Bit Flip Register 35 */
#define MC8_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00618E8U)	/* Read Data and Bit Flip Register 36 */
#define MC8_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00618EAU)	/* Read Data and Bit Flip Register 37 */
#define MC8_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00618ECU)	/* Read Data and Bit Flip Register 38 */
#define MC8_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00618EEU)	/* Read Data and Bit Flip Register 39 */
#define MC9_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00619A0U)	/* Read Data and Bit Flip Register 0 */
#define MC9_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00619A2U)	/* Read Data and Bit Flip Register 1 */
#define MC9_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00619A4U)	/* Read Data and Bit Flip Register 2 */
#define MC9_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00619A6U)	/* Read Data and Bit Flip Register 3 */
#define MC9_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00619A8U)	/* Read Data and Bit Flip Register 4 */
#define MC9_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00619AAU)	/* Read Data and Bit Flip Register 5 */
#define MC9_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00619ACU)	/* Read Data and Bit Flip Register 6 */
#define MC9_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00619AEU)	/* Read Data and Bit Flip Register 7 */
#define MC9_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00619B0U)	/* Read Data and Bit Flip Register 8 */
#define MC9_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00619B2U)	/* Read Data and Bit Flip Register 9 */
#define MC9_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00619B4U)	/* Read Data and Bit Flip Register 10 */
#define MC9_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00619B6U)	/* Read Data and Bit Flip Register 11 */
#define MC9_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00619B8U)	/* Read Data and Bit Flip Register 12 */
#define MC9_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00619BAU)	/* Read Data and Bit Flip Register 13 */
#define MC9_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00619BCU)	/* Read Data and Bit Flip Register 14 */
#define MC9_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00619BEU)	/* Read Data and Bit Flip Register 15 */
#define MC9_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00619C0U)	/* Read Data and Bit Flip Register 16 */
#define MC9_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00619C2U)	/* Read Data and Bit Flip Register 17 */
#define MC9_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00619C4U)	/* Read Data and Bit Flip Register 18 */
#define MC9_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00619C6U)	/* Read Data and Bit Flip Register 19 */
#define MC9_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00619C8U)	/* Read Data and Bit Flip Register 20 */
#define MC9_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00619CAU)	/* Read Data and Bit Flip Register 21 */
#define MC9_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00619CCU)	/* Read Data and Bit Flip Register 22 */
#define MC9_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00619CEU)	/* Read Data and Bit Flip Register 23 */
#define MC9_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00619D0U)	/* Read Data and Bit Flip Register 24 */
#define MC9_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00619D2U)	/* Read Data and Bit Flip Register 25 */
#define MC9_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00619D4U)	/* Read Data and Bit Flip Register 26 */
#define MC9_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00619D6U)	/* Read Data and Bit Flip Register 27 */
#define MC9_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00619D8U)	/* Read Data and Bit Flip Register 28 */
#define MC9_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00619DAU)	/* Read Data and Bit Flip Register 29 */
#define MC9_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00619DCU)	/* Read Data and Bit Flip Register 30 */
#define MC9_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00619DEU)	/* Read Data and Bit Flip Register 31 */
#define MC9_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00619E0U)	/* Read Data and Bit Flip Register 32 */
#define MC9_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00619E2U)	/* Read Data and Bit Flip Register 33 */
#define MC9_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00619E4U)	/* Read Data and Bit Flip Register 34 */
#define MC9_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00619E6U)	/* Read Data and Bit Flip Register 35 */
#define MC9_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00619E8U)	/* Read Data and Bit Flip Register 36 */
#define MC9_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00619EAU)	/* Read Data and Bit Flip Register 37 */
#define MC9_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00619ECU)	/* Read Data and Bit Flip Register 38 */
#define MC9_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00619EEU)	/* Read Data and Bit Flip Register 39 */
#define MC10_RDBFL0	(*( MC0_RDBFL0_type *) 0xF0061AA0U)	/* Read Data and Bit Flip Register 0 */
#define MC10_RDBFL1	(*( MC0_RDBFL0_type *) 0xF0061AA2U)	/* Read Data and Bit Flip Register 1 */
#define MC10_RDBFL2	(*( MC0_RDBFL0_type *) 0xF0061AA4U)	/* Read Data and Bit Flip Register 2 */
#define MC10_RDBFL3	(*( MC0_RDBFL0_type *) 0xF0061AA6U)	/* Read Data and Bit Flip Register 3 */
#define MC10_RDBFL4	(*( MC0_RDBFL0_type *) 0xF0061AA8U)	/* Read Data and Bit Flip Register 4 */
#define MC10_RDBFL5	(*( MC0_RDBFL0_type *) 0xF0061AAAU)	/* Read Data and Bit Flip Register 5 */
#define MC10_RDBFL6	(*( MC0_RDBFL0_type *) 0xF0061AACU)	/* Read Data and Bit Flip Register 6 */
#define MC10_RDBFL7	(*( MC0_RDBFL0_type *) 0xF0061AAEU)	/* Read Data and Bit Flip Register 7 */
#define MC10_RDBFL8	(*( MC0_RDBFL0_type *) 0xF0061AB0U)	/* Read Data and Bit Flip Register 8 */
#define MC10_RDBFL9	(*( MC0_RDBFL0_type *) 0xF0061AB2U)	/* Read Data and Bit Flip Register 9 */
#define MC10_RDBFL10	(*( MC0_RDBFL0_type *) 0xF0061AB4U)	/* Read Data and Bit Flip Register 10 */
#define MC10_RDBFL11	(*( MC0_RDBFL0_type *) 0xF0061AB6U)	/* Read Data and Bit Flip Register 11 */
#define MC10_RDBFL12	(*( MC0_RDBFL0_type *) 0xF0061AB8U)	/* Read Data and Bit Flip Register 12 */
#define MC10_RDBFL13	(*( MC0_RDBFL0_type *) 0xF0061ABAU)	/* Read Data and Bit Flip Register 13 */
#define MC10_RDBFL14	(*( MC0_RDBFL0_type *) 0xF0061ABCU)	/* Read Data and Bit Flip Register 14 */
#define MC10_RDBFL15	(*( MC0_RDBFL0_type *) 0xF0061ABEU)	/* Read Data and Bit Flip Register 15 */
#define MC10_RDBFL16	(*( MC0_RDBFL0_type *) 0xF0061AC0U)	/* Read Data and Bit Flip Register 16 */
#define MC10_RDBFL17	(*( MC0_RDBFL0_type *) 0xF0061AC2U)	/* Read Data and Bit Flip Register 17 */
#define MC10_RDBFL18	(*( MC0_RDBFL0_type *) 0xF0061AC4U)	/* Read Data and Bit Flip Register 18 */
#define MC10_RDBFL19	(*( MC0_RDBFL0_type *) 0xF0061AC6U)	/* Read Data and Bit Flip Register 19 */
#define MC10_RDBFL20	(*( MC0_RDBFL0_type *) 0xF0061AC8U)	/* Read Data and Bit Flip Register 20 */
#define MC10_RDBFL21	(*( MC0_RDBFL0_type *) 0xF0061ACAU)	/* Read Data and Bit Flip Register 21 */
#define MC10_RDBFL22	(*( MC0_RDBFL0_type *) 0xF0061ACCU)	/* Read Data and Bit Flip Register 22 */
#define MC10_RDBFL23	(*( MC0_RDBFL0_type *) 0xF0061ACEU)	/* Read Data and Bit Flip Register 23 */
#define MC10_RDBFL24	(*( MC0_RDBFL0_type *) 0xF0061AD0U)	/* Read Data and Bit Flip Register 24 */
#define MC10_RDBFL25	(*( MC0_RDBFL0_type *) 0xF0061AD2U)	/* Read Data and Bit Flip Register 25 */
#define MC10_RDBFL26	(*( MC0_RDBFL0_type *) 0xF0061AD4U)	/* Read Data and Bit Flip Register 26 */
#define MC10_RDBFL27	(*( MC0_RDBFL0_type *) 0xF0061AD6U)	/* Read Data and Bit Flip Register 27 */
#define MC10_RDBFL28	(*( MC0_RDBFL0_type *) 0xF0061AD8U)	/* Read Data and Bit Flip Register 28 */
#define MC10_RDBFL29	(*( MC0_RDBFL0_type *) 0xF0061ADAU)	/* Read Data and Bit Flip Register 29 */
#define MC10_RDBFL30	(*( MC0_RDBFL0_type *) 0xF0061ADCU)	/* Read Data and Bit Flip Register 30 */
#define MC10_RDBFL31	(*( MC0_RDBFL0_type *) 0xF0061ADEU)	/* Read Data and Bit Flip Register 31 */
#define MC10_RDBFL32	(*( MC0_RDBFL0_type *) 0xF0061AE0U)	/* Read Data and Bit Flip Register 32 */
#define MC10_RDBFL33	(*( MC0_RDBFL0_type *) 0xF0061AE2U)	/* Read Data and Bit Flip Register 33 */
#define MC10_RDBFL34	(*( MC0_RDBFL0_type *) 0xF0061AE4U)	/* Read Data and Bit Flip Register 34 */
#define MC10_RDBFL35	(*( MC0_RDBFL0_type *) 0xF0061AE6U)	/* Read Data and Bit Flip Register 35 */
#define MC10_RDBFL36	(*( MC0_RDBFL0_type *) 0xF0061AE8U)	/* Read Data and Bit Flip Register 36 */
#define MC10_RDBFL37	(*( MC0_RDBFL0_type *) 0xF0061AEAU)	/* Read Data and Bit Flip Register 37 */
#define MC10_RDBFL38	(*( MC0_RDBFL0_type *) 0xF0061AECU)	/* Read Data and Bit Flip Register 38 */
#define MC10_RDBFL39	(*( MC0_RDBFL0_type *) 0xF0061AEEU)	/* Read Data and Bit Flip Register 39 */
#define MC11_RDBFL0	(*( MC0_RDBFL0_type *) 0xF0061BA0U)	/* Read Data and Bit Flip Register 0 */
#define MC11_RDBFL1	(*( MC0_RDBFL0_type *) 0xF0061BA2U)	/* Read Data and Bit Flip Register 1 */
#define MC11_RDBFL2	(*( MC0_RDBFL0_type *) 0xF0061BA4U)	/* Read Data and Bit Flip Register 2 */
#define MC11_RDBFL3	(*( MC0_RDBFL0_type *) 0xF0061BA6U)	/* Read Data and Bit Flip Register 3 */
#define MC11_RDBFL4	(*( MC0_RDBFL0_type *) 0xF0061BA8U)	/* Read Data and Bit Flip Register 4 */
#define MC11_RDBFL5	(*( MC0_RDBFL0_type *) 0xF0061BAAU)	/* Read Data and Bit Flip Register 5 */
#define MC11_RDBFL6	(*( MC0_RDBFL0_type *) 0xF0061BACU)	/* Read Data and Bit Flip Register 6 */
#define MC11_RDBFL7	(*( MC0_RDBFL0_type *) 0xF0061BAEU)	/* Read Data and Bit Flip Register 7 */
#define MC11_RDBFL8	(*( MC0_RDBFL0_type *) 0xF0061BB0U)	/* Read Data and Bit Flip Register 8 */
#define MC11_RDBFL9	(*( MC0_RDBFL0_type *) 0xF0061BB2U)	/* Read Data and Bit Flip Register 9 */
#define MC11_RDBFL10	(*( MC0_RDBFL0_type *) 0xF0061BB4U)	/* Read Data and Bit Flip Register 10 */
#define MC11_RDBFL11	(*( MC0_RDBFL0_type *) 0xF0061BB6U)	/* Read Data and Bit Flip Register 11 */
#define MC11_RDBFL12	(*( MC0_RDBFL0_type *) 0xF0061BB8U)	/* Read Data and Bit Flip Register 12 */
#define MC11_RDBFL13	(*( MC0_RDBFL0_type *) 0xF0061BBAU)	/* Read Data and Bit Flip Register 13 */
#define MC11_RDBFL14	(*( MC0_RDBFL0_type *) 0xF0061BBCU)	/* Read Data and Bit Flip Register 14 */
#define MC11_RDBFL15	(*( MC0_RDBFL0_type *) 0xF0061BBEU)	/* Read Data and Bit Flip Register 15 */
#define MC11_RDBFL16	(*( MC0_RDBFL0_type *) 0xF0061BC0U)	/* Read Data and Bit Flip Register 16 */
#define MC11_RDBFL17	(*( MC0_RDBFL0_type *) 0xF0061BC2U)	/* Read Data and Bit Flip Register 17 */
#define MC11_RDBFL18	(*( MC0_RDBFL0_type *) 0xF0061BC4U)	/* Read Data and Bit Flip Register 18 */
#define MC11_RDBFL19	(*( MC0_RDBFL0_type *) 0xF0061BC6U)	/* Read Data and Bit Flip Register 19 */
#define MC11_RDBFL20	(*( MC0_RDBFL0_type *) 0xF0061BC8U)	/* Read Data and Bit Flip Register 20 */
#define MC11_RDBFL21	(*( MC0_RDBFL0_type *) 0xF0061BCAU)	/* Read Data and Bit Flip Register 21 */
#define MC11_RDBFL22	(*( MC0_RDBFL0_type *) 0xF0061BCCU)	/* Read Data and Bit Flip Register 22 */
#define MC11_RDBFL23	(*( MC0_RDBFL0_type *) 0xF0061BCEU)	/* Read Data and Bit Flip Register 23 */
#define MC11_RDBFL24	(*( MC0_RDBFL0_type *) 0xF0061BD0U)	/* Read Data and Bit Flip Register 24 */
#define MC11_RDBFL25	(*( MC0_RDBFL0_type *) 0xF0061BD2U)	/* Read Data and Bit Flip Register 25 */
#define MC11_RDBFL26	(*( MC0_RDBFL0_type *) 0xF0061BD4U)	/* Read Data and Bit Flip Register 26 */
#define MC11_RDBFL27	(*( MC0_RDBFL0_type *) 0xF0061BD6U)	/* Read Data and Bit Flip Register 27 */
#define MC11_RDBFL28	(*( MC0_RDBFL0_type *) 0xF0061BD8U)	/* Read Data and Bit Flip Register 28 */
#define MC11_RDBFL29	(*( MC0_RDBFL0_type *) 0xF0061BDAU)	/* Read Data and Bit Flip Register 29 */
#define MC11_RDBFL30	(*( MC0_RDBFL0_type *) 0xF0061BDCU)	/* Read Data and Bit Flip Register 30 */
#define MC11_RDBFL31	(*( MC0_RDBFL0_type *) 0xF0061BDEU)	/* Read Data and Bit Flip Register 31 */
#define MC11_RDBFL32	(*( MC0_RDBFL0_type *) 0xF0061BE0U)	/* Read Data and Bit Flip Register 32 */
#define MC11_RDBFL33	(*( MC0_RDBFL0_type *) 0xF0061BE2U)	/* Read Data and Bit Flip Register 33 */
#define MC11_RDBFL34	(*( MC0_RDBFL0_type *) 0xF0061BE4U)	/* Read Data and Bit Flip Register 34 */
#define MC11_RDBFL35	(*( MC0_RDBFL0_type *) 0xF0061BE6U)	/* Read Data and Bit Flip Register 35 */
#define MC11_RDBFL36	(*( MC0_RDBFL0_type *) 0xF0061BE8U)	/* Read Data and Bit Flip Register 36 */
#define MC11_RDBFL37	(*( MC0_RDBFL0_type *) 0xF0061BEAU)	/* Read Data and Bit Flip Register 37 */
#define MC11_RDBFL38	(*( MC0_RDBFL0_type *) 0xF0061BECU)	/* Read Data and Bit Flip Register 38 */
#define MC11_RDBFL39	(*( MC0_RDBFL0_type *) 0xF0061BEEU)	/* Read Data and Bit Flip Register 39 */
#define MC12_RDBFL0	(*( MC0_RDBFL0_type *) 0xF0061CA0U)	/* Read Data and Bit Flip Register 0 */
#define MC12_RDBFL1	(*( MC0_RDBFL0_type *) 0xF0061CA2U)	/* Read Data and Bit Flip Register 1 */
#define MC12_RDBFL2	(*( MC0_RDBFL0_type *) 0xF0061CA4U)	/* Read Data and Bit Flip Register 2 */
#define MC12_RDBFL3	(*( MC0_RDBFL0_type *) 0xF0061CA6U)	/* Read Data and Bit Flip Register 3 */
#define MC12_RDBFL4	(*( MC0_RDBFL0_type *) 0xF0061CA8U)	/* Read Data and Bit Flip Register 4 */
#define MC12_RDBFL5	(*( MC0_RDBFL0_type *) 0xF0061CAAU)	/* Read Data and Bit Flip Register 5 */
#define MC12_RDBFL6	(*( MC0_RDBFL0_type *) 0xF0061CACU)	/* Read Data and Bit Flip Register 6 */
#define MC12_RDBFL7	(*( MC0_RDBFL0_type *) 0xF0061CAEU)	/* Read Data and Bit Flip Register 7 */
#define MC12_RDBFL8	(*( MC0_RDBFL0_type *) 0xF0061CB0U)	/* Read Data and Bit Flip Register 8 */
#define MC12_RDBFL9	(*( MC0_RDBFL0_type *) 0xF0061CB2U)	/* Read Data and Bit Flip Register 9 */
#define MC12_RDBFL10	(*( MC0_RDBFL0_type *) 0xF0061CB4U)	/* Read Data and Bit Flip Register 10 */
#define MC12_RDBFL11	(*( MC0_RDBFL0_type *) 0xF0061CB6U)	/* Read Data and Bit Flip Register 11 */
#define MC12_RDBFL12	(*( MC0_RDBFL0_type *) 0xF0061CB8U)	/* Read Data and Bit Flip Register 12 */
#define MC12_RDBFL13	(*( MC0_RDBFL0_type *) 0xF0061CBAU)	/* Read Data and Bit Flip Register 13 */
#define MC12_RDBFL14	(*( MC0_RDBFL0_type *) 0xF0061CBCU)	/* Read Data and Bit Flip Register 14 */
#define MC12_RDBFL15	(*( MC0_RDBFL0_type *) 0xF0061CBEU)	/* Read Data and Bit Flip Register 15 */
#define MC12_RDBFL16	(*( MC0_RDBFL0_type *) 0xF0061CC0U)	/* Read Data and Bit Flip Register 16 */
#define MC12_RDBFL17	(*( MC0_RDBFL0_type *) 0xF0061CC2U)	/* Read Data and Bit Flip Register 17 */
#define MC12_RDBFL18	(*( MC0_RDBFL0_type *) 0xF0061CC4U)	/* Read Data and Bit Flip Register 18 */
#define MC12_RDBFL19	(*( MC0_RDBFL0_type *) 0xF0061CC6U)	/* Read Data and Bit Flip Register 19 */
#define MC12_RDBFL20	(*( MC0_RDBFL0_type *) 0xF0061CC8U)	/* Read Data and Bit Flip Register 20 */
#define MC12_RDBFL21	(*( MC0_RDBFL0_type *) 0xF0061CCAU)	/* Read Data and Bit Flip Register 21 */
#define MC12_RDBFL22	(*( MC0_RDBFL0_type *) 0xF0061CCCU)	/* Read Data and Bit Flip Register 22 */
#define MC12_RDBFL23	(*( MC0_RDBFL0_type *) 0xF0061CCEU)	/* Read Data and Bit Flip Register 23 */
#define MC12_RDBFL24	(*( MC0_RDBFL0_type *) 0xF0061CD0U)	/* Read Data and Bit Flip Register 24 */
#define MC12_RDBFL25	(*( MC0_RDBFL0_type *) 0xF0061CD2U)	/* Read Data and Bit Flip Register 25 */
#define MC12_RDBFL26	(*( MC0_RDBFL0_type *) 0xF0061CD4U)	/* Read Data and Bit Flip Register 26 */
#define MC12_RDBFL27	(*( MC0_RDBFL0_type *) 0xF0061CD6U)	/* Read Data and Bit Flip Register 27 */
#define MC12_RDBFL28	(*( MC0_RDBFL0_type *) 0xF0061CD8U)	/* Read Data and Bit Flip Register 28 */
#define MC12_RDBFL29	(*( MC0_RDBFL0_type *) 0xF0061CDAU)	/* Read Data and Bit Flip Register 29 */
#define MC12_RDBFL30	(*( MC0_RDBFL0_type *) 0xF0061CDCU)	/* Read Data and Bit Flip Register 30 */
#define MC12_RDBFL31	(*( MC0_RDBFL0_type *) 0xF0061CDEU)	/* Read Data and Bit Flip Register 31 */
#define MC12_RDBFL32	(*( MC0_RDBFL0_type *) 0xF0061CE0U)	/* Read Data and Bit Flip Register 32 */
#define MC12_RDBFL33	(*( MC0_RDBFL0_type *) 0xF0061CE2U)	/* Read Data and Bit Flip Register 33 */
#define MC12_RDBFL34	(*( MC0_RDBFL0_type *) 0xF0061CE4U)	/* Read Data and Bit Flip Register 34 */
#define MC12_RDBFL35	(*( MC0_RDBFL0_type *) 0xF0061CE6U)	/* Read Data and Bit Flip Register 35 */
#define MC12_RDBFL36	(*( MC0_RDBFL0_type *) 0xF0061CE8U)	/* Read Data and Bit Flip Register 36 */
#define MC12_RDBFL37	(*( MC0_RDBFL0_type *) 0xF0061CEAU)	/* Read Data and Bit Flip Register 37 */
#define MC12_RDBFL38	(*( MC0_RDBFL0_type *) 0xF0061CECU)	/* Read Data and Bit Flip Register 38 */
#define MC12_RDBFL39	(*( MC0_RDBFL0_type *) 0xF0061CEEU)	/* Read Data and Bit Flip Register 39 */
#define MC13_RDBFL0	(*( MC0_RDBFL0_type *) 0xF0061DA0U)	/* Read Data and Bit Flip Register 0 */
#define MC13_RDBFL1	(*( MC0_RDBFL0_type *) 0xF0061DA2U)	/* Read Data and Bit Flip Register 1 */
#define MC13_RDBFL2	(*( MC0_RDBFL0_type *) 0xF0061DA4U)	/* Read Data and Bit Flip Register 2 */
#define MC13_RDBFL3	(*( MC0_RDBFL0_type *) 0xF0061DA6U)	/* Read Data and Bit Flip Register 3 */
#define MC13_RDBFL4	(*( MC0_RDBFL0_type *) 0xF0061DA8U)	/* Read Data and Bit Flip Register 4 */
#define MC13_RDBFL5	(*( MC0_RDBFL0_type *) 0xF0061DAAU)	/* Read Data and Bit Flip Register 5 */
#define MC13_RDBFL6	(*( MC0_RDBFL0_type *) 0xF0061DACU)	/* Read Data and Bit Flip Register 6 */
#define MC13_RDBFL7	(*( MC0_RDBFL0_type *) 0xF0061DAEU)	/* Read Data and Bit Flip Register 7 */
#define MC13_RDBFL8	(*( MC0_RDBFL0_type *) 0xF0061DB0U)	/* Read Data and Bit Flip Register 8 */
#define MC13_RDBFL9	(*( MC0_RDBFL0_type *) 0xF0061DB2U)	/* Read Data and Bit Flip Register 9 */
#define MC13_RDBFL10	(*( MC0_RDBFL0_type *) 0xF0061DB4U)	/* Read Data and Bit Flip Register 10 */
#define MC13_RDBFL11	(*( MC0_RDBFL0_type *) 0xF0061DB6U)	/* Read Data and Bit Flip Register 11 */
#define MC13_RDBFL12	(*( MC0_RDBFL0_type *) 0xF0061DB8U)	/* Read Data and Bit Flip Register 12 */
#define MC13_RDBFL13	(*( MC0_RDBFL0_type *) 0xF0061DBAU)	/* Read Data and Bit Flip Register 13 */
#define MC13_RDBFL14	(*( MC0_RDBFL0_type *) 0xF0061DBCU)	/* Read Data and Bit Flip Register 14 */
#define MC13_RDBFL15	(*( MC0_RDBFL0_type *) 0xF0061DBEU)	/* Read Data and Bit Flip Register 15 */
#define MC13_RDBFL16	(*( MC0_RDBFL0_type *) 0xF0061DC0U)	/* Read Data and Bit Flip Register 16 */
#define MC13_RDBFL17	(*( MC0_RDBFL0_type *) 0xF0061DC2U)	/* Read Data and Bit Flip Register 17 */
#define MC13_RDBFL18	(*( MC0_RDBFL0_type *) 0xF0061DC4U)	/* Read Data and Bit Flip Register 18 */
#define MC13_RDBFL19	(*( MC0_RDBFL0_type *) 0xF0061DC6U)	/* Read Data and Bit Flip Register 19 */
#define MC13_RDBFL20	(*( MC0_RDBFL0_type *) 0xF0061DC8U)	/* Read Data and Bit Flip Register 20 */
#define MC13_RDBFL21	(*( MC0_RDBFL0_type *) 0xF0061DCAU)	/* Read Data and Bit Flip Register 21 */
#define MC13_RDBFL22	(*( MC0_RDBFL0_type *) 0xF0061DCCU)	/* Read Data and Bit Flip Register 22 */
#define MC13_RDBFL23	(*( MC0_RDBFL0_type *) 0xF0061DCEU)	/* Read Data and Bit Flip Register 23 */
#define MC13_RDBFL24	(*( MC0_RDBFL0_type *) 0xF0061DD0U)	/* Read Data and Bit Flip Register 24 */
#define MC13_RDBFL25	(*( MC0_RDBFL0_type *) 0xF0061DD2U)	/* Read Data and Bit Flip Register 25 */
#define MC13_RDBFL26	(*( MC0_RDBFL0_type *) 0xF0061DD4U)	/* Read Data and Bit Flip Register 26 */
#define MC13_RDBFL27	(*( MC0_RDBFL0_type *) 0xF0061DD6U)	/* Read Data and Bit Flip Register 27 */
#define MC13_RDBFL28	(*( MC0_RDBFL0_type *) 0xF0061DD8U)	/* Read Data and Bit Flip Register 28 */
#define MC13_RDBFL29	(*( MC0_RDBFL0_type *) 0xF0061DDAU)	/* Read Data and Bit Flip Register 29 */
#define MC13_RDBFL30	(*( MC0_RDBFL0_type *) 0xF0061DDCU)	/* Read Data and Bit Flip Register 30 */
#define MC13_RDBFL31	(*( MC0_RDBFL0_type *) 0xF0061DDEU)	/* Read Data and Bit Flip Register 31 */
#define MC13_RDBFL32	(*( MC0_RDBFL0_type *) 0xF0061DE0U)	/* Read Data and Bit Flip Register 32 */
#define MC13_RDBFL33	(*( MC0_RDBFL0_type *) 0xF0061DE2U)	/* Read Data and Bit Flip Register 33 */
#define MC13_RDBFL34	(*( MC0_RDBFL0_type *) 0xF0061DE4U)	/* Read Data and Bit Flip Register 34 */
#define MC13_RDBFL35	(*( MC0_RDBFL0_type *) 0xF0061DE6U)	/* Read Data and Bit Flip Register 35 */
#define MC13_RDBFL36	(*( MC0_RDBFL0_type *) 0xF0061DE8U)	/* Read Data and Bit Flip Register 36 */
#define MC13_RDBFL37	(*( MC0_RDBFL0_type *) 0xF0061DEAU)	/* Read Data and Bit Flip Register 37 */
#define MC13_RDBFL38	(*( MC0_RDBFL0_type *) 0xF0061DECU)	/* Read Data and Bit Flip Register 38 */
#define MC13_RDBFL39	(*( MC0_RDBFL0_type *) 0xF0061DEEU)	/* Read Data and Bit Flip Register 39 */
#define MC14_RDBFL0	(*( MC0_RDBFL0_type *) 0xF0061EA0U)	/* Read Data and Bit Flip Register 0 */
#define MC14_RDBFL1	(*( MC0_RDBFL0_type *) 0xF0061EA2U)	/* Read Data and Bit Flip Register 1 */
#define MC14_RDBFL2	(*( MC0_RDBFL0_type *) 0xF0061EA4U)	/* Read Data and Bit Flip Register 2 */
#define MC14_RDBFL3	(*( MC0_RDBFL0_type *) 0xF0061EA6U)	/* Read Data and Bit Flip Register 3 */
#define MC14_RDBFL4	(*( MC0_RDBFL0_type *) 0xF0061EA8U)	/* Read Data and Bit Flip Register 4 */
#define MC14_RDBFL5	(*( MC0_RDBFL0_type *) 0xF0061EAAU)	/* Read Data and Bit Flip Register 5 */
#define MC14_RDBFL6	(*( MC0_RDBFL0_type *) 0xF0061EACU)	/* Read Data and Bit Flip Register 6 */
#define MC14_RDBFL7	(*( MC0_RDBFL0_type *) 0xF0061EAEU)	/* Read Data and Bit Flip Register 7 */
#define MC14_RDBFL8	(*( MC0_RDBFL0_type *) 0xF0061EB0U)	/* Read Data and Bit Flip Register 8 */
#define MC14_RDBFL9	(*( MC0_RDBFL0_type *) 0xF0061EB2U)	/* Read Data and Bit Flip Register 9 */
#define MC14_RDBFL10	(*( MC0_RDBFL0_type *) 0xF0061EB4U)	/* Read Data and Bit Flip Register 10 */
#define MC14_RDBFL11	(*( MC0_RDBFL0_type *) 0xF0061EB6U)	/* Read Data and Bit Flip Register 11 */
#define MC14_RDBFL12	(*( MC0_RDBFL0_type *) 0xF0061EB8U)	/* Read Data and Bit Flip Register 12 */
#define MC14_RDBFL13	(*( MC0_RDBFL0_type *) 0xF0061EBAU)	/* Read Data and Bit Flip Register 13 */
#define MC14_RDBFL14	(*( MC0_RDBFL0_type *) 0xF0061EBCU)	/* Read Data and Bit Flip Register 14 */
#define MC14_RDBFL15	(*( MC0_RDBFL0_type *) 0xF0061EBEU)	/* Read Data and Bit Flip Register 15 */
#define MC14_RDBFL16	(*( MC0_RDBFL0_type *) 0xF0061EC0U)	/* Read Data and Bit Flip Register 16 */
#define MC14_RDBFL17	(*( MC0_RDBFL0_type *) 0xF0061EC2U)	/* Read Data and Bit Flip Register 17 */
#define MC14_RDBFL18	(*( MC0_RDBFL0_type *) 0xF0061EC4U)	/* Read Data and Bit Flip Register 18 */
#define MC14_RDBFL19	(*( MC0_RDBFL0_type *) 0xF0061EC6U)	/* Read Data and Bit Flip Register 19 */
#define MC14_RDBFL20	(*( MC0_RDBFL0_type *) 0xF0061EC8U)	/* Read Data and Bit Flip Register 20 */
#define MC14_RDBFL21	(*( MC0_RDBFL0_type *) 0xF0061ECAU)	/* Read Data and Bit Flip Register 21 */
#define MC14_RDBFL22	(*( MC0_RDBFL0_type *) 0xF0061ECCU)	/* Read Data and Bit Flip Register 22 */
#define MC14_RDBFL23	(*( MC0_RDBFL0_type *) 0xF0061ECEU)	/* Read Data and Bit Flip Register 23 */
#define MC14_RDBFL24	(*( MC0_RDBFL0_type *) 0xF0061ED0U)	/* Read Data and Bit Flip Register 24 */
#define MC14_RDBFL25	(*( MC0_RDBFL0_type *) 0xF0061ED2U)	/* Read Data and Bit Flip Register 25 */
#define MC14_RDBFL26	(*( MC0_RDBFL0_type *) 0xF0061ED4U)	/* Read Data and Bit Flip Register 26 */
#define MC14_RDBFL27	(*( MC0_RDBFL0_type *) 0xF0061ED6U)	/* Read Data and Bit Flip Register 27 */
#define MC14_RDBFL28	(*( MC0_RDBFL0_type *) 0xF0061ED8U)	/* Read Data and Bit Flip Register 28 */
#define MC14_RDBFL29	(*( MC0_RDBFL0_type *) 0xF0061EDAU)	/* Read Data and Bit Flip Register 29 */
#define MC14_RDBFL30	(*( MC0_RDBFL0_type *) 0xF0061EDCU)	/* Read Data and Bit Flip Register 30 */
#define MC14_RDBFL31	(*( MC0_RDBFL0_type *) 0xF0061EDEU)	/* Read Data and Bit Flip Register 31 */
#define MC14_RDBFL32	(*( MC0_RDBFL0_type *) 0xF0061EE0U)	/* Read Data and Bit Flip Register 32 */
#define MC14_RDBFL33	(*( MC0_RDBFL0_type *) 0xF0061EE2U)	/* Read Data and Bit Flip Register 33 */
#define MC14_RDBFL34	(*( MC0_RDBFL0_type *) 0xF0061EE4U)	/* Read Data and Bit Flip Register 34 */
#define MC14_RDBFL35	(*( MC0_RDBFL0_type *) 0xF0061EE6U)	/* Read Data and Bit Flip Register 35 */
#define MC14_RDBFL36	(*( MC0_RDBFL0_type *) 0xF0061EE8U)	/* Read Data and Bit Flip Register 36 */
#define MC14_RDBFL37	(*( MC0_RDBFL0_type *) 0xF0061EEAU)	/* Read Data and Bit Flip Register 37 */
#define MC14_RDBFL38	(*( MC0_RDBFL0_type *) 0xF0061EECU)	/* Read Data and Bit Flip Register 38 */
#define MC14_RDBFL39	(*( MC0_RDBFL0_type *) 0xF0061EEEU)	/* Read Data and Bit Flip Register 39 */
#define MC15_RDBFL0	(*( MC0_RDBFL0_type *) 0xF0061FA0U)	/* Read Data and Bit Flip Register 0 */
#define MC15_RDBFL1	(*( MC0_RDBFL0_type *) 0xF0061FA2U)	/* Read Data and Bit Flip Register 1 */
#define MC15_RDBFL2	(*( MC0_RDBFL0_type *) 0xF0061FA4U)	/* Read Data and Bit Flip Register 2 */
#define MC15_RDBFL3	(*( MC0_RDBFL0_type *) 0xF0061FA6U)	/* Read Data and Bit Flip Register 3 */
#define MC15_RDBFL4	(*( MC0_RDBFL0_type *) 0xF0061FA8U)	/* Read Data and Bit Flip Register 4 */
#define MC15_RDBFL5	(*( MC0_RDBFL0_type *) 0xF0061FAAU)	/* Read Data and Bit Flip Register 5 */
#define MC15_RDBFL6	(*( MC0_RDBFL0_type *) 0xF0061FACU)	/* Read Data and Bit Flip Register 6 */
#define MC15_RDBFL7	(*( MC0_RDBFL0_type *) 0xF0061FAEU)	/* Read Data and Bit Flip Register 7 */
#define MC15_RDBFL8	(*( MC0_RDBFL0_type *) 0xF0061FB0U)	/* Read Data and Bit Flip Register 8 */
#define MC15_RDBFL9	(*( MC0_RDBFL0_type *) 0xF0061FB2U)	/* Read Data and Bit Flip Register 9 */
#define MC15_RDBFL10	(*( MC0_RDBFL0_type *) 0xF0061FB4U)	/* Read Data and Bit Flip Register 10 */
#define MC15_RDBFL11	(*( MC0_RDBFL0_type *) 0xF0061FB6U)	/* Read Data and Bit Flip Register 11 */
#define MC15_RDBFL12	(*( MC0_RDBFL0_type *) 0xF0061FB8U)	/* Read Data and Bit Flip Register 12 */
#define MC15_RDBFL13	(*( MC0_RDBFL0_type *) 0xF0061FBAU)	/* Read Data and Bit Flip Register 13 */
#define MC15_RDBFL14	(*( MC0_RDBFL0_type *) 0xF0061FBCU)	/* Read Data and Bit Flip Register 14 */
#define MC15_RDBFL15	(*( MC0_RDBFL0_type *) 0xF0061FBEU)	/* Read Data and Bit Flip Register 15 */
#define MC15_RDBFL16	(*( MC0_RDBFL0_type *) 0xF0061FC0U)	/* Read Data and Bit Flip Register 16 */
#define MC15_RDBFL17	(*( MC0_RDBFL0_type *) 0xF0061FC2U)	/* Read Data and Bit Flip Register 17 */
#define MC15_RDBFL18	(*( MC0_RDBFL0_type *) 0xF0061FC4U)	/* Read Data and Bit Flip Register 18 */
#define MC15_RDBFL19	(*( MC0_RDBFL0_type *) 0xF0061FC6U)	/* Read Data and Bit Flip Register 19 */
#define MC15_RDBFL20	(*( MC0_RDBFL0_type *) 0xF0061FC8U)	/* Read Data and Bit Flip Register 20 */
#define MC15_RDBFL21	(*( MC0_RDBFL0_type *) 0xF0061FCAU)	/* Read Data and Bit Flip Register 21 */
#define MC15_RDBFL22	(*( MC0_RDBFL0_type *) 0xF0061FCCU)	/* Read Data and Bit Flip Register 22 */
#define MC15_RDBFL23	(*( MC0_RDBFL0_type *) 0xF0061FCEU)	/* Read Data and Bit Flip Register 23 */
#define MC15_RDBFL24	(*( MC0_RDBFL0_type *) 0xF0061FD0U)	/* Read Data and Bit Flip Register 24 */
#define MC15_RDBFL25	(*( MC0_RDBFL0_type *) 0xF0061FD2U)	/* Read Data and Bit Flip Register 25 */
#define MC15_RDBFL26	(*( MC0_RDBFL0_type *) 0xF0061FD4U)	/* Read Data and Bit Flip Register 26 */
#define MC15_RDBFL27	(*( MC0_RDBFL0_type *) 0xF0061FD6U)	/* Read Data and Bit Flip Register 27 */
#define MC15_RDBFL28	(*( MC0_RDBFL0_type *) 0xF0061FD8U)	/* Read Data and Bit Flip Register 28 */
#define MC15_RDBFL29	(*( MC0_RDBFL0_type *) 0xF0061FDAU)	/* Read Data and Bit Flip Register 29 */
#define MC15_RDBFL30	(*( MC0_RDBFL0_type *) 0xF0061FDCU)	/* Read Data and Bit Flip Register 30 */
#define MC15_RDBFL31	(*( MC0_RDBFL0_type *) 0xF0061FDEU)	/* Read Data and Bit Flip Register 31 */
#define MC15_RDBFL32	(*( MC0_RDBFL0_type *) 0xF0061FE0U)	/* Read Data and Bit Flip Register 32 */
#define MC15_RDBFL33	(*( MC0_RDBFL0_type *) 0xF0061FE2U)	/* Read Data and Bit Flip Register 33 */
#define MC15_RDBFL34	(*( MC0_RDBFL0_type *) 0xF0061FE4U)	/* Read Data and Bit Flip Register 34 */
#define MC15_RDBFL35	(*( MC0_RDBFL0_type *) 0xF0061FE6U)	/* Read Data and Bit Flip Register 35 */
#define MC15_RDBFL36	(*( MC0_RDBFL0_type *) 0xF0061FE8U)	/* Read Data and Bit Flip Register 36 */
#define MC15_RDBFL37	(*( MC0_RDBFL0_type *) 0xF0061FEAU)	/* Read Data and Bit Flip Register 37 */
#define MC15_RDBFL38	(*( MC0_RDBFL0_type *) 0xF0061FECU)	/* Read Data and Bit Flip Register 38 */
#define MC15_RDBFL39	(*( MC0_RDBFL0_type *) 0xF0061FEEU)	/* Read Data and Bit Flip Register 39 */
#define MC16_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00620A0U)	/* Read Data and Bit Flip Register 0 */
#define MC16_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00620A2U)	/* Read Data and Bit Flip Register 1 */
#define MC16_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00620A4U)	/* Read Data and Bit Flip Register 2 */
#define MC16_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00620A6U)	/* Read Data and Bit Flip Register 3 */
#define MC16_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00620A8U)	/* Read Data and Bit Flip Register 4 */
#define MC16_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00620AAU)	/* Read Data and Bit Flip Register 5 */
#define MC16_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00620ACU)	/* Read Data and Bit Flip Register 6 */
#define MC16_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00620AEU)	/* Read Data and Bit Flip Register 7 */
#define MC16_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00620B0U)	/* Read Data and Bit Flip Register 8 */
#define MC16_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00620B2U)	/* Read Data and Bit Flip Register 9 */
#define MC16_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00620B4U)	/* Read Data and Bit Flip Register 10 */
#define MC16_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00620B6U)	/* Read Data and Bit Flip Register 11 */
#define MC16_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00620B8U)	/* Read Data and Bit Flip Register 12 */
#define MC16_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00620BAU)	/* Read Data and Bit Flip Register 13 */
#define MC16_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00620BCU)	/* Read Data and Bit Flip Register 14 */
#define MC16_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00620BEU)	/* Read Data and Bit Flip Register 15 */
#define MC16_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00620C0U)	/* Read Data and Bit Flip Register 16 */
#define MC16_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00620C2U)	/* Read Data and Bit Flip Register 17 */
#define MC16_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00620C4U)	/* Read Data and Bit Flip Register 18 */
#define MC16_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00620C6U)	/* Read Data and Bit Flip Register 19 */
#define MC16_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00620C8U)	/* Read Data and Bit Flip Register 20 */
#define MC16_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00620CAU)	/* Read Data and Bit Flip Register 21 */
#define MC16_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00620CCU)	/* Read Data and Bit Flip Register 22 */
#define MC16_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00620CEU)	/* Read Data and Bit Flip Register 23 */
#define MC16_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00620D0U)	/* Read Data and Bit Flip Register 24 */
#define MC16_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00620D2U)	/* Read Data and Bit Flip Register 25 */
#define MC16_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00620D4U)	/* Read Data and Bit Flip Register 26 */
#define MC16_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00620D6U)	/* Read Data and Bit Flip Register 27 */
#define MC16_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00620D8U)	/* Read Data and Bit Flip Register 28 */
#define MC16_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00620DAU)	/* Read Data and Bit Flip Register 29 */
#define MC16_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00620DCU)	/* Read Data and Bit Flip Register 30 */
#define MC16_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00620DEU)	/* Read Data and Bit Flip Register 31 */
#define MC16_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00620E0U)	/* Read Data and Bit Flip Register 32 */
#define MC16_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00620E2U)	/* Read Data and Bit Flip Register 33 */
#define MC16_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00620E4U)	/* Read Data and Bit Flip Register 34 */
#define MC16_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00620E6U)	/* Read Data and Bit Flip Register 35 */
#define MC16_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00620E8U)	/* Read Data and Bit Flip Register 36 */
#define MC16_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00620EAU)	/* Read Data and Bit Flip Register 37 */
#define MC16_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00620ECU)	/* Read Data and Bit Flip Register 38 */
#define MC16_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00620EEU)	/* Read Data and Bit Flip Register 39 */
#define MC17_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00621A0U)	/* Read Data and Bit Flip Register 0 */
#define MC17_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00621A2U)	/* Read Data and Bit Flip Register 1 */
#define MC17_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00621A4U)	/* Read Data and Bit Flip Register 2 */
#define MC17_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00621A6U)	/* Read Data and Bit Flip Register 3 */
#define MC17_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00621A8U)	/* Read Data and Bit Flip Register 4 */
#define MC17_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00621AAU)	/* Read Data and Bit Flip Register 5 */
#define MC17_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00621ACU)	/* Read Data and Bit Flip Register 6 */
#define MC17_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00621AEU)	/* Read Data and Bit Flip Register 7 */
#define MC17_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00621B0U)	/* Read Data and Bit Flip Register 8 */
#define MC17_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00621B2U)	/* Read Data and Bit Flip Register 9 */
#define MC17_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00621B4U)	/* Read Data and Bit Flip Register 10 */
#define MC17_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00621B6U)	/* Read Data and Bit Flip Register 11 */
#define MC17_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00621B8U)	/* Read Data and Bit Flip Register 12 */
#define MC17_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00621BAU)	/* Read Data and Bit Flip Register 13 */
#define MC17_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00621BCU)	/* Read Data and Bit Flip Register 14 */
#define MC17_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00621BEU)	/* Read Data and Bit Flip Register 15 */
#define MC17_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00621C0U)	/* Read Data and Bit Flip Register 16 */
#define MC17_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00621C2U)	/* Read Data and Bit Flip Register 17 */
#define MC17_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00621C4U)	/* Read Data and Bit Flip Register 18 */
#define MC17_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00621C6U)	/* Read Data and Bit Flip Register 19 */
#define MC17_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00621C8U)	/* Read Data and Bit Flip Register 20 */
#define MC17_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00621CAU)	/* Read Data and Bit Flip Register 21 */
#define MC17_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00621CCU)	/* Read Data and Bit Flip Register 22 */
#define MC17_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00621CEU)	/* Read Data and Bit Flip Register 23 */
#define MC17_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00621D0U)	/* Read Data and Bit Flip Register 24 */
#define MC17_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00621D2U)	/* Read Data and Bit Flip Register 25 */
#define MC17_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00621D4U)	/* Read Data and Bit Flip Register 26 */
#define MC17_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00621D6U)	/* Read Data and Bit Flip Register 27 */
#define MC17_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00621D8U)	/* Read Data and Bit Flip Register 28 */
#define MC17_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00621DAU)	/* Read Data and Bit Flip Register 29 */
#define MC17_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00621DCU)	/* Read Data and Bit Flip Register 30 */
#define MC17_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00621DEU)	/* Read Data and Bit Flip Register 31 */
#define MC17_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00621E0U)	/* Read Data and Bit Flip Register 32 */
#define MC17_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00621E2U)	/* Read Data and Bit Flip Register 33 */
#define MC17_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00621E4U)	/* Read Data and Bit Flip Register 34 */
#define MC17_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00621E6U)	/* Read Data and Bit Flip Register 35 */
#define MC17_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00621E8U)	/* Read Data and Bit Flip Register 36 */
#define MC17_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00621EAU)	/* Read Data and Bit Flip Register 37 */
#define MC17_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00621ECU)	/* Read Data and Bit Flip Register 38 */
#define MC17_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00621EEU)	/* Read Data and Bit Flip Register 39 */
#define MC18_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00622A0U)	/* Read Data and Bit Flip Register 0 */
#define MC18_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00622A2U)	/* Read Data and Bit Flip Register 1 */
#define MC18_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00622A4U)	/* Read Data and Bit Flip Register 2 */
#define MC18_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00622A6U)	/* Read Data and Bit Flip Register 3 */
#define MC18_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00622A8U)	/* Read Data and Bit Flip Register 4 */
#define MC18_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00622AAU)	/* Read Data and Bit Flip Register 5 */
#define MC18_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00622ACU)	/* Read Data and Bit Flip Register 6 */
#define MC18_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00622AEU)	/* Read Data and Bit Flip Register 7 */
#define MC18_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00622B0U)	/* Read Data and Bit Flip Register 8 */
#define MC18_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00622B2U)	/* Read Data and Bit Flip Register 9 */
#define MC18_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00622B4U)	/* Read Data and Bit Flip Register 10 */
#define MC18_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00622B6U)	/* Read Data and Bit Flip Register 11 */
#define MC18_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00622B8U)	/* Read Data and Bit Flip Register 12 */
#define MC18_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00622BAU)	/* Read Data and Bit Flip Register 13 */
#define MC18_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00622BCU)	/* Read Data and Bit Flip Register 14 */
#define MC18_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00622BEU)	/* Read Data and Bit Flip Register 15 */
#define MC18_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00622C0U)	/* Read Data and Bit Flip Register 16 */
#define MC18_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00622C2U)	/* Read Data and Bit Flip Register 17 */
#define MC18_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00622C4U)	/* Read Data and Bit Flip Register 18 */
#define MC18_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00622C6U)	/* Read Data and Bit Flip Register 19 */
#define MC18_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00622C8U)	/* Read Data and Bit Flip Register 20 */
#define MC18_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00622CAU)	/* Read Data and Bit Flip Register 21 */
#define MC18_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00622CCU)	/* Read Data and Bit Flip Register 22 */
#define MC18_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00622CEU)	/* Read Data and Bit Flip Register 23 */
#define MC18_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00622D0U)	/* Read Data and Bit Flip Register 24 */
#define MC18_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00622D2U)	/* Read Data and Bit Flip Register 25 */
#define MC18_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00622D4U)	/* Read Data and Bit Flip Register 26 */
#define MC18_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00622D6U)	/* Read Data and Bit Flip Register 27 */
#define MC18_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00622D8U)	/* Read Data and Bit Flip Register 28 */
#define MC18_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00622DAU)	/* Read Data and Bit Flip Register 29 */
#define MC18_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00622DCU)	/* Read Data and Bit Flip Register 30 */
#define MC18_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00622DEU)	/* Read Data and Bit Flip Register 31 */
#define MC18_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00622E0U)	/* Read Data and Bit Flip Register 32 */
#define MC18_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00622E2U)	/* Read Data and Bit Flip Register 33 */
#define MC18_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00622E4U)	/* Read Data and Bit Flip Register 34 */
#define MC18_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00622E6U)	/* Read Data and Bit Flip Register 35 */
#define MC18_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00622E8U)	/* Read Data and Bit Flip Register 36 */
#define MC18_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00622EAU)	/* Read Data and Bit Flip Register 37 */
#define MC18_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00622ECU)	/* Read Data and Bit Flip Register 38 */
#define MC18_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00622EEU)	/* Read Data and Bit Flip Register 39 */
#define MC19_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00623A0U)	/* Read Data and Bit Flip Register 0 */
#define MC19_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00623A2U)	/* Read Data and Bit Flip Register 1 */
#define MC19_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00623A4U)	/* Read Data and Bit Flip Register 2 */
#define MC19_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00623A6U)	/* Read Data and Bit Flip Register 3 */
#define MC19_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00623A8U)	/* Read Data and Bit Flip Register 4 */
#define MC19_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00623AAU)	/* Read Data and Bit Flip Register 5 */
#define MC19_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00623ACU)	/* Read Data and Bit Flip Register 6 */
#define MC19_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00623AEU)	/* Read Data and Bit Flip Register 7 */
#define MC19_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00623B0U)	/* Read Data and Bit Flip Register 8 */
#define MC19_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00623B2U)	/* Read Data and Bit Flip Register 9 */
#define MC19_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00623B4U)	/* Read Data and Bit Flip Register 10 */
#define MC19_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00623B6U)	/* Read Data and Bit Flip Register 11 */
#define MC19_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00623B8U)	/* Read Data and Bit Flip Register 12 */
#define MC19_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00623BAU)	/* Read Data and Bit Flip Register 13 */
#define MC19_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00623BCU)	/* Read Data and Bit Flip Register 14 */
#define MC19_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00623BEU)	/* Read Data and Bit Flip Register 15 */
#define MC19_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00623C0U)	/* Read Data and Bit Flip Register 16 */
#define MC19_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00623C2U)	/* Read Data and Bit Flip Register 17 */
#define MC19_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00623C4U)	/* Read Data and Bit Flip Register 18 */
#define MC19_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00623C6U)	/* Read Data and Bit Flip Register 19 */
#define MC19_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00623C8U)	/* Read Data and Bit Flip Register 20 */
#define MC19_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00623CAU)	/* Read Data and Bit Flip Register 21 */
#define MC19_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00623CCU)	/* Read Data and Bit Flip Register 22 */
#define MC19_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00623CEU)	/* Read Data and Bit Flip Register 23 */
#define MC19_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00623D0U)	/* Read Data and Bit Flip Register 24 */
#define MC19_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00623D2U)	/* Read Data and Bit Flip Register 25 */
#define MC19_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00623D4U)	/* Read Data and Bit Flip Register 26 */
#define MC19_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00623D6U)	/* Read Data and Bit Flip Register 27 */
#define MC19_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00623D8U)	/* Read Data and Bit Flip Register 28 */
#define MC19_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00623DAU)	/* Read Data and Bit Flip Register 29 */
#define MC19_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00623DCU)	/* Read Data and Bit Flip Register 30 */
#define MC19_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00623DEU)	/* Read Data and Bit Flip Register 31 */
#define MC19_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00623E0U)	/* Read Data and Bit Flip Register 32 */
#define MC19_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00623E2U)	/* Read Data and Bit Flip Register 33 */
#define MC19_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00623E4U)	/* Read Data and Bit Flip Register 34 */
#define MC19_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00623E6U)	/* Read Data and Bit Flip Register 35 */
#define MC19_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00623E8U)	/* Read Data and Bit Flip Register 36 */
#define MC19_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00623EAU)	/* Read Data and Bit Flip Register 37 */
#define MC19_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00623ECU)	/* Read Data and Bit Flip Register 38 */
#define MC19_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00623EEU)	/* Read Data and Bit Flip Register 39 */
#define MC20_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00624A0U)	/* Read Data and Bit Flip Register 0 */
#define MC20_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00624A2U)	/* Read Data and Bit Flip Register 1 */
#define MC20_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00624A4U)	/* Read Data and Bit Flip Register 2 */
#define MC20_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00624A6U)	/* Read Data and Bit Flip Register 3 */
#define MC20_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00624A8U)	/* Read Data and Bit Flip Register 4 */
#define MC20_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00624AAU)	/* Read Data and Bit Flip Register 5 */
#define MC20_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00624ACU)	/* Read Data and Bit Flip Register 6 */
#define MC20_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00624AEU)	/* Read Data and Bit Flip Register 7 */
#define MC20_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00624B0U)	/* Read Data and Bit Flip Register 8 */
#define MC20_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00624B2U)	/* Read Data and Bit Flip Register 9 */
#define MC20_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00624B4U)	/* Read Data and Bit Flip Register 10 */
#define MC20_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00624B6U)	/* Read Data and Bit Flip Register 11 */
#define MC20_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00624B8U)	/* Read Data and Bit Flip Register 12 */
#define MC20_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00624BAU)	/* Read Data and Bit Flip Register 13 */
#define MC20_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00624BCU)	/* Read Data and Bit Flip Register 14 */
#define MC20_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00624BEU)	/* Read Data and Bit Flip Register 15 */
#define MC20_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00624C0U)	/* Read Data and Bit Flip Register 16 */
#define MC20_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00624C2U)	/* Read Data and Bit Flip Register 17 */
#define MC20_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00624C4U)	/* Read Data and Bit Flip Register 18 */
#define MC20_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00624C6U)	/* Read Data and Bit Flip Register 19 */
#define MC20_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00624C8U)	/* Read Data and Bit Flip Register 20 */
#define MC20_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00624CAU)	/* Read Data and Bit Flip Register 21 */
#define MC20_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00624CCU)	/* Read Data and Bit Flip Register 22 */
#define MC20_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00624CEU)	/* Read Data and Bit Flip Register 23 */
#define MC20_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00624D0U)	/* Read Data and Bit Flip Register 24 */
#define MC20_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00624D2U)	/* Read Data and Bit Flip Register 25 */
#define MC20_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00624D4U)	/* Read Data and Bit Flip Register 26 */
#define MC20_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00624D6U)	/* Read Data and Bit Flip Register 27 */
#define MC20_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00624D8U)	/* Read Data and Bit Flip Register 28 */
#define MC20_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00624DAU)	/* Read Data and Bit Flip Register 29 */
#define MC20_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00624DCU)	/* Read Data and Bit Flip Register 30 */
#define MC20_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00624DEU)	/* Read Data and Bit Flip Register 31 */
#define MC20_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00624E0U)	/* Read Data and Bit Flip Register 32 */
#define MC20_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00624E2U)	/* Read Data and Bit Flip Register 33 */
#define MC20_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00624E4U)	/* Read Data and Bit Flip Register 34 */
#define MC20_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00624E6U)	/* Read Data and Bit Flip Register 35 */
#define MC20_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00624E8U)	/* Read Data and Bit Flip Register 36 */
#define MC20_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00624EAU)	/* Read Data and Bit Flip Register 37 */
#define MC20_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00624ECU)	/* Read Data and Bit Flip Register 38 */
#define MC20_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00624EEU)	/* Read Data and Bit Flip Register 39 */
#define MC21_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00625A0U)	/* Read Data and Bit Flip Register 0 */
#define MC21_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00625A2U)	/* Read Data and Bit Flip Register 1 */
#define MC21_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00625A4U)	/* Read Data and Bit Flip Register 2 */
#define MC21_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00625A6U)	/* Read Data and Bit Flip Register 3 */
#define MC21_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00625A8U)	/* Read Data and Bit Flip Register 4 */
#define MC21_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00625AAU)	/* Read Data and Bit Flip Register 5 */
#define MC21_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00625ACU)	/* Read Data and Bit Flip Register 6 */
#define MC21_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00625AEU)	/* Read Data and Bit Flip Register 7 */
#define MC21_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00625B0U)	/* Read Data and Bit Flip Register 8 */
#define MC21_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00625B2U)	/* Read Data and Bit Flip Register 9 */
#define MC21_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00625B4U)	/* Read Data and Bit Flip Register 10 */
#define MC21_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00625B6U)	/* Read Data and Bit Flip Register 11 */
#define MC21_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00625B8U)	/* Read Data and Bit Flip Register 12 */
#define MC21_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00625BAU)	/* Read Data and Bit Flip Register 13 */
#define MC21_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00625BCU)	/* Read Data and Bit Flip Register 14 */
#define MC21_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00625BEU)	/* Read Data and Bit Flip Register 15 */
#define MC21_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00625C0U)	/* Read Data and Bit Flip Register 16 */
#define MC21_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00625C2U)	/* Read Data and Bit Flip Register 17 */
#define MC21_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00625C4U)	/* Read Data and Bit Flip Register 18 */
#define MC21_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00625C6U)	/* Read Data and Bit Flip Register 19 */
#define MC21_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00625C8U)	/* Read Data and Bit Flip Register 20 */
#define MC21_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00625CAU)	/* Read Data and Bit Flip Register 21 */
#define MC21_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00625CCU)	/* Read Data and Bit Flip Register 22 */
#define MC21_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00625CEU)	/* Read Data and Bit Flip Register 23 */
#define MC21_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00625D0U)	/* Read Data and Bit Flip Register 24 */
#define MC21_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00625D2U)	/* Read Data and Bit Flip Register 25 */
#define MC21_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00625D4U)	/* Read Data and Bit Flip Register 26 */
#define MC21_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00625D6U)	/* Read Data and Bit Flip Register 27 */
#define MC21_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00625D8U)	/* Read Data and Bit Flip Register 28 */
#define MC21_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00625DAU)	/* Read Data and Bit Flip Register 29 */
#define MC21_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00625DCU)	/* Read Data and Bit Flip Register 30 */
#define MC21_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00625DEU)	/* Read Data and Bit Flip Register 31 */
#define MC21_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00625E0U)	/* Read Data and Bit Flip Register 32 */
#define MC21_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00625E2U)	/* Read Data and Bit Flip Register 33 */
#define MC21_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00625E4U)	/* Read Data and Bit Flip Register 34 */
#define MC21_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00625E6U)	/* Read Data and Bit Flip Register 35 */
#define MC21_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00625E8U)	/* Read Data and Bit Flip Register 36 */
#define MC21_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00625EAU)	/* Read Data and Bit Flip Register 37 */
#define MC21_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00625ECU)	/* Read Data and Bit Flip Register 38 */
#define MC21_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00625EEU)	/* Read Data and Bit Flip Register 39 */
#define MC22_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00626A0U)	/* Read Data and Bit Flip Register 0 */
#define MC22_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00626A2U)	/* Read Data and Bit Flip Register 1 */
#define MC22_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00626A4U)	/* Read Data and Bit Flip Register 2 */
#define MC22_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00626A6U)	/* Read Data and Bit Flip Register 3 */
#define MC22_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00626A8U)	/* Read Data and Bit Flip Register 4 */
#define MC22_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00626AAU)	/* Read Data and Bit Flip Register 5 */
#define MC22_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00626ACU)	/* Read Data and Bit Flip Register 6 */
#define MC22_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00626AEU)	/* Read Data and Bit Flip Register 7 */
#define MC22_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00626B0U)	/* Read Data and Bit Flip Register 8 */
#define MC22_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00626B2U)	/* Read Data and Bit Flip Register 9 */
#define MC22_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00626B4U)	/* Read Data and Bit Flip Register 10 */
#define MC22_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00626B6U)	/* Read Data and Bit Flip Register 11 */
#define MC22_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00626B8U)	/* Read Data and Bit Flip Register 12 */
#define MC22_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00626BAU)	/* Read Data and Bit Flip Register 13 */
#define MC22_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00626BCU)	/* Read Data and Bit Flip Register 14 */
#define MC22_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00626BEU)	/* Read Data and Bit Flip Register 15 */
#define MC22_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00626C0U)	/* Read Data and Bit Flip Register 16 */
#define MC22_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00626C2U)	/* Read Data and Bit Flip Register 17 */
#define MC22_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00626C4U)	/* Read Data and Bit Flip Register 18 */
#define MC22_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00626C6U)	/* Read Data and Bit Flip Register 19 */
#define MC22_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00626C8U)	/* Read Data and Bit Flip Register 20 */
#define MC22_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00626CAU)	/* Read Data and Bit Flip Register 21 */
#define MC22_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00626CCU)	/* Read Data and Bit Flip Register 22 */
#define MC22_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00626CEU)	/* Read Data and Bit Flip Register 23 */
#define MC22_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00626D0U)	/* Read Data and Bit Flip Register 24 */
#define MC22_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00626D2U)	/* Read Data and Bit Flip Register 25 */
#define MC22_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00626D4U)	/* Read Data and Bit Flip Register 26 */
#define MC22_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00626D6U)	/* Read Data and Bit Flip Register 27 */
#define MC22_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00626D8U)	/* Read Data and Bit Flip Register 28 */
#define MC22_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00626DAU)	/* Read Data and Bit Flip Register 29 */
#define MC22_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00626DCU)	/* Read Data and Bit Flip Register 30 */
#define MC22_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00626DEU)	/* Read Data and Bit Flip Register 31 */
#define MC22_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00626E0U)	/* Read Data and Bit Flip Register 32 */
#define MC22_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00626E2U)	/* Read Data and Bit Flip Register 33 */
#define MC22_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00626E4U)	/* Read Data and Bit Flip Register 34 */
#define MC22_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00626E6U)	/* Read Data and Bit Flip Register 35 */
#define MC22_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00626E8U)	/* Read Data and Bit Flip Register 36 */
#define MC22_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00626EAU)	/* Read Data and Bit Flip Register 37 */
#define MC22_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00626ECU)	/* Read Data and Bit Flip Register 38 */
#define MC22_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00626EEU)	/* Read Data and Bit Flip Register 39 */
#define MC23_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00627A0U)	/* Read Data and Bit Flip Register 0 */
#define MC23_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00627A2U)	/* Read Data and Bit Flip Register 1 */
#define MC23_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00627A4U)	/* Read Data and Bit Flip Register 2 */
#define MC23_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00627A6U)	/* Read Data and Bit Flip Register 3 */
#define MC23_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00627A8U)	/* Read Data and Bit Flip Register 4 */
#define MC23_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00627AAU)	/* Read Data and Bit Flip Register 5 */
#define MC23_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00627ACU)	/* Read Data and Bit Flip Register 6 */
#define MC23_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00627AEU)	/* Read Data and Bit Flip Register 7 */
#define MC23_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00627B0U)	/* Read Data and Bit Flip Register 8 */
#define MC23_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00627B2U)	/* Read Data and Bit Flip Register 9 */
#define MC23_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00627B4U)	/* Read Data and Bit Flip Register 10 */
#define MC23_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00627B6U)	/* Read Data and Bit Flip Register 11 */
#define MC23_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00627B8U)	/* Read Data and Bit Flip Register 12 */
#define MC23_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00627BAU)	/* Read Data and Bit Flip Register 13 */
#define MC23_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00627BCU)	/* Read Data and Bit Flip Register 14 */
#define MC23_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00627BEU)	/* Read Data and Bit Flip Register 15 */
#define MC23_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00627C0U)	/* Read Data and Bit Flip Register 16 */
#define MC23_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00627C2U)	/* Read Data and Bit Flip Register 17 */
#define MC23_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00627C4U)	/* Read Data and Bit Flip Register 18 */
#define MC23_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00627C6U)	/* Read Data and Bit Flip Register 19 */
#define MC23_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00627C8U)	/* Read Data and Bit Flip Register 20 */
#define MC23_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00627CAU)	/* Read Data and Bit Flip Register 21 */
#define MC23_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00627CCU)	/* Read Data and Bit Flip Register 22 */
#define MC23_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00627CEU)	/* Read Data and Bit Flip Register 23 */
#define MC23_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00627D0U)	/* Read Data and Bit Flip Register 24 */
#define MC23_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00627D2U)	/* Read Data and Bit Flip Register 25 */
#define MC23_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00627D4U)	/* Read Data and Bit Flip Register 26 */
#define MC23_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00627D6U)	/* Read Data and Bit Flip Register 27 */
#define MC23_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00627D8U)	/* Read Data and Bit Flip Register 28 */
#define MC23_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00627DAU)	/* Read Data and Bit Flip Register 29 */
#define MC23_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00627DCU)	/* Read Data and Bit Flip Register 30 */
#define MC23_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00627DEU)	/* Read Data and Bit Flip Register 31 */
#define MC23_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00627E0U)	/* Read Data and Bit Flip Register 32 */
#define MC23_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00627E2U)	/* Read Data and Bit Flip Register 33 */
#define MC23_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00627E4U)	/* Read Data and Bit Flip Register 34 */
#define MC23_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00627E6U)	/* Read Data and Bit Flip Register 35 */
#define MC23_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00627E8U)	/* Read Data and Bit Flip Register 36 */
#define MC23_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00627EAU)	/* Read Data and Bit Flip Register 37 */
#define MC23_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00627ECU)	/* Read Data and Bit Flip Register 38 */
#define MC23_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00627EEU)	/* Read Data and Bit Flip Register 39 */
#define MC24_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00628A0U)	/* Read Data and Bit Flip Register 0 */
#define MC24_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00628A2U)	/* Read Data and Bit Flip Register 1 */
#define MC24_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00628A4U)	/* Read Data and Bit Flip Register 2 */
#define MC24_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00628A6U)	/* Read Data and Bit Flip Register 3 */
#define MC24_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00628A8U)	/* Read Data and Bit Flip Register 4 */
#define MC24_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00628AAU)	/* Read Data and Bit Flip Register 5 */
#define MC24_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00628ACU)	/* Read Data and Bit Flip Register 6 */
#define MC24_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00628AEU)	/* Read Data and Bit Flip Register 7 */
#define MC24_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00628B0U)	/* Read Data and Bit Flip Register 8 */
#define MC24_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00628B2U)	/* Read Data and Bit Flip Register 9 */
#define MC24_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00628B4U)	/* Read Data and Bit Flip Register 10 */
#define MC24_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00628B6U)	/* Read Data and Bit Flip Register 11 */
#define MC24_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00628B8U)	/* Read Data and Bit Flip Register 12 */
#define MC24_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00628BAU)	/* Read Data and Bit Flip Register 13 */
#define MC24_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00628BCU)	/* Read Data and Bit Flip Register 14 */
#define MC24_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00628BEU)	/* Read Data and Bit Flip Register 15 */
#define MC24_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00628C0U)	/* Read Data and Bit Flip Register 16 */
#define MC24_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00628C2U)	/* Read Data and Bit Flip Register 17 */
#define MC24_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00628C4U)	/* Read Data and Bit Flip Register 18 */
#define MC24_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00628C6U)	/* Read Data and Bit Flip Register 19 */
#define MC24_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00628C8U)	/* Read Data and Bit Flip Register 20 */
#define MC24_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00628CAU)	/* Read Data and Bit Flip Register 21 */
#define MC24_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00628CCU)	/* Read Data and Bit Flip Register 22 */
#define MC24_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00628CEU)	/* Read Data and Bit Flip Register 23 */
#define MC24_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00628D0U)	/* Read Data and Bit Flip Register 24 */
#define MC24_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00628D2U)	/* Read Data and Bit Flip Register 25 */
#define MC24_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00628D4U)	/* Read Data and Bit Flip Register 26 */
#define MC24_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00628D6U)	/* Read Data and Bit Flip Register 27 */
#define MC24_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00628D8U)	/* Read Data and Bit Flip Register 28 */
#define MC24_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00628DAU)	/* Read Data and Bit Flip Register 29 */
#define MC24_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00628DCU)	/* Read Data and Bit Flip Register 30 */
#define MC24_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00628DEU)	/* Read Data and Bit Flip Register 31 */
#define MC24_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00628E0U)	/* Read Data and Bit Flip Register 32 */
#define MC24_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00628E2U)	/* Read Data and Bit Flip Register 33 */
#define MC24_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00628E4U)	/* Read Data and Bit Flip Register 34 */
#define MC24_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00628E6U)	/* Read Data and Bit Flip Register 35 */
#define MC24_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00628E8U)	/* Read Data and Bit Flip Register 36 */
#define MC24_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00628EAU)	/* Read Data and Bit Flip Register 37 */
#define MC24_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00628ECU)	/* Read Data and Bit Flip Register 38 */
#define MC24_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00628EEU)	/* Read Data and Bit Flip Register 39 */
#define MC25_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00629A0U)	/* Read Data and Bit Flip Register 0 */
#define MC25_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00629A2U)	/* Read Data and Bit Flip Register 1 */
#define MC25_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00629A4U)	/* Read Data and Bit Flip Register 2 */
#define MC25_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00629A6U)	/* Read Data and Bit Flip Register 3 */
#define MC25_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00629A8U)	/* Read Data and Bit Flip Register 4 */
#define MC25_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00629AAU)	/* Read Data and Bit Flip Register 5 */
#define MC25_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00629ACU)	/* Read Data and Bit Flip Register 6 */
#define MC25_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00629AEU)	/* Read Data and Bit Flip Register 7 */
#define MC25_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00629B0U)	/* Read Data and Bit Flip Register 8 */
#define MC25_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00629B2U)	/* Read Data and Bit Flip Register 9 */
#define MC25_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00629B4U)	/* Read Data and Bit Flip Register 10 */
#define MC25_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00629B6U)	/* Read Data and Bit Flip Register 11 */
#define MC25_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00629B8U)	/* Read Data and Bit Flip Register 12 */
#define MC25_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00629BAU)	/* Read Data and Bit Flip Register 13 */
#define MC25_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00629BCU)	/* Read Data and Bit Flip Register 14 */
#define MC25_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00629BEU)	/* Read Data and Bit Flip Register 15 */
#define MC25_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00629C0U)	/* Read Data and Bit Flip Register 16 */
#define MC25_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00629C2U)	/* Read Data and Bit Flip Register 17 */
#define MC25_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00629C4U)	/* Read Data and Bit Flip Register 18 */
#define MC25_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00629C6U)	/* Read Data and Bit Flip Register 19 */
#define MC25_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00629C8U)	/* Read Data and Bit Flip Register 20 */
#define MC25_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00629CAU)	/* Read Data and Bit Flip Register 21 */
#define MC25_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00629CCU)	/* Read Data and Bit Flip Register 22 */
#define MC25_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00629CEU)	/* Read Data and Bit Flip Register 23 */
#define MC25_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00629D0U)	/* Read Data and Bit Flip Register 24 */
#define MC25_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00629D2U)	/* Read Data and Bit Flip Register 25 */
#define MC25_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00629D4U)	/* Read Data and Bit Flip Register 26 */
#define MC25_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00629D6U)	/* Read Data and Bit Flip Register 27 */
#define MC25_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00629D8U)	/* Read Data and Bit Flip Register 28 */
#define MC25_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00629DAU)	/* Read Data and Bit Flip Register 29 */
#define MC25_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00629DCU)	/* Read Data and Bit Flip Register 30 */
#define MC25_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00629DEU)	/* Read Data and Bit Flip Register 31 */
#define MC25_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00629E0U)	/* Read Data and Bit Flip Register 32 */
#define MC25_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00629E2U)	/* Read Data and Bit Flip Register 33 */
#define MC25_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00629E4U)	/* Read Data and Bit Flip Register 34 */
#define MC25_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00629E6U)	/* Read Data and Bit Flip Register 35 */
#define MC25_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00629E8U)	/* Read Data and Bit Flip Register 36 */
#define MC25_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00629EAU)	/* Read Data and Bit Flip Register 37 */
#define MC25_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00629ECU)	/* Read Data and Bit Flip Register 38 */
#define MC25_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00629EEU)	/* Read Data and Bit Flip Register 39 */
#define MC26_RDBFL0	(*( MC0_RDBFL0_type *) 0xF0062AA0U)	/* Read Data and Bit Flip Register 0 */
#define MC26_RDBFL1	(*( MC0_RDBFL0_type *) 0xF0062AA2U)	/* Read Data and Bit Flip Register 1 */
#define MC26_RDBFL2	(*( MC0_RDBFL0_type *) 0xF0062AA4U)	/* Read Data and Bit Flip Register 2 */
#define MC26_RDBFL3	(*( MC0_RDBFL0_type *) 0xF0062AA6U)	/* Read Data and Bit Flip Register 3 */
#define MC26_RDBFL4	(*( MC0_RDBFL0_type *) 0xF0062AA8U)	/* Read Data and Bit Flip Register 4 */
#define MC26_RDBFL5	(*( MC0_RDBFL0_type *) 0xF0062AAAU)	/* Read Data and Bit Flip Register 5 */
#define MC26_RDBFL6	(*( MC0_RDBFL0_type *) 0xF0062AACU)	/* Read Data and Bit Flip Register 6 */
#define MC26_RDBFL7	(*( MC0_RDBFL0_type *) 0xF0062AAEU)	/* Read Data and Bit Flip Register 7 */
#define MC26_RDBFL8	(*( MC0_RDBFL0_type *) 0xF0062AB0U)	/* Read Data and Bit Flip Register 8 */
#define MC26_RDBFL9	(*( MC0_RDBFL0_type *) 0xF0062AB2U)	/* Read Data and Bit Flip Register 9 */
#define MC26_RDBFL10	(*( MC0_RDBFL0_type *) 0xF0062AB4U)	/* Read Data and Bit Flip Register 10 */
#define MC26_RDBFL11	(*( MC0_RDBFL0_type *) 0xF0062AB6U)	/* Read Data and Bit Flip Register 11 */
#define MC26_RDBFL12	(*( MC0_RDBFL0_type *) 0xF0062AB8U)	/* Read Data and Bit Flip Register 12 */
#define MC26_RDBFL13	(*( MC0_RDBFL0_type *) 0xF0062ABAU)	/* Read Data and Bit Flip Register 13 */
#define MC26_RDBFL14	(*( MC0_RDBFL0_type *) 0xF0062ABCU)	/* Read Data and Bit Flip Register 14 */
#define MC26_RDBFL15	(*( MC0_RDBFL0_type *) 0xF0062ABEU)	/* Read Data and Bit Flip Register 15 */
#define MC26_RDBFL16	(*( MC0_RDBFL0_type *) 0xF0062AC0U)	/* Read Data and Bit Flip Register 16 */
#define MC26_RDBFL17	(*( MC0_RDBFL0_type *) 0xF0062AC2U)	/* Read Data and Bit Flip Register 17 */
#define MC26_RDBFL18	(*( MC0_RDBFL0_type *) 0xF0062AC4U)	/* Read Data and Bit Flip Register 18 */
#define MC26_RDBFL19	(*( MC0_RDBFL0_type *) 0xF0062AC6U)	/* Read Data and Bit Flip Register 19 */
#define MC26_RDBFL20	(*( MC0_RDBFL0_type *) 0xF0062AC8U)	/* Read Data and Bit Flip Register 20 */
#define MC26_RDBFL21	(*( MC0_RDBFL0_type *) 0xF0062ACAU)	/* Read Data and Bit Flip Register 21 */
#define MC26_RDBFL22	(*( MC0_RDBFL0_type *) 0xF0062ACCU)	/* Read Data and Bit Flip Register 22 */
#define MC26_RDBFL23	(*( MC0_RDBFL0_type *) 0xF0062ACEU)	/* Read Data and Bit Flip Register 23 */
#define MC26_RDBFL24	(*( MC0_RDBFL0_type *) 0xF0062AD0U)	/* Read Data and Bit Flip Register 24 */
#define MC26_RDBFL25	(*( MC0_RDBFL0_type *) 0xF0062AD2U)	/* Read Data and Bit Flip Register 25 */
#define MC26_RDBFL26	(*( MC0_RDBFL0_type *) 0xF0062AD4U)	/* Read Data and Bit Flip Register 26 */
#define MC26_RDBFL27	(*( MC0_RDBFL0_type *) 0xF0062AD6U)	/* Read Data and Bit Flip Register 27 */
#define MC26_RDBFL28	(*( MC0_RDBFL0_type *) 0xF0062AD8U)	/* Read Data and Bit Flip Register 28 */
#define MC26_RDBFL29	(*( MC0_RDBFL0_type *) 0xF0062ADAU)	/* Read Data and Bit Flip Register 29 */
#define MC26_RDBFL30	(*( MC0_RDBFL0_type *) 0xF0062ADCU)	/* Read Data and Bit Flip Register 30 */
#define MC26_RDBFL31	(*( MC0_RDBFL0_type *) 0xF0062ADEU)	/* Read Data and Bit Flip Register 31 */
#define MC26_RDBFL32	(*( MC0_RDBFL0_type *) 0xF0062AE0U)	/* Read Data and Bit Flip Register 32 */
#define MC26_RDBFL33	(*( MC0_RDBFL0_type *) 0xF0062AE2U)	/* Read Data and Bit Flip Register 33 */
#define MC26_RDBFL34	(*( MC0_RDBFL0_type *) 0xF0062AE4U)	/* Read Data and Bit Flip Register 34 */
#define MC26_RDBFL35	(*( MC0_RDBFL0_type *) 0xF0062AE6U)	/* Read Data and Bit Flip Register 35 */
#define MC26_RDBFL36	(*( MC0_RDBFL0_type *) 0xF0062AE8U)	/* Read Data and Bit Flip Register 36 */
#define MC26_RDBFL37	(*( MC0_RDBFL0_type *) 0xF0062AEAU)	/* Read Data and Bit Flip Register 37 */
#define MC26_RDBFL38	(*( MC0_RDBFL0_type *) 0xF0062AECU)	/* Read Data and Bit Flip Register 38 */
#define MC26_RDBFL39	(*( MC0_RDBFL0_type *) 0xF0062AEEU)	/* Read Data and Bit Flip Register 39 */
#define MC27_RDBFL0	(*( MC0_RDBFL0_type *) 0xF0062BA0U)	/* Read Data and Bit Flip Register 0 */
#define MC27_RDBFL1	(*( MC0_RDBFL0_type *) 0xF0062BA2U)	/* Read Data and Bit Flip Register 1 */
#define MC27_RDBFL2	(*( MC0_RDBFL0_type *) 0xF0062BA4U)	/* Read Data and Bit Flip Register 2 */
#define MC27_RDBFL3	(*( MC0_RDBFL0_type *) 0xF0062BA6U)	/* Read Data and Bit Flip Register 3 */
#define MC27_RDBFL4	(*( MC0_RDBFL0_type *) 0xF0062BA8U)	/* Read Data and Bit Flip Register 4 */
#define MC27_RDBFL5	(*( MC0_RDBFL0_type *) 0xF0062BAAU)	/* Read Data and Bit Flip Register 5 */
#define MC27_RDBFL6	(*( MC0_RDBFL0_type *) 0xF0062BACU)	/* Read Data and Bit Flip Register 6 */
#define MC27_RDBFL7	(*( MC0_RDBFL0_type *) 0xF0062BAEU)	/* Read Data and Bit Flip Register 7 */
#define MC27_RDBFL8	(*( MC0_RDBFL0_type *) 0xF0062BB0U)	/* Read Data and Bit Flip Register 8 */
#define MC27_RDBFL9	(*( MC0_RDBFL0_type *) 0xF0062BB2U)	/* Read Data and Bit Flip Register 9 */
#define MC27_RDBFL10	(*( MC0_RDBFL0_type *) 0xF0062BB4U)	/* Read Data and Bit Flip Register 10 */
#define MC27_RDBFL11	(*( MC0_RDBFL0_type *) 0xF0062BB6U)	/* Read Data and Bit Flip Register 11 */
#define MC27_RDBFL12	(*( MC0_RDBFL0_type *) 0xF0062BB8U)	/* Read Data and Bit Flip Register 12 */
#define MC27_RDBFL13	(*( MC0_RDBFL0_type *) 0xF0062BBAU)	/* Read Data and Bit Flip Register 13 */
#define MC27_RDBFL14	(*( MC0_RDBFL0_type *) 0xF0062BBCU)	/* Read Data and Bit Flip Register 14 */
#define MC27_RDBFL15	(*( MC0_RDBFL0_type *) 0xF0062BBEU)	/* Read Data and Bit Flip Register 15 */
#define MC27_RDBFL16	(*( MC0_RDBFL0_type *) 0xF0062BC0U)	/* Read Data and Bit Flip Register 16 */
#define MC27_RDBFL17	(*( MC0_RDBFL0_type *) 0xF0062BC2U)	/* Read Data and Bit Flip Register 17 */
#define MC27_RDBFL18	(*( MC0_RDBFL0_type *) 0xF0062BC4U)	/* Read Data and Bit Flip Register 18 */
#define MC27_RDBFL19	(*( MC0_RDBFL0_type *) 0xF0062BC6U)	/* Read Data and Bit Flip Register 19 */
#define MC27_RDBFL20	(*( MC0_RDBFL0_type *) 0xF0062BC8U)	/* Read Data and Bit Flip Register 20 */
#define MC27_RDBFL21	(*( MC0_RDBFL0_type *) 0xF0062BCAU)	/* Read Data and Bit Flip Register 21 */
#define MC27_RDBFL22	(*( MC0_RDBFL0_type *) 0xF0062BCCU)	/* Read Data and Bit Flip Register 22 */
#define MC27_RDBFL23	(*( MC0_RDBFL0_type *) 0xF0062BCEU)	/* Read Data and Bit Flip Register 23 */
#define MC27_RDBFL24	(*( MC0_RDBFL0_type *) 0xF0062BD0U)	/* Read Data and Bit Flip Register 24 */
#define MC27_RDBFL25	(*( MC0_RDBFL0_type *) 0xF0062BD2U)	/* Read Data and Bit Flip Register 25 */
#define MC27_RDBFL26	(*( MC0_RDBFL0_type *) 0xF0062BD4U)	/* Read Data and Bit Flip Register 26 */
#define MC27_RDBFL27	(*( MC0_RDBFL0_type *) 0xF0062BD6U)	/* Read Data and Bit Flip Register 27 */
#define MC27_RDBFL28	(*( MC0_RDBFL0_type *) 0xF0062BD8U)	/* Read Data and Bit Flip Register 28 */
#define MC27_RDBFL29	(*( MC0_RDBFL0_type *) 0xF0062BDAU)	/* Read Data and Bit Flip Register 29 */
#define MC27_RDBFL30	(*( MC0_RDBFL0_type *) 0xF0062BDCU)	/* Read Data and Bit Flip Register 30 */
#define MC27_RDBFL31	(*( MC0_RDBFL0_type *) 0xF0062BDEU)	/* Read Data and Bit Flip Register 31 */
#define MC27_RDBFL32	(*( MC0_RDBFL0_type *) 0xF0062BE0U)	/* Read Data and Bit Flip Register 32 */
#define MC27_RDBFL33	(*( MC0_RDBFL0_type *) 0xF0062BE2U)	/* Read Data and Bit Flip Register 33 */
#define MC27_RDBFL34	(*( MC0_RDBFL0_type *) 0xF0062BE4U)	/* Read Data and Bit Flip Register 34 */
#define MC27_RDBFL35	(*( MC0_RDBFL0_type *) 0xF0062BE6U)	/* Read Data and Bit Flip Register 35 */
#define MC27_RDBFL36	(*( MC0_RDBFL0_type *) 0xF0062BE8U)	/* Read Data and Bit Flip Register 36 */
#define MC27_RDBFL37	(*( MC0_RDBFL0_type *) 0xF0062BEAU)	/* Read Data and Bit Flip Register 37 */
#define MC27_RDBFL38	(*( MC0_RDBFL0_type *) 0xF0062BECU)	/* Read Data and Bit Flip Register 38 */
#define MC27_RDBFL39	(*( MC0_RDBFL0_type *) 0xF0062BEEU)	/* Read Data and Bit Flip Register 39 */
#define MC28_RDBFL0	(*( MC0_RDBFL0_type *) 0xF0062CA0U)	/* Read Data and Bit Flip Register 0 */
#define MC28_RDBFL1	(*( MC0_RDBFL0_type *) 0xF0062CA2U)	/* Read Data and Bit Flip Register 1 */
#define MC28_RDBFL2	(*( MC0_RDBFL0_type *) 0xF0062CA4U)	/* Read Data and Bit Flip Register 2 */
#define MC28_RDBFL3	(*( MC0_RDBFL0_type *) 0xF0062CA6U)	/* Read Data and Bit Flip Register 3 */
#define MC28_RDBFL4	(*( MC0_RDBFL0_type *) 0xF0062CA8U)	/* Read Data and Bit Flip Register 4 */
#define MC28_RDBFL5	(*( MC0_RDBFL0_type *) 0xF0062CAAU)	/* Read Data and Bit Flip Register 5 */
#define MC28_RDBFL6	(*( MC0_RDBFL0_type *) 0xF0062CACU)	/* Read Data and Bit Flip Register 6 */
#define MC28_RDBFL7	(*( MC0_RDBFL0_type *) 0xF0062CAEU)	/* Read Data and Bit Flip Register 7 */
#define MC28_RDBFL8	(*( MC0_RDBFL0_type *) 0xF0062CB0U)	/* Read Data and Bit Flip Register 8 */
#define MC28_RDBFL9	(*( MC0_RDBFL0_type *) 0xF0062CB2U)	/* Read Data and Bit Flip Register 9 */
#define MC28_RDBFL10	(*( MC0_RDBFL0_type *) 0xF0062CB4U)	/* Read Data and Bit Flip Register 10 */
#define MC28_RDBFL11	(*( MC0_RDBFL0_type *) 0xF0062CB6U)	/* Read Data and Bit Flip Register 11 */
#define MC28_RDBFL12	(*( MC0_RDBFL0_type *) 0xF0062CB8U)	/* Read Data and Bit Flip Register 12 */
#define MC28_RDBFL13	(*( MC0_RDBFL0_type *) 0xF0062CBAU)	/* Read Data and Bit Flip Register 13 */
#define MC28_RDBFL14	(*( MC0_RDBFL0_type *) 0xF0062CBCU)	/* Read Data and Bit Flip Register 14 */
#define MC28_RDBFL15	(*( MC0_RDBFL0_type *) 0xF0062CBEU)	/* Read Data and Bit Flip Register 15 */
#define MC28_RDBFL16	(*( MC0_RDBFL0_type *) 0xF0062CC0U)	/* Read Data and Bit Flip Register 16 */
#define MC28_RDBFL17	(*( MC0_RDBFL0_type *) 0xF0062CC2U)	/* Read Data and Bit Flip Register 17 */
#define MC28_RDBFL18	(*( MC0_RDBFL0_type *) 0xF0062CC4U)	/* Read Data and Bit Flip Register 18 */
#define MC28_RDBFL19	(*( MC0_RDBFL0_type *) 0xF0062CC6U)	/* Read Data and Bit Flip Register 19 */
#define MC28_RDBFL20	(*( MC0_RDBFL0_type *) 0xF0062CC8U)	/* Read Data and Bit Flip Register 20 */
#define MC28_RDBFL21	(*( MC0_RDBFL0_type *) 0xF0062CCAU)	/* Read Data and Bit Flip Register 21 */
#define MC28_RDBFL22	(*( MC0_RDBFL0_type *) 0xF0062CCCU)	/* Read Data and Bit Flip Register 22 */
#define MC28_RDBFL23	(*( MC0_RDBFL0_type *) 0xF0062CCEU)	/* Read Data and Bit Flip Register 23 */
#define MC28_RDBFL24	(*( MC0_RDBFL0_type *) 0xF0062CD0U)	/* Read Data and Bit Flip Register 24 */
#define MC28_RDBFL25	(*( MC0_RDBFL0_type *) 0xF0062CD2U)	/* Read Data and Bit Flip Register 25 */
#define MC28_RDBFL26	(*( MC0_RDBFL0_type *) 0xF0062CD4U)	/* Read Data and Bit Flip Register 26 */
#define MC28_RDBFL27	(*( MC0_RDBFL0_type *) 0xF0062CD6U)	/* Read Data and Bit Flip Register 27 */
#define MC28_RDBFL28	(*( MC0_RDBFL0_type *) 0xF0062CD8U)	/* Read Data and Bit Flip Register 28 */
#define MC28_RDBFL29	(*( MC0_RDBFL0_type *) 0xF0062CDAU)	/* Read Data and Bit Flip Register 29 */
#define MC28_RDBFL30	(*( MC0_RDBFL0_type *) 0xF0062CDCU)	/* Read Data and Bit Flip Register 30 */
#define MC28_RDBFL31	(*( MC0_RDBFL0_type *) 0xF0062CDEU)	/* Read Data and Bit Flip Register 31 */
#define MC28_RDBFL32	(*( MC0_RDBFL0_type *) 0xF0062CE0U)	/* Read Data and Bit Flip Register 32 */
#define MC28_RDBFL33	(*( MC0_RDBFL0_type *) 0xF0062CE2U)	/* Read Data and Bit Flip Register 33 */
#define MC28_RDBFL34	(*( MC0_RDBFL0_type *) 0xF0062CE4U)	/* Read Data and Bit Flip Register 34 */
#define MC28_RDBFL35	(*( MC0_RDBFL0_type *) 0xF0062CE6U)	/* Read Data and Bit Flip Register 35 */
#define MC28_RDBFL36	(*( MC0_RDBFL0_type *) 0xF0062CE8U)	/* Read Data and Bit Flip Register 36 */
#define MC28_RDBFL37	(*( MC0_RDBFL0_type *) 0xF0062CEAU)	/* Read Data and Bit Flip Register 37 */
#define MC28_RDBFL38	(*( MC0_RDBFL0_type *) 0xF0062CECU)	/* Read Data and Bit Flip Register 38 */
#define MC28_RDBFL39	(*( MC0_RDBFL0_type *) 0xF0062CEEU)	/* Read Data and Bit Flip Register 39 */
#define MC29_RDBFL0	(*( MC0_RDBFL0_type *) 0xF0062DA0U)	/* Read Data and Bit Flip Register 0 */
#define MC29_RDBFL1	(*( MC0_RDBFL0_type *) 0xF0062DA2U)	/* Read Data and Bit Flip Register 1 */
#define MC29_RDBFL2	(*( MC0_RDBFL0_type *) 0xF0062DA4U)	/* Read Data and Bit Flip Register 2 */
#define MC29_RDBFL3	(*( MC0_RDBFL0_type *) 0xF0062DA6U)	/* Read Data and Bit Flip Register 3 */
#define MC29_RDBFL4	(*( MC0_RDBFL0_type *) 0xF0062DA8U)	/* Read Data and Bit Flip Register 4 */
#define MC29_RDBFL5	(*( MC0_RDBFL0_type *) 0xF0062DAAU)	/* Read Data and Bit Flip Register 5 */
#define MC29_RDBFL6	(*( MC0_RDBFL0_type *) 0xF0062DACU)	/* Read Data and Bit Flip Register 6 */
#define MC29_RDBFL7	(*( MC0_RDBFL0_type *) 0xF0062DAEU)	/* Read Data and Bit Flip Register 7 */
#define MC29_RDBFL8	(*( MC0_RDBFL0_type *) 0xF0062DB0U)	/* Read Data and Bit Flip Register 8 */
#define MC29_RDBFL9	(*( MC0_RDBFL0_type *) 0xF0062DB2U)	/* Read Data and Bit Flip Register 9 */
#define MC29_RDBFL10	(*( MC0_RDBFL0_type *) 0xF0062DB4U)	/* Read Data and Bit Flip Register 10 */
#define MC29_RDBFL11	(*( MC0_RDBFL0_type *) 0xF0062DB6U)	/* Read Data and Bit Flip Register 11 */
#define MC29_RDBFL12	(*( MC0_RDBFL0_type *) 0xF0062DB8U)	/* Read Data and Bit Flip Register 12 */
#define MC29_RDBFL13	(*( MC0_RDBFL0_type *) 0xF0062DBAU)	/* Read Data and Bit Flip Register 13 */
#define MC29_RDBFL14	(*( MC0_RDBFL0_type *) 0xF0062DBCU)	/* Read Data and Bit Flip Register 14 */
#define MC29_RDBFL15	(*( MC0_RDBFL0_type *) 0xF0062DBEU)	/* Read Data and Bit Flip Register 15 */
#define MC29_RDBFL16	(*( MC0_RDBFL0_type *) 0xF0062DC0U)	/* Read Data and Bit Flip Register 16 */
#define MC29_RDBFL17	(*( MC0_RDBFL0_type *) 0xF0062DC2U)	/* Read Data and Bit Flip Register 17 */
#define MC29_RDBFL18	(*( MC0_RDBFL0_type *) 0xF0062DC4U)	/* Read Data and Bit Flip Register 18 */
#define MC29_RDBFL19	(*( MC0_RDBFL0_type *) 0xF0062DC6U)	/* Read Data and Bit Flip Register 19 */
#define MC29_RDBFL20	(*( MC0_RDBFL0_type *) 0xF0062DC8U)	/* Read Data and Bit Flip Register 20 */
#define MC29_RDBFL21	(*( MC0_RDBFL0_type *) 0xF0062DCAU)	/* Read Data and Bit Flip Register 21 */
#define MC29_RDBFL22	(*( MC0_RDBFL0_type *) 0xF0062DCCU)	/* Read Data and Bit Flip Register 22 */
#define MC29_RDBFL23	(*( MC0_RDBFL0_type *) 0xF0062DCEU)	/* Read Data and Bit Flip Register 23 */
#define MC29_RDBFL24	(*( MC0_RDBFL0_type *) 0xF0062DD0U)	/* Read Data and Bit Flip Register 24 */
#define MC29_RDBFL25	(*( MC0_RDBFL0_type *) 0xF0062DD2U)	/* Read Data and Bit Flip Register 25 */
#define MC29_RDBFL26	(*( MC0_RDBFL0_type *) 0xF0062DD4U)	/* Read Data and Bit Flip Register 26 */
#define MC29_RDBFL27	(*( MC0_RDBFL0_type *) 0xF0062DD6U)	/* Read Data and Bit Flip Register 27 */
#define MC29_RDBFL28	(*( MC0_RDBFL0_type *) 0xF0062DD8U)	/* Read Data and Bit Flip Register 28 */
#define MC29_RDBFL29	(*( MC0_RDBFL0_type *) 0xF0062DDAU)	/* Read Data and Bit Flip Register 29 */
#define MC29_RDBFL30	(*( MC0_RDBFL0_type *) 0xF0062DDCU)	/* Read Data and Bit Flip Register 30 */
#define MC29_RDBFL31	(*( MC0_RDBFL0_type *) 0xF0062DDEU)	/* Read Data and Bit Flip Register 31 */
#define MC29_RDBFL32	(*( MC0_RDBFL0_type *) 0xF0062DE0U)	/* Read Data and Bit Flip Register 32 */
#define MC29_RDBFL33	(*( MC0_RDBFL0_type *) 0xF0062DE2U)	/* Read Data and Bit Flip Register 33 */
#define MC29_RDBFL34	(*( MC0_RDBFL0_type *) 0xF0062DE4U)	/* Read Data and Bit Flip Register 34 */
#define MC29_RDBFL35	(*( MC0_RDBFL0_type *) 0xF0062DE6U)	/* Read Data and Bit Flip Register 35 */
#define MC29_RDBFL36	(*( MC0_RDBFL0_type *) 0xF0062DE8U)	/* Read Data and Bit Flip Register 36 */
#define MC29_RDBFL37	(*( MC0_RDBFL0_type *) 0xF0062DEAU)	/* Read Data and Bit Flip Register 37 */
#define MC29_RDBFL38	(*( MC0_RDBFL0_type *) 0xF0062DECU)	/* Read Data and Bit Flip Register 38 */
#define MC29_RDBFL39	(*( MC0_RDBFL0_type *) 0xF0062DEEU)	/* Read Data and Bit Flip Register 39 */
#define MC30_RDBFL0	(*( MC0_RDBFL0_type *) 0xF0062EA0U)	/* Read Data and Bit Flip Register 0 */
#define MC30_RDBFL1	(*( MC0_RDBFL0_type *) 0xF0062EA2U)	/* Read Data and Bit Flip Register 1 */
#define MC30_RDBFL2	(*( MC0_RDBFL0_type *) 0xF0062EA4U)	/* Read Data and Bit Flip Register 2 */
#define MC30_RDBFL3	(*( MC0_RDBFL0_type *) 0xF0062EA6U)	/* Read Data and Bit Flip Register 3 */
#define MC30_RDBFL4	(*( MC0_RDBFL0_type *) 0xF0062EA8U)	/* Read Data and Bit Flip Register 4 */
#define MC30_RDBFL5	(*( MC0_RDBFL0_type *) 0xF0062EAAU)	/* Read Data and Bit Flip Register 5 */
#define MC30_RDBFL6	(*( MC0_RDBFL0_type *) 0xF0062EACU)	/* Read Data and Bit Flip Register 6 */
#define MC30_RDBFL7	(*( MC0_RDBFL0_type *) 0xF0062EAEU)	/* Read Data and Bit Flip Register 7 */
#define MC30_RDBFL8	(*( MC0_RDBFL0_type *) 0xF0062EB0U)	/* Read Data and Bit Flip Register 8 */
#define MC30_RDBFL9	(*( MC0_RDBFL0_type *) 0xF0062EB2U)	/* Read Data and Bit Flip Register 9 */
#define MC30_RDBFL10	(*( MC0_RDBFL0_type *) 0xF0062EB4U)	/* Read Data and Bit Flip Register 10 */
#define MC30_RDBFL11	(*( MC0_RDBFL0_type *) 0xF0062EB6U)	/* Read Data and Bit Flip Register 11 */
#define MC30_RDBFL12	(*( MC0_RDBFL0_type *) 0xF0062EB8U)	/* Read Data and Bit Flip Register 12 */
#define MC30_RDBFL13	(*( MC0_RDBFL0_type *) 0xF0062EBAU)	/* Read Data and Bit Flip Register 13 */
#define MC30_RDBFL14	(*( MC0_RDBFL0_type *) 0xF0062EBCU)	/* Read Data and Bit Flip Register 14 */
#define MC30_RDBFL15	(*( MC0_RDBFL0_type *) 0xF0062EBEU)	/* Read Data and Bit Flip Register 15 */
#define MC30_RDBFL16	(*( MC0_RDBFL0_type *) 0xF0062EC0U)	/* Read Data and Bit Flip Register 16 */
#define MC30_RDBFL17	(*( MC0_RDBFL0_type *) 0xF0062EC2U)	/* Read Data and Bit Flip Register 17 */
#define MC30_RDBFL18	(*( MC0_RDBFL0_type *) 0xF0062EC4U)	/* Read Data and Bit Flip Register 18 */
#define MC30_RDBFL19	(*( MC0_RDBFL0_type *) 0xF0062EC6U)	/* Read Data and Bit Flip Register 19 */
#define MC30_RDBFL20	(*( MC0_RDBFL0_type *) 0xF0062EC8U)	/* Read Data and Bit Flip Register 20 */
#define MC30_RDBFL21	(*( MC0_RDBFL0_type *) 0xF0062ECAU)	/* Read Data and Bit Flip Register 21 */
#define MC30_RDBFL22	(*( MC0_RDBFL0_type *) 0xF0062ECCU)	/* Read Data and Bit Flip Register 22 */
#define MC30_RDBFL23	(*( MC0_RDBFL0_type *) 0xF0062ECEU)	/* Read Data and Bit Flip Register 23 */
#define MC30_RDBFL24	(*( MC0_RDBFL0_type *) 0xF0062ED0U)	/* Read Data and Bit Flip Register 24 */
#define MC30_RDBFL25	(*( MC0_RDBFL0_type *) 0xF0062ED2U)	/* Read Data and Bit Flip Register 25 */
#define MC30_RDBFL26	(*( MC0_RDBFL0_type *) 0xF0062ED4U)	/* Read Data and Bit Flip Register 26 */
#define MC30_RDBFL27	(*( MC0_RDBFL0_type *) 0xF0062ED6U)	/* Read Data and Bit Flip Register 27 */
#define MC30_RDBFL28	(*( MC0_RDBFL0_type *) 0xF0062ED8U)	/* Read Data and Bit Flip Register 28 */
#define MC30_RDBFL29	(*( MC0_RDBFL0_type *) 0xF0062EDAU)	/* Read Data and Bit Flip Register 29 */
#define MC30_RDBFL30	(*( MC0_RDBFL0_type *) 0xF0062EDCU)	/* Read Data and Bit Flip Register 30 */
#define MC30_RDBFL31	(*( MC0_RDBFL0_type *) 0xF0062EDEU)	/* Read Data and Bit Flip Register 31 */
#define MC30_RDBFL32	(*( MC0_RDBFL0_type *) 0xF0062EE0U)	/* Read Data and Bit Flip Register 32 */
#define MC30_RDBFL33	(*( MC0_RDBFL0_type *) 0xF0062EE2U)	/* Read Data and Bit Flip Register 33 */
#define MC30_RDBFL34	(*( MC0_RDBFL0_type *) 0xF0062EE4U)	/* Read Data and Bit Flip Register 34 */
#define MC30_RDBFL35	(*( MC0_RDBFL0_type *) 0xF0062EE6U)	/* Read Data and Bit Flip Register 35 */
#define MC30_RDBFL36	(*( MC0_RDBFL0_type *) 0xF0062EE8U)	/* Read Data and Bit Flip Register 36 */
#define MC30_RDBFL37	(*( MC0_RDBFL0_type *) 0xF0062EEAU)	/* Read Data and Bit Flip Register 37 */
#define MC30_RDBFL38	(*( MC0_RDBFL0_type *) 0xF0062EECU)	/* Read Data and Bit Flip Register 38 */
#define MC30_RDBFL39	(*( MC0_RDBFL0_type *) 0xF0062EEEU)	/* Read Data and Bit Flip Register 39 */
#define MC31_RDBFL0	(*( MC0_RDBFL0_type *) 0xF0062FA0U)	/* Read Data and Bit Flip Register 0 */
#define MC31_RDBFL1	(*( MC0_RDBFL0_type *) 0xF0062FA2U)	/* Read Data and Bit Flip Register 1 */
#define MC31_RDBFL2	(*( MC0_RDBFL0_type *) 0xF0062FA4U)	/* Read Data and Bit Flip Register 2 */
#define MC31_RDBFL3	(*( MC0_RDBFL0_type *) 0xF0062FA6U)	/* Read Data and Bit Flip Register 3 */
#define MC31_RDBFL4	(*( MC0_RDBFL0_type *) 0xF0062FA8U)	/* Read Data and Bit Flip Register 4 */
#define MC31_RDBFL5	(*( MC0_RDBFL0_type *) 0xF0062FAAU)	/* Read Data and Bit Flip Register 5 */
#define MC31_RDBFL6	(*( MC0_RDBFL0_type *) 0xF0062FACU)	/* Read Data and Bit Flip Register 6 */
#define MC31_RDBFL7	(*( MC0_RDBFL0_type *) 0xF0062FAEU)	/* Read Data and Bit Flip Register 7 */
#define MC31_RDBFL8	(*( MC0_RDBFL0_type *) 0xF0062FB0U)	/* Read Data and Bit Flip Register 8 */
#define MC31_RDBFL9	(*( MC0_RDBFL0_type *) 0xF0062FB2U)	/* Read Data and Bit Flip Register 9 */
#define MC31_RDBFL10	(*( MC0_RDBFL0_type *) 0xF0062FB4U)	/* Read Data and Bit Flip Register 10 */
#define MC31_RDBFL11	(*( MC0_RDBFL0_type *) 0xF0062FB6U)	/* Read Data and Bit Flip Register 11 */
#define MC31_RDBFL12	(*( MC0_RDBFL0_type *) 0xF0062FB8U)	/* Read Data and Bit Flip Register 12 */
#define MC31_RDBFL13	(*( MC0_RDBFL0_type *) 0xF0062FBAU)	/* Read Data and Bit Flip Register 13 */
#define MC31_RDBFL14	(*( MC0_RDBFL0_type *) 0xF0062FBCU)	/* Read Data and Bit Flip Register 14 */
#define MC31_RDBFL15	(*( MC0_RDBFL0_type *) 0xF0062FBEU)	/* Read Data and Bit Flip Register 15 */
#define MC31_RDBFL16	(*( MC0_RDBFL0_type *) 0xF0062FC0U)	/* Read Data and Bit Flip Register 16 */
#define MC31_RDBFL17	(*( MC0_RDBFL0_type *) 0xF0062FC2U)	/* Read Data and Bit Flip Register 17 */
#define MC31_RDBFL18	(*( MC0_RDBFL0_type *) 0xF0062FC4U)	/* Read Data and Bit Flip Register 18 */
#define MC31_RDBFL19	(*( MC0_RDBFL0_type *) 0xF0062FC6U)	/* Read Data and Bit Flip Register 19 */
#define MC31_RDBFL20	(*( MC0_RDBFL0_type *) 0xF0062FC8U)	/* Read Data and Bit Flip Register 20 */
#define MC31_RDBFL21	(*( MC0_RDBFL0_type *) 0xF0062FCAU)	/* Read Data and Bit Flip Register 21 */
#define MC31_RDBFL22	(*( MC0_RDBFL0_type *) 0xF0062FCCU)	/* Read Data and Bit Flip Register 22 */
#define MC31_RDBFL23	(*( MC0_RDBFL0_type *) 0xF0062FCEU)	/* Read Data and Bit Flip Register 23 */
#define MC31_RDBFL24	(*( MC0_RDBFL0_type *) 0xF0062FD0U)	/* Read Data and Bit Flip Register 24 */
#define MC31_RDBFL25	(*( MC0_RDBFL0_type *) 0xF0062FD2U)	/* Read Data and Bit Flip Register 25 */
#define MC31_RDBFL26	(*( MC0_RDBFL0_type *) 0xF0062FD4U)	/* Read Data and Bit Flip Register 26 */
#define MC31_RDBFL27	(*( MC0_RDBFL0_type *) 0xF0062FD6U)	/* Read Data and Bit Flip Register 27 */
#define MC31_RDBFL28	(*( MC0_RDBFL0_type *) 0xF0062FD8U)	/* Read Data and Bit Flip Register 28 */
#define MC31_RDBFL29	(*( MC0_RDBFL0_type *) 0xF0062FDAU)	/* Read Data and Bit Flip Register 29 */
#define MC31_RDBFL30	(*( MC0_RDBFL0_type *) 0xF0062FDCU)	/* Read Data and Bit Flip Register 30 */
#define MC31_RDBFL31	(*( MC0_RDBFL0_type *) 0xF0062FDEU)	/* Read Data and Bit Flip Register 31 */
#define MC31_RDBFL32	(*( MC0_RDBFL0_type *) 0xF0062FE0U)	/* Read Data and Bit Flip Register 32 */
#define MC31_RDBFL33	(*( MC0_RDBFL0_type *) 0xF0062FE2U)	/* Read Data and Bit Flip Register 33 */
#define MC31_RDBFL34	(*( MC0_RDBFL0_type *) 0xF0062FE4U)	/* Read Data and Bit Flip Register 34 */
#define MC31_RDBFL35	(*( MC0_RDBFL0_type *) 0xF0062FE6U)	/* Read Data and Bit Flip Register 35 */
#define MC31_RDBFL36	(*( MC0_RDBFL0_type *) 0xF0062FE8U)	/* Read Data and Bit Flip Register 36 */
#define MC31_RDBFL37	(*( MC0_RDBFL0_type *) 0xF0062FEAU)	/* Read Data and Bit Flip Register 37 */
#define MC31_RDBFL38	(*( MC0_RDBFL0_type *) 0xF0062FECU)	/* Read Data and Bit Flip Register 38 */
#define MC31_RDBFL39	(*( MC0_RDBFL0_type *) 0xF0062FEEU)	/* Read Data and Bit Flip Register 39 */
#define MC32_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00630A0U)	/* Read Data and Bit Flip Register 0 */
#define MC32_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00630A2U)	/* Read Data and Bit Flip Register 1 */
#define MC32_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00630A4U)	/* Read Data and Bit Flip Register 2 */
#define MC32_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00630A6U)	/* Read Data and Bit Flip Register 3 */
#define MC32_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00630A8U)	/* Read Data and Bit Flip Register 4 */
#define MC32_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00630AAU)	/* Read Data and Bit Flip Register 5 */
#define MC32_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00630ACU)	/* Read Data and Bit Flip Register 6 */
#define MC32_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00630AEU)	/* Read Data and Bit Flip Register 7 */
#define MC32_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00630B0U)	/* Read Data and Bit Flip Register 8 */
#define MC32_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00630B2U)	/* Read Data and Bit Flip Register 9 */
#define MC32_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00630B4U)	/* Read Data and Bit Flip Register 10 */
#define MC32_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00630B6U)	/* Read Data and Bit Flip Register 11 */
#define MC32_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00630B8U)	/* Read Data and Bit Flip Register 12 */
#define MC32_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00630BAU)	/* Read Data and Bit Flip Register 13 */
#define MC32_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00630BCU)	/* Read Data and Bit Flip Register 14 */
#define MC32_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00630BEU)	/* Read Data and Bit Flip Register 15 */
#define MC32_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00630C0U)	/* Read Data and Bit Flip Register 16 */
#define MC32_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00630C2U)	/* Read Data and Bit Flip Register 17 */
#define MC32_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00630C4U)	/* Read Data and Bit Flip Register 18 */
#define MC32_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00630C6U)	/* Read Data and Bit Flip Register 19 */
#define MC32_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00630C8U)	/* Read Data and Bit Flip Register 20 */
#define MC32_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00630CAU)	/* Read Data and Bit Flip Register 21 */
#define MC32_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00630CCU)	/* Read Data and Bit Flip Register 22 */
#define MC32_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00630CEU)	/* Read Data and Bit Flip Register 23 */
#define MC32_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00630D0U)	/* Read Data and Bit Flip Register 24 */
#define MC32_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00630D2U)	/* Read Data and Bit Flip Register 25 */
#define MC32_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00630D4U)	/* Read Data and Bit Flip Register 26 */
#define MC32_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00630D6U)	/* Read Data and Bit Flip Register 27 */
#define MC32_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00630D8U)	/* Read Data and Bit Flip Register 28 */
#define MC32_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00630DAU)	/* Read Data and Bit Flip Register 29 */
#define MC32_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00630DCU)	/* Read Data and Bit Flip Register 30 */
#define MC32_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00630DEU)	/* Read Data and Bit Flip Register 31 */
#define MC32_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00630E0U)	/* Read Data and Bit Flip Register 32 */
#define MC32_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00630E2U)	/* Read Data and Bit Flip Register 33 */
#define MC32_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00630E4U)	/* Read Data and Bit Flip Register 34 */
#define MC32_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00630E6U)	/* Read Data and Bit Flip Register 35 */
#define MC32_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00630E8U)	/* Read Data and Bit Flip Register 36 */
#define MC32_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00630EAU)	/* Read Data and Bit Flip Register 37 */
#define MC32_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00630ECU)	/* Read Data and Bit Flip Register 38 */
#define MC32_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00630EEU)	/* Read Data and Bit Flip Register 39 */
#define MC33_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00631A0U)	/* Read Data and Bit Flip Register 0 */
#define MC33_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00631A2U)	/* Read Data and Bit Flip Register 1 */
#define MC33_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00631A4U)	/* Read Data and Bit Flip Register 2 */
#define MC33_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00631A6U)	/* Read Data and Bit Flip Register 3 */
#define MC33_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00631A8U)	/* Read Data and Bit Flip Register 4 */
#define MC33_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00631AAU)	/* Read Data and Bit Flip Register 5 */
#define MC33_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00631ACU)	/* Read Data and Bit Flip Register 6 */
#define MC33_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00631AEU)	/* Read Data and Bit Flip Register 7 */
#define MC33_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00631B0U)	/* Read Data and Bit Flip Register 8 */
#define MC33_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00631B2U)	/* Read Data and Bit Flip Register 9 */
#define MC33_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00631B4U)	/* Read Data and Bit Flip Register 10 */
#define MC33_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00631B6U)	/* Read Data and Bit Flip Register 11 */
#define MC33_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00631B8U)	/* Read Data and Bit Flip Register 12 */
#define MC33_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00631BAU)	/* Read Data and Bit Flip Register 13 */
#define MC33_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00631BCU)	/* Read Data and Bit Flip Register 14 */
#define MC33_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00631BEU)	/* Read Data and Bit Flip Register 15 */
#define MC33_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00631C0U)	/* Read Data and Bit Flip Register 16 */
#define MC33_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00631C2U)	/* Read Data and Bit Flip Register 17 */
#define MC33_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00631C4U)	/* Read Data and Bit Flip Register 18 */
#define MC33_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00631C6U)	/* Read Data and Bit Flip Register 19 */
#define MC33_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00631C8U)	/* Read Data and Bit Flip Register 20 */
#define MC33_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00631CAU)	/* Read Data and Bit Flip Register 21 */
#define MC33_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00631CCU)	/* Read Data and Bit Flip Register 22 */
#define MC33_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00631CEU)	/* Read Data and Bit Flip Register 23 */
#define MC33_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00631D0U)	/* Read Data and Bit Flip Register 24 */
#define MC33_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00631D2U)	/* Read Data and Bit Flip Register 25 */
#define MC33_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00631D4U)	/* Read Data and Bit Flip Register 26 */
#define MC33_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00631D6U)	/* Read Data and Bit Flip Register 27 */
#define MC33_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00631D8U)	/* Read Data and Bit Flip Register 28 */
#define MC33_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00631DAU)	/* Read Data and Bit Flip Register 29 */
#define MC33_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00631DCU)	/* Read Data and Bit Flip Register 30 */
#define MC33_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00631DEU)	/* Read Data and Bit Flip Register 31 */
#define MC33_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00631E0U)	/* Read Data and Bit Flip Register 32 */
#define MC33_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00631E2U)	/* Read Data and Bit Flip Register 33 */
#define MC33_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00631E4U)	/* Read Data and Bit Flip Register 34 */
#define MC33_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00631E6U)	/* Read Data and Bit Flip Register 35 */
#define MC33_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00631E8U)	/* Read Data and Bit Flip Register 36 */
#define MC33_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00631EAU)	/* Read Data and Bit Flip Register 37 */
#define MC33_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00631ECU)	/* Read Data and Bit Flip Register 38 */
#define MC33_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00631EEU)	/* Read Data and Bit Flip Register 39 */
#define MC34_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00632A0U)	/* Read Data and Bit Flip Register 0 */
#define MC34_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00632A2U)	/* Read Data and Bit Flip Register 1 */
#define MC34_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00632A4U)	/* Read Data and Bit Flip Register 2 */
#define MC34_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00632A6U)	/* Read Data and Bit Flip Register 3 */
#define MC34_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00632A8U)	/* Read Data and Bit Flip Register 4 */
#define MC34_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00632AAU)	/* Read Data and Bit Flip Register 5 */
#define MC34_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00632ACU)	/* Read Data and Bit Flip Register 6 */
#define MC34_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00632AEU)	/* Read Data and Bit Flip Register 7 */
#define MC34_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00632B0U)	/* Read Data and Bit Flip Register 8 */
#define MC34_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00632B2U)	/* Read Data and Bit Flip Register 9 */
#define MC34_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00632B4U)	/* Read Data and Bit Flip Register 10 */
#define MC34_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00632B6U)	/* Read Data and Bit Flip Register 11 */
#define MC34_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00632B8U)	/* Read Data and Bit Flip Register 12 */
#define MC34_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00632BAU)	/* Read Data and Bit Flip Register 13 */
#define MC34_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00632BCU)	/* Read Data and Bit Flip Register 14 */
#define MC34_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00632BEU)	/* Read Data and Bit Flip Register 15 */
#define MC34_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00632C0U)	/* Read Data and Bit Flip Register 16 */
#define MC34_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00632C2U)	/* Read Data and Bit Flip Register 17 */
#define MC34_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00632C4U)	/* Read Data and Bit Flip Register 18 */
#define MC34_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00632C6U)	/* Read Data and Bit Flip Register 19 */
#define MC34_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00632C8U)	/* Read Data and Bit Flip Register 20 */
#define MC34_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00632CAU)	/* Read Data and Bit Flip Register 21 */
#define MC34_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00632CCU)	/* Read Data and Bit Flip Register 22 */
#define MC34_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00632CEU)	/* Read Data and Bit Flip Register 23 */
#define MC34_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00632D0U)	/* Read Data and Bit Flip Register 24 */
#define MC34_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00632D2U)	/* Read Data and Bit Flip Register 25 */
#define MC34_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00632D4U)	/* Read Data and Bit Flip Register 26 */
#define MC34_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00632D6U)	/* Read Data and Bit Flip Register 27 */
#define MC34_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00632D8U)	/* Read Data and Bit Flip Register 28 */
#define MC34_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00632DAU)	/* Read Data and Bit Flip Register 29 */
#define MC34_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00632DCU)	/* Read Data and Bit Flip Register 30 */
#define MC34_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00632DEU)	/* Read Data and Bit Flip Register 31 */
#define MC34_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00632E0U)	/* Read Data and Bit Flip Register 32 */
#define MC34_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00632E2U)	/* Read Data and Bit Flip Register 33 */
#define MC34_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00632E4U)	/* Read Data and Bit Flip Register 34 */
#define MC34_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00632E6U)	/* Read Data and Bit Flip Register 35 */
#define MC34_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00632E8U)	/* Read Data and Bit Flip Register 36 */
#define MC34_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00632EAU)	/* Read Data and Bit Flip Register 37 */
#define MC34_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00632ECU)	/* Read Data and Bit Flip Register 38 */
#define MC34_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00632EEU)	/* Read Data and Bit Flip Register 39 */
#define MC35_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00633A0U)	/* Read Data and Bit Flip Register 0 */
#define MC35_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00633A2U)	/* Read Data and Bit Flip Register 1 */
#define MC35_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00633A4U)	/* Read Data and Bit Flip Register 2 */
#define MC35_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00633A6U)	/* Read Data and Bit Flip Register 3 */
#define MC35_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00633A8U)	/* Read Data and Bit Flip Register 4 */
#define MC35_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00633AAU)	/* Read Data and Bit Flip Register 5 */
#define MC35_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00633ACU)	/* Read Data and Bit Flip Register 6 */
#define MC35_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00633AEU)	/* Read Data and Bit Flip Register 7 */
#define MC35_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00633B0U)	/* Read Data and Bit Flip Register 8 */
#define MC35_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00633B2U)	/* Read Data and Bit Flip Register 9 */
#define MC35_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00633B4U)	/* Read Data and Bit Flip Register 10 */
#define MC35_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00633B6U)	/* Read Data and Bit Flip Register 11 */
#define MC35_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00633B8U)	/* Read Data and Bit Flip Register 12 */
#define MC35_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00633BAU)	/* Read Data and Bit Flip Register 13 */
#define MC35_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00633BCU)	/* Read Data and Bit Flip Register 14 */
#define MC35_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00633BEU)	/* Read Data and Bit Flip Register 15 */
#define MC35_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00633C0U)	/* Read Data and Bit Flip Register 16 */
#define MC35_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00633C2U)	/* Read Data and Bit Flip Register 17 */
#define MC35_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00633C4U)	/* Read Data and Bit Flip Register 18 */
#define MC35_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00633C6U)	/* Read Data and Bit Flip Register 19 */
#define MC35_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00633C8U)	/* Read Data and Bit Flip Register 20 */
#define MC35_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00633CAU)	/* Read Data and Bit Flip Register 21 */
#define MC35_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00633CCU)	/* Read Data and Bit Flip Register 22 */
#define MC35_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00633CEU)	/* Read Data and Bit Flip Register 23 */
#define MC35_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00633D0U)	/* Read Data and Bit Flip Register 24 */
#define MC35_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00633D2U)	/* Read Data and Bit Flip Register 25 */
#define MC35_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00633D4U)	/* Read Data and Bit Flip Register 26 */
#define MC35_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00633D6U)	/* Read Data and Bit Flip Register 27 */
#define MC35_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00633D8U)	/* Read Data and Bit Flip Register 28 */
#define MC35_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00633DAU)	/* Read Data and Bit Flip Register 29 */
#define MC35_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00633DCU)	/* Read Data and Bit Flip Register 30 */
#define MC35_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00633DEU)	/* Read Data and Bit Flip Register 31 */
#define MC35_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00633E0U)	/* Read Data and Bit Flip Register 32 */
#define MC35_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00633E2U)	/* Read Data and Bit Flip Register 33 */
#define MC35_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00633E4U)	/* Read Data and Bit Flip Register 34 */
#define MC35_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00633E6U)	/* Read Data and Bit Flip Register 35 */
#define MC35_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00633E8U)	/* Read Data and Bit Flip Register 36 */
#define MC35_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00633EAU)	/* Read Data and Bit Flip Register 37 */
#define MC35_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00633ECU)	/* Read Data and Bit Flip Register 38 */
#define MC35_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00633EEU)	/* Read Data and Bit Flip Register 39 */
#define MC36_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00634A0U)	/* Read Data and Bit Flip Register 0 */
#define MC36_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00634A2U)	/* Read Data and Bit Flip Register 1 */
#define MC36_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00634A4U)	/* Read Data and Bit Flip Register 2 */
#define MC36_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00634A6U)	/* Read Data and Bit Flip Register 3 */
#define MC36_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00634A8U)	/* Read Data and Bit Flip Register 4 */
#define MC36_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00634AAU)	/* Read Data and Bit Flip Register 5 */
#define MC36_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00634ACU)	/* Read Data and Bit Flip Register 6 */
#define MC36_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00634AEU)	/* Read Data and Bit Flip Register 7 */
#define MC36_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00634B0U)	/* Read Data and Bit Flip Register 8 */
#define MC36_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00634B2U)	/* Read Data and Bit Flip Register 9 */
#define MC36_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00634B4U)	/* Read Data and Bit Flip Register 10 */
#define MC36_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00634B6U)	/* Read Data and Bit Flip Register 11 */
#define MC36_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00634B8U)	/* Read Data and Bit Flip Register 12 */
#define MC36_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00634BAU)	/* Read Data and Bit Flip Register 13 */
#define MC36_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00634BCU)	/* Read Data and Bit Flip Register 14 */
#define MC36_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00634BEU)	/* Read Data and Bit Flip Register 15 */
#define MC36_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00634C0U)	/* Read Data and Bit Flip Register 16 */
#define MC36_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00634C2U)	/* Read Data and Bit Flip Register 17 */
#define MC36_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00634C4U)	/* Read Data and Bit Flip Register 18 */
#define MC36_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00634C6U)	/* Read Data and Bit Flip Register 19 */
#define MC36_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00634C8U)	/* Read Data and Bit Flip Register 20 */
#define MC36_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00634CAU)	/* Read Data and Bit Flip Register 21 */
#define MC36_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00634CCU)	/* Read Data and Bit Flip Register 22 */
#define MC36_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00634CEU)	/* Read Data and Bit Flip Register 23 */
#define MC36_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00634D0U)	/* Read Data and Bit Flip Register 24 */
#define MC36_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00634D2U)	/* Read Data and Bit Flip Register 25 */
#define MC36_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00634D4U)	/* Read Data and Bit Flip Register 26 */
#define MC36_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00634D6U)	/* Read Data and Bit Flip Register 27 */
#define MC36_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00634D8U)	/* Read Data and Bit Flip Register 28 */
#define MC36_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00634DAU)	/* Read Data and Bit Flip Register 29 */
#define MC36_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00634DCU)	/* Read Data and Bit Flip Register 30 */
#define MC36_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00634DEU)	/* Read Data and Bit Flip Register 31 */
#define MC36_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00634E0U)	/* Read Data and Bit Flip Register 32 */
#define MC36_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00634E2U)	/* Read Data and Bit Flip Register 33 */
#define MC36_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00634E4U)	/* Read Data and Bit Flip Register 34 */
#define MC36_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00634E6U)	/* Read Data and Bit Flip Register 35 */
#define MC36_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00634E8U)	/* Read Data and Bit Flip Register 36 */
#define MC36_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00634EAU)	/* Read Data and Bit Flip Register 37 */
#define MC36_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00634ECU)	/* Read Data and Bit Flip Register 38 */
#define MC36_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00634EEU)	/* Read Data and Bit Flip Register 39 */
#define MC37_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00635A0U)	/* Read Data and Bit Flip Register 0 */
#define MC37_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00635A2U)	/* Read Data and Bit Flip Register 1 */
#define MC37_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00635A4U)	/* Read Data and Bit Flip Register 2 */
#define MC37_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00635A6U)	/* Read Data and Bit Flip Register 3 */
#define MC37_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00635A8U)	/* Read Data and Bit Flip Register 4 */
#define MC37_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00635AAU)	/* Read Data and Bit Flip Register 5 */
#define MC37_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00635ACU)	/* Read Data and Bit Flip Register 6 */
#define MC37_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00635AEU)	/* Read Data and Bit Flip Register 7 */
#define MC37_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00635B0U)	/* Read Data and Bit Flip Register 8 */
#define MC37_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00635B2U)	/* Read Data and Bit Flip Register 9 */
#define MC37_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00635B4U)	/* Read Data and Bit Flip Register 10 */
#define MC37_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00635B6U)	/* Read Data and Bit Flip Register 11 */
#define MC37_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00635B8U)	/* Read Data and Bit Flip Register 12 */
#define MC37_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00635BAU)	/* Read Data and Bit Flip Register 13 */
#define MC37_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00635BCU)	/* Read Data and Bit Flip Register 14 */
#define MC37_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00635BEU)	/* Read Data and Bit Flip Register 15 */
#define MC37_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00635C0U)	/* Read Data and Bit Flip Register 16 */
#define MC37_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00635C2U)	/* Read Data and Bit Flip Register 17 */
#define MC37_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00635C4U)	/* Read Data and Bit Flip Register 18 */
#define MC37_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00635C6U)	/* Read Data and Bit Flip Register 19 */
#define MC37_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00635C8U)	/* Read Data and Bit Flip Register 20 */
#define MC37_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00635CAU)	/* Read Data and Bit Flip Register 21 */
#define MC37_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00635CCU)	/* Read Data and Bit Flip Register 22 */
#define MC37_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00635CEU)	/* Read Data and Bit Flip Register 23 */
#define MC37_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00635D0U)	/* Read Data and Bit Flip Register 24 */
#define MC37_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00635D2U)	/* Read Data and Bit Flip Register 25 */
#define MC37_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00635D4U)	/* Read Data and Bit Flip Register 26 */
#define MC37_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00635D6U)	/* Read Data and Bit Flip Register 27 */
#define MC37_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00635D8U)	/* Read Data and Bit Flip Register 28 */
#define MC37_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00635DAU)	/* Read Data and Bit Flip Register 29 */
#define MC37_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00635DCU)	/* Read Data and Bit Flip Register 30 */
#define MC37_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00635DEU)	/* Read Data and Bit Flip Register 31 */
#define MC37_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00635E0U)	/* Read Data and Bit Flip Register 32 */
#define MC37_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00635E2U)	/* Read Data and Bit Flip Register 33 */
#define MC37_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00635E4U)	/* Read Data and Bit Flip Register 34 */
#define MC37_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00635E6U)	/* Read Data and Bit Flip Register 35 */
#define MC37_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00635E8U)	/* Read Data and Bit Flip Register 36 */
#define MC37_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00635EAU)	/* Read Data and Bit Flip Register 37 */
#define MC37_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00635ECU)	/* Read Data and Bit Flip Register 38 */
#define MC37_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00635EEU)	/* Read Data and Bit Flip Register 39 */
#define MC38_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00636A0U)	/* Read Data and Bit Flip Register 0 */
#define MC38_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00636A2U)	/* Read Data and Bit Flip Register 1 */
#define MC38_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00636A4U)	/* Read Data and Bit Flip Register 2 */
#define MC38_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00636A6U)	/* Read Data and Bit Flip Register 3 */
#define MC38_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00636A8U)	/* Read Data and Bit Flip Register 4 */
#define MC38_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00636AAU)	/* Read Data and Bit Flip Register 5 */
#define MC38_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00636ACU)	/* Read Data and Bit Flip Register 6 */
#define MC38_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00636AEU)	/* Read Data and Bit Flip Register 7 */
#define MC38_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00636B0U)	/* Read Data and Bit Flip Register 8 */
#define MC38_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00636B2U)	/* Read Data and Bit Flip Register 9 */
#define MC38_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00636B4U)	/* Read Data and Bit Flip Register 10 */
#define MC38_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00636B6U)	/* Read Data and Bit Flip Register 11 */
#define MC38_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00636B8U)	/* Read Data and Bit Flip Register 12 */
#define MC38_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00636BAU)	/* Read Data and Bit Flip Register 13 */
#define MC38_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00636BCU)	/* Read Data and Bit Flip Register 14 */
#define MC38_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00636BEU)	/* Read Data and Bit Flip Register 15 */
#define MC38_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00636C0U)	/* Read Data and Bit Flip Register 16 */
#define MC38_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00636C2U)	/* Read Data and Bit Flip Register 17 */
#define MC38_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00636C4U)	/* Read Data and Bit Flip Register 18 */
#define MC38_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00636C6U)	/* Read Data and Bit Flip Register 19 */
#define MC38_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00636C8U)	/* Read Data and Bit Flip Register 20 */
#define MC38_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00636CAU)	/* Read Data and Bit Flip Register 21 */
#define MC38_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00636CCU)	/* Read Data and Bit Flip Register 22 */
#define MC38_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00636CEU)	/* Read Data and Bit Flip Register 23 */
#define MC38_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00636D0U)	/* Read Data and Bit Flip Register 24 */
#define MC38_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00636D2U)	/* Read Data and Bit Flip Register 25 */
#define MC38_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00636D4U)	/* Read Data and Bit Flip Register 26 */
#define MC38_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00636D6U)	/* Read Data and Bit Flip Register 27 */
#define MC38_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00636D8U)	/* Read Data and Bit Flip Register 28 */
#define MC38_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00636DAU)	/* Read Data and Bit Flip Register 29 */
#define MC38_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00636DCU)	/* Read Data and Bit Flip Register 30 */
#define MC38_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00636DEU)	/* Read Data and Bit Flip Register 31 */
#define MC38_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00636E0U)	/* Read Data and Bit Flip Register 32 */
#define MC38_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00636E2U)	/* Read Data and Bit Flip Register 33 */
#define MC38_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00636E4U)	/* Read Data and Bit Flip Register 34 */
#define MC38_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00636E6U)	/* Read Data and Bit Flip Register 35 */
#define MC38_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00636E8U)	/* Read Data and Bit Flip Register 36 */
#define MC38_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00636EAU)	/* Read Data and Bit Flip Register 37 */
#define MC38_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00636ECU)	/* Read Data and Bit Flip Register 38 */
#define MC38_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00636EEU)	/* Read Data and Bit Flip Register 39 */
#define MC39_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00637A0U)	/* Read Data and Bit Flip Register 0 */
#define MC39_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00637A2U)	/* Read Data and Bit Flip Register 1 */
#define MC39_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00637A4U)	/* Read Data and Bit Flip Register 2 */
#define MC39_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00637A6U)	/* Read Data and Bit Flip Register 3 */
#define MC39_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00637A8U)	/* Read Data and Bit Flip Register 4 */
#define MC39_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00637AAU)	/* Read Data and Bit Flip Register 5 */
#define MC39_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00637ACU)	/* Read Data and Bit Flip Register 6 */
#define MC39_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00637AEU)	/* Read Data and Bit Flip Register 7 */
#define MC39_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00637B0U)	/* Read Data and Bit Flip Register 8 */
#define MC39_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00637B2U)	/* Read Data and Bit Flip Register 9 */
#define MC39_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00637B4U)	/* Read Data and Bit Flip Register 10 */
#define MC39_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00637B6U)	/* Read Data and Bit Flip Register 11 */
#define MC39_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00637B8U)	/* Read Data and Bit Flip Register 12 */
#define MC39_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00637BAU)	/* Read Data and Bit Flip Register 13 */
#define MC39_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00637BCU)	/* Read Data and Bit Flip Register 14 */
#define MC39_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00637BEU)	/* Read Data and Bit Flip Register 15 */
#define MC39_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00637C0U)	/* Read Data and Bit Flip Register 16 */
#define MC39_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00637C2U)	/* Read Data and Bit Flip Register 17 */
#define MC39_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00637C4U)	/* Read Data and Bit Flip Register 18 */
#define MC39_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00637C6U)	/* Read Data and Bit Flip Register 19 */
#define MC39_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00637C8U)	/* Read Data and Bit Flip Register 20 */
#define MC39_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00637CAU)	/* Read Data and Bit Flip Register 21 */
#define MC39_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00637CCU)	/* Read Data and Bit Flip Register 22 */
#define MC39_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00637CEU)	/* Read Data and Bit Flip Register 23 */
#define MC39_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00637D0U)	/* Read Data and Bit Flip Register 24 */
#define MC39_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00637D2U)	/* Read Data and Bit Flip Register 25 */
#define MC39_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00637D4U)	/* Read Data and Bit Flip Register 26 */
#define MC39_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00637D6U)	/* Read Data and Bit Flip Register 27 */
#define MC39_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00637D8U)	/* Read Data and Bit Flip Register 28 */
#define MC39_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00637DAU)	/* Read Data and Bit Flip Register 29 */
#define MC39_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00637DCU)	/* Read Data and Bit Flip Register 30 */
#define MC39_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00637DEU)	/* Read Data and Bit Flip Register 31 */
#define MC39_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00637E0U)	/* Read Data and Bit Flip Register 32 */
#define MC39_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00637E2U)	/* Read Data and Bit Flip Register 33 */
#define MC39_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00637E4U)	/* Read Data and Bit Flip Register 34 */
#define MC39_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00637E6U)	/* Read Data and Bit Flip Register 35 */
#define MC39_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00637E8U)	/* Read Data and Bit Flip Register 36 */
#define MC39_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00637EAU)	/* Read Data and Bit Flip Register 37 */
#define MC39_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00637ECU)	/* Read Data and Bit Flip Register 38 */
#define MC39_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00637EEU)	/* Read Data and Bit Flip Register 39 */
#define MC40_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00638A0U)	/* Read Data and Bit Flip Register 0 */
#define MC40_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00638A2U)	/* Read Data and Bit Flip Register 1 */
#define MC40_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00638A4U)	/* Read Data and Bit Flip Register 2 */
#define MC40_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00638A6U)	/* Read Data and Bit Flip Register 3 */
#define MC40_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00638A8U)	/* Read Data and Bit Flip Register 4 */
#define MC40_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00638AAU)	/* Read Data and Bit Flip Register 5 */
#define MC40_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00638ACU)	/* Read Data and Bit Flip Register 6 */
#define MC40_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00638AEU)	/* Read Data and Bit Flip Register 7 */
#define MC40_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00638B0U)	/* Read Data and Bit Flip Register 8 */
#define MC40_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00638B2U)	/* Read Data and Bit Flip Register 9 */
#define MC40_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00638B4U)	/* Read Data and Bit Flip Register 10 */
#define MC40_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00638B6U)	/* Read Data and Bit Flip Register 11 */
#define MC40_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00638B8U)	/* Read Data and Bit Flip Register 12 */
#define MC40_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00638BAU)	/* Read Data and Bit Flip Register 13 */
#define MC40_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00638BCU)	/* Read Data and Bit Flip Register 14 */
#define MC40_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00638BEU)	/* Read Data and Bit Flip Register 15 */
#define MC40_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00638C0U)	/* Read Data and Bit Flip Register 16 */
#define MC40_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00638C2U)	/* Read Data and Bit Flip Register 17 */
#define MC40_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00638C4U)	/* Read Data and Bit Flip Register 18 */
#define MC40_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00638C6U)	/* Read Data and Bit Flip Register 19 */
#define MC40_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00638C8U)	/* Read Data and Bit Flip Register 20 */
#define MC40_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00638CAU)	/* Read Data and Bit Flip Register 21 */
#define MC40_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00638CCU)	/* Read Data and Bit Flip Register 22 */
#define MC40_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00638CEU)	/* Read Data and Bit Flip Register 23 */
#define MC40_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00638D0U)	/* Read Data and Bit Flip Register 24 */
#define MC40_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00638D2U)	/* Read Data and Bit Flip Register 25 */
#define MC40_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00638D4U)	/* Read Data and Bit Flip Register 26 */
#define MC40_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00638D6U)	/* Read Data and Bit Flip Register 27 */
#define MC40_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00638D8U)	/* Read Data and Bit Flip Register 28 */
#define MC40_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00638DAU)	/* Read Data and Bit Flip Register 29 */
#define MC40_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00638DCU)	/* Read Data and Bit Flip Register 30 */
#define MC40_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00638DEU)	/* Read Data and Bit Flip Register 31 */
#define MC40_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00638E0U)	/* Read Data and Bit Flip Register 32 */
#define MC40_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00638E2U)	/* Read Data and Bit Flip Register 33 */
#define MC40_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00638E4U)	/* Read Data and Bit Flip Register 34 */
#define MC40_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00638E6U)	/* Read Data and Bit Flip Register 35 */
#define MC40_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00638E8U)	/* Read Data and Bit Flip Register 36 */
#define MC40_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00638EAU)	/* Read Data and Bit Flip Register 37 */
#define MC40_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00638ECU)	/* Read Data and Bit Flip Register 38 */
#define MC40_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00638EEU)	/* Read Data and Bit Flip Register 39 */
#define MC41_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00639A0U)	/* Read Data and Bit Flip Register 0 */
#define MC41_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00639A2U)	/* Read Data and Bit Flip Register 1 */
#define MC41_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00639A4U)	/* Read Data and Bit Flip Register 2 */
#define MC41_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00639A6U)	/* Read Data and Bit Flip Register 3 */
#define MC41_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00639A8U)	/* Read Data and Bit Flip Register 4 */
#define MC41_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00639AAU)	/* Read Data and Bit Flip Register 5 */
#define MC41_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00639ACU)	/* Read Data and Bit Flip Register 6 */
#define MC41_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00639AEU)	/* Read Data and Bit Flip Register 7 */
#define MC41_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00639B0U)	/* Read Data and Bit Flip Register 8 */
#define MC41_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00639B2U)	/* Read Data and Bit Flip Register 9 */
#define MC41_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00639B4U)	/* Read Data and Bit Flip Register 10 */
#define MC41_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00639B6U)	/* Read Data and Bit Flip Register 11 */
#define MC41_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00639B8U)	/* Read Data and Bit Flip Register 12 */
#define MC41_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00639BAU)	/* Read Data and Bit Flip Register 13 */
#define MC41_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00639BCU)	/* Read Data and Bit Flip Register 14 */
#define MC41_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00639BEU)	/* Read Data and Bit Flip Register 15 */
#define MC41_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00639C0U)	/* Read Data and Bit Flip Register 16 */
#define MC41_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00639C2U)	/* Read Data and Bit Flip Register 17 */
#define MC41_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00639C4U)	/* Read Data and Bit Flip Register 18 */
#define MC41_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00639C6U)	/* Read Data and Bit Flip Register 19 */
#define MC41_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00639C8U)	/* Read Data and Bit Flip Register 20 */
#define MC41_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00639CAU)	/* Read Data and Bit Flip Register 21 */
#define MC41_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00639CCU)	/* Read Data and Bit Flip Register 22 */
#define MC41_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00639CEU)	/* Read Data and Bit Flip Register 23 */
#define MC41_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00639D0U)	/* Read Data and Bit Flip Register 24 */
#define MC41_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00639D2U)	/* Read Data and Bit Flip Register 25 */
#define MC41_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00639D4U)	/* Read Data and Bit Flip Register 26 */
#define MC41_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00639D6U)	/* Read Data and Bit Flip Register 27 */
#define MC41_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00639D8U)	/* Read Data and Bit Flip Register 28 */
#define MC41_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00639DAU)	/* Read Data and Bit Flip Register 29 */
#define MC41_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00639DCU)	/* Read Data and Bit Flip Register 30 */
#define MC41_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00639DEU)	/* Read Data and Bit Flip Register 31 */
#define MC41_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00639E0U)	/* Read Data and Bit Flip Register 32 */
#define MC41_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00639E2U)	/* Read Data and Bit Flip Register 33 */
#define MC41_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00639E4U)	/* Read Data and Bit Flip Register 34 */
#define MC41_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00639E6U)	/* Read Data and Bit Flip Register 35 */
#define MC41_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00639E8U)	/* Read Data and Bit Flip Register 36 */
#define MC41_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00639EAU)	/* Read Data and Bit Flip Register 37 */
#define MC41_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00639ECU)	/* Read Data and Bit Flip Register 38 */
#define MC41_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00639EEU)	/* Read Data and Bit Flip Register 39 */
#define MC42_RDBFL0	(*( MC0_RDBFL0_type *) 0xF0063AA0U)	/* Read Data and Bit Flip Register 0 */
#define MC42_RDBFL1	(*( MC0_RDBFL0_type *) 0xF0063AA2U)	/* Read Data and Bit Flip Register 1 */
#define MC42_RDBFL2	(*( MC0_RDBFL0_type *) 0xF0063AA4U)	/* Read Data and Bit Flip Register 2 */
#define MC42_RDBFL3	(*( MC0_RDBFL0_type *) 0xF0063AA6U)	/* Read Data and Bit Flip Register 3 */
#define MC42_RDBFL4	(*( MC0_RDBFL0_type *) 0xF0063AA8U)	/* Read Data and Bit Flip Register 4 */
#define MC42_RDBFL5	(*( MC0_RDBFL0_type *) 0xF0063AAAU)	/* Read Data and Bit Flip Register 5 */
#define MC42_RDBFL6	(*( MC0_RDBFL0_type *) 0xF0063AACU)	/* Read Data and Bit Flip Register 6 */
#define MC42_RDBFL7	(*( MC0_RDBFL0_type *) 0xF0063AAEU)	/* Read Data and Bit Flip Register 7 */
#define MC42_RDBFL8	(*( MC0_RDBFL0_type *) 0xF0063AB0U)	/* Read Data and Bit Flip Register 8 */
#define MC42_RDBFL9	(*( MC0_RDBFL0_type *) 0xF0063AB2U)	/* Read Data and Bit Flip Register 9 */
#define MC42_RDBFL10	(*( MC0_RDBFL0_type *) 0xF0063AB4U)	/* Read Data and Bit Flip Register 10 */
#define MC42_RDBFL11	(*( MC0_RDBFL0_type *) 0xF0063AB6U)	/* Read Data and Bit Flip Register 11 */
#define MC42_RDBFL12	(*( MC0_RDBFL0_type *) 0xF0063AB8U)	/* Read Data and Bit Flip Register 12 */
#define MC42_RDBFL13	(*( MC0_RDBFL0_type *) 0xF0063ABAU)	/* Read Data and Bit Flip Register 13 */
#define MC42_RDBFL14	(*( MC0_RDBFL0_type *) 0xF0063ABCU)	/* Read Data and Bit Flip Register 14 */
#define MC42_RDBFL15	(*( MC0_RDBFL0_type *) 0xF0063ABEU)	/* Read Data and Bit Flip Register 15 */
#define MC42_RDBFL16	(*( MC0_RDBFL0_type *) 0xF0063AC0U)	/* Read Data and Bit Flip Register 16 */
#define MC42_RDBFL17	(*( MC0_RDBFL0_type *) 0xF0063AC2U)	/* Read Data and Bit Flip Register 17 */
#define MC42_RDBFL18	(*( MC0_RDBFL0_type *) 0xF0063AC4U)	/* Read Data and Bit Flip Register 18 */
#define MC42_RDBFL19	(*( MC0_RDBFL0_type *) 0xF0063AC6U)	/* Read Data and Bit Flip Register 19 */
#define MC42_RDBFL20	(*( MC0_RDBFL0_type *) 0xF0063AC8U)	/* Read Data and Bit Flip Register 20 */
#define MC42_RDBFL21	(*( MC0_RDBFL0_type *) 0xF0063ACAU)	/* Read Data and Bit Flip Register 21 */
#define MC42_RDBFL22	(*( MC0_RDBFL0_type *) 0xF0063ACCU)	/* Read Data and Bit Flip Register 22 */
#define MC42_RDBFL23	(*( MC0_RDBFL0_type *) 0xF0063ACEU)	/* Read Data and Bit Flip Register 23 */
#define MC42_RDBFL24	(*( MC0_RDBFL0_type *) 0xF0063AD0U)	/* Read Data and Bit Flip Register 24 */
#define MC42_RDBFL25	(*( MC0_RDBFL0_type *) 0xF0063AD2U)	/* Read Data and Bit Flip Register 25 */
#define MC42_RDBFL26	(*( MC0_RDBFL0_type *) 0xF0063AD4U)	/* Read Data and Bit Flip Register 26 */
#define MC42_RDBFL27	(*( MC0_RDBFL0_type *) 0xF0063AD6U)	/* Read Data and Bit Flip Register 27 */
#define MC42_RDBFL28	(*( MC0_RDBFL0_type *) 0xF0063AD8U)	/* Read Data and Bit Flip Register 28 */
#define MC42_RDBFL29	(*( MC0_RDBFL0_type *) 0xF0063ADAU)	/* Read Data and Bit Flip Register 29 */
#define MC42_RDBFL30	(*( MC0_RDBFL0_type *) 0xF0063ADCU)	/* Read Data and Bit Flip Register 30 */
#define MC42_RDBFL31	(*( MC0_RDBFL0_type *) 0xF0063ADEU)	/* Read Data and Bit Flip Register 31 */
#define MC42_RDBFL32	(*( MC0_RDBFL0_type *) 0xF0063AE0U)	/* Read Data and Bit Flip Register 32 */
#define MC42_RDBFL33	(*( MC0_RDBFL0_type *) 0xF0063AE2U)	/* Read Data and Bit Flip Register 33 */
#define MC42_RDBFL34	(*( MC0_RDBFL0_type *) 0xF0063AE4U)	/* Read Data and Bit Flip Register 34 */
#define MC42_RDBFL35	(*( MC0_RDBFL0_type *) 0xF0063AE6U)	/* Read Data and Bit Flip Register 35 */
#define MC42_RDBFL36	(*( MC0_RDBFL0_type *) 0xF0063AE8U)	/* Read Data and Bit Flip Register 36 */
#define MC42_RDBFL37	(*( MC0_RDBFL0_type *) 0xF0063AEAU)	/* Read Data and Bit Flip Register 37 */
#define MC42_RDBFL38	(*( MC0_RDBFL0_type *) 0xF0063AECU)	/* Read Data and Bit Flip Register 38 */
#define MC42_RDBFL39	(*( MC0_RDBFL0_type *) 0xF0063AEEU)	/* Read Data and Bit Flip Register 39 */
#define MC43_RDBFL0	(*( MC0_RDBFL0_type *) 0xF0063BA0U)	/* Read Data and Bit Flip Register 0 */
#define MC43_RDBFL1	(*( MC0_RDBFL0_type *) 0xF0063BA2U)	/* Read Data and Bit Flip Register 1 */
#define MC43_RDBFL2	(*( MC0_RDBFL0_type *) 0xF0063BA4U)	/* Read Data and Bit Flip Register 2 */
#define MC43_RDBFL3	(*( MC0_RDBFL0_type *) 0xF0063BA6U)	/* Read Data and Bit Flip Register 3 */
#define MC43_RDBFL4	(*( MC0_RDBFL0_type *) 0xF0063BA8U)	/* Read Data and Bit Flip Register 4 */
#define MC43_RDBFL5	(*( MC0_RDBFL0_type *) 0xF0063BAAU)	/* Read Data and Bit Flip Register 5 */
#define MC43_RDBFL6	(*( MC0_RDBFL0_type *) 0xF0063BACU)	/* Read Data and Bit Flip Register 6 */
#define MC43_RDBFL7	(*( MC0_RDBFL0_type *) 0xF0063BAEU)	/* Read Data and Bit Flip Register 7 */
#define MC43_RDBFL8	(*( MC0_RDBFL0_type *) 0xF0063BB0U)	/* Read Data and Bit Flip Register 8 */
#define MC43_RDBFL9	(*( MC0_RDBFL0_type *) 0xF0063BB2U)	/* Read Data and Bit Flip Register 9 */
#define MC43_RDBFL10	(*( MC0_RDBFL0_type *) 0xF0063BB4U)	/* Read Data and Bit Flip Register 10 */
#define MC43_RDBFL11	(*( MC0_RDBFL0_type *) 0xF0063BB6U)	/* Read Data and Bit Flip Register 11 */
#define MC43_RDBFL12	(*( MC0_RDBFL0_type *) 0xF0063BB8U)	/* Read Data and Bit Flip Register 12 */
#define MC43_RDBFL13	(*( MC0_RDBFL0_type *) 0xF0063BBAU)	/* Read Data and Bit Flip Register 13 */
#define MC43_RDBFL14	(*( MC0_RDBFL0_type *) 0xF0063BBCU)	/* Read Data and Bit Flip Register 14 */
#define MC43_RDBFL15	(*( MC0_RDBFL0_type *) 0xF0063BBEU)	/* Read Data and Bit Flip Register 15 */
#define MC43_RDBFL16	(*( MC0_RDBFL0_type *) 0xF0063BC0U)	/* Read Data and Bit Flip Register 16 */
#define MC43_RDBFL17	(*( MC0_RDBFL0_type *) 0xF0063BC2U)	/* Read Data and Bit Flip Register 17 */
#define MC43_RDBFL18	(*( MC0_RDBFL0_type *) 0xF0063BC4U)	/* Read Data and Bit Flip Register 18 */
#define MC43_RDBFL19	(*( MC0_RDBFL0_type *) 0xF0063BC6U)	/* Read Data and Bit Flip Register 19 */
#define MC43_RDBFL20	(*( MC0_RDBFL0_type *) 0xF0063BC8U)	/* Read Data and Bit Flip Register 20 */
#define MC43_RDBFL21	(*( MC0_RDBFL0_type *) 0xF0063BCAU)	/* Read Data and Bit Flip Register 21 */
#define MC43_RDBFL22	(*( MC0_RDBFL0_type *) 0xF0063BCCU)	/* Read Data and Bit Flip Register 22 */
#define MC43_RDBFL23	(*( MC0_RDBFL0_type *) 0xF0063BCEU)	/* Read Data and Bit Flip Register 23 */
#define MC43_RDBFL24	(*( MC0_RDBFL0_type *) 0xF0063BD0U)	/* Read Data and Bit Flip Register 24 */
#define MC43_RDBFL25	(*( MC0_RDBFL0_type *) 0xF0063BD2U)	/* Read Data and Bit Flip Register 25 */
#define MC43_RDBFL26	(*( MC0_RDBFL0_type *) 0xF0063BD4U)	/* Read Data and Bit Flip Register 26 */
#define MC43_RDBFL27	(*( MC0_RDBFL0_type *) 0xF0063BD6U)	/* Read Data and Bit Flip Register 27 */
#define MC43_RDBFL28	(*( MC0_RDBFL0_type *) 0xF0063BD8U)	/* Read Data and Bit Flip Register 28 */
#define MC43_RDBFL29	(*( MC0_RDBFL0_type *) 0xF0063BDAU)	/* Read Data and Bit Flip Register 29 */
#define MC43_RDBFL30	(*( MC0_RDBFL0_type *) 0xF0063BDCU)	/* Read Data and Bit Flip Register 30 */
#define MC43_RDBFL31	(*( MC0_RDBFL0_type *) 0xF0063BDEU)	/* Read Data and Bit Flip Register 31 */
#define MC43_RDBFL32	(*( MC0_RDBFL0_type *) 0xF0063BE0U)	/* Read Data and Bit Flip Register 32 */
#define MC43_RDBFL33	(*( MC0_RDBFL0_type *) 0xF0063BE2U)	/* Read Data and Bit Flip Register 33 */
#define MC43_RDBFL34	(*( MC0_RDBFL0_type *) 0xF0063BE4U)	/* Read Data and Bit Flip Register 34 */
#define MC43_RDBFL35	(*( MC0_RDBFL0_type *) 0xF0063BE6U)	/* Read Data and Bit Flip Register 35 */
#define MC43_RDBFL36	(*( MC0_RDBFL0_type *) 0xF0063BE8U)	/* Read Data and Bit Flip Register 36 */
#define MC43_RDBFL37	(*( MC0_RDBFL0_type *) 0xF0063BEAU)	/* Read Data and Bit Flip Register 37 */
#define MC43_RDBFL38	(*( MC0_RDBFL0_type *) 0xF0063BECU)	/* Read Data and Bit Flip Register 38 */
#define MC43_RDBFL39	(*( MC0_RDBFL0_type *) 0xF0063BEEU)	/* Read Data and Bit Flip Register 39 */
#define MC44_RDBFL0	(*( MC0_RDBFL0_type *) 0xF0063CA0U)	/* Read Data and Bit Flip Register 0 */
#define MC44_RDBFL1	(*( MC0_RDBFL0_type *) 0xF0063CA2U)	/* Read Data and Bit Flip Register 1 */
#define MC44_RDBFL2	(*( MC0_RDBFL0_type *) 0xF0063CA4U)	/* Read Data and Bit Flip Register 2 */
#define MC44_RDBFL3	(*( MC0_RDBFL0_type *) 0xF0063CA6U)	/* Read Data and Bit Flip Register 3 */
#define MC44_RDBFL4	(*( MC0_RDBFL0_type *) 0xF0063CA8U)	/* Read Data and Bit Flip Register 4 */
#define MC44_RDBFL5	(*( MC0_RDBFL0_type *) 0xF0063CAAU)	/* Read Data and Bit Flip Register 5 */
#define MC44_RDBFL6	(*( MC0_RDBFL0_type *) 0xF0063CACU)	/* Read Data and Bit Flip Register 6 */
#define MC44_RDBFL7	(*( MC0_RDBFL0_type *) 0xF0063CAEU)	/* Read Data and Bit Flip Register 7 */
#define MC44_RDBFL8	(*( MC0_RDBFL0_type *) 0xF0063CB0U)	/* Read Data and Bit Flip Register 8 */
#define MC44_RDBFL9	(*( MC0_RDBFL0_type *) 0xF0063CB2U)	/* Read Data and Bit Flip Register 9 */
#define MC44_RDBFL10	(*( MC0_RDBFL0_type *) 0xF0063CB4U)	/* Read Data and Bit Flip Register 10 */
#define MC44_RDBFL11	(*( MC0_RDBFL0_type *) 0xF0063CB6U)	/* Read Data and Bit Flip Register 11 */
#define MC44_RDBFL12	(*( MC0_RDBFL0_type *) 0xF0063CB8U)	/* Read Data and Bit Flip Register 12 */
#define MC44_RDBFL13	(*( MC0_RDBFL0_type *) 0xF0063CBAU)	/* Read Data and Bit Flip Register 13 */
#define MC44_RDBFL14	(*( MC0_RDBFL0_type *) 0xF0063CBCU)	/* Read Data and Bit Flip Register 14 */
#define MC44_RDBFL15	(*( MC0_RDBFL0_type *) 0xF0063CBEU)	/* Read Data and Bit Flip Register 15 */
#define MC44_RDBFL16	(*( MC0_RDBFL0_type *) 0xF0063CC0U)	/* Read Data and Bit Flip Register 16 */
#define MC44_RDBFL17	(*( MC0_RDBFL0_type *) 0xF0063CC2U)	/* Read Data and Bit Flip Register 17 */
#define MC44_RDBFL18	(*( MC0_RDBFL0_type *) 0xF0063CC4U)	/* Read Data and Bit Flip Register 18 */
#define MC44_RDBFL19	(*( MC0_RDBFL0_type *) 0xF0063CC6U)	/* Read Data and Bit Flip Register 19 */
#define MC44_RDBFL20	(*( MC0_RDBFL0_type *) 0xF0063CC8U)	/* Read Data and Bit Flip Register 20 */
#define MC44_RDBFL21	(*( MC0_RDBFL0_type *) 0xF0063CCAU)	/* Read Data and Bit Flip Register 21 */
#define MC44_RDBFL22	(*( MC0_RDBFL0_type *) 0xF0063CCCU)	/* Read Data and Bit Flip Register 22 */
#define MC44_RDBFL23	(*( MC0_RDBFL0_type *) 0xF0063CCEU)	/* Read Data and Bit Flip Register 23 */
#define MC44_RDBFL24	(*( MC0_RDBFL0_type *) 0xF0063CD0U)	/* Read Data and Bit Flip Register 24 */
#define MC44_RDBFL25	(*( MC0_RDBFL0_type *) 0xF0063CD2U)	/* Read Data and Bit Flip Register 25 */
#define MC44_RDBFL26	(*( MC0_RDBFL0_type *) 0xF0063CD4U)	/* Read Data and Bit Flip Register 26 */
#define MC44_RDBFL27	(*( MC0_RDBFL0_type *) 0xF0063CD6U)	/* Read Data and Bit Flip Register 27 */
#define MC44_RDBFL28	(*( MC0_RDBFL0_type *) 0xF0063CD8U)	/* Read Data and Bit Flip Register 28 */
#define MC44_RDBFL29	(*( MC0_RDBFL0_type *) 0xF0063CDAU)	/* Read Data and Bit Flip Register 29 */
#define MC44_RDBFL30	(*( MC0_RDBFL0_type *) 0xF0063CDCU)	/* Read Data and Bit Flip Register 30 */
#define MC44_RDBFL31	(*( MC0_RDBFL0_type *) 0xF0063CDEU)	/* Read Data and Bit Flip Register 31 */
#define MC44_RDBFL32	(*( MC0_RDBFL0_type *) 0xF0063CE0U)	/* Read Data and Bit Flip Register 32 */
#define MC44_RDBFL33	(*( MC0_RDBFL0_type *) 0xF0063CE2U)	/* Read Data and Bit Flip Register 33 */
#define MC44_RDBFL34	(*( MC0_RDBFL0_type *) 0xF0063CE4U)	/* Read Data and Bit Flip Register 34 */
#define MC44_RDBFL35	(*( MC0_RDBFL0_type *) 0xF0063CE6U)	/* Read Data and Bit Flip Register 35 */
#define MC44_RDBFL36	(*( MC0_RDBFL0_type *) 0xF0063CE8U)	/* Read Data and Bit Flip Register 36 */
#define MC44_RDBFL37	(*( MC0_RDBFL0_type *) 0xF0063CEAU)	/* Read Data and Bit Flip Register 37 */
#define MC44_RDBFL38	(*( MC0_RDBFL0_type *) 0xF0063CECU)	/* Read Data and Bit Flip Register 38 */
#define MC44_RDBFL39	(*( MC0_RDBFL0_type *) 0xF0063CEEU)	/* Read Data and Bit Flip Register 39 */
#define MC45_RDBFL0	(*( MC0_RDBFL0_type *) 0xF0063DA0U)	/* Read Data and Bit Flip Register 0 */
#define MC45_RDBFL1	(*( MC0_RDBFL0_type *) 0xF0063DA2U)	/* Read Data and Bit Flip Register 1 */
#define MC45_RDBFL2	(*( MC0_RDBFL0_type *) 0xF0063DA4U)	/* Read Data and Bit Flip Register 2 */
#define MC45_RDBFL3	(*( MC0_RDBFL0_type *) 0xF0063DA6U)	/* Read Data and Bit Flip Register 3 */
#define MC45_RDBFL4	(*( MC0_RDBFL0_type *) 0xF0063DA8U)	/* Read Data and Bit Flip Register 4 */
#define MC45_RDBFL5	(*( MC0_RDBFL0_type *) 0xF0063DAAU)	/* Read Data and Bit Flip Register 5 */
#define MC45_RDBFL6	(*( MC0_RDBFL0_type *) 0xF0063DACU)	/* Read Data and Bit Flip Register 6 */
#define MC45_RDBFL7	(*( MC0_RDBFL0_type *) 0xF0063DAEU)	/* Read Data and Bit Flip Register 7 */
#define MC45_RDBFL8	(*( MC0_RDBFL0_type *) 0xF0063DB0U)	/* Read Data and Bit Flip Register 8 */
#define MC45_RDBFL9	(*( MC0_RDBFL0_type *) 0xF0063DB2U)	/* Read Data and Bit Flip Register 9 */
#define MC45_RDBFL10	(*( MC0_RDBFL0_type *) 0xF0063DB4U)	/* Read Data and Bit Flip Register 10 */
#define MC45_RDBFL11	(*( MC0_RDBFL0_type *) 0xF0063DB6U)	/* Read Data and Bit Flip Register 11 */
#define MC45_RDBFL12	(*( MC0_RDBFL0_type *) 0xF0063DB8U)	/* Read Data and Bit Flip Register 12 */
#define MC45_RDBFL13	(*( MC0_RDBFL0_type *) 0xF0063DBAU)	/* Read Data and Bit Flip Register 13 */
#define MC45_RDBFL14	(*( MC0_RDBFL0_type *) 0xF0063DBCU)	/* Read Data and Bit Flip Register 14 */
#define MC45_RDBFL15	(*( MC0_RDBFL0_type *) 0xF0063DBEU)	/* Read Data and Bit Flip Register 15 */
#define MC45_RDBFL16	(*( MC0_RDBFL0_type *) 0xF0063DC0U)	/* Read Data and Bit Flip Register 16 */
#define MC45_RDBFL17	(*( MC0_RDBFL0_type *) 0xF0063DC2U)	/* Read Data and Bit Flip Register 17 */
#define MC45_RDBFL18	(*( MC0_RDBFL0_type *) 0xF0063DC4U)	/* Read Data and Bit Flip Register 18 */
#define MC45_RDBFL19	(*( MC0_RDBFL0_type *) 0xF0063DC6U)	/* Read Data and Bit Flip Register 19 */
#define MC45_RDBFL20	(*( MC0_RDBFL0_type *) 0xF0063DC8U)	/* Read Data and Bit Flip Register 20 */
#define MC45_RDBFL21	(*( MC0_RDBFL0_type *) 0xF0063DCAU)	/* Read Data and Bit Flip Register 21 */
#define MC45_RDBFL22	(*( MC0_RDBFL0_type *) 0xF0063DCCU)	/* Read Data and Bit Flip Register 22 */
#define MC45_RDBFL23	(*( MC0_RDBFL0_type *) 0xF0063DCEU)	/* Read Data and Bit Flip Register 23 */
#define MC45_RDBFL24	(*( MC0_RDBFL0_type *) 0xF0063DD0U)	/* Read Data and Bit Flip Register 24 */
#define MC45_RDBFL25	(*( MC0_RDBFL0_type *) 0xF0063DD2U)	/* Read Data and Bit Flip Register 25 */
#define MC45_RDBFL26	(*( MC0_RDBFL0_type *) 0xF0063DD4U)	/* Read Data and Bit Flip Register 26 */
#define MC45_RDBFL27	(*( MC0_RDBFL0_type *) 0xF0063DD6U)	/* Read Data and Bit Flip Register 27 */
#define MC45_RDBFL28	(*( MC0_RDBFL0_type *) 0xF0063DD8U)	/* Read Data and Bit Flip Register 28 */
#define MC45_RDBFL29	(*( MC0_RDBFL0_type *) 0xF0063DDAU)	/* Read Data and Bit Flip Register 29 */
#define MC45_RDBFL30	(*( MC0_RDBFL0_type *) 0xF0063DDCU)	/* Read Data and Bit Flip Register 30 */
#define MC45_RDBFL31	(*( MC0_RDBFL0_type *) 0xF0063DDEU)	/* Read Data and Bit Flip Register 31 */
#define MC45_RDBFL32	(*( MC0_RDBFL0_type *) 0xF0063DE0U)	/* Read Data and Bit Flip Register 32 */
#define MC45_RDBFL33	(*( MC0_RDBFL0_type *) 0xF0063DE2U)	/* Read Data and Bit Flip Register 33 */
#define MC45_RDBFL34	(*( MC0_RDBFL0_type *) 0xF0063DE4U)	/* Read Data and Bit Flip Register 34 */
#define MC45_RDBFL35	(*( MC0_RDBFL0_type *) 0xF0063DE6U)	/* Read Data and Bit Flip Register 35 */
#define MC45_RDBFL36	(*( MC0_RDBFL0_type *) 0xF0063DE8U)	/* Read Data and Bit Flip Register 36 */
#define MC45_RDBFL37	(*( MC0_RDBFL0_type *) 0xF0063DEAU)	/* Read Data and Bit Flip Register 37 */
#define MC45_RDBFL38	(*( MC0_RDBFL0_type *) 0xF0063DECU)	/* Read Data and Bit Flip Register 38 */
#define MC45_RDBFL39	(*( MC0_RDBFL0_type *) 0xF0063DEEU)	/* Read Data and Bit Flip Register 39 */
#define MC46_RDBFL0	(*( MC0_RDBFL0_type *) 0xF0063EA0U)	/* Read Data and Bit Flip Register 0 */
#define MC46_RDBFL1	(*( MC0_RDBFL0_type *) 0xF0063EA2U)	/* Read Data and Bit Flip Register 1 */
#define MC46_RDBFL2	(*( MC0_RDBFL0_type *) 0xF0063EA4U)	/* Read Data and Bit Flip Register 2 */
#define MC46_RDBFL3	(*( MC0_RDBFL0_type *) 0xF0063EA6U)	/* Read Data and Bit Flip Register 3 */
#define MC46_RDBFL4	(*( MC0_RDBFL0_type *) 0xF0063EA8U)	/* Read Data and Bit Flip Register 4 */
#define MC46_RDBFL5	(*( MC0_RDBFL0_type *) 0xF0063EAAU)	/* Read Data and Bit Flip Register 5 */
#define MC46_RDBFL6	(*( MC0_RDBFL0_type *) 0xF0063EACU)	/* Read Data and Bit Flip Register 6 */
#define MC46_RDBFL7	(*( MC0_RDBFL0_type *) 0xF0063EAEU)	/* Read Data and Bit Flip Register 7 */
#define MC46_RDBFL8	(*( MC0_RDBFL0_type *) 0xF0063EB0U)	/* Read Data and Bit Flip Register 8 */
#define MC46_RDBFL9	(*( MC0_RDBFL0_type *) 0xF0063EB2U)	/* Read Data and Bit Flip Register 9 */
#define MC46_RDBFL10	(*( MC0_RDBFL0_type *) 0xF0063EB4U)	/* Read Data and Bit Flip Register 10 */
#define MC46_RDBFL11	(*( MC0_RDBFL0_type *) 0xF0063EB6U)	/* Read Data and Bit Flip Register 11 */
#define MC46_RDBFL12	(*( MC0_RDBFL0_type *) 0xF0063EB8U)	/* Read Data and Bit Flip Register 12 */
#define MC46_RDBFL13	(*( MC0_RDBFL0_type *) 0xF0063EBAU)	/* Read Data and Bit Flip Register 13 */
#define MC46_RDBFL14	(*( MC0_RDBFL0_type *) 0xF0063EBCU)	/* Read Data and Bit Flip Register 14 */
#define MC46_RDBFL15	(*( MC0_RDBFL0_type *) 0xF0063EBEU)	/* Read Data and Bit Flip Register 15 */
#define MC46_RDBFL16	(*( MC0_RDBFL0_type *) 0xF0063EC0U)	/* Read Data and Bit Flip Register 16 */
#define MC46_RDBFL17	(*( MC0_RDBFL0_type *) 0xF0063EC2U)	/* Read Data and Bit Flip Register 17 */
#define MC46_RDBFL18	(*( MC0_RDBFL0_type *) 0xF0063EC4U)	/* Read Data and Bit Flip Register 18 */
#define MC46_RDBFL19	(*( MC0_RDBFL0_type *) 0xF0063EC6U)	/* Read Data and Bit Flip Register 19 */
#define MC46_RDBFL20	(*( MC0_RDBFL0_type *) 0xF0063EC8U)	/* Read Data and Bit Flip Register 20 */
#define MC46_RDBFL21	(*( MC0_RDBFL0_type *) 0xF0063ECAU)	/* Read Data and Bit Flip Register 21 */
#define MC46_RDBFL22	(*( MC0_RDBFL0_type *) 0xF0063ECCU)	/* Read Data and Bit Flip Register 22 */
#define MC46_RDBFL23	(*( MC0_RDBFL0_type *) 0xF0063ECEU)	/* Read Data and Bit Flip Register 23 */
#define MC46_RDBFL24	(*( MC0_RDBFL0_type *) 0xF0063ED0U)	/* Read Data and Bit Flip Register 24 */
#define MC46_RDBFL25	(*( MC0_RDBFL0_type *) 0xF0063ED2U)	/* Read Data and Bit Flip Register 25 */
#define MC46_RDBFL26	(*( MC0_RDBFL0_type *) 0xF0063ED4U)	/* Read Data and Bit Flip Register 26 */
#define MC46_RDBFL27	(*( MC0_RDBFL0_type *) 0xF0063ED6U)	/* Read Data and Bit Flip Register 27 */
#define MC46_RDBFL28	(*( MC0_RDBFL0_type *) 0xF0063ED8U)	/* Read Data and Bit Flip Register 28 */
#define MC46_RDBFL29	(*( MC0_RDBFL0_type *) 0xF0063EDAU)	/* Read Data and Bit Flip Register 29 */
#define MC46_RDBFL30	(*( MC0_RDBFL0_type *) 0xF0063EDCU)	/* Read Data and Bit Flip Register 30 */
#define MC46_RDBFL31	(*( MC0_RDBFL0_type *) 0xF0063EDEU)	/* Read Data and Bit Flip Register 31 */
#define MC46_RDBFL32	(*( MC0_RDBFL0_type *) 0xF0063EE0U)	/* Read Data and Bit Flip Register 32 */
#define MC46_RDBFL33	(*( MC0_RDBFL0_type *) 0xF0063EE2U)	/* Read Data and Bit Flip Register 33 */
#define MC46_RDBFL34	(*( MC0_RDBFL0_type *) 0xF0063EE4U)	/* Read Data and Bit Flip Register 34 */
#define MC46_RDBFL35	(*( MC0_RDBFL0_type *) 0xF0063EE6U)	/* Read Data and Bit Flip Register 35 */
#define MC46_RDBFL36	(*( MC0_RDBFL0_type *) 0xF0063EE8U)	/* Read Data and Bit Flip Register 36 */
#define MC46_RDBFL37	(*( MC0_RDBFL0_type *) 0xF0063EEAU)	/* Read Data and Bit Flip Register 37 */
#define MC46_RDBFL38	(*( MC0_RDBFL0_type *) 0xF0063EECU)	/* Read Data and Bit Flip Register 38 */
#define MC46_RDBFL39	(*( MC0_RDBFL0_type *) 0xF0063EEEU)	/* Read Data and Bit Flip Register 39 */
#define MC47_RDBFL0	(*( MC0_RDBFL0_type *) 0xF0063FA0U)	/* Read Data and Bit Flip Register 0 */
#define MC47_RDBFL1	(*( MC0_RDBFL0_type *) 0xF0063FA2U)	/* Read Data and Bit Flip Register 1 */
#define MC47_RDBFL2	(*( MC0_RDBFL0_type *) 0xF0063FA4U)	/* Read Data and Bit Flip Register 2 */
#define MC47_RDBFL3	(*( MC0_RDBFL0_type *) 0xF0063FA6U)	/* Read Data and Bit Flip Register 3 */
#define MC47_RDBFL4	(*( MC0_RDBFL0_type *) 0xF0063FA8U)	/* Read Data and Bit Flip Register 4 */
#define MC47_RDBFL5	(*( MC0_RDBFL0_type *) 0xF0063FAAU)	/* Read Data and Bit Flip Register 5 */
#define MC47_RDBFL6	(*( MC0_RDBFL0_type *) 0xF0063FACU)	/* Read Data and Bit Flip Register 6 */
#define MC47_RDBFL7	(*( MC0_RDBFL0_type *) 0xF0063FAEU)	/* Read Data and Bit Flip Register 7 */
#define MC47_RDBFL8	(*( MC0_RDBFL0_type *) 0xF0063FB0U)	/* Read Data and Bit Flip Register 8 */
#define MC47_RDBFL9	(*( MC0_RDBFL0_type *) 0xF0063FB2U)	/* Read Data and Bit Flip Register 9 */
#define MC47_RDBFL10	(*( MC0_RDBFL0_type *) 0xF0063FB4U)	/* Read Data and Bit Flip Register 10 */
#define MC47_RDBFL11	(*( MC0_RDBFL0_type *) 0xF0063FB6U)	/* Read Data and Bit Flip Register 11 */
#define MC47_RDBFL12	(*( MC0_RDBFL0_type *) 0xF0063FB8U)	/* Read Data and Bit Flip Register 12 */
#define MC47_RDBFL13	(*( MC0_RDBFL0_type *) 0xF0063FBAU)	/* Read Data and Bit Flip Register 13 */
#define MC47_RDBFL14	(*( MC0_RDBFL0_type *) 0xF0063FBCU)	/* Read Data and Bit Flip Register 14 */
#define MC47_RDBFL15	(*( MC0_RDBFL0_type *) 0xF0063FBEU)	/* Read Data and Bit Flip Register 15 */
#define MC47_RDBFL16	(*( MC0_RDBFL0_type *) 0xF0063FC0U)	/* Read Data and Bit Flip Register 16 */
#define MC47_RDBFL17	(*( MC0_RDBFL0_type *) 0xF0063FC2U)	/* Read Data and Bit Flip Register 17 */
#define MC47_RDBFL18	(*( MC0_RDBFL0_type *) 0xF0063FC4U)	/* Read Data and Bit Flip Register 18 */
#define MC47_RDBFL19	(*( MC0_RDBFL0_type *) 0xF0063FC6U)	/* Read Data and Bit Flip Register 19 */
#define MC47_RDBFL20	(*( MC0_RDBFL0_type *) 0xF0063FC8U)	/* Read Data and Bit Flip Register 20 */
#define MC47_RDBFL21	(*( MC0_RDBFL0_type *) 0xF0063FCAU)	/* Read Data and Bit Flip Register 21 */
#define MC47_RDBFL22	(*( MC0_RDBFL0_type *) 0xF0063FCCU)	/* Read Data and Bit Flip Register 22 */
#define MC47_RDBFL23	(*( MC0_RDBFL0_type *) 0xF0063FCEU)	/* Read Data and Bit Flip Register 23 */
#define MC47_RDBFL24	(*( MC0_RDBFL0_type *) 0xF0063FD0U)	/* Read Data and Bit Flip Register 24 */
#define MC47_RDBFL25	(*( MC0_RDBFL0_type *) 0xF0063FD2U)	/* Read Data and Bit Flip Register 25 */
#define MC47_RDBFL26	(*( MC0_RDBFL0_type *) 0xF0063FD4U)	/* Read Data and Bit Flip Register 26 */
#define MC47_RDBFL27	(*( MC0_RDBFL0_type *) 0xF0063FD6U)	/* Read Data and Bit Flip Register 27 */
#define MC47_RDBFL28	(*( MC0_RDBFL0_type *) 0xF0063FD8U)	/* Read Data and Bit Flip Register 28 */
#define MC47_RDBFL29	(*( MC0_RDBFL0_type *) 0xF0063FDAU)	/* Read Data and Bit Flip Register 29 */
#define MC47_RDBFL30	(*( MC0_RDBFL0_type *) 0xF0063FDCU)	/* Read Data and Bit Flip Register 30 */
#define MC47_RDBFL31	(*( MC0_RDBFL0_type *) 0xF0063FDEU)	/* Read Data and Bit Flip Register 31 */
#define MC47_RDBFL32	(*( MC0_RDBFL0_type *) 0xF0063FE0U)	/* Read Data and Bit Flip Register 32 */
#define MC47_RDBFL33	(*( MC0_RDBFL0_type *) 0xF0063FE2U)	/* Read Data and Bit Flip Register 33 */
#define MC47_RDBFL34	(*( MC0_RDBFL0_type *) 0xF0063FE4U)	/* Read Data and Bit Flip Register 34 */
#define MC47_RDBFL35	(*( MC0_RDBFL0_type *) 0xF0063FE6U)	/* Read Data and Bit Flip Register 35 */
#define MC47_RDBFL36	(*( MC0_RDBFL0_type *) 0xF0063FE8U)	/* Read Data and Bit Flip Register 36 */
#define MC47_RDBFL37	(*( MC0_RDBFL0_type *) 0xF0063FEAU)	/* Read Data and Bit Flip Register 37 */
#define MC47_RDBFL38	(*( MC0_RDBFL0_type *) 0xF0063FECU)	/* Read Data and Bit Flip Register 38 */
#define MC47_RDBFL39	(*( MC0_RDBFL0_type *) 0xF0063FEEU)	/* Read Data and Bit Flip Register 39 */
#define MC48_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00640A0U)	/* Read Data and Bit Flip Register 0 */
#define MC48_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00640A2U)	/* Read Data and Bit Flip Register 1 */
#define MC48_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00640A4U)	/* Read Data and Bit Flip Register 2 */
#define MC48_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00640A6U)	/* Read Data and Bit Flip Register 3 */
#define MC48_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00640A8U)	/* Read Data and Bit Flip Register 4 */
#define MC48_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00640AAU)	/* Read Data and Bit Flip Register 5 */
#define MC48_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00640ACU)	/* Read Data and Bit Flip Register 6 */
#define MC48_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00640AEU)	/* Read Data and Bit Flip Register 7 */
#define MC48_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00640B0U)	/* Read Data and Bit Flip Register 8 */
#define MC48_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00640B2U)	/* Read Data and Bit Flip Register 9 */
#define MC48_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00640B4U)	/* Read Data and Bit Flip Register 10 */
#define MC48_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00640B6U)	/* Read Data and Bit Flip Register 11 */
#define MC48_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00640B8U)	/* Read Data and Bit Flip Register 12 */
#define MC48_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00640BAU)	/* Read Data and Bit Flip Register 13 */
#define MC48_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00640BCU)	/* Read Data and Bit Flip Register 14 */
#define MC48_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00640BEU)	/* Read Data and Bit Flip Register 15 */
#define MC48_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00640C0U)	/* Read Data and Bit Flip Register 16 */
#define MC48_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00640C2U)	/* Read Data and Bit Flip Register 17 */
#define MC48_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00640C4U)	/* Read Data and Bit Flip Register 18 */
#define MC48_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00640C6U)	/* Read Data and Bit Flip Register 19 */
#define MC48_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00640C8U)	/* Read Data and Bit Flip Register 20 */
#define MC48_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00640CAU)	/* Read Data and Bit Flip Register 21 */
#define MC48_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00640CCU)	/* Read Data and Bit Flip Register 22 */
#define MC48_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00640CEU)	/* Read Data and Bit Flip Register 23 */
#define MC48_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00640D0U)	/* Read Data and Bit Flip Register 24 */
#define MC48_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00640D2U)	/* Read Data and Bit Flip Register 25 */
#define MC48_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00640D4U)	/* Read Data and Bit Flip Register 26 */
#define MC48_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00640D6U)	/* Read Data and Bit Flip Register 27 */
#define MC48_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00640D8U)	/* Read Data and Bit Flip Register 28 */
#define MC48_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00640DAU)	/* Read Data and Bit Flip Register 29 */
#define MC48_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00640DCU)	/* Read Data and Bit Flip Register 30 */
#define MC48_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00640DEU)	/* Read Data and Bit Flip Register 31 */
#define MC48_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00640E0U)	/* Read Data and Bit Flip Register 32 */
#define MC48_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00640E2U)	/* Read Data and Bit Flip Register 33 */
#define MC48_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00640E4U)	/* Read Data and Bit Flip Register 34 */
#define MC48_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00640E6U)	/* Read Data and Bit Flip Register 35 */
#define MC48_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00640E8U)	/* Read Data and Bit Flip Register 36 */
#define MC48_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00640EAU)	/* Read Data and Bit Flip Register 37 */
#define MC48_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00640ECU)	/* Read Data and Bit Flip Register 38 */
#define MC48_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00640EEU)	/* Read Data and Bit Flip Register 39 */
#define MC49_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00641A0U)	/* Read Data and Bit Flip Register 0 */
#define MC49_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00641A2U)	/* Read Data and Bit Flip Register 1 */
#define MC49_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00641A4U)	/* Read Data and Bit Flip Register 2 */
#define MC49_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00641A6U)	/* Read Data and Bit Flip Register 3 */
#define MC49_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00641A8U)	/* Read Data and Bit Flip Register 4 */
#define MC49_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00641AAU)	/* Read Data and Bit Flip Register 5 */
#define MC49_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00641ACU)	/* Read Data and Bit Flip Register 6 */
#define MC49_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00641AEU)	/* Read Data and Bit Flip Register 7 */
#define MC49_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00641B0U)	/* Read Data and Bit Flip Register 8 */
#define MC49_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00641B2U)	/* Read Data and Bit Flip Register 9 */
#define MC49_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00641B4U)	/* Read Data and Bit Flip Register 10 */
#define MC49_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00641B6U)	/* Read Data and Bit Flip Register 11 */
#define MC49_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00641B8U)	/* Read Data and Bit Flip Register 12 */
#define MC49_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00641BAU)	/* Read Data and Bit Flip Register 13 */
#define MC49_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00641BCU)	/* Read Data and Bit Flip Register 14 */
#define MC49_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00641BEU)	/* Read Data and Bit Flip Register 15 */
#define MC49_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00641C0U)	/* Read Data and Bit Flip Register 16 */
#define MC49_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00641C2U)	/* Read Data and Bit Flip Register 17 */
#define MC49_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00641C4U)	/* Read Data and Bit Flip Register 18 */
#define MC49_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00641C6U)	/* Read Data and Bit Flip Register 19 */
#define MC49_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00641C8U)	/* Read Data and Bit Flip Register 20 */
#define MC49_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00641CAU)	/* Read Data and Bit Flip Register 21 */
#define MC49_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00641CCU)	/* Read Data and Bit Flip Register 22 */
#define MC49_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00641CEU)	/* Read Data and Bit Flip Register 23 */
#define MC49_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00641D0U)	/* Read Data and Bit Flip Register 24 */
#define MC49_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00641D2U)	/* Read Data and Bit Flip Register 25 */
#define MC49_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00641D4U)	/* Read Data and Bit Flip Register 26 */
#define MC49_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00641D6U)	/* Read Data and Bit Flip Register 27 */
#define MC49_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00641D8U)	/* Read Data and Bit Flip Register 28 */
#define MC49_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00641DAU)	/* Read Data and Bit Flip Register 29 */
#define MC49_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00641DCU)	/* Read Data and Bit Flip Register 30 */
#define MC49_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00641DEU)	/* Read Data and Bit Flip Register 31 */
#define MC49_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00641E0U)	/* Read Data and Bit Flip Register 32 */
#define MC49_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00641E2U)	/* Read Data and Bit Flip Register 33 */
#define MC49_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00641E4U)	/* Read Data and Bit Flip Register 34 */
#define MC49_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00641E6U)	/* Read Data and Bit Flip Register 35 */
#define MC49_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00641E8U)	/* Read Data and Bit Flip Register 36 */
#define MC49_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00641EAU)	/* Read Data and Bit Flip Register 37 */
#define MC49_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00641ECU)	/* Read Data and Bit Flip Register 38 */
#define MC49_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00641EEU)	/* Read Data and Bit Flip Register 39 */
#define MC50_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00642A0U)	/* Read Data and Bit Flip Register 0 */
#define MC50_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00642A2U)	/* Read Data and Bit Flip Register 1 */
#define MC50_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00642A4U)	/* Read Data and Bit Flip Register 2 */
#define MC50_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00642A6U)	/* Read Data and Bit Flip Register 3 */
#define MC50_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00642A8U)	/* Read Data and Bit Flip Register 4 */
#define MC50_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00642AAU)	/* Read Data and Bit Flip Register 5 */
#define MC50_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00642ACU)	/* Read Data and Bit Flip Register 6 */
#define MC50_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00642AEU)	/* Read Data and Bit Flip Register 7 */
#define MC50_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00642B0U)	/* Read Data and Bit Flip Register 8 */
#define MC50_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00642B2U)	/* Read Data and Bit Flip Register 9 */
#define MC50_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00642B4U)	/* Read Data and Bit Flip Register 10 */
#define MC50_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00642B6U)	/* Read Data and Bit Flip Register 11 */
#define MC50_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00642B8U)	/* Read Data and Bit Flip Register 12 */
#define MC50_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00642BAU)	/* Read Data and Bit Flip Register 13 */
#define MC50_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00642BCU)	/* Read Data and Bit Flip Register 14 */
#define MC50_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00642BEU)	/* Read Data and Bit Flip Register 15 */
#define MC50_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00642C0U)	/* Read Data and Bit Flip Register 16 */
#define MC50_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00642C2U)	/* Read Data and Bit Flip Register 17 */
#define MC50_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00642C4U)	/* Read Data and Bit Flip Register 18 */
#define MC50_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00642C6U)	/* Read Data and Bit Flip Register 19 */
#define MC50_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00642C8U)	/* Read Data and Bit Flip Register 20 */
#define MC50_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00642CAU)	/* Read Data and Bit Flip Register 21 */
#define MC50_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00642CCU)	/* Read Data and Bit Flip Register 22 */
#define MC50_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00642CEU)	/* Read Data and Bit Flip Register 23 */
#define MC50_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00642D0U)	/* Read Data and Bit Flip Register 24 */
#define MC50_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00642D2U)	/* Read Data and Bit Flip Register 25 */
#define MC50_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00642D4U)	/* Read Data and Bit Flip Register 26 */
#define MC50_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00642D6U)	/* Read Data and Bit Flip Register 27 */
#define MC50_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00642D8U)	/* Read Data and Bit Flip Register 28 */
#define MC50_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00642DAU)	/* Read Data and Bit Flip Register 29 */
#define MC50_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00642DCU)	/* Read Data and Bit Flip Register 30 */
#define MC50_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00642DEU)	/* Read Data and Bit Flip Register 31 */
#define MC50_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00642E0U)	/* Read Data and Bit Flip Register 32 */
#define MC50_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00642E2U)	/* Read Data and Bit Flip Register 33 */
#define MC50_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00642E4U)	/* Read Data and Bit Flip Register 34 */
#define MC50_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00642E6U)	/* Read Data and Bit Flip Register 35 */
#define MC50_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00642E8U)	/* Read Data and Bit Flip Register 36 */
#define MC50_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00642EAU)	/* Read Data and Bit Flip Register 37 */
#define MC50_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00642ECU)	/* Read Data and Bit Flip Register 38 */
#define MC50_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00642EEU)	/* Read Data and Bit Flip Register 39 */
#define MC51_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00643A0U)	/* Read Data and Bit Flip Register 0 */
#define MC51_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00643A2U)	/* Read Data and Bit Flip Register 1 */
#define MC51_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00643A4U)	/* Read Data and Bit Flip Register 2 */
#define MC51_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00643A6U)	/* Read Data and Bit Flip Register 3 */
#define MC51_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00643A8U)	/* Read Data and Bit Flip Register 4 */
#define MC51_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00643AAU)	/* Read Data and Bit Flip Register 5 */
#define MC51_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00643ACU)	/* Read Data and Bit Flip Register 6 */
#define MC51_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00643AEU)	/* Read Data and Bit Flip Register 7 */
#define MC51_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00643B0U)	/* Read Data and Bit Flip Register 8 */
#define MC51_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00643B2U)	/* Read Data and Bit Flip Register 9 */
#define MC51_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00643B4U)	/* Read Data and Bit Flip Register 10 */
#define MC51_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00643B6U)	/* Read Data and Bit Flip Register 11 */
#define MC51_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00643B8U)	/* Read Data and Bit Flip Register 12 */
#define MC51_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00643BAU)	/* Read Data and Bit Flip Register 13 */
#define MC51_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00643BCU)	/* Read Data and Bit Flip Register 14 */
#define MC51_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00643BEU)	/* Read Data and Bit Flip Register 15 */
#define MC51_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00643C0U)	/* Read Data and Bit Flip Register 16 */
#define MC51_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00643C2U)	/* Read Data and Bit Flip Register 17 */
#define MC51_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00643C4U)	/* Read Data and Bit Flip Register 18 */
#define MC51_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00643C6U)	/* Read Data and Bit Flip Register 19 */
#define MC51_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00643C8U)	/* Read Data and Bit Flip Register 20 */
#define MC51_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00643CAU)	/* Read Data and Bit Flip Register 21 */
#define MC51_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00643CCU)	/* Read Data and Bit Flip Register 22 */
#define MC51_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00643CEU)	/* Read Data and Bit Flip Register 23 */
#define MC51_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00643D0U)	/* Read Data and Bit Flip Register 24 */
#define MC51_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00643D2U)	/* Read Data and Bit Flip Register 25 */
#define MC51_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00643D4U)	/* Read Data and Bit Flip Register 26 */
#define MC51_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00643D6U)	/* Read Data and Bit Flip Register 27 */
#define MC51_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00643D8U)	/* Read Data and Bit Flip Register 28 */
#define MC51_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00643DAU)	/* Read Data and Bit Flip Register 29 */
#define MC51_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00643DCU)	/* Read Data and Bit Flip Register 30 */
#define MC51_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00643DEU)	/* Read Data and Bit Flip Register 31 */
#define MC51_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00643E0U)	/* Read Data and Bit Flip Register 32 */
#define MC51_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00643E2U)	/* Read Data and Bit Flip Register 33 */
#define MC51_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00643E4U)	/* Read Data and Bit Flip Register 34 */
#define MC51_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00643E6U)	/* Read Data and Bit Flip Register 35 */
#define MC51_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00643E8U)	/* Read Data and Bit Flip Register 36 */
#define MC51_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00643EAU)	/* Read Data and Bit Flip Register 37 */
#define MC51_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00643ECU)	/* Read Data and Bit Flip Register 38 */
#define MC51_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00643EEU)	/* Read Data and Bit Flip Register 39 */
#define MC52_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00644A0U)	/* Read Data and Bit Flip Register 0 */
#define MC52_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00644A2U)	/* Read Data and Bit Flip Register 1 */
#define MC52_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00644A4U)	/* Read Data and Bit Flip Register 2 */
#define MC52_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00644A6U)	/* Read Data and Bit Flip Register 3 */
#define MC52_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00644A8U)	/* Read Data and Bit Flip Register 4 */
#define MC52_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00644AAU)	/* Read Data and Bit Flip Register 5 */
#define MC52_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00644ACU)	/* Read Data and Bit Flip Register 6 */
#define MC52_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00644AEU)	/* Read Data and Bit Flip Register 7 */
#define MC52_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00644B0U)	/* Read Data and Bit Flip Register 8 */
#define MC52_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00644B2U)	/* Read Data and Bit Flip Register 9 */
#define MC52_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00644B4U)	/* Read Data and Bit Flip Register 10 */
#define MC52_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00644B6U)	/* Read Data and Bit Flip Register 11 */
#define MC52_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00644B8U)	/* Read Data and Bit Flip Register 12 */
#define MC52_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00644BAU)	/* Read Data and Bit Flip Register 13 */
#define MC52_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00644BCU)	/* Read Data and Bit Flip Register 14 */
#define MC52_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00644BEU)	/* Read Data and Bit Flip Register 15 */
#define MC52_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00644C0U)	/* Read Data and Bit Flip Register 16 */
#define MC52_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00644C2U)	/* Read Data and Bit Flip Register 17 */
#define MC52_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00644C4U)	/* Read Data and Bit Flip Register 18 */
#define MC52_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00644C6U)	/* Read Data and Bit Flip Register 19 */
#define MC52_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00644C8U)	/* Read Data and Bit Flip Register 20 */
#define MC52_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00644CAU)	/* Read Data and Bit Flip Register 21 */
#define MC52_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00644CCU)	/* Read Data and Bit Flip Register 22 */
#define MC52_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00644CEU)	/* Read Data and Bit Flip Register 23 */
#define MC52_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00644D0U)	/* Read Data and Bit Flip Register 24 */
#define MC52_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00644D2U)	/* Read Data and Bit Flip Register 25 */
#define MC52_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00644D4U)	/* Read Data and Bit Flip Register 26 */
#define MC52_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00644D6U)	/* Read Data and Bit Flip Register 27 */
#define MC52_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00644D8U)	/* Read Data and Bit Flip Register 28 */
#define MC52_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00644DAU)	/* Read Data and Bit Flip Register 29 */
#define MC52_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00644DCU)	/* Read Data and Bit Flip Register 30 */
#define MC52_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00644DEU)	/* Read Data and Bit Flip Register 31 */
#define MC52_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00644E0U)	/* Read Data and Bit Flip Register 32 */
#define MC52_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00644E2U)	/* Read Data and Bit Flip Register 33 */
#define MC52_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00644E4U)	/* Read Data and Bit Flip Register 34 */
#define MC52_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00644E6U)	/* Read Data and Bit Flip Register 35 */
#define MC52_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00644E8U)	/* Read Data and Bit Flip Register 36 */
#define MC52_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00644EAU)	/* Read Data and Bit Flip Register 37 */
#define MC52_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00644ECU)	/* Read Data and Bit Flip Register 38 */
#define MC52_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00644EEU)	/* Read Data and Bit Flip Register 39 */
#define MC53_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00645A0U)	/* Read Data and Bit Flip Register 0 */
#define MC53_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00645A2U)	/* Read Data and Bit Flip Register 1 */
#define MC53_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00645A4U)	/* Read Data and Bit Flip Register 2 */
#define MC53_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00645A6U)	/* Read Data and Bit Flip Register 3 */
#define MC53_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00645A8U)	/* Read Data and Bit Flip Register 4 */
#define MC53_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00645AAU)	/* Read Data and Bit Flip Register 5 */
#define MC53_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00645ACU)	/* Read Data and Bit Flip Register 6 */
#define MC53_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00645AEU)	/* Read Data and Bit Flip Register 7 */
#define MC53_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00645B0U)	/* Read Data and Bit Flip Register 8 */
#define MC53_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00645B2U)	/* Read Data and Bit Flip Register 9 */
#define MC53_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00645B4U)	/* Read Data and Bit Flip Register 10 */
#define MC53_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00645B6U)	/* Read Data and Bit Flip Register 11 */
#define MC53_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00645B8U)	/* Read Data and Bit Flip Register 12 */
#define MC53_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00645BAU)	/* Read Data and Bit Flip Register 13 */
#define MC53_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00645BCU)	/* Read Data and Bit Flip Register 14 */
#define MC53_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00645BEU)	/* Read Data and Bit Flip Register 15 */
#define MC53_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00645C0U)	/* Read Data and Bit Flip Register 16 */
#define MC53_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00645C2U)	/* Read Data and Bit Flip Register 17 */
#define MC53_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00645C4U)	/* Read Data and Bit Flip Register 18 */
#define MC53_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00645C6U)	/* Read Data and Bit Flip Register 19 */
#define MC53_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00645C8U)	/* Read Data and Bit Flip Register 20 */
#define MC53_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00645CAU)	/* Read Data and Bit Flip Register 21 */
#define MC53_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00645CCU)	/* Read Data and Bit Flip Register 22 */
#define MC53_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00645CEU)	/* Read Data and Bit Flip Register 23 */
#define MC53_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00645D0U)	/* Read Data and Bit Flip Register 24 */
#define MC53_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00645D2U)	/* Read Data and Bit Flip Register 25 */
#define MC53_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00645D4U)	/* Read Data and Bit Flip Register 26 */
#define MC53_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00645D6U)	/* Read Data and Bit Flip Register 27 */
#define MC53_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00645D8U)	/* Read Data and Bit Flip Register 28 */
#define MC53_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00645DAU)	/* Read Data and Bit Flip Register 29 */
#define MC53_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00645DCU)	/* Read Data and Bit Flip Register 30 */
#define MC53_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00645DEU)	/* Read Data and Bit Flip Register 31 */
#define MC53_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00645E0U)	/* Read Data and Bit Flip Register 32 */
#define MC53_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00645E2U)	/* Read Data and Bit Flip Register 33 */
#define MC53_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00645E4U)	/* Read Data and Bit Flip Register 34 */
#define MC53_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00645E6U)	/* Read Data and Bit Flip Register 35 */
#define MC53_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00645E8U)	/* Read Data and Bit Flip Register 36 */
#define MC53_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00645EAU)	/* Read Data and Bit Flip Register 37 */
#define MC53_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00645ECU)	/* Read Data and Bit Flip Register 38 */
#define MC53_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00645EEU)	/* Read Data and Bit Flip Register 39 */
#define MC54_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00646A0U)	/* Read Data and Bit Flip Register 0 */
#define MC54_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00646A2U)	/* Read Data and Bit Flip Register 1 */
#define MC54_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00646A4U)	/* Read Data and Bit Flip Register 2 */
#define MC54_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00646A6U)	/* Read Data and Bit Flip Register 3 */
#define MC54_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00646A8U)	/* Read Data and Bit Flip Register 4 */
#define MC54_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00646AAU)	/* Read Data and Bit Flip Register 5 */
#define MC54_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00646ACU)	/* Read Data and Bit Flip Register 6 */
#define MC54_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00646AEU)	/* Read Data and Bit Flip Register 7 */
#define MC54_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00646B0U)	/* Read Data and Bit Flip Register 8 */
#define MC54_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00646B2U)	/* Read Data and Bit Flip Register 9 */
#define MC54_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00646B4U)	/* Read Data and Bit Flip Register 10 */
#define MC54_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00646B6U)	/* Read Data and Bit Flip Register 11 */
#define MC54_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00646B8U)	/* Read Data and Bit Flip Register 12 */
#define MC54_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00646BAU)	/* Read Data and Bit Flip Register 13 */
#define MC54_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00646BCU)	/* Read Data and Bit Flip Register 14 */
#define MC54_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00646BEU)	/* Read Data and Bit Flip Register 15 */
#define MC54_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00646C0U)	/* Read Data and Bit Flip Register 16 */
#define MC54_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00646C2U)	/* Read Data and Bit Flip Register 17 */
#define MC54_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00646C4U)	/* Read Data and Bit Flip Register 18 */
#define MC54_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00646C6U)	/* Read Data and Bit Flip Register 19 */
#define MC54_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00646C8U)	/* Read Data and Bit Flip Register 20 */
#define MC54_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00646CAU)	/* Read Data and Bit Flip Register 21 */
#define MC54_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00646CCU)	/* Read Data and Bit Flip Register 22 */
#define MC54_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00646CEU)	/* Read Data and Bit Flip Register 23 */
#define MC54_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00646D0U)	/* Read Data and Bit Flip Register 24 */
#define MC54_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00646D2U)	/* Read Data and Bit Flip Register 25 */
#define MC54_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00646D4U)	/* Read Data and Bit Flip Register 26 */
#define MC54_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00646D6U)	/* Read Data and Bit Flip Register 27 */
#define MC54_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00646D8U)	/* Read Data and Bit Flip Register 28 */
#define MC54_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00646DAU)	/* Read Data and Bit Flip Register 29 */
#define MC54_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00646DCU)	/* Read Data and Bit Flip Register 30 */
#define MC54_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00646DEU)	/* Read Data and Bit Flip Register 31 */
#define MC54_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00646E0U)	/* Read Data and Bit Flip Register 32 */
#define MC54_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00646E2U)	/* Read Data and Bit Flip Register 33 */
#define MC54_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00646E4U)	/* Read Data and Bit Flip Register 34 */
#define MC54_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00646E6U)	/* Read Data and Bit Flip Register 35 */
#define MC54_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00646E8U)	/* Read Data and Bit Flip Register 36 */
#define MC54_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00646EAU)	/* Read Data and Bit Flip Register 37 */
#define MC54_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00646ECU)	/* Read Data and Bit Flip Register 38 */
#define MC54_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00646EEU)	/* Read Data and Bit Flip Register 39 */
#define MC55_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00647A0U)	/* Read Data and Bit Flip Register 0 */
#define MC55_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00647A2U)	/* Read Data and Bit Flip Register 1 */
#define MC55_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00647A4U)	/* Read Data and Bit Flip Register 2 */
#define MC55_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00647A6U)	/* Read Data and Bit Flip Register 3 */
#define MC55_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00647A8U)	/* Read Data and Bit Flip Register 4 */
#define MC55_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00647AAU)	/* Read Data and Bit Flip Register 5 */
#define MC55_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00647ACU)	/* Read Data and Bit Flip Register 6 */
#define MC55_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00647AEU)	/* Read Data and Bit Flip Register 7 */
#define MC55_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00647B0U)	/* Read Data and Bit Flip Register 8 */
#define MC55_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00647B2U)	/* Read Data and Bit Flip Register 9 */
#define MC55_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00647B4U)	/* Read Data and Bit Flip Register 10 */
#define MC55_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00647B6U)	/* Read Data and Bit Flip Register 11 */
#define MC55_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00647B8U)	/* Read Data and Bit Flip Register 12 */
#define MC55_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00647BAU)	/* Read Data and Bit Flip Register 13 */
#define MC55_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00647BCU)	/* Read Data and Bit Flip Register 14 */
#define MC55_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00647BEU)	/* Read Data and Bit Flip Register 15 */
#define MC55_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00647C0U)	/* Read Data and Bit Flip Register 16 */
#define MC55_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00647C2U)	/* Read Data and Bit Flip Register 17 */
#define MC55_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00647C4U)	/* Read Data and Bit Flip Register 18 */
#define MC55_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00647C6U)	/* Read Data and Bit Flip Register 19 */
#define MC55_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00647C8U)	/* Read Data and Bit Flip Register 20 */
#define MC55_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00647CAU)	/* Read Data and Bit Flip Register 21 */
#define MC55_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00647CCU)	/* Read Data and Bit Flip Register 22 */
#define MC55_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00647CEU)	/* Read Data and Bit Flip Register 23 */
#define MC55_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00647D0U)	/* Read Data and Bit Flip Register 24 */
#define MC55_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00647D2U)	/* Read Data and Bit Flip Register 25 */
#define MC55_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00647D4U)	/* Read Data and Bit Flip Register 26 */
#define MC55_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00647D6U)	/* Read Data and Bit Flip Register 27 */
#define MC55_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00647D8U)	/* Read Data and Bit Flip Register 28 */
#define MC55_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00647DAU)	/* Read Data and Bit Flip Register 29 */
#define MC55_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00647DCU)	/* Read Data and Bit Flip Register 30 */
#define MC55_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00647DEU)	/* Read Data and Bit Flip Register 31 */
#define MC55_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00647E0U)	/* Read Data and Bit Flip Register 32 */
#define MC55_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00647E2U)	/* Read Data and Bit Flip Register 33 */
#define MC55_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00647E4U)	/* Read Data and Bit Flip Register 34 */
#define MC55_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00647E6U)	/* Read Data and Bit Flip Register 35 */
#define MC55_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00647E8U)	/* Read Data and Bit Flip Register 36 */
#define MC55_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00647EAU)	/* Read Data and Bit Flip Register 37 */
#define MC55_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00647ECU)	/* Read Data and Bit Flip Register 38 */
#define MC55_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00647EEU)	/* Read Data and Bit Flip Register 39 */
#define MC56_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00648A0U)	/* Read Data and Bit Flip Register 0 */
#define MC56_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00648A2U)	/* Read Data and Bit Flip Register 1 */
#define MC56_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00648A4U)	/* Read Data and Bit Flip Register 2 */
#define MC56_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00648A6U)	/* Read Data and Bit Flip Register 3 */
#define MC56_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00648A8U)	/* Read Data and Bit Flip Register 4 */
#define MC56_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00648AAU)	/* Read Data and Bit Flip Register 5 */
#define MC56_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00648ACU)	/* Read Data and Bit Flip Register 6 */
#define MC56_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00648AEU)	/* Read Data and Bit Flip Register 7 */
#define MC56_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00648B0U)	/* Read Data and Bit Flip Register 8 */
#define MC56_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00648B2U)	/* Read Data and Bit Flip Register 9 */
#define MC56_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00648B4U)	/* Read Data and Bit Flip Register 10 */
#define MC56_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00648B6U)	/* Read Data and Bit Flip Register 11 */
#define MC56_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00648B8U)	/* Read Data and Bit Flip Register 12 */
#define MC56_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00648BAU)	/* Read Data and Bit Flip Register 13 */
#define MC56_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00648BCU)	/* Read Data and Bit Flip Register 14 */
#define MC56_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00648BEU)	/* Read Data and Bit Flip Register 15 */
#define MC56_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00648C0U)	/* Read Data and Bit Flip Register 16 */
#define MC56_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00648C2U)	/* Read Data and Bit Flip Register 17 */
#define MC56_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00648C4U)	/* Read Data and Bit Flip Register 18 */
#define MC56_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00648C6U)	/* Read Data and Bit Flip Register 19 */
#define MC56_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00648C8U)	/* Read Data and Bit Flip Register 20 */
#define MC56_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00648CAU)	/* Read Data and Bit Flip Register 21 */
#define MC56_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00648CCU)	/* Read Data and Bit Flip Register 22 */
#define MC56_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00648CEU)	/* Read Data and Bit Flip Register 23 */
#define MC56_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00648D0U)	/* Read Data and Bit Flip Register 24 */
#define MC56_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00648D2U)	/* Read Data and Bit Flip Register 25 */
#define MC56_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00648D4U)	/* Read Data and Bit Flip Register 26 */
#define MC56_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00648D6U)	/* Read Data and Bit Flip Register 27 */
#define MC56_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00648D8U)	/* Read Data and Bit Flip Register 28 */
#define MC56_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00648DAU)	/* Read Data and Bit Flip Register 29 */
#define MC56_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00648DCU)	/* Read Data and Bit Flip Register 30 */
#define MC56_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00648DEU)	/* Read Data and Bit Flip Register 31 */
#define MC56_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00648E0U)	/* Read Data and Bit Flip Register 32 */
#define MC56_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00648E2U)	/* Read Data and Bit Flip Register 33 */
#define MC56_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00648E4U)	/* Read Data and Bit Flip Register 34 */
#define MC56_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00648E6U)	/* Read Data and Bit Flip Register 35 */
#define MC56_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00648E8U)	/* Read Data and Bit Flip Register 36 */
#define MC56_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00648EAU)	/* Read Data and Bit Flip Register 37 */
#define MC56_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00648ECU)	/* Read Data and Bit Flip Register 38 */
#define MC56_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00648EEU)	/* Read Data and Bit Flip Register 39 */
#define MC57_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00649A0U)	/* Read Data and Bit Flip Register 0 */
#define MC57_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00649A2U)	/* Read Data and Bit Flip Register 1 */
#define MC57_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00649A4U)	/* Read Data and Bit Flip Register 2 */
#define MC57_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00649A6U)	/* Read Data and Bit Flip Register 3 */
#define MC57_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00649A8U)	/* Read Data and Bit Flip Register 4 */
#define MC57_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00649AAU)	/* Read Data and Bit Flip Register 5 */
#define MC57_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00649ACU)	/* Read Data and Bit Flip Register 6 */
#define MC57_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00649AEU)	/* Read Data and Bit Flip Register 7 */
#define MC57_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00649B0U)	/* Read Data and Bit Flip Register 8 */
#define MC57_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00649B2U)	/* Read Data and Bit Flip Register 9 */
#define MC57_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00649B4U)	/* Read Data and Bit Flip Register 10 */
#define MC57_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00649B6U)	/* Read Data and Bit Flip Register 11 */
#define MC57_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00649B8U)	/* Read Data and Bit Flip Register 12 */
#define MC57_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00649BAU)	/* Read Data and Bit Flip Register 13 */
#define MC57_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00649BCU)	/* Read Data and Bit Flip Register 14 */
#define MC57_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00649BEU)	/* Read Data and Bit Flip Register 15 */
#define MC57_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00649C0U)	/* Read Data and Bit Flip Register 16 */
#define MC57_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00649C2U)	/* Read Data and Bit Flip Register 17 */
#define MC57_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00649C4U)	/* Read Data and Bit Flip Register 18 */
#define MC57_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00649C6U)	/* Read Data and Bit Flip Register 19 */
#define MC57_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00649C8U)	/* Read Data and Bit Flip Register 20 */
#define MC57_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00649CAU)	/* Read Data and Bit Flip Register 21 */
#define MC57_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00649CCU)	/* Read Data and Bit Flip Register 22 */
#define MC57_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00649CEU)	/* Read Data and Bit Flip Register 23 */
#define MC57_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00649D0U)	/* Read Data and Bit Flip Register 24 */
#define MC57_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00649D2U)	/* Read Data and Bit Flip Register 25 */
#define MC57_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00649D4U)	/* Read Data and Bit Flip Register 26 */
#define MC57_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00649D6U)	/* Read Data and Bit Flip Register 27 */
#define MC57_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00649D8U)	/* Read Data and Bit Flip Register 28 */
#define MC57_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00649DAU)	/* Read Data and Bit Flip Register 29 */
#define MC57_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00649DCU)	/* Read Data and Bit Flip Register 30 */
#define MC57_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00649DEU)	/* Read Data and Bit Flip Register 31 */
#define MC57_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00649E0U)	/* Read Data and Bit Flip Register 32 */
#define MC57_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00649E2U)	/* Read Data and Bit Flip Register 33 */
#define MC57_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00649E4U)	/* Read Data and Bit Flip Register 34 */
#define MC57_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00649E6U)	/* Read Data and Bit Flip Register 35 */
#define MC57_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00649E8U)	/* Read Data and Bit Flip Register 36 */
#define MC57_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00649EAU)	/* Read Data and Bit Flip Register 37 */
#define MC57_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00649ECU)	/* Read Data and Bit Flip Register 38 */
#define MC57_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00649EEU)	/* Read Data and Bit Flip Register 39 */
#define MC58_RDBFL0	(*( MC0_RDBFL0_type *) 0xF0064AA0U)	/* Read Data and Bit Flip Register 0 */
#define MC58_RDBFL1	(*( MC0_RDBFL0_type *) 0xF0064AA2U)	/* Read Data and Bit Flip Register 1 */
#define MC58_RDBFL2	(*( MC0_RDBFL0_type *) 0xF0064AA4U)	/* Read Data and Bit Flip Register 2 */
#define MC58_RDBFL3	(*( MC0_RDBFL0_type *) 0xF0064AA6U)	/* Read Data and Bit Flip Register 3 */
#define MC58_RDBFL4	(*( MC0_RDBFL0_type *) 0xF0064AA8U)	/* Read Data and Bit Flip Register 4 */
#define MC58_RDBFL5	(*( MC0_RDBFL0_type *) 0xF0064AAAU)	/* Read Data and Bit Flip Register 5 */
#define MC58_RDBFL6	(*( MC0_RDBFL0_type *) 0xF0064AACU)	/* Read Data and Bit Flip Register 6 */
#define MC58_RDBFL7	(*( MC0_RDBFL0_type *) 0xF0064AAEU)	/* Read Data and Bit Flip Register 7 */
#define MC58_RDBFL8	(*( MC0_RDBFL0_type *) 0xF0064AB0U)	/* Read Data and Bit Flip Register 8 */
#define MC58_RDBFL9	(*( MC0_RDBFL0_type *) 0xF0064AB2U)	/* Read Data and Bit Flip Register 9 */
#define MC58_RDBFL10	(*( MC0_RDBFL0_type *) 0xF0064AB4U)	/* Read Data and Bit Flip Register 10 */
#define MC58_RDBFL11	(*( MC0_RDBFL0_type *) 0xF0064AB6U)	/* Read Data and Bit Flip Register 11 */
#define MC58_RDBFL12	(*( MC0_RDBFL0_type *) 0xF0064AB8U)	/* Read Data and Bit Flip Register 12 */
#define MC58_RDBFL13	(*( MC0_RDBFL0_type *) 0xF0064ABAU)	/* Read Data and Bit Flip Register 13 */
#define MC58_RDBFL14	(*( MC0_RDBFL0_type *) 0xF0064ABCU)	/* Read Data and Bit Flip Register 14 */
#define MC58_RDBFL15	(*( MC0_RDBFL0_type *) 0xF0064ABEU)	/* Read Data and Bit Flip Register 15 */
#define MC58_RDBFL16	(*( MC0_RDBFL0_type *) 0xF0064AC0U)	/* Read Data and Bit Flip Register 16 */
#define MC58_RDBFL17	(*( MC0_RDBFL0_type *) 0xF0064AC2U)	/* Read Data and Bit Flip Register 17 */
#define MC58_RDBFL18	(*( MC0_RDBFL0_type *) 0xF0064AC4U)	/* Read Data and Bit Flip Register 18 */
#define MC58_RDBFL19	(*( MC0_RDBFL0_type *) 0xF0064AC6U)	/* Read Data and Bit Flip Register 19 */
#define MC58_RDBFL20	(*( MC0_RDBFL0_type *) 0xF0064AC8U)	/* Read Data and Bit Flip Register 20 */
#define MC58_RDBFL21	(*( MC0_RDBFL0_type *) 0xF0064ACAU)	/* Read Data and Bit Flip Register 21 */
#define MC58_RDBFL22	(*( MC0_RDBFL0_type *) 0xF0064ACCU)	/* Read Data and Bit Flip Register 22 */
#define MC58_RDBFL23	(*( MC0_RDBFL0_type *) 0xF0064ACEU)	/* Read Data and Bit Flip Register 23 */
#define MC58_RDBFL24	(*( MC0_RDBFL0_type *) 0xF0064AD0U)	/* Read Data and Bit Flip Register 24 */
#define MC58_RDBFL25	(*( MC0_RDBFL0_type *) 0xF0064AD2U)	/* Read Data and Bit Flip Register 25 */
#define MC58_RDBFL26	(*( MC0_RDBFL0_type *) 0xF0064AD4U)	/* Read Data and Bit Flip Register 26 */
#define MC58_RDBFL27	(*( MC0_RDBFL0_type *) 0xF0064AD6U)	/* Read Data and Bit Flip Register 27 */
#define MC58_RDBFL28	(*( MC0_RDBFL0_type *) 0xF0064AD8U)	/* Read Data and Bit Flip Register 28 */
#define MC58_RDBFL29	(*( MC0_RDBFL0_type *) 0xF0064ADAU)	/* Read Data and Bit Flip Register 29 */
#define MC58_RDBFL30	(*( MC0_RDBFL0_type *) 0xF0064ADCU)	/* Read Data and Bit Flip Register 30 */
#define MC58_RDBFL31	(*( MC0_RDBFL0_type *) 0xF0064ADEU)	/* Read Data and Bit Flip Register 31 */
#define MC58_RDBFL32	(*( MC0_RDBFL0_type *) 0xF0064AE0U)	/* Read Data and Bit Flip Register 32 */
#define MC58_RDBFL33	(*( MC0_RDBFL0_type *) 0xF0064AE2U)	/* Read Data and Bit Flip Register 33 */
#define MC58_RDBFL34	(*( MC0_RDBFL0_type *) 0xF0064AE4U)	/* Read Data and Bit Flip Register 34 */
#define MC58_RDBFL35	(*( MC0_RDBFL0_type *) 0xF0064AE6U)	/* Read Data and Bit Flip Register 35 */
#define MC58_RDBFL36	(*( MC0_RDBFL0_type *) 0xF0064AE8U)	/* Read Data and Bit Flip Register 36 */
#define MC58_RDBFL37	(*( MC0_RDBFL0_type *) 0xF0064AEAU)	/* Read Data and Bit Flip Register 37 */
#define MC58_RDBFL38	(*( MC0_RDBFL0_type *) 0xF0064AECU)	/* Read Data and Bit Flip Register 38 */
#define MC58_RDBFL39	(*( MC0_RDBFL0_type *) 0xF0064AEEU)	/* Read Data and Bit Flip Register 39 */
#define MC59_RDBFL0	(*( MC0_RDBFL0_type *) 0xF0064BA0U)	/* Read Data and Bit Flip Register 0 */
#define MC59_RDBFL1	(*( MC0_RDBFL0_type *) 0xF0064BA2U)	/* Read Data and Bit Flip Register 1 */
#define MC59_RDBFL2	(*( MC0_RDBFL0_type *) 0xF0064BA4U)	/* Read Data and Bit Flip Register 2 */
#define MC59_RDBFL3	(*( MC0_RDBFL0_type *) 0xF0064BA6U)	/* Read Data and Bit Flip Register 3 */
#define MC59_RDBFL4	(*( MC0_RDBFL0_type *) 0xF0064BA8U)	/* Read Data and Bit Flip Register 4 */
#define MC59_RDBFL5	(*( MC0_RDBFL0_type *) 0xF0064BAAU)	/* Read Data and Bit Flip Register 5 */
#define MC59_RDBFL6	(*( MC0_RDBFL0_type *) 0xF0064BACU)	/* Read Data and Bit Flip Register 6 */
#define MC59_RDBFL7	(*( MC0_RDBFL0_type *) 0xF0064BAEU)	/* Read Data and Bit Flip Register 7 */
#define MC59_RDBFL8	(*( MC0_RDBFL0_type *) 0xF0064BB0U)	/* Read Data and Bit Flip Register 8 */
#define MC59_RDBFL9	(*( MC0_RDBFL0_type *) 0xF0064BB2U)	/* Read Data and Bit Flip Register 9 */
#define MC59_RDBFL10	(*( MC0_RDBFL0_type *) 0xF0064BB4U)	/* Read Data and Bit Flip Register 10 */
#define MC59_RDBFL11	(*( MC0_RDBFL0_type *) 0xF0064BB6U)	/* Read Data and Bit Flip Register 11 */
#define MC59_RDBFL12	(*( MC0_RDBFL0_type *) 0xF0064BB8U)	/* Read Data and Bit Flip Register 12 */
#define MC59_RDBFL13	(*( MC0_RDBFL0_type *) 0xF0064BBAU)	/* Read Data and Bit Flip Register 13 */
#define MC59_RDBFL14	(*( MC0_RDBFL0_type *) 0xF0064BBCU)	/* Read Data and Bit Flip Register 14 */
#define MC59_RDBFL15	(*( MC0_RDBFL0_type *) 0xF0064BBEU)	/* Read Data and Bit Flip Register 15 */
#define MC59_RDBFL16	(*( MC0_RDBFL0_type *) 0xF0064BC0U)	/* Read Data and Bit Flip Register 16 */
#define MC59_RDBFL17	(*( MC0_RDBFL0_type *) 0xF0064BC2U)	/* Read Data and Bit Flip Register 17 */
#define MC59_RDBFL18	(*( MC0_RDBFL0_type *) 0xF0064BC4U)	/* Read Data and Bit Flip Register 18 */
#define MC59_RDBFL19	(*( MC0_RDBFL0_type *) 0xF0064BC6U)	/* Read Data and Bit Flip Register 19 */
#define MC59_RDBFL20	(*( MC0_RDBFL0_type *) 0xF0064BC8U)	/* Read Data and Bit Flip Register 20 */
#define MC59_RDBFL21	(*( MC0_RDBFL0_type *) 0xF0064BCAU)	/* Read Data and Bit Flip Register 21 */
#define MC59_RDBFL22	(*( MC0_RDBFL0_type *) 0xF0064BCCU)	/* Read Data and Bit Flip Register 22 */
#define MC59_RDBFL23	(*( MC0_RDBFL0_type *) 0xF0064BCEU)	/* Read Data and Bit Flip Register 23 */
#define MC59_RDBFL24	(*( MC0_RDBFL0_type *) 0xF0064BD0U)	/* Read Data and Bit Flip Register 24 */
#define MC59_RDBFL25	(*( MC0_RDBFL0_type *) 0xF0064BD2U)	/* Read Data and Bit Flip Register 25 */
#define MC59_RDBFL26	(*( MC0_RDBFL0_type *) 0xF0064BD4U)	/* Read Data and Bit Flip Register 26 */
#define MC59_RDBFL27	(*( MC0_RDBFL0_type *) 0xF0064BD6U)	/* Read Data and Bit Flip Register 27 */
#define MC59_RDBFL28	(*( MC0_RDBFL0_type *) 0xF0064BD8U)	/* Read Data and Bit Flip Register 28 */
#define MC59_RDBFL29	(*( MC0_RDBFL0_type *) 0xF0064BDAU)	/* Read Data and Bit Flip Register 29 */
#define MC59_RDBFL30	(*( MC0_RDBFL0_type *) 0xF0064BDCU)	/* Read Data and Bit Flip Register 30 */
#define MC59_RDBFL31	(*( MC0_RDBFL0_type *) 0xF0064BDEU)	/* Read Data and Bit Flip Register 31 */
#define MC59_RDBFL32	(*( MC0_RDBFL0_type *) 0xF0064BE0U)	/* Read Data and Bit Flip Register 32 */
#define MC59_RDBFL33	(*( MC0_RDBFL0_type *) 0xF0064BE2U)	/* Read Data and Bit Flip Register 33 */
#define MC59_RDBFL34	(*( MC0_RDBFL0_type *) 0xF0064BE4U)	/* Read Data and Bit Flip Register 34 */
#define MC59_RDBFL35	(*( MC0_RDBFL0_type *) 0xF0064BE6U)	/* Read Data and Bit Flip Register 35 */
#define MC59_RDBFL36	(*( MC0_RDBFL0_type *) 0xF0064BE8U)	/* Read Data and Bit Flip Register 36 */
#define MC59_RDBFL37	(*( MC0_RDBFL0_type *) 0xF0064BEAU)	/* Read Data and Bit Flip Register 37 */
#define MC59_RDBFL38	(*( MC0_RDBFL0_type *) 0xF0064BECU)	/* Read Data and Bit Flip Register 38 */
#define MC59_RDBFL39	(*( MC0_RDBFL0_type *) 0xF0064BEEU)	/* Read Data and Bit Flip Register 39 */
#define MC60_RDBFL0	(*( MC0_RDBFL0_type *) 0xF0064CA0U)	/* Read Data and Bit Flip Register 0 */
#define MC60_RDBFL1	(*( MC0_RDBFL0_type *) 0xF0064CA2U)	/* Read Data and Bit Flip Register 1 */
#define MC60_RDBFL2	(*( MC0_RDBFL0_type *) 0xF0064CA4U)	/* Read Data and Bit Flip Register 2 */
#define MC60_RDBFL3	(*( MC0_RDBFL0_type *) 0xF0064CA6U)	/* Read Data and Bit Flip Register 3 */
#define MC60_RDBFL4	(*( MC0_RDBFL0_type *) 0xF0064CA8U)	/* Read Data and Bit Flip Register 4 */
#define MC60_RDBFL5	(*( MC0_RDBFL0_type *) 0xF0064CAAU)	/* Read Data and Bit Flip Register 5 */
#define MC60_RDBFL6	(*( MC0_RDBFL0_type *) 0xF0064CACU)	/* Read Data and Bit Flip Register 6 */
#define MC60_RDBFL7	(*( MC0_RDBFL0_type *) 0xF0064CAEU)	/* Read Data and Bit Flip Register 7 */
#define MC60_RDBFL8	(*( MC0_RDBFL0_type *) 0xF0064CB0U)	/* Read Data and Bit Flip Register 8 */
#define MC60_RDBFL9	(*( MC0_RDBFL0_type *) 0xF0064CB2U)	/* Read Data and Bit Flip Register 9 */
#define MC60_RDBFL10	(*( MC0_RDBFL0_type *) 0xF0064CB4U)	/* Read Data and Bit Flip Register 10 */
#define MC60_RDBFL11	(*( MC0_RDBFL0_type *) 0xF0064CB6U)	/* Read Data and Bit Flip Register 11 */
#define MC60_RDBFL12	(*( MC0_RDBFL0_type *) 0xF0064CB8U)	/* Read Data and Bit Flip Register 12 */
#define MC60_RDBFL13	(*( MC0_RDBFL0_type *) 0xF0064CBAU)	/* Read Data and Bit Flip Register 13 */
#define MC60_RDBFL14	(*( MC0_RDBFL0_type *) 0xF0064CBCU)	/* Read Data and Bit Flip Register 14 */
#define MC60_RDBFL15	(*( MC0_RDBFL0_type *) 0xF0064CBEU)	/* Read Data and Bit Flip Register 15 */
#define MC60_RDBFL16	(*( MC0_RDBFL0_type *) 0xF0064CC0U)	/* Read Data and Bit Flip Register 16 */
#define MC60_RDBFL17	(*( MC0_RDBFL0_type *) 0xF0064CC2U)	/* Read Data and Bit Flip Register 17 */
#define MC60_RDBFL18	(*( MC0_RDBFL0_type *) 0xF0064CC4U)	/* Read Data and Bit Flip Register 18 */
#define MC60_RDBFL19	(*( MC0_RDBFL0_type *) 0xF0064CC6U)	/* Read Data and Bit Flip Register 19 */
#define MC60_RDBFL20	(*( MC0_RDBFL0_type *) 0xF0064CC8U)	/* Read Data and Bit Flip Register 20 */
#define MC60_RDBFL21	(*( MC0_RDBFL0_type *) 0xF0064CCAU)	/* Read Data and Bit Flip Register 21 */
#define MC60_RDBFL22	(*( MC0_RDBFL0_type *) 0xF0064CCCU)	/* Read Data and Bit Flip Register 22 */
#define MC60_RDBFL23	(*( MC0_RDBFL0_type *) 0xF0064CCEU)	/* Read Data and Bit Flip Register 23 */
#define MC60_RDBFL24	(*( MC0_RDBFL0_type *) 0xF0064CD0U)	/* Read Data and Bit Flip Register 24 */
#define MC60_RDBFL25	(*( MC0_RDBFL0_type *) 0xF0064CD2U)	/* Read Data and Bit Flip Register 25 */
#define MC60_RDBFL26	(*( MC0_RDBFL0_type *) 0xF0064CD4U)	/* Read Data and Bit Flip Register 26 */
#define MC60_RDBFL27	(*( MC0_RDBFL0_type *) 0xF0064CD6U)	/* Read Data and Bit Flip Register 27 */
#define MC60_RDBFL28	(*( MC0_RDBFL0_type *) 0xF0064CD8U)	/* Read Data and Bit Flip Register 28 */
#define MC60_RDBFL29	(*( MC0_RDBFL0_type *) 0xF0064CDAU)	/* Read Data and Bit Flip Register 29 */
#define MC60_RDBFL30	(*( MC0_RDBFL0_type *) 0xF0064CDCU)	/* Read Data and Bit Flip Register 30 */
#define MC60_RDBFL31	(*( MC0_RDBFL0_type *) 0xF0064CDEU)	/* Read Data and Bit Flip Register 31 */
#define MC60_RDBFL32	(*( MC0_RDBFL0_type *) 0xF0064CE0U)	/* Read Data and Bit Flip Register 32 */
#define MC60_RDBFL33	(*( MC0_RDBFL0_type *) 0xF0064CE2U)	/* Read Data and Bit Flip Register 33 */
#define MC60_RDBFL34	(*( MC0_RDBFL0_type *) 0xF0064CE4U)	/* Read Data and Bit Flip Register 34 */
#define MC60_RDBFL35	(*( MC0_RDBFL0_type *) 0xF0064CE6U)	/* Read Data and Bit Flip Register 35 */
#define MC60_RDBFL36	(*( MC0_RDBFL0_type *) 0xF0064CE8U)	/* Read Data and Bit Flip Register 36 */
#define MC60_RDBFL37	(*( MC0_RDBFL0_type *) 0xF0064CEAU)	/* Read Data and Bit Flip Register 37 */
#define MC60_RDBFL38	(*( MC0_RDBFL0_type *) 0xF0064CECU)	/* Read Data and Bit Flip Register 38 */
#define MC60_RDBFL39	(*( MC0_RDBFL0_type *) 0xF0064CEEU)	/* Read Data and Bit Flip Register 39 */
#define MC61_RDBFL0	(*( MC0_RDBFL0_type *) 0xF0064DA0U)	/* Read Data and Bit Flip Register 0 */
#define MC61_RDBFL1	(*( MC0_RDBFL0_type *) 0xF0064DA2U)	/* Read Data and Bit Flip Register 1 */
#define MC61_RDBFL2	(*( MC0_RDBFL0_type *) 0xF0064DA4U)	/* Read Data and Bit Flip Register 2 */
#define MC61_RDBFL3	(*( MC0_RDBFL0_type *) 0xF0064DA6U)	/* Read Data and Bit Flip Register 3 */
#define MC61_RDBFL4	(*( MC0_RDBFL0_type *) 0xF0064DA8U)	/* Read Data and Bit Flip Register 4 */
#define MC61_RDBFL5	(*( MC0_RDBFL0_type *) 0xF0064DAAU)	/* Read Data and Bit Flip Register 5 */
#define MC61_RDBFL6	(*( MC0_RDBFL0_type *) 0xF0064DACU)	/* Read Data and Bit Flip Register 6 */
#define MC61_RDBFL7	(*( MC0_RDBFL0_type *) 0xF0064DAEU)	/* Read Data and Bit Flip Register 7 */
#define MC61_RDBFL8	(*( MC0_RDBFL0_type *) 0xF0064DB0U)	/* Read Data and Bit Flip Register 8 */
#define MC61_RDBFL9	(*( MC0_RDBFL0_type *) 0xF0064DB2U)	/* Read Data and Bit Flip Register 9 */
#define MC61_RDBFL10	(*( MC0_RDBFL0_type *) 0xF0064DB4U)	/* Read Data and Bit Flip Register 10 */
#define MC61_RDBFL11	(*( MC0_RDBFL0_type *) 0xF0064DB6U)	/* Read Data and Bit Flip Register 11 */
#define MC61_RDBFL12	(*( MC0_RDBFL0_type *) 0xF0064DB8U)	/* Read Data and Bit Flip Register 12 */
#define MC61_RDBFL13	(*( MC0_RDBFL0_type *) 0xF0064DBAU)	/* Read Data and Bit Flip Register 13 */
#define MC61_RDBFL14	(*( MC0_RDBFL0_type *) 0xF0064DBCU)	/* Read Data and Bit Flip Register 14 */
#define MC61_RDBFL15	(*( MC0_RDBFL0_type *) 0xF0064DBEU)	/* Read Data and Bit Flip Register 15 */
#define MC61_RDBFL16	(*( MC0_RDBFL0_type *) 0xF0064DC0U)	/* Read Data and Bit Flip Register 16 */
#define MC61_RDBFL17	(*( MC0_RDBFL0_type *) 0xF0064DC2U)	/* Read Data and Bit Flip Register 17 */
#define MC61_RDBFL18	(*( MC0_RDBFL0_type *) 0xF0064DC4U)	/* Read Data and Bit Flip Register 18 */
#define MC61_RDBFL19	(*( MC0_RDBFL0_type *) 0xF0064DC6U)	/* Read Data and Bit Flip Register 19 */
#define MC61_RDBFL20	(*( MC0_RDBFL0_type *) 0xF0064DC8U)	/* Read Data and Bit Flip Register 20 */
#define MC61_RDBFL21	(*( MC0_RDBFL0_type *) 0xF0064DCAU)	/* Read Data and Bit Flip Register 21 */
#define MC61_RDBFL22	(*( MC0_RDBFL0_type *) 0xF0064DCCU)	/* Read Data and Bit Flip Register 22 */
#define MC61_RDBFL23	(*( MC0_RDBFL0_type *) 0xF0064DCEU)	/* Read Data and Bit Flip Register 23 */
#define MC61_RDBFL24	(*( MC0_RDBFL0_type *) 0xF0064DD0U)	/* Read Data and Bit Flip Register 24 */
#define MC61_RDBFL25	(*( MC0_RDBFL0_type *) 0xF0064DD2U)	/* Read Data and Bit Flip Register 25 */
#define MC61_RDBFL26	(*( MC0_RDBFL0_type *) 0xF0064DD4U)	/* Read Data and Bit Flip Register 26 */
#define MC61_RDBFL27	(*( MC0_RDBFL0_type *) 0xF0064DD6U)	/* Read Data and Bit Flip Register 27 */
#define MC61_RDBFL28	(*( MC0_RDBFL0_type *) 0xF0064DD8U)	/* Read Data and Bit Flip Register 28 */
#define MC61_RDBFL29	(*( MC0_RDBFL0_type *) 0xF0064DDAU)	/* Read Data and Bit Flip Register 29 */
#define MC61_RDBFL30	(*( MC0_RDBFL0_type *) 0xF0064DDCU)	/* Read Data and Bit Flip Register 30 */
#define MC61_RDBFL31	(*( MC0_RDBFL0_type *) 0xF0064DDEU)	/* Read Data and Bit Flip Register 31 */
#define MC61_RDBFL32	(*( MC0_RDBFL0_type *) 0xF0064DE0U)	/* Read Data and Bit Flip Register 32 */
#define MC61_RDBFL33	(*( MC0_RDBFL0_type *) 0xF0064DE2U)	/* Read Data and Bit Flip Register 33 */
#define MC61_RDBFL34	(*( MC0_RDBFL0_type *) 0xF0064DE4U)	/* Read Data and Bit Flip Register 34 */
#define MC61_RDBFL35	(*( MC0_RDBFL0_type *) 0xF0064DE6U)	/* Read Data and Bit Flip Register 35 */
#define MC61_RDBFL36	(*( MC0_RDBFL0_type *) 0xF0064DE8U)	/* Read Data and Bit Flip Register 36 */
#define MC61_RDBFL37	(*( MC0_RDBFL0_type *) 0xF0064DEAU)	/* Read Data and Bit Flip Register 37 */
#define MC61_RDBFL38	(*( MC0_RDBFL0_type *) 0xF0064DECU)	/* Read Data and Bit Flip Register 38 */
#define MC61_RDBFL39	(*( MC0_RDBFL0_type *) 0xF0064DEEU)	/* Read Data and Bit Flip Register 39 */
#define MC62_RDBFL0	(*( MC0_RDBFL0_type *) 0xF0064EA0U)	/* Read Data and Bit Flip Register 0 */
#define MC62_RDBFL1	(*( MC0_RDBFL0_type *) 0xF0064EA2U)	/* Read Data and Bit Flip Register 1 */
#define MC62_RDBFL2	(*( MC0_RDBFL0_type *) 0xF0064EA4U)	/* Read Data and Bit Flip Register 2 */
#define MC62_RDBFL3	(*( MC0_RDBFL0_type *) 0xF0064EA6U)	/* Read Data and Bit Flip Register 3 */
#define MC62_RDBFL4	(*( MC0_RDBFL0_type *) 0xF0064EA8U)	/* Read Data and Bit Flip Register 4 */
#define MC62_RDBFL5	(*( MC0_RDBFL0_type *) 0xF0064EAAU)	/* Read Data and Bit Flip Register 5 */
#define MC62_RDBFL6	(*( MC0_RDBFL0_type *) 0xF0064EACU)	/* Read Data and Bit Flip Register 6 */
#define MC62_RDBFL7	(*( MC0_RDBFL0_type *) 0xF0064EAEU)	/* Read Data and Bit Flip Register 7 */
#define MC62_RDBFL8	(*( MC0_RDBFL0_type *) 0xF0064EB0U)	/* Read Data and Bit Flip Register 8 */
#define MC62_RDBFL9	(*( MC0_RDBFL0_type *) 0xF0064EB2U)	/* Read Data and Bit Flip Register 9 */
#define MC62_RDBFL10	(*( MC0_RDBFL0_type *) 0xF0064EB4U)	/* Read Data and Bit Flip Register 10 */
#define MC62_RDBFL11	(*( MC0_RDBFL0_type *) 0xF0064EB6U)	/* Read Data and Bit Flip Register 11 */
#define MC62_RDBFL12	(*( MC0_RDBFL0_type *) 0xF0064EB8U)	/* Read Data and Bit Flip Register 12 */
#define MC62_RDBFL13	(*( MC0_RDBFL0_type *) 0xF0064EBAU)	/* Read Data and Bit Flip Register 13 */
#define MC62_RDBFL14	(*( MC0_RDBFL0_type *) 0xF0064EBCU)	/* Read Data and Bit Flip Register 14 */
#define MC62_RDBFL15	(*( MC0_RDBFL0_type *) 0xF0064EBEU)	/* Read Data and Bit Flip Register 15 */
#define MC62_RDBFL16	(*( MC0_RDBFL0_type *) 0xF0064EC0U)	/* Read Data and Bit Flip Register 16 */
#define MC62_RDBFL17	(*( MC0_RDBFL0_type *) 0xF0064EC2U)	/* Read Data and Bit Flip Register 17 */
#define MC62_RDBFL18	(*( MC0_RDBFL0_type *) 0xF0064EC4U)	/* Read Data and Bit Flip Register 18 */
#define MC62_RDBFL19	(*( MC0_RDBFL0_type *) 0xF0064EC6U)	/* Read Data and Bit Flip Register 19 */
#define MC62_RDBFL20	(*( MC0_RDBFL0_type *) 0xF0064EC8U)	/* Read Data and Bit Flip Register 20 */
#define MC62_RDBFL21	(*( MC0_RDBFL0_type *) 0xF0064ECAU)	/* Read Data and Bit Flip Register 21 */
#define MC62_RDBFL22	(*( MC0_RDBFL0_type *) 0xF0064ECCU)	/* Read Data and Bit Flip Register 22 */
#define MC62_RDBFL23	(*( MC0_RDBFL0_type *) 0xF0064ECEU)	/* Read Data and Bit Flip Register 23 */
#define MC62_RDBFL24	(*( MC0_RDBFL0_type *) 0xF0064ED0U)	/* Read Data and Bit Flip Register 24 */
#define MC62_RDBFL25	(*( MC0_RDBFL0_type *) 0xF0064ED2U)	/* Read Data and Bit Flip Register 25 */
#define MC62_RDBFL26	(*( MC0_RDBFL0_type *) 0xF0064ED4U)	/* Read Data and Bit Flip Register 26 */
#define MC62_RDBFL27	(*( MC0_RDBFL0_type *) 0xF0064ED6U)	/* Read Data and Bit Flip Register 27 */
#define MC62_RDBFL28	(*( MC0_RDBFL0_type *) 0xF0064ED8U)	/* Read Data and Bit Flip Register 28 */
#define MC62_RDBFL29	(*( MC0_RDBFL0_type *) 0xF0064EDAU)	/* Read Data and Bit Flip Register 29 */
#define MC62_RDBFL30	(*( MC0_RDBFL0_type *) 0xF0064EDCU)	/* Read Data and Bit Flip Register 30 */
#define MC62_RDBFL31	(*( MC0_RDBFL0_type *) 0xF0064EDEU)	/* Read Data and Bit Flip Register 31 */
#define MC62_RDBFL32	(*( MC0_RDBFL0_type *) 0xF0064EE0U)	/* Read Data and Bit Flip Register 32 */
#define MC62_RDBFL33	(*( MC0_RDBFL0_type *) 0xF0064EE2U)	/* Read Data and Bit Flip Register 33 */
#define MC62_RDBFL34	(*( MC0_RDBFL0_type *) 0xF0064EE4U)	/* Read Data and Bit Flip Register 34 */
#define MC62_RDBFL35	(*( MC0_RDBFL0_type *) 0xF0064EE6U)	/* Read Data and Bit Flip Register 35 */
#define MC62_RDBFL36	(*( MC0_RDBFL0_type *) 0xF0064EE8U)	/* Read Data and Bit Flip Register 36 */
#define MC62_RDBFL37	(*( MC0_RDBFL0_type *) 0xF0064EEAU)	/* Read Data and Bit Flip Register 37 */
#define MC62_RDBFL38	(*( MC0_RDBFL0_type *) 0xF0064EECU)	/* Read Data and Bit Flip Register 38 */
#define MC62_RDBFL39	(*( MC0_RDBFL0_type *) 0xF0064EEEU)	/* Read Data and Bit Flip Register 39 */
#define MC63_RDBFL0	(*( MC0_RDBFL0_type *) 0xF0064FA0U)	/* Read Data and Bit Flip Register 0 */
#define MC63_RDBFL1	(*( MC0_RDBFL0_type *) 0xF0064FA2U)	/* Read Data and Bit Flip Register 1 */
#define MC63_RDBFL2	(*( MC0_RDBFL0_type *) 0xF0064FA4U)	/* Read Data and Bit Flip Register 2 */
#define MC63_RDBFL3	(*( MC0_RDBFL0_type *) 0xF0064FA6U)	/* Read Data and Bit Flip Register 3 */
#define MC63_RDBFL4	(*( MC0_RDBFL0_type *) 0xF0064FA8U)	/* Read Data and Bit Flip Register 4 */
#define MC63_RDBFL5	(*( MC0_RDBFL0_type *) 0xF0064FAAU)	/* Read Data and Bit Flip Register 5 */
#define MC63_RDBFL6	(*( MC0_RDBFL0_type *) 0xF0064FACU)	/* Read Data and Bit Flip Register 6 */
#define MC63_RDBFL7	(*( MC0_RDBFL0_type *) 0xF0064FAEU)	/* Read Data and Bit Flip Register 7 */
#define MC63_RDBFL8	(*( MC0_RDBFL0_type *) 0xF0064FB0U)	/* Read Data and Bit Flip Register 8 */
#define MC63_RDBFL9	(*( MC0_RDBFL0_type *) 0xF0064FB2U)	/* Read Data and Bit Flip Register 9 */
#define MC63_RDBFL10	(*( MC0_RDBFL0_type *) 0xF0064FB4U)	/* Read Data and Bit Flip Register 10 */
#define MC63_RDBFL11	(*( MC0_RDBFL0_type *) 0xF0064FB6U)	/* Read Data and Bit Flip Register 11 */
#define MC63_RDBFL12	(*( MC0_RDBFL0_type *) 0xF0064FB8U)	/* Read Data and Bit Flip Register 12 */
#define MC63_RDBFL13	(*( MC0_RDBFL0_type *) 0xF0064FBAU)	/* Read Data and Bit Flip Register 13 */
#define MC63_RDBFL14	(*( MC0_RDBFL0_type *) 0xF0064FBCU)	/* Read Data and Bit Flip Register 14 */
#define MC63_RDBFL15	(*( MC0_RDBFL0_type *) 0xF0064FBEU)	/* Read Data and Bit Flip Register 15 */
#define MC63_RDBFL16	(*( MC0_RDBFL0_type *) 0xF0064FC0U)	/* Read Data and Bit Flip Register 16 */
#define MC63_RDBFL17	(*( MC0_RDBFL0_type *) 0xF0064FC2U)	/* Read Data and Bit Flip Register 17 */
#define MC63_RDBFL18	(*( MC0_RDBFL0_type *) 0xF0064FC4U)	/* Read Data and Bit Flip Register 18 */
#define MC63_RDBFL19	(*( MC0_RDBFL0_type *) 0xF0064FC6U)	/* Read Data and Bit Flip Register 19 */
#define MC63_RDBFL20	(*( MC0_RDBFL0_type *) 0xF0064FC8U)	/* Read Data and Bit Flip Register 20 */
#define MC63_RDBFL21	(*( MC0_RDBFL0_type *) 0xF0064FCAU)	/* Read Data and Bit Flip Register 21 */
#define MC63_RDBFL22	(*( MC0_RDBFL0_type *) 0xF0064FCCU)	/* Read Data and Bit Flip Register 22 */
#define MC63_RDBFL23	(*( MC0_RDBFL0_type *) 0xF0064FCEU)	/* Read Data and Bit Flip Register 23 */
#define MC63_RDBFL24	(*( MC0_RDBFL0_type *) 0xF0064FD0U)	/* Read Data and Bit Flip Register 24 */
#define MC63_RDBFL25	(*( MC0_RDBFL0_type *) 0xF0064FD2U)	/* Read Data and Bit Flip Register 25 */
#define MC63_RDBFL26	(*( MC0_RDBFL0_type *) 0xF0064FD4U)	/* Read Data and Bit Flip Register 26 */
#define MC63_RDBFL27	(*( MC0_RDBFL0_type *) 0xF0064FD6U)	/* Read Data and Bit Flip Register 27 */
#define MC63_RDBFL28	(*( MC0_RDBFL0_type *) 0xF0064FD8U)	/* Read Data and Bit Flip Register 28 */
#define MC63_RDBFL29	(*( MC0_RDBFL0_type *) 0xF0064FDAU)	/* Read Data and Bit Flip Register 29 */
#define MC63_RDBFL30	(*( MC0_RDBFL0_type *) 0xF0064FDCU)	/* Read Data and Bit Flip Register 30 */
#define MC63_RDBFL31	(*( MC0_RDBFL0_type *) 0xF0064FDEU)	/* Read Data and Bit Flip Register 31 */
#define MC63_RDBFL32	(*( MC0_RDBFL0_type *) 0xF0064FE0U)	/* Read Data and Bit Flip Register 32 */
#define MC63_RDBFL33	(*( MC0_RDBFL0_type *) 0xF0064FE2U)	/* Read Data and Bit Flip Register 33 */
#define MC63_RDBFL34	(*( MC0_RDBFL0_type *) 0xF0064FE4U)	/* Read Data and Bit Flip Register 34 */
#define MC63_RDBFL35	(*( MC0_RDBFL0_type *) 0xF0064FE6U)	/* Read Data and Bit Flip Register 35 */
#define MC63_RDBFL36	(*( MC0_RDBFL0_type *) 0xF0064FE8U)	/* Read Data and Bit Flip Register 36 */
#define MC63_RDBFL37	(*( MC0_RDBFL0_type *) 0xF0064FEAU)	/* Read Data and Bit Flip Register 37 */
#define MC63_RDBFL38	(*( MC0_RDBFL0_type *) 0xF0064FECU)	/* Read Data and Bit Flip Register 38 */
#define MC63_RDBFL39	(*( MC0_RDBFL0_type *) 0xF0064FEEU)	/* Read Data and Bit Flip Register 39 */
#define MC64_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00650A0U)	/* Read Data and Bit Flip Register 0 */
#define MC64_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00650A2U)	/* Read Data and Bit Flip Register 1 */
#define MC64_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00650A4U)	/* Read Data and Bit Flip Register 2 */
#define MC64_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00650A6U)	/* Read Data and Bit Flip Register 3 */
#define MC64_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00650A8U)	/* Read Data and Bit Flip Register 4 */
#define MC64_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00650AAU)	/* Read Data and Bit Flip Register 5 */
#define MC64_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00650ACU)	/* Read Data and Bit Flip Register 6 */
#define MC64_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00650AEU)	/* Read Data and Bit Flip Register 7 */
#define MC64_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00650B0U)	/* Read Data and Bit Flip Register 8 */
#define MC64_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00650B2U)	/* Read Data and Bit Flip Register 9 */
#define MC64_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00650B4U)	/* Read Data and Bit Flip Register 10 */
#define MC64_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00650B6U)	/* Read Data and Bit Flip Register 11 */
#define MC64_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00650B8U)	/* Read Data and Bit Flip Register 12 */
#define MC64_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00650BAU)	/* Read Data and Bit Flip Register 13 */
#define MC64_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00650BCU)	/* Read Data and Bit Flip Register 14 */
#define MC64_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00650BEU)	/* Read Data and Bit Flip Register 15 */
#define MC64_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00650C0U)	/* Read Data and Bit Flip Register 16 */
#define MC64_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00650C2U)	/* Read Data and Bit Flip Register 17 */
#define MC64_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00650C4U)	/* Read Data and Bit Flip Register 18 */
#define MC64_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00650C6U)	/* Read Data and Bit Flip Register 19 */
#define MC64_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00650C8U)	/* Read Data and Bit Flip Register 20 */
#define MC64_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00650CAU)	/* Read Data and Bit Flip Register 21 */
#define MC64_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00650CCU)	/* Read Data and Bit Flip Register 22 */
#define MC64_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00650CEU)	/* Read Data and Bit Flip Register 23 */
#define MC64_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00650D0U)	/* Read Data and Bit Flip Register 24 */
#define MC64_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00650D2U)	/* Read Data and Bit Flip Register 25 */
#define MC64_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00650D4U)	/* Read Data and Bit Flip Register 26 */
#define MC64_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00650D6U)	/* Read Data and Bit Flip Register 27 */
#define MC64_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00650D8U)	/* Read Data and Bit Flip Register 28 */
#define MC64_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00650DAU)	/* Read Data and Bit Flip Register 29 */
#define MC64_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00650DCU)	/* Read Data and Bit Flip Register 30 */
#define MC64_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00650DEU)	/* Read Data and Bit Flip Register 31 */
#define MC64_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00650E0U)	/* Read Data and Bit Flip Register 32 */
#define MC64_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00650E2U)	/* Read Data and Bit Flip Register 33 */
#define MC64_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00650E4U)	/* Read Data and Bit Flip Register 34 */
#define MC64_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00650E6U)	/* Read Data and Bit Flip Register 35 */
#define MC64_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00650E8U)	/* Read Data and Bit Flip Register 36 */
#define MC64_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00650EAU)	/* Read Data and Bit Flip Register 37 */
#define MC64_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00650ECU)	/* Read Data and Bit Flip Register 38 */
#define MC64_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00650EEU)	/* Read Data and Bit Flip Register 39 */
#define MC65_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00651A0U)	/* Read Data and Bit Flip Register 0 */
#define MC65_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00651A2U)	/* Read Data and Bit Flip Register 1 */
#define MC65_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00651A4U)	/* Read Data and Bit Flip Register 2 */
#define MC65_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00651A6U)	/* Read Data and Bit Flip Register 3 */
#define MC65_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00651A8U)	/* Read Data and Bit Flip Register 4 */
#define MC65_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00651AAU)	/* Read Data and Bit Flip Register 5 */
#define MC65_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00651ACU)	/* Read Data and Bit Flip Register 6 */
#define MC65_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00651AEU)	/* Read Data and Bit Flip Register 7 */
#define MC65_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00651B0U)	/* Read Data and Bit Flip Register 8 */
#define MC65_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00651B2U)	/* Read Data and Bit Flip Register 9 */
#define MC65_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00651B4U)	/* Read Data and Bit Flip Register 10 */
#define MC65_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00651B6U)	/* Read Data and Bit Flip Register 11 */
#define MC65_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00651B8U)	/* Read Data and Bit Flip Register 12 */
#define MC65_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00651BAU)	/* Read Data and Bit Flip Register 13 */
#define MC65_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00651BCU)	/* Read Data and Bit Flip Register 14 */
#define MC65_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00651BEU)	/* Read Data and Bit Flip Register 15 */
#define MC65_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00651C0U)	/* Read Data and Bit Flip Register 16 */
#define MC65_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00651C2U)	/* Read Data and Bit Flip Register 17 */
#define MC65_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00651C4U)	/* Read Data and Bit Flip Register 18 */
#define MC65_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00651C6U)	/* Read Data and Bit Flip Register 19 */
#define MC65_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00651C8U)	/* Read Data and Bit Flip Register 20 */
#define MC65_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00651CAU)	/* Read Data and Bit Flip Register 21 */
#define MC65_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00651CCU)	/* Read Data and Bit Flip Register 22 */
#define MC65_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00651CEU)	/* Read Data and Bit Flip Register 23 */
#define MC65_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00651D0U)	/* Read Data and Bit Flip Register 24 */
#define MC65_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00651D2U)	/* Read Data and Bit Flip Register 25 */
#define MC65_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00651D4U)	/* Read Data and Bit Flip Register 26 */
#define MC65_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00651D6U)	/* Read Data and Bit Flip Register 27 */
#define MC65_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00651D8U)	/* Read Data and Bit Flip Register 28 */
#define MC65_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00651DAU)	/* Read Data and Bit Flip Register 29 */
#define MC65_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00651DCU)	/* Read Data and Bit Flip Register 30 */
#define MC65_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00651DEU)	/* Read Data and Bit Flip Register 31 */
#define MC65_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00651E0U)	/* Read Data and Bit Flip Register 32 */
#define MC65_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00651E2U)	/* Read Data and Bit Flip Register 33 */
#define MC65_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00651E4U)	/* Read Data and Bit Flip Register 34 */
#define MC65_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00651E6U)	/* Read Data and Bit Flip Register 35 */
#define MC65_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00651E8U)	/* Read Data and Bit Flip Register 36 */
#define MC65_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00651EAU)	/* Read Data and Bit Flip Register 37 */
#define MC65_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00651ECU)	/* Read Data and Bit Flip Register 38 */
#define MC65_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00651EEU)	/* Read Data and Bit Flip Register 39 */
#define MC66_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00652A0U)	/* Read Data and Bit Flip Register 0 */
#define MC66_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00652A2U)	/* Read Data and Bit Flip Register 1 */
#define MC66_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00652A4U)	/* Read Data and Bit Flip Register 2 */
#define MC66_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00652A6U)	/* Read Data and Bit Flip Register 3 */
#define MC66_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00652A8U)	/* Read Data and Bit Flip Register 4 */
#define MC66_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00652AAU)	/* Read Data and Bit Flip Register 5 */
#define MC66_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00652ACU)	/* Read Data and Bit Flip Register 6 */
#define MC66_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00652AEU)	/* Read Data and Bit Flip Register 7 */
#define MC66_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00652B0U)	/* Read Data and Bit Flip Register 8 */
#define MC66_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00652B2U)	/* Read Data and Bit Flip Register 9 */
#define MC66_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00652B4U)	/* Read Data and Bit Flip Register 10 */
#define MC66_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00652B6U)	/* Read Data and Bit Flip Register 11 */
#define MC66_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00652B8U)	/* Read Data and Bit Flip Register 12 */
#define MC66_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00652BAU)	/* Read Data and Bit Flip Register 13 */
#define MC66_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00652BCU)	/* Read Data and Bit Flip Register 14 */
#define MC66_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00652BEU)	/* Read Data and Bit Flip Register 15 */
#define MC66_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00652C0U)	/* Read Data and Bit Flip Register 16 */
#define MC66_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00652C2U)	/* Read Data and Bit Flip Register 17 */
#define MC66_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00652C4U)	/* Read Data and Bit Flip Register 18 */
#define MC66_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00652C6U)	/* Read Data and Bit Flip Register 19 */
#define MC66_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00652C8U)	/* Read Data and Bit Flip Register 20 */
#define MC66_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00652CAU)	/* Read Data and Bit Flip Register 21 */
#define MC66_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00652CCU)	/* Read Data and Bit Flip Register 22 */
#define MC66_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00652CEU)	/* Read Data and Bit Flip Register 23 */
#define MC66_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00652D0U)	/* Read Data and Bit Flip Register 24 */
#define MC66_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00652D2U)	/* Read Data and Bit Flip Register 25 */
#define MC66_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00652D4U)	/* Read Data and Bit Flip Register 26 */
#define MC66_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00652D6U)	/* Read Data and Bit Flip Register 27 */
#define MC66_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00652D8U)	/* Read Data and Bit Flip Register 28 */
#define MC66_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00652DAU)	/* Read Data and Bit Flip Register 29 */
#define MC66_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00652DCU)	/* Read Data and Bit Flip Register 30 */
#define MC66_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00652DEU)	/* Read Data and Bit Flip Register 31 */
#define MC66_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00652E0U)	/* Read Data and Bit Flip Register 32 */
#define MC66_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00652E2U)	/* Read Data and Bit Flip Register 33 */
#define MC66_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00652E4U)	/* Read Data and Bit Flip Register 34 */
#define MC66_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00652E6U)	/* Read Data and Bit Flip Register 35 */
#define MC66_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00652E8U)	/* Read Data and Bit Flip Register 36 */
#define MC66_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00652EAU)	/* Read Data and Bit Flip Register 37 */
#define MC66_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00652ECU)	/* Read Data and Bit Flip Register 38 */
#define MC66_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00652EEU)	/* Read Data and Bit Flip Register 39 */
#define MC67_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00653A0U)	/* Read Data and Bit Flip Register 0 */
#define MC67_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00653A2U)	/* Read Data and Bit Flip Register 1 */
#define MC67_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00653A4U)	/* Read Data and Bit Flip Register 2 */
#define MC67_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00653A6U)	/* Read Data and Bit Flip Register 3 */
#define MC67_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00653A8U)	/* Read Data and Bit Flip Register 4 */
#define MC67_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00653AAU)	/* Read Data and Bit Flip Register 5 */
#define MC67_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00653ACU)	/* Read Data and Bit Flip Register 6 */
#define MC67_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00653AEU)	/* Read Data and Bit Flip Register 7 */
#define MC67_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00653B0U)	/* Read Data and Bit Flip Register 8 */
#define MC67_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00653B2U)	/* Read Data and Bit Flip Register 9 */
#define MC67_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00653B4U)	/* Read Data and Bit Flip Register 10 */
#define MC67_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00653B6U)	/* Read Data and Bit Flip Register 11 */
#define MC67_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00653B8U)	/* Read Data and Bit Flip Register 12 */
#define MC67_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00653BAU)	/* Read Data and Bit Flip Register 13 */
#define MC67_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00653BCU)	/* Read Data and Bit Flip Register 14 */
#define MC67_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00653BEU)	/* Read Data and Bit Flip Register 15 */
#define MC67_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00653C0U)	/* Read Data and Bit Flip Register 16 */
#define MC67_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00653C2U)	/* Read Data and Bit Flip Register 17 */
#define MC67_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00653C4U)	/* Read Data and Bit Flip Register 18 */
#define MC67_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00653C6U)	/* Read Data and Bit Flip Register 19 */
#define MC67_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00653C8U)	/* Read Data and Bit Flip Register 20 */
#define MC67_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00653CAU)	/* Read Data and Bit Flip Register 21 */
#define MC67_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00653CCU)	/* Read Data and Bit Flip Register 22 */
#define MC67_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00653CEU)	/* Read Data and Bit Flip Register 23 */
#define MC67_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00653D0U)	/* Read Data and Bit Flip Register 24 */
#define MC67_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00653D2U)	/* Read Data and Bit Flip Register 25 */
#define MC67_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00653D4U)	/* Read Data and Bit Flip Register 26 */
#define MC67_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00653D6U)	/* Read Data and Bit Flip Register 27 */
#define MC67_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00653D8U)	/* Read Data and Bit Flip Register 28 */
#define MC67_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00653DAU)	/* Read Data and Bit Flip Register 29 */
#define MC67_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00653DCU)	/* Read Data and Bit Flip Register 30 */
#define MC67_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00653DEU)	/* Read Data and Bit Flip Register 31 */
#define MC67_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00653E0U)	/* Read Data and Bit Flip Register 32 */
#define MC67_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00653E2U)	/* Read Data and Bit Flip Register 33 */
#define MC67_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00653E4U)	/* Read Data and Bit Flip Register 34 */
#define MC67_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00653E6U)	/* Read Data and Bit Flip Register 35 */
#define MC67_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00653E8U)	/* Read Data and Bit Flip Register 36 */
#define MC67_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00653EAU)	/* Read Data and Bit Flip Register 37 */
#define MC67_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00653ECU)	/* Read Data and Bit Flip Register 38 */
#define MC67_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00653EEU)	/* Read Data and Bit Flip Register 39 */
#define MC68_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00654A0U)	/* Read Data and Bit Flip Register 0 */
#define MC68_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00654A2U)	/* Read Data and Bit Flip Register 1 */
#define MC68_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00654A4U)	/* Read Data and Bit Flip Register 2 */
#define MC68_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00654A6U)	/* Read Data and Bit Flip Register 3 */
#define MC68_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00654A8U)	/* Read Data and Bit Flip Register 4 */
#define MC68_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00654AAU)	/* Read Data and Bit Flip Register 5 */
#define MC68_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00654ACU)	/* Read Data and Bit Flip Register 6 */
#define MC68_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00654AEU)	/* Read Data and Bit Flip Register 7 */
#define MC68_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00654B0U)	/* Read Data and Bit Flip Register 8 */
#define MC68_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00654B2U)	/* Read Data and Bit Flip Register 9 */
#define MC68_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00654B4U)	/* Read Data and Bit Flip Register 10 */
#define MC68_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00654B6U)	/* Read Data and Bit Flip Register 11 */
#define MC68_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00654B8U)	/* Read Data and Bit Flip Register 12 */
#define MC68_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00654BAU)	/* Read Data and Bit Flip Register 13 */
#define MC68_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00654BCU)	/* Read Data and Bit Flip Register 14 */
#define MC68_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00654BEU)	/* Read Data and Bit Flip Register 15 */
#define MC68_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00654C0U)	/* Read Data and Bit Flip Register 16 */
#define MC68_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00654C2U)	/* Read Data and Bit Flip Register 17 */
#define MC68_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00654C4U)	/* Read Data and Bit Flip Register 18 */
#define MC68_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00654C6U)	/* Read Data and Bit Flip Register 19 */
#define MC68_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00654C8U)	/* Read Data and Bit Flip Register 20 */
#define MC68_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00654CAU)	/* Read Data and Bit Flip Register 21 */
#define MC68_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00654CCU)	/* Read Data and Bit Flip Register 22 */
#define MC68_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00654CEU)	/* Read Data and Bit Flip Register 23 */
#define MC68_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00654D0U)	/* Read Data and Bit Flip Register 24 */
#define MC68_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00654D2U)	/* Read Data and Bit Flip Register 25 */
#define MC68_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00654D4U)	/* Read Data and Bit Flip Register 26 */
#define MC68_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00654D6U)	/* Read Data and Bit Flip Register 27 */
#define MC68_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00654D8U)	/* Read Data and Bit Flip Register 28 */
#define MC68_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00654DAU)	/* Read Data and Bit Flip Register 29 */
#define MC68_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00654DCU)	/* Read Data and Bit Flip Register 30 */
#define MC68_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00654DEU)	/* Read Data and Bit Flip Register 31 */
#define MC68_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00654E0U)	/* Read Data and Bit Flip Register 32 */
#define MC68_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00654E2U)	/* Read Data and Bit Flip Register 33 */
#define MC68_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00654E4U)	/* Read Data and Bit Flip Register 34 */
#define MC68_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00654E6U)	/* Read Data and Bit Flip Register 35 */
#define MC68_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00654E8U)	/* Read Data and Bit Flip Register 36 */
#define MC68_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00654EAU)	/* Read Data and Bit Flip Register 37 */
#define MC68_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00654ECU)	/* Read Data and Bit Flip Register 38 */
#define MC68_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00654EEU)	/* Read Data and Bit Flip Register 39 */
#define MC69_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00655A0U)	/* Read Data and Bit Flip Register 0 */
#define MC69_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00655A2U)	/* Read Data and Bit Flip Register 1 */
#define MC69_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00655A4U)	/* Read Data and Bit Flip Register 2 */
#define MC69_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00655A6U)	/* Read Data and Bit Flip Register 3 */
#define MC69_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00655A8U)	/* Read Data and Bit Flip Register 4 */
#define MC69_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00655AAU)	/* Read Data and Bit Flip Register 5 */
#define MC69_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00655ACU)	/* Read Data and Bit Flip Register 6 */
#define MC69_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00655AEU)	/* Read Data and Bit Flip Register 7 */
#define MC69_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00655B0U)	/* Read Data and Bit Flip Register 8 */
#define MC69_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00655B2U)	/* Read Data and Bit Flip Register 9 */
#define MC69_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00655B4U)	/* Read Data and Bit Flip Register 10 */
#define MC69_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00655B6U)	/* Read Data and Bit Flip Register 11 */
#define MC69_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00655B8U)	/* Read Data and Bit Flip Register 12 */
#define MC69_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00655BAU)	/* Read Data and Bit Flip Register 13 */
#define MC69_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00655BCU)	/* Read Data and Bit Flip Register 14 */
#define MC69_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00655BEU)	/* Read Data and Bit Flip Register 15 */
#define MC69_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00655C0U)	/* Read Data and Bit Flip Register 16 */
#define MC69_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00655C2U)	/* Read Data and Bit Flip Register 17 */
#define MC69_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00655C4U)	/* Read Data and Bit Flip Register 18 */
#define MC69_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00655C6U)	/* Read Data and Bit Flip Register 19 */
#define MC69_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00655C8U)	/* Read Data and Bit Flip Register 20 */
#define MC69_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00655CAU)	/* Read Data and Bit Flip Register 21 */
#define MC69_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00655CCU)	/* Read Data and Bit Flip Register 22 */
#define MC69_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00655CEU)	/* Read Data and Bit Flip Register 23 */
#define MC69_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00655D0U)	/* Read Data and Bit Flip Register 24 */
#define MC69_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00655D2U)	/* Read Data and Bit Flip Register 25 */
#define MC69_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00655D4U)	/* Read Data and Bit Flip Register 26 */
#define MC69_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00655D6U)	/* Read Data and Bit Flip Register 27 */
#define MC69_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00655D8U)	/* Read Data and Bit Flip Register 28 */
#define MC69_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00655DAU)	/* Read Data and Bit Flip Register 29 */
#define MC69_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00655DCU)	/* Read Data and Bit Flip Register 30 */
#define MC69_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00655DEU)	/* Read Data and Bit Flip Register 31 */
#define MC69_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00655E0U)	/* Read Data and Bit Flip Register 32 */
#define MC69_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00655E2U)	/* Read Data and Bit Flip Register 33 */
#define MC69_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00655E4U)	/* Read Data and Bit Flip Register 34 */
#define MC69_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00655E6U)	/* Read Data and Bit Flip Register 35 */
#define MC69_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00655E8U)	/* Read Data and Bit Flip Register 36 */
#define MC69_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00655EAU)	/* Read Data and Bit Flip Register 37 */
#define MC69_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00655ECU)	/* Read Data and Bit Flip Register 38 */
#define MC69_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00655EEU)	/* Read Data and Bit Flip Register 39 */
#define MC70_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00656A0U)	/* Read Data and Bit Flip Register 0 */
#define MC70_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00656A2U)	/* Read Data and Bit Flip Register 1 */
#define MC70_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00656A4U)	/* Read Data and Bit Flip Register 2 */
#define MC70_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00656A6U)	/* Read Data and Bit Flip Register 3 */
#define MC70_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00656A8U)	/* Read Data and Bit Flip Register 4 */
#define MC70_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00656AAU)	/* Read Data and Bit Flip Register 5 */
#define MC70_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00656ACU)	/* Read Data and Bit Flip Register 6 */
#define MC70_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00656AEU)	/* Read Data and Bit Flip Register 7 */
#define MC70_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00656B0U)	/* Read Data and Bit Flip Register 8 */
#define MC70_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00656B2U)	/* Read Data and Bit Flip Register 9 */
#define MC70_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00656B4U)	/* Read Data and Bit Flip Register 10 */
#define MC70_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00656B6U)	/* Read Data and Bit Flip Register 11 */
#define MC70_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00656B8U)	/* Read Data and Bit Flip Register 12 */
#define MC70_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00656BAU)	/* Read Data and Bit Flip Register 13 */
#define MC70_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00656BCU)	/* Read Data and Bit Flip Register 14 */
#define MC70_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00656BEU)	/* Read Data and Bit Flip Register 15 */
#define MC70_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00656C0U)	/* Read Data and Bit Flip Register 16 */
#define MC70_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00656C2U)	/* Read Data and Bit Flip Register 17 */
#define MC70_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00656C4U)	/* Read Data and Bit Flip Register 18 */
#define MC70_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00656C6U)	/* Read Data and Bit Flip Register 19 */
#define MC70_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00656C8U)	/* Read Data and Bit Flip Register 20 */
#define MC70_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00656CAU)	/* Read Data and Bit Flip Register 21 */
#define MC70_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00656CCU)	/* Read Data and Bit Flip Register 22 */
#define MC70_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00656CEU)	/* Read Data and Bit Flip Register 23 */
#define MC70_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00656D0U)	/* Read Data and Bit Flip Register 24 */
#define MC70_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00656D2U)	/* Read Data and Bit Flip Register 25 */
#define MC70_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00656D4U)	/* Read Data and Bit Flip Register 26 */
#define MC70_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00656D6U)	/* Read Data and Bit Flip Register 27 */
#define MC70_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00656D8U)	/* Read Data and Bit Flip Register 28 */
#define MC70_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00656DAU)	/* Read Data and Bit Flip Register 29 */
#define MC70_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00656DCU)	/* Read Data and Bit Flip Register 30 */
#define MC70_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00656DEU)	/* Read Data and Bit Flip Register 31 */
#define MC70_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00656E0U)	/* Read Data and Bit Flip Register 32 */
#define MC70_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00656E2U)	/* Read Data and Bit Flip Register 33 */
#define MC70_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00656E4U)	/* Read Data and Bit Flip Register 34 */
#define MC70_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00656E6U)	/* Read Data and Bit Flip Register 35 */
#define MC70_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00656E8U)	/* Read Data and Bit Flip Register 36 */
#define MC70_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00656EAU)	/* Read Data and Bit Flip Register 37 */
#define MC70_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00656ECU)	/* Read Data and Bit Flip Register 38 */
#define MC70_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00656EEU)	/* Read Data and Bit Flip Register 39 */
#define MC71_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00657A0U)	/* Read Data and Bit Flip Register 0 */
#define MC71_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00657A2U)	/* Read Data and Bit Flip Register 1 */
#define MC71_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00657A4U)	/* Read Data and Bit Flip Register 2 */
#define MC71_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00657A6U)	/* Read Data and Bit Flip Register 3 */
#define MC71_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00657A8U)	/* Read Data and Bit Flip Register 4 */
#define MC71_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00657AAU)	/* Read Data and Bit Flip Register 5 */
#define MC71_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00657ACU)	/* Read Data and Bit Flip Register 6 */
#define MC71_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00657AEU)	/* Read Data and Bit Flip Register 7 */
#define MC71_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00657B0U)	/* Read Data and Bit Flip Register 8 */
#define MC71_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00657B2U)	/* Read Data and Bit Flip Register 9 */
#define MC71_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00657B4U)	/* Read Data and Bit Flip Register 10 */
#define MC71_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00657B6U)	/* Read Data and Bit Flip Register 11 */
#define MC71_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00657B8U)	/* Read Data and Bit Flip Register 12 */
#define MC71_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00657BAU)	/* Read Data and Bit Flip Register 13 */
#define MC71_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00657BCU)	/* Read Data and Bit Flip Register 14 */
#define MC71_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00657BEU)	/* Read Data and Bit Flip Register 15 */
#define MC71_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00657C0U)	/* Read Data and Bit Flip Register 16 */
#define MC71_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00657C2U)	/* Read Data and Bit Flip Register 17 */
#define MC71_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00657C4U)	/* Read Data and Bit Flip Register 18 */
#define MC71_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00657C6U)	/* Read Data and Bit Flip Register 19 */
#define MC71_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00657C8U)	/* Read Data and Bit Flip Register 20 */
#define MC71_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00657CAU)	/* Read Data and Bit Flip Register 21 */
#define MC71_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00657CCU)	/* Read Data and Bit Flip Register 22 */
#define MC71_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00657CEU)	/* Read Data and Bit Flip Register 23 */
#define MC71_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00657D0U)	/* Read Data and Bit Flip Register 24 */
#define MC71_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00657D2U)	/* Read Data and Bit Flip Register 25 */
#define MC71_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00657D4U)	/* Read Data and Bit Flip Register 26 */
#define MC71_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00657D6U)	/* Read Data and Bit Flip Register 27 */
#define MC71_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00657D8U)	/* Read Data and Bit Flip Register 28 */
#define MC71_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00657DAU)	/* Read Data and Bit Flip Register 29 */
#define MC71_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00657DCU)	/* Read Data and Bit Flip Register 30 */
#define MC71_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00657DEU)	/* Read Data and Bit Flip Register 31 */
#define MC71_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00657E0U)	/* Read Data and Bit Flip Register 32 */
#define MC71_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00657E2U)	/* Read Data and Bit Flip Register 33 */
#define MC71_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00657E4U)	/* Read Data and Bit Flip Register 34 */
#define MC71_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00657E6U)	/* Read Data and Bit Flip Register 35 */
#define MC71_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00657E8U)	/* Read Data and Bit Flip Register 36 */
#define MC71_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00657EAU)	/* Read Data and Bit Flip Register 37 */
#define MC71_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00657ECU)	/* Read Data and Bit Flip Register 38 */
#define MC71_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00657EEU)	/* Read Data and Bit Flip Register 39 */
#define MC72_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00658A0U)	/* Read Data and Bit Flip Register 0 */
#define MC72_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00658A2U)	/* Read Data and Bit Flip Register 1 */
#define MC72_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00658A4U)	/* Read Data and Bit Flip Register 2 */
#define MC72_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00658A6U)	/* Read Data and Bit Flip Register 3 */
#define MC72_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00658A8U)	/* Read Data and Bit Flip Register 4 */
#define MC72_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00658AAU)	/* Read Data and Bit Flip Register 5 */
#define MC72_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00658ACU)	/* Read Data and Bit Flip Register 6 */
#define MC72_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00658AEU)	/* Read Data and Bit Flip Register 7 */
#define MC72_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00658B0U)	/* Read Data and Bit Flip Register 8 */
#define MC72_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00658B2U)	/* Read Data and Bit Flip Register 9 */
#define MC72_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00658B4U)	/* Read Data and Bit Flip Register 10 */
#define MC72_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00658B6U)	/* Read Data and Bit Flip Register 11 */
#define MC72_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00658B8U)	/* Read Data and Bit Flip Register 12 */
#define MC72_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00658BAU)	/* Read Data and Bit Flip Register 13 */
#define MC72_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00658BCU)	/* Read Data and Bit Flip Register 14 */
#define MC72_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00658BEU)	/* Read Data and Bit Flip Register 15 */
#define MC72_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00658C0U)	/* Read Data and Bit Flip Register 16 */
#define MC72_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00658C2U)	/* Read Data and Bit Flip Register 17 */
#define MC72_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00658C4U)	/* Read Data and Bit Flip Register 18 */
#define MC72_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00658C6U)	/* Read Data and Bit Flip Register 19 */
#define MC72_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00658C8U)	/* Read Data and Bit Flip Register 20 */
#define MC72_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00658CAU)	/* Read Data and Bit Flip Register 21 */
#define MC72_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00658CCU)	/* Read Data and Bit Flip Register 22 */
#define MC72_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00658CEU)	/* Read Data and Bit Flip Register 23 */
#define MC72_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00658D0U)	/* Read Data and Bit Flip Register 24 */
#define MC72_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00658D2U)	/* Read Data and Bit Flip Register 25 */
#define MC72_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00658D4U)	/* Read Data and Bit Flip Register 26 */
#define MC72_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00658D6U)	/* Read Data and Bit Flip Register 27 */
#define MC72_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00658D8U)	/* Read Data and Bit Flip Register 28 */
#define MC72_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00658DAU)	/* Read Data and Bit Flip Register 29 */
#define MC72_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00658DCU)	/* Read Data and Bit Flip Register 30 */
#define MC72_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00658DEU)	/* Read Data and Bit Flip Register 31 */
#define MC72_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00658E0U)	/* Read Data and Bit Flip Register 32 */
#define MC72_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00658E2U)	/* Read Data and Bit Flip Register 33 */
#define MC72_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00658E4U)	/* Read Data and Bit Flip Register 34 */
#define MC72_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00658E6U)	/* Read Data and Bit Flip Register 35 */
#define MC72_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00658E8U)	/* Read Data and Bit Flip Register 36 */
#define MC72_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00658EAU)	/* Read Data and Bit Flip Register 37 */
#define MC72_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00658ECU)	/* Read Data and Bit Flip Register 38 */
#define MC72_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00658EEU)	/* Read Data and Bit Flip Register 39 */
#define MC73_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00659A0U)	/* Read Data and Bit Flip Register 0 */
#define MC73_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00659A2U)	/* Read Data and Bit Flip Register 1 */
#define MC73_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00659A4U)	/* Read Data and Bit Flip Register 2 */
#define MC73_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00659A6U)	/* Read Data and Bit Flip Register 3 */
#define MC73_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00659A8U)	/* Read Data and Bit Flip Register 4 */
#define MC73_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00659AAU)	/* Read Data and Bit Flip Register 5 */
#define MC73_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00659ACU)	/* Read Data and Bit Flip Register 6 */
#define MC73_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00659AEU)	/* Read Data and Bit Flip Register 7 */
#define MC73_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00659B0U)	/* Read Data and Bit Flip Register 8 */
#define MC73_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00659B2U)	/* Read Data and Bit Flip Register 9 */
#define MC73_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00659B4U)	/* Read Data and Bit Flip Register 10 */
#define MC73_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00659B6U)	/* Read Data and Bit Flip Register 11 */
#define MC73_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00659B8U)	/* Read Data and Bit Flip Register 12 */
#define MC73_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00659BAU)	/* Read Data and Bit Flip Register 13 */
#define MC73_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00659BCU)	/* Read Data and Bit Flip Register 14 */
#define MC73_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00659BEU)	/* Read Data and Bit Flip Register 15 */
#define MC73_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00659C0U)	/* Read Data and Bit Flip Register 16 */
#define MC73_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00659C2U)	/* Read Data and Bit Flip Register 17 */
#define MC73_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00659C4U)	/* Read Data and Bit Flip Register 18 */
#define MC73_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00659C6U)	/* Read Data and Bit Flip Register 19 */
#define MC73_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00659C8U)	/* Read Data and Bit Flip Register 20 */
#define MC73_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00659CAU)	/* Read Data and Bit Flip Register 21 */
#define MC73_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00659CCU)	/* Read Data and Bit Flip Register 22 */
#define MC73_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00659CEU)	/* Read Data and Bit Flip Register 23 */
#define MC73_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00659D0U)	/* Read Data and Bit Flip Register 24 */
#define MC73_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00659D2U)	/* Read Data and Bit Flip Register 25 */
#define MC73_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00659D4U)	/* Read Data and Bit Flip Register 26 */
#define MC73_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00659D6U)	/* Read Data and Bit Flip Register 27 */
#define MC73_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00659D8U)	/* Read Data and Bit Flip Register 28 */
#define MC73_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00659DAU)	/* Read Data and Bit Flip Register 29 */
#define MC73_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00659DCU)	/* Read Data and Bit Flip Register 30 */
#define MC73_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00659DEU)	/* Read Data and Bit Flip Register 31 */
#define MC73_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00659E0U)	/* Read Data and Bit Flip Register 32 */
#define MC73_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00659E2U)	/* Read Data and Bit Flip Register 33 */
#define MC73_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00659E4U)	/* Read Data and Bit Flip Register 34 */
#define MC73_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00659E6U)	/* Read Data and Bit Flip Register 35 */
#define MC73_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00659E8U)	/* Read Data and Bit Flip Register 36 */
#define MC73_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00659EAU)	/* Read Data and Bit Flip Register 37 */
#define MC73_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00659ECU)	/* Read Data and Bit Flip Register 38 */
#define MC73_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00659EEU)	/* Read Data and Bit Flip Register 39 */
#define MC74_RDBFL0	(*( MC0_RDBFL0_type *) 0xF0065AA0U)	/* Read Data and Bit Flip Register 0 */
#define MC74_RDBFL1	(*( MC0_RDBFL0_type *) 0xF0065AA2U)	/* Read Data and Bit Flip Register 1 */
#define MC74_RDBFL2	(*( MC0_RDBFL0_type *) 0xF0065AA4U)	/* Read Data and Bit Flip Register 2 */
#define MC74_RDBFL3	(*( MC0_RDBFL0_type *) 0xF0065AA6U)	/* Read Data and Bit Flip Register 3 */
#define MC74_RDBFL4	(*( MC0_RDBFL0_type *) 0xF0065AA8U)	/* Read Data and Bit Flip Register 4 */
#define MC74_RDBFL5	(*( MC0_RDBFL0_type *) 0xF0065AAAU)	/* Read Data and Bit Flip Register 5 */
#define MC74_RDBFL6	(*( MC0_RDBFL0_type *) 0xF0065AACU)	/* Read Data and Bit Flip Register 6 */
#define MC74_RDBFL7	(*( MC0_RDBFL0_type *) 0xF0065AAEU)	/* Read Data and Bit Flip Register 7 */
#define MC74_RDBFL8	(*( MC0_RDBFL0_type *) 0xF0065AB0U)	/* Read Data and Bit Flip Register 8 */
#define MC74_RDBFL9	(*( MC0_RDBFL0_type *) 0xF0065AB2U)	/* Read Data and Bit Flip Register 9 */
#define MC74_RDBFL10	(*( MC0_RDBFL0_type *) 0xF0065AB4U)	/* Read Data and Bit Flip Register 10 */
#define MC74_RDBFL11	(*( MC0_RDBFL0_type *) 0xF0065AB6U)	/* Read Data and Bit Flip Register 11 */
#define MC74_RDBFL12	(*( MC0_RDBFL0_type *) 0xF0065AB8U)	/* Read Data and Bit Flip Register 12 */
#define MC74_RDBFL13	(*( MC0_RDBFL0_type *) 0xF0065ABAU)	/* Read Data and Bit Flip Register 13 */
#define MC74_RDBFL14	(*( MC0_RDBFL0_type *) 0xF0065ABCU)	/* Read Data and Bit Flip Register 14 */
#define MC74_RDBFL15	(*( MC0_RDBFL0_type *) 0xF0065ABEU)	/* Read Data and Bit Flip Register 15 */
#define MC74_RDBFL16	(*( MC0_RDBFL0_type *) 0xF0065AC0U)	/* Read Data and Bit Flip Register 16 */
#define MC74_RDBFL17	(*( MC0_RDBFL0_type *) 0xF0065AC2U)	/* Read Data and Bit Flip Register 17 */
#define MC74_RDBFL18	(*( MC0_RDBFL0_type *) 0xF0065AC4U)	/* Read Data and Bit Flip Register 18 */
#define MC74_RDBFL19	(*( MC0_RDBFL0_type *) 0xF0065AC6U)	/* Read Data and Bit Flip Register 19 */
#define MC74_RDBFL20	(*( MC0_RDBFL0_type *) 0xF0065AC8U)	/* Read Data and Bit Flip Register 20 */
#define MC74_RDBFL21	(*( MC0_RDBFL0_type *) 0xF0065ACAU)	/* Read Data and Bit Flip Register 21 */
#define MC74_RDBFL22	(*( MC0_RDBFL0_type *) 0xF0065ACCU)	/* Read Data and Bit Flip Register 22 */
#define MC74_RDBFL23	(*( MC0_RDBFL0_type *) 0xF0065ACEU)	/* Read Data and Bit Flip Register 23 */
#define MC74_RDBFL24	(*( MC0_RDBFL0_type *) 0xF0065AD0U)	/* Read Data and Bit Flip Register 24 */
#define MC74_RDBFL25	(*( MC0_RDBFL0_type *) 0xF0065AD2U)	/* Read Data and Bit Flip Register 25 */
#define MC74_RDBFL26	(*( MC0_RDBFL0_type *) 0xF0065AD4U)	/* Read Data and Bit Flip Register 26 */
#define MC74_RDBFL27	(*( MC0_RDBFL0_type *) 0xF0065AD6U)	/* Read Data and Bit Flip Register 27 */
#define MC74_RDBFL28	(*( MC0_RDBFL0_type *) 0xF0065AD8U)	/* Read Data and Bit Flip Register 28 */
#define MC74_RDBFL29	(*( MC0_RDBFL0_type *) 0xF0065ADAU)	/* Read Data and Bit Flip Register 29 */
#define MC74_RDBFL30	(*( MC0_RDBFL0_type *) 0xF0065ADCU)	/* Read Data and Bit Flip Register 30 */
#define MC74_RDBFL31	(*( MC0_RDBFL0_type *) 0xF0065ADEU)	/* Read Data and Bit Flip Register 31 */
#define MC74_RDBFL32	(*( MC0_RDBFL0_type *) 0xF0065AE0U)	/* Read Data and Bit Flip Register 32 */
#define MC74_RDBFL33	(*( MC0_RDBFL0_type *) 0xF0065AE2U)	/* Read Data and Bit Flip Register 33 */
#define MC74_RDBFL34	(*( MC0_RDBFL0_type *) 0xF0065AE4U)	/* Read Data and Bit Flip Register 34 */
#define MC74_RDBFL35	(*( MC0_RDBFL0_type *) 0xF0065AE6U)	/* Read Data and Bit Flip Register 35 */
#define MC74_RDBFL36	(*( MC0_RDBFL0_type *) 0xF0065AE8U)	/* Read Data and Bit Flip Register 36 */
#define MC74_RDBFL37	(*( MC0_RDBFL0_type *) 0xF0065AEAU)	/* Read Data and Bit Flip Register 37 */
#define MC74_RDBFL38	(*( MC0_RDBFL0_type *) 0xF0065AECU)	/* Read Data and Bit Flip Register 38 */
#define MC74_RDBFL39	(*( MC0_RDBFL0_type *) 0xF0065AEEU)	/* Read Data and Bit Flip Register 39 */
#define MC75_RDBFL0	(*( MC0_RDBFL0_type *) 0xF0065BA0U)	/* Read Data and Bit Flip Register 0 */
#define MC75_RDBFL1	(*( MC0_RDBFL0_type *) 0xF0065BA2U)	/* Read Data and Bit Flip Register 1 */
#define MC75_RDBFL2	(*( MC0_RDBFL0_type *) 0xF0065BA4U)	/* Read Data and Bit Flip Register 2 */
#define MC75_RDBFL3	(*( MC0_RDBFL0_type *) 0xF0065BA6U)	/* Read Data and Bit Flip Register 3 */
#define MC75_RDBFL4	(*( MC0_RDBFL0_type *) 0xF0065BA8U)	/* Read Data and Bit Flip Register 4 */
#define MC75_RDBFL5	(*( MC0_RDBFL0_type *) 0xF0065BAAU)	/* Read Data and Bit Flip Register 5 */
#define MC75_RDBFL6	(*( MC0_RDBFL0_type *) 0xF0065BACU)	/* Read Data and Bit Flip Register 6 */
#define MC75_RDBFL7	(*( MC0_RDBFL0_type *) 0xF0065BAEU)	/* Read Data and Bit Flip Register 7 */
#define MC75_RDBFL8	(*( MC0_RDBFL0_type *) 0xF0065BB0U)	/* Read Data and Bit Flip Register 8 */
#define MC75_RDBFL9	(*( MC0_RDBFL0_type *) 0xF0065BB2U)	/* Read Data and Bit Flip Register 9 */
#define MC75_RDBFL10	(*( MC0_RDBFL0_type *) 0xF0065BB4U)	/* Read Data and Bit Flip Register 10 */
#define MC75_RDBFL11	(*( MC0_RDBFL0_type *) 0xF0065BB6U)	/* Read Data and Bit Flip Register 11 */
#define MC75_RDBFL12	(*( MC0_RDBFL0_type *) 0xF0065BB8U)	/* Read Data and Bit Flip Register 12 */
#define MC75_RDBFL13	(*( MC0_RDBFL0_type *) 0xF0065BBAU)	/* Read Data and Bit Flip Register 13 */
#define MC75_RDBFL14	(*( MC0_RDBFL0_type *) 0xF0065BBCU)	/* Read Data and Bit Flip Register 14 */
#define MC75_RDBFL15	(*( MC0_RDBFL0_type *) 0xF0065BBEU)	/* Read Data and Bit Flip Register 15 */
#define MC75_RDBFL16	(*( MC0_RDBFL0_type *) 0xF0065BC0U)	/* Read Data and Bit Flip Register 16 */
#define MC75_RDBFL17	(*( MC0_RDBFL0_type *) 0xF0065BC2U)	/* Read Data and Bit Flip Register 17 */
#define MC75_RDBFL18	(*( MC0_RDBFL0_type *) 0xF0065BC4U)	/* Read Data and Bit Flip Register 18 */
#define MC75_RDBFL19	(*( MC0_RDBFL0_type *) 0xF0065BC6U)	/* Read Data and Bit Flip Register 19 */
#define MC75_RDBFL20	(*( MC0_RDBFL0_type *) 0xF0065BC8U)	/* Read Data and Bit Flip Register 20 */
#define MC75_RDBFL21	(*( MC0_RDBFL0_type *) 0xF0065BCAU)	/* Read Data and Bit Flip Register 21 */
#define MC75_RDBFL22	(*( MC0_RDBFL0_type *) 0xF0065BCCU)	/* Read Data and Bit Flip Register 22 */
#define MC75_RDBFL23	(*( MC0_RDBFL0_type *) 0xF0065BCEU)	/* Read Data and Bit Flip Register 23 */
#define MC75_RDBFL24	(*( MC0_RDBFL0_type *) 0xF0065BD0U)	/* Read Data and Bit Flip Register 24 */
#define MC75_RDBFL25	(*( MC0_RDBFL0_type *) 0xF0065BD2U)	/* Read Data and Bit Flip Register 25 */
#define MC75_RDBFL26	(*( MC0_RDBFL0_type *) 0xF0065BD4U)	/* Read Data and Bit Flip Register 26 */
#define MC75_RDBFL27	(*( MC0_RDBFL0_type *) 0xF0065BD6U)	/* Read Data and Bit Flip Register 27 */
#define MC75_RDBFL28	(*( MC0_RDBFL0_type *) 0xF0065BD8U)	/* Read Data and Bit Flip Register 28 */
#define MC75_RDBFL29	(*( MC0_RDBFL0_type *) 0xF0065BDAU)	/* Read Data and Bit Flip Register 29 */
#define MC75_RDBFL30	(*( MC0_RDBFL0_type *) 0xF0065BDCU)	/* Read Data and Bit Flip Register 30 */
#define MC75_RDBFL31	(*( MC0_RDBFL0_type *) 0xF0065BDEU)	/* Read Data and Bit Flip Register 31 */
#define MC75_RDBFL32	(*( MC0_RDBFL0_type *) 0xF0065BE0U)	/* Read Data and Bit Flip Register 32 */
#define MC75_RDBFL33	(*( MC0_RDBFL0_type *) 0xF0065BE2U)	/* Read Data and Bit Flip Register 33 */
#define MC75_RDBFL34	(*( MC0_RDBFL0_type *) 0xF0065BE4U)	/* Read Data and Bit Flip Register 34 */
#define MC75_RDBFL35	(*( MC0_RDBFL0_type *) 0xF0065BE6U)	/* Read Data and Bit Flip Register 35 */
#define MC75_RDBFL36	(*( MC0_RDBFL0_type *) 0xF0065BE8U)	/* Read Data and Bit Flip Register 36 */
#define MC75_RDBFL37	(*( MC0_RDBFL0_type *) 0xF0065BEAU)	/* Read Data and Bit Flip Register 37 */
#define MC75_RDBFL38	(*( MC0_RDBFL0_type *) 0xF0065BECU)	/* Read Data and Bit Flip Register 38 */
#define MC75_RDBFL39	(*( MC0_RDBFL0_type *) 0xF0065BEEU)	/* Read Data and Bit Flip Register 39 */
#define MC76_RDBFL0	(*( MC0_RDBFL0_type *) 0xF0065CA0U)	/* Read Data and Bit Flip Register 0 */
#define MC76_RDBFL1	(*( MC0_RDBFL0_type *) 0xF0065CA2U)	/* Read Data and Bit Flip Register 1 */
#define MC76_RDBFL2	(*( MC0_RDBFL0_type *) 0xF0065CA4U)	/* Read Data and Bit Flip Register 2 */
#define MC76_RDBFL3	(*( MC0_RDBFL0_type *) 0xF0065CA6U)	/* Read Data and Bit Flip Register 3 */
#define MC76_RDBFL4	(*( MC0_RDBFL0_type *) 0xF0065CA8U)	/* Read Data and Bit Flip Register 4 */
#define MC76_RDBFL5	(*( MC0_RDBFL0_type *) 0xF0065CAAU)	/* Read Data and Bit Flip Register 5 */
#define MC76_RDBFL6	(*( MC0_RDBFL0_type *) 0xF0065CACU)	/* Read Data and Bit Flip Register 6 */
#define MC76_RDBFL7	(*( MC0_RDBFL0_type *) 0xF0065CAEU)	/* Read Data and Bit Flip Register 7 */
#define MC76_RDBFL8	(*( MC0_RDBFL0_type *) 0xF0065CB0U)	/* Read Data and Bit Flip Register 8 */
#define MC76_RDBFL9	(*( MC0_RDBFL0_type *) 0xF0065CB2U)	/* Read Data and Bit Flip Register 9 */
#define MC76_RDBFL10	(*( MC0_RDBFL0_type *) 0xF0065CB4U)	/* Read Data and Bit Flip Register 10 */
#define MC76_RDBFL11	(*( MC0_RDBFL0_type *) 0xF0065CB6U)	/* Read Data and Bit Flip Register 11 */
#define MC76_RDBFL12	(*( MC0_RDBFL0_type *) 0xF0065CB8U)	/* Read Data and Bit Flip Register 12 */
#define MC76_RDBFL13	(*( MC0_RDBFL0_type *) 0xF0065CBAU)	/* Read Data and Bit Flip Register 13 */
#define MC76_RDBFL14	(*( MC0_RDBFL0_type *) 0xF0065CBCU)	/* Read Data and Bit Flip Register 14 */
#define MC76_RDBFL15	(*( MC0_RDBFL0_type *) 0xF0065CBEU)	/* Read Data and Bit Flip Register 15 */
#define MC76_RDBFL16	(*( MC0_RDBFL0_type *) 0xF0065CC0U)	/* Read Data and Bit Flip Register 16 */
#define MC76_RDBFL17	(*( MC0_RDBFL0_type *) 0xF0065CC2U)	/* Read Data and Bit Flip Register 17 */
#define MC76_RDBFL18	(*( MC0_RDBFL0_type *) 0xF0065CC4U)	/* Read Data and Bit Flip Register 18 */
#define MC76_RDBFL19	(*( MC0_RDBFL0_type *) 0xF0065CC6U)	/* Read Data and Bit Flip Register 19 */
#define MC76_RDBFL20	(*( MC0_RDBFL0_type *) 0xF0065CC8U)	/* Read Data and Bit Flip Register 20 */
#define MC76_RDBFL21	(*( MC0_RDBFL0_type *) 0xF0065CCAU)	/* Read Data and Bit Flip Register 21 */
#define MC76_RDBFL22	(*( MC0_RDBFL0_type *) 0xF0065CCCU)	/* Read Data and Bit Flip Register 22 */
#define MC76_RDBFL23	(*( MC0_RDBFL0_type *) 0xF0065CCEU)	/* Read Data and Bit Flip Register 23 */
#define MC76_RDBFL24	(*( MC0_RDBFL0_type *) 0xF0065CD0U)	/* Read Data and Bit Flip Register 24 */
#define MC76_RDBFL25	(*( MC0_RDBFL0_type *) 0xF0065CD2U)	/* Read Data and Bit Flip Register 25 */
#define MC76_RDBFL26	(*( MC0_RDBFL0_type *) 0xF0065CD4U)	/* Read Data and Bit Flip Register 26 */
#define MC76_RDBFL27	(*( MC0_RDBFL0_type *) 0xF0065CD6U)	/* Read Data and Bit Flip Register 27 */
#define MC76_RDBFL28	(*( MC0_RDBFL0_type *) 0xF0065CD8U)	/* Read Data and Bit Flip Register 28 */
#define MC76_RDBFL29	(*( MC0_RDBFL0_type *) 0xF0065CDAU)	/* Read Data and Bit Flip Register 29 */
#define MC76_RDBFL30	(*( MC0_RDBFL0_type *) 0xF0065CDCU)	/* Read Data and Bit Flip Register 30 */
#define MC76_RDBFL31	(*( MC0_RDBFL0_type *) 0xF0065CDEU)	/* Read Data and Bit Flip Register 31 */
#define MC76_RDBFL32	(*( MC0_RDBFL0_type *) 0xF0065CE0U)	/* Read Data and Bit Flip Register 32 */
#define MC76_RDBFL33	(*( MC0_RDBFL0_type *) 0xF0065CE2U)	/* Read Data and Bit Flip Register 33 */
#define MC76_RDBFL34	(*( MC0_RDBFL0_type *) 0xF0065CE4U)	/* Read Data and Bit Flip Register 34 */
#define MC76_RDBFL35	(*( MC0_RDBFL0_type *) 0xF0065CE6U)	/* Read Data and Bit Flip Register 35 */
#define MC76_RDBFL36	(*( MC0_RDBFL0_type *) 0xF0065CE8U)	/* Read Data and Bit Flip Register 36 */
#define MC76_RDBFL37	(*( MC0_RDBFL0_type *) 0xF0065CEAU)	/* Read Data and Bit Flip Register 37 */
#define MC76_RDBFL38	(*( MC0_RDBFL0_type *) 0xF0065CECU)	/* Read Data and Bit Flip Register 38 */
#define MC76_RDBFL39	(*( MC0_RDBFL0_type *) 0xF0065CEEU)	/* Read Data and Bit Flip Register 39 */
#define MC77_RDBFL0	(*( MC0_RDBFL0_type *) 0xF0065DA0U)	/* Read Data and Bit Flip Register 0 */
#define MC77_RDBFL1	(*( MC0_RDBFL0_type *) 0xF0065DA2U)	/* Read Data and Bit Flip Register 1 */
#define MC77_RDBFL2	(*( MC0_RDBFL0_type *) 0xF0065DA4U)	/* Read Data and Bit Flip Register 2 */
#define MC77_RDBFL3	(*( MC0_RDBFL0_type *) 0xF0065DA6U)	/* Read Data and Bit Flip Register 3 */
#define MC77_RDBFL4	(*( MC0_RDBFL0_type *) 0xF0065DA8U)	/* Read Data and Bit Flip Register 4 */
#define MC77_RDBFL5	(*( MC0_RDBFL0_type *) 0xF0065DAAU)	/* Read Data and Bit Flip Register 5 */
#define MC77_RDBFL6	(*( MC0_RDBFL0_type *) 0xF0065DACU)	/* Read Data and Bit Flip Register 6 */
#define MC77_RDBFL7	(*( MC0_RDBFL0_type *) 0xF0065DAEU)	/* Read Data and Bit Flip Register 7 */
#define MC77_RDBFL8	(*( MC0_RDBFL0_type *) 0xF0065DB0U)	/* Read Data and Bit Flip Register 8 */
#define MC77_RDBFL9	(*( MC0_RDBFL0_type *) 0xF0065DB2U)	/* Read Data and Bit Flip Register 9 */
#define MC77_RDBFL10	(*( MC0_RDBFL0_type *) 0xF0065DB4U)	/* Read Data and Bit Flip Register 10 */
#define MC77_RDBFL11	(*( MC0_RDBFL0_type *) 0xF0065DB6U)	/* Read Data and Bit Flip Register 11 */
#define MC77_RDBFL12	(*( MC0_RDBFL0_type *) 0xF0065DB8U)	/* Read Data and Bit Flip Register 12 */
#define MC77_RDBFL13	(*( MC0_RDBFL0_type *) 0xF0065DBAU)	/* Read Data and Bit Flip Register 13 */
#define MC77_RDBFL14	(*( MC0_RDBFL0_type *) 0xF0065DBCU)	/* Read Data and Bit Flip Register 14 */
#define MC77_RDBFL15	(*( MC0_RDBFL0_type *) 0xF0065DBEU)	/* Read Data and Bit Flip Register 15 */
#define MC77_RDBFL16	(*( MC0_RDBFL0_type *) 0xF0065DC0U)	/* Read Data and Bit Flip Register 16 */
#define MC77_RDBFL17	(*( MC0_RDBFL0_type *) 0xF0065DC2U)	/* Read Data and Bit Flip Register 17 */
#define MC77_RDBFL18	(*( MC0_RDBFL0_type *) 0xF0065DC4U)	/* Read Data and Bit Flip Register 18 */
#define MC77_RDBFL19	(*( MC0_RDBFL0_type *) 0xF0065DC6U)	/* Read Data and Bit Flip Register 19 */
#define MC77_RDBFL20	(*( MC0_RDBFL0_type *) 0xF0065DC8U)	/* Read Data and Bit Flip Register 20 */
#define MC77_RDBFL21	(*( MC0_RDBFL0_type *) 0xF0065DCAU)	/* Read Data and Bit Flip Register 21 */
#define MC77_RDBFL22	(*( MC0_RDBFL0_type *) 0xF0065DCCU)	/* Read Data and Bit Flip Register 22 */
#define MC77_RDBFL23	(*( MC0_RDBFL0_type *) 0xF0065DCEU)	/* Read Data and Bit Flip Register 23 */
#define MC77_RDBFL24	(*( MC0_RDBFL0_type *) 0xF0065DD0U)	/* Read Data and Bit Flip Register 24 */
#define MC77_RDBFL25	(*( MC0_RDBFL0_type *) 0xF0065DD2U)	/* Read Data and Bit Flip Register 25 */
#define MC77_RDBFL26	(*( MC0_RDBFL0_type *) 0xF0065DD4U)	/* Read Data and Bit Flip Register 26 */
#define MC77_RDBFL27	(*( MC0_RDBFL0_type *) 0xF0065DD6U)	/* Read Data and Bit Flip Register 27 */
#define MC77_RDBFL28	(*( MC0_RDBFL0_type *) 0xF0065DD8U)	/* Read Data and Bit Flip Register 28 */
#define MC77_RDBFL29	(*( MC0_RDBFL0_type *) 0xF0065DDAU)	/* Read Data and Bit Flip Register 29 */
#define MC77_RDBFL30	(*( MC0_RDBFL0_type *) 0xF0065DDCU)	/* Read Data and Bit Flip Register 30 */
#define MC77_RDBFL31	(*( MC0_RDBFL0_type *) 0xF0065DDEU)	/* Read Data and Bit Flip Register 31 */
#define MC77_RDBFL32	(*( MC0_RDBFL0_type *) 0xF0065DE0U)	/* Read Data and Bit Flip Register 32 */
#define MC77_RDBFL33	(*( MC0_RDBFL0_type *) 0xF0065DE2U)	/* Read Data and Bit Flip Register 33 */
#define MC77_RDBFL34	(*( MC0_RDBFL0_type *) 0xF0065DE4U)	/* Read Data and Bit Flip Register 34 */
#define MC77_RDBFL35	(*( MC0_RDBFL0_type *) 0xF0065DE6U)	/* Read Data and Bit Flip Register 35 */
#define MC77_RDBFL36	(*( MC0_RDBFL0_type *) 0xF0065DE8U)	/* Read Data and Bit Flip Register 36 */
#define MC77_RDBFL37	(*( MC0_RDBFL0_type *) 0xF0065DEAU)	/* Read Data and Bit Flip Register 37 */
#define MC77_RDBFL38	(*( MC0_RDBFL0_type *) 0xF0065DECU)	/* Read Data and Bit Flip Register 38 */
#define MC77_RDBFL39	(*( MC0_RDBFL0_type *) 0xF0065DEEU)	/* Read Data and Bit Flip Register 39 */
#define MC78_RDBFL0	(*( MC0_RDBFL0_type *) 0xF0065EA0U)	/* Read Data and Bit Flip Register 0 */
#define MC78_RDBFL1	(*( MC0_RDBFL0_type *) 0xF0065EA2U)	/* Read Data and Bit Flip Register 1 */
#define MC78_RDBFL2	(*( MC0_RDBFL0_type *) 0xF0065EA4U)	/* Read Data and Bit Flip Register 2 */
#define MC78_RDBFL3	(*( MC0_RDBFL0_type *) 0xF0065EA6U)	/* Read Data and Bit Flip Register 3 */
#define MC78_RDBFL4	(*( MC0_RDBFL0_type *) 0xF0065EA8U)	/* Read Data and Bit Flip Register 4 */
#define MC78_RDBFL5	(*( MC0_RDBFL0_type *) 0xF0065EAAU)	/* Read Data and Bit Flip Register 5 */
#define MC78_RDBFL6	(*( MC0_RDBFL0_type *) 0xF0065EACU)	/* Read Data and Bit Flip Register 6 */
#define MC78_RDBFL7	(*( MC0_RDBFL0_type *) 0xF0065EAEU)	/* Read Data and Bit Flip Register 7 */
#define MC78_RDBFL8	(*( MC0_RDBFL0_type *) 0xF0065EB0U)	/* Read Data and Bit Flip Register 8 */
#define MC78_RDBFL9	(*( MC0_RDBFL0_type *) 0xF0065EB2U)	/* Read Data and Bit Flip Register 9 */
#define MC78_RDBFL10	(*( MC0_RDBFL0_type *) 0xF0065EB4U)	/* Read Data and Bit Flip Register 10 */
#define MC78_RDBFL11	(*( MC0_RDBFL0_type *) 0xF0065EB6U)	/* Read Data and Bit Flip Register 11 */
#define MC78_RDBFL12	(*( MC0_RDBFL0_type *) 0xF0065EB8U)	/* Read Data and Bit Flip Register 12 */
#define MC78_RDBFL13	(*( MC0_RDBFL0_type *) 0xF0065EBAU)	/* Read Data and Bit Flip Register 13 */
#define MC78_RDBFL14	(*( MC0_RDBFL0_type *) 0xF0065EBCU)	/* Read Data and Bit Flip Register 14 */
#define MC78_RDBFL15	(*( MC0_RDBFL0_type *) 0xF0065EBEU)	/* Read Data and Bit Flip Register 15 */
#define MC78_RDBFL16	(*( MC0_RDBFL0_type *) 0xF0065EC0U)	/* Read Data and Bit Flip Register 16 */
#define MC78_RDBFL17	(*( MC0_RDBFL0_type *) 0xF0065EC2U)	/* Read Data and Bit Flip Register 17 */
#define MC78_RDBFL18	(*( MC0_RDBFL0_type *) 0xF0065EC4U)	/* Read Data and Bit Flip Register 18 */
#define MC78_RDBFL19	(*( MC0_RDBFL0_type *) 0xF0065EC6U)	/* Read Data and Bit Flip Register 19 */
#define MC78_RDBFL20	(*( MC0_RDBFL0_type *) 0xF0065EC8U)	/* Read Data and Bit Flip Register 20 */
#define MC78_RDBFL21	(*( MC0_RDBFL0_type *) 0xF0065ECAU)	/* Read Data and Bit Flip Register 21 */
#define MC78_RDBFL22	(*( MC0_RDBFL0_type *) 0xF0065ECCU)	/* Read Data and Bit Flip Register 22 */
#define MC78_RDBFL23	(*( MC0_RDBFL0_type *) 0xF0065ECEU)	/* Read Data and Bit Flip Register 23 */
#define MC78_RDBFL24	(*( MC0_RDBFL0_type *) 0xF0065ED0U)	/* Read Data and Bit Flip Register 24 */
#define MC78_RDBFL25	(*( MC0_RDBFL0_type *) 0xF0065ED2U)	/* Read Data and Bit Flip Register 25 */
#define MC78_RDBFL26	(*( MC0_RDBFL0_type *) 0xF0065ED4U)	/* Read Data and Bit Flip Register 26 */
#define MC78_RDBFL27	(*( MC0_RDBFL0_type *) 0xF0065ED6U)	/* Read Data and Bit Flip Register 27 */
#define MC78_RDBFL28	(*( MC0_RDBFL0_type *) 0xF0065ED8U)	/* Read Data and Bit Flip Register 28 */
#define MC78_RDBFL29	(*( MC0_RDBFL0_type *) 0xF0065EDAU)	/* Read Data and Bit Flip Register 29 */
#define MC78_RDBFL30	(*( MC0_RDBFL0_type *) 0xF0065EDCU)	/* Read Data and Bit Flip Register 30 */
#define MC78_RDBFL31	(*( MC0_RDBFL0_type *) 0xF0065EDEU)	/* Read Data and Bit Flip Register 31 */
#define MC78_RDBFL32	(*( MC0_RDBFL0_type *) 0xF0065EE0U)	/* Read Data and Bit Flip Register 32 */
#define MC78_RDBFL33	(*( MC0_RDBFL0_type *) 0xF0065EE2U)	/* Read Data and Bit Flip Register 33 */
#define MC78_RDBFL34	(*( MC0_RDBFL0_type *) 0xF0065EE4U)	/* Read Data and Bit Flip Register 34 */
#define MC78_RDBFL35	(*( MC0_RDBFL0_type *) 0xF0065EE6U)	/* Read Data and Bit Flip Register 35 */
#define MC78_RDBFL36	(*( MC0_RDBFL0_type *) 0xF0065EE8U)	/* Read Data and Bit Flip Register 36 */
#define MC78_RDBFL37	(*( MC0_RDBFL0_type *) 0xF0065EEAU)	/* Read Data and Bit Flip Register 37 */
#define MC78_RDBFL38	(*( MC0_RDBFL0_type *) 0xF0065EECU)	/* Read Data and Bit Flip Register 38 */
#define MC78_RDBFL39	(*( MC0_RDBFL0_type *) 0xF0065EEEU)	/* Read Data and Bit Flip Register 39 */
#define MC79_RDBFL0	(*( MC0_RDBFL0_type *) 0xF0065FA0U)	/* Read Data and Bit Flip Register 0 */
#define MC79_RDBFL1	(*( MC0_RDBFL0_type *) 0xF0065FA2U)	/* Read Data and Bit Flip Register 1 */
#define MC79_RDBFL2	(*( MC0_RDBFL0_type *) 0xF0065FA4U)	/* Read Data and Bit Flip Register 2 */
#define MC79_RDBFL3	(*( MC0_RDBFL0_type *) 0xF0065FA6U)	/* Read Data and Bit Flip Register 3 */
#define MC79_RDBFL4	(*( MC0_RDBFL0_type *) 0xF0065FA8U)	/* Read Data and Bit Flip Register 4 */
#define MC79_RDBFL5	(*( MC0_RDBFL0_type *) 0xF0065FAAU)	/* Read Data and Bit Flip Register 5 */
#define MC79_RDBFL6	(*( MC0_RDBFL0_type *) 0xF0065FACU)	/* Read Data and Bit Flip Register 6 */
#define MC79_RDBFL7	(*( MC0_RDBFL0_type *) 0xF0065FAEU)	/* Read Data and Bit Flip Register 7 */
#define MC79_RDBFL8	(*( MC0_RDBFL0_type *) 0xF0065FB0U)	/* Read Data and Bit Flip Register 8 */
#define MC79_RDBFL9	(*( MC0_RDBFL0_type *) 0xF0065FB2U)	/* Read Data and Bit Flip Register 9 */
#define MC79_RDBFL10	(*( MC0_RDBFL0_type *) 0xF0065FB4U)	/* Read Data and Bit Flip Register 10 */
#define MC79_RDBFL11	(*( MC0_RDBFL0_type *) 0xF0065FB6U)	/* Read Data and Bit Flip Register 11 */
#define MC79_RDBFL12	(*( MC0_RDBFL0_type *) 0xF0065FB8U)	/* Read Data and Bit Flip Register 12 */
#define MC79_RDBFL13	(*( MC0_RDBFL0_type *) 0xF0065FBAU)	/* Read Data and Bit Flip Register 13 */
#define MC79_RDBFL14	(*( MC0_RDBFL0_type *) 0xF0065FBCU)	/* Read Data and Bit Flip Register 14 */
#define MC79_RDBFL15	(*( MC0_RDBFL0_type *) 0xF0065FBEU)	/* Read Data and Bit Flip Register 15 */
#define MC79_RDBFL16	(*( MC0_RDBFL0_type *) 0xF0065FC0U)	/* Read Data and Bit Flip Register 16 */
#define MC79_RDBFL17	(*( MC0_RDBFL0_type *) 0xF0065FC2U)	/* Read Data and Bit Flip Register 17 */
#define MC79_RDBFL18	(*( MC0_RDBFL0_type *) 0xF0065FC4U)	/* Read Data and Bit Flip Register 18 */
#define MC79_RDBFL19	(*( MC0_RDBFL0_type *) 0xF0065FC6U)	/* Read Data and Bit Flip Register 19 */
#define MC79_RDBFL20	(*( MC0_RDBFL0_type *) 0xF0065FC8U)	/* Read Data and Bit Flip Register 20 */
#define MC79_RDBFL21	(*( MC0_RDBFL0_type *) 0xF0065FCAU)	/* Read Data and Bit Flip Register 21 */
#define MC79_RDBFL22	(*( MC0_RDBFL0_type *) 0xF0065FCCU)	/* Read Data and Bit Flip Register 22 */
#define MC79_RDBFL23	(*( MC0_RDBFL0_type *) 0xF0065FCEU)	/* Read Data and Bit Flip Register 23 */
#define MC79_RDBFL24	(*( MC0_RDBFL0_type *) 0xF0065FD0U)	/* Read Data and Bit Flip Register 24 */
#define MC79_RDBFL25	(*( MC0_RDBFL0_type *) 0xF0065FD2U)	/* Read Data and Bit Flip Register 25 */
#define MC79_RDBFL26	(*( MC0_RDBFL0_type *) 0xF0065FD4U)	/* Read Data and Bit Flip Register 26 */
#define MC79_RDBFL27	(*( MC0_RDBFL0_type *) 0xF0065FD6U)	/* Read Data and Bit Flip Register 27 */
#define MC79_RDBFL28	(*( MC0_RDBFL0_type *) 0xF0065FD8U)	/* Read Data and Bit Flip Register 28 */
#define MC79_RDBFL29	(*( MC0_RDBFL0_type *) 0xF0065FDAU)	/* Read Data and Bit Flip Register 29 */
#define MC79_RDBFL30	(*( MC0_RDBFL0_type *) 0xF0065FDCU)	/* Read Data and Bit Flip Register 30 */
#define MC79_RDBFL31	(*( MC0_RDBFL0_type *) 0xF0065FDEU)	/* Read Data and Bit Flip Register 31 */
#define MC79_RDBFL32	(*( MC0_RDBFL0_type *) 0xF0065FE0U)	/* Read Data and Bit Flip Register 32 */
#define MC79_RDBFL33	(*( MC0_RDBFL0_type *) 0xF0065FE2U)	/* Read Data and Bit Flip Register 33 */
#define MC79_RDBFL34	(*( MC0_RDBFL0_type *) 0xF0065FE4U)	/* Read Data and Bit Flip Register 34 */
#define MC79_RDBFL35	(*( MC0_RDBFL0_type *) 0xF0065FE6U)	/* Read Data and Bit Flip Register 35 */
#define MC79_RDBFL36	(*( MC0_RDBFL0_type *) 0xF0065FE8U)	/* Read Data and Bit Flip Register 36 */
#define MC79_RDBFL37	(*( MC0_RDBFL0_type *) 0xF0065FEAU)	/* Read Data and Bit Flip Register 37 */
#define MC79_RDBFL38	(*( MC0_RDBFL0_type *) 0xF0065FECU)	/* Read Data and Bit Flip Register 38 */
#define MC79_RDBFL39	(*( MC0_RDBFL0_type *) 0xF0065FEEU)	/* Read Data and Bit Flip Register 39 */
#define MC80_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00660A0U)	/* Read Data and Bit Flip Register 0 */
#define MC80_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00660A2U)	/* Read Data and Bit Flip Register 1 */
#define MC80_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00660A4U)	/* Read Data and Bit Flip Register 2 */
#define MC80_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00660A6U)	/* Read Data and Bit Flip Register 3 */
#define MC80_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00660A8U)	/* Read Data and Bit Flip Register 4 */
#define MC80_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00660AAU)	/* Read Data and Bit Flip Register 5 */
#define MC80_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00660ACU)	/* Read Data and Bit Flip Register 6 */
#define MC80_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00660AEU)	/* Read Data and Bit Flip Register 7 */
#define MC80_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00660B0U)	/* Read Data and Bit Flip Register 8 */
#define MC80_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00660B2U)	/* Read Data and Bit Flip Register 9 */
#define MC80_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00660B4U)	/* Read Data and Bit Flip Register 10 */
#define MC80_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00660B6U)	/* Read Data and Bit Flip Register 11 */
#define MC80_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00660B8U)	/* Read Data and Bit Flip Register 12 */
#define MC80_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00660BAU)	/* Read Data and Bit Flip Register 13 */
#define MC80_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00660BCU)	/* Read Data and Bit Flip Register 14 */
#define MC80_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00660BEU)	/* Read Data and Bit Flip Register 15 */
#define MC80_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00660C0U)	/* Read Data and Bit Flip Register 16 */
#define MC80_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00660C2U)	/* Read Data and Bit Flip Register 17 */
#define MC80_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00660C4U)	/* Read Data and Bit Flip Register 18 */
#define MC80_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00660C6U)	/* Read Data and Bit Flip Register 19 */
#define MC80_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00660C8U)	/* Read Data and Bit Flip Register 20 */
#define MC80_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00660CAU)	/* Read Data and Bit Flip Register 21 */
#define MC80_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00660CCU)	/* Read Data and Bit Flip Register 22 */
#define MC80_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00660CEU)	/* Read Data and Bit Flip Register 23 */
#define MC80_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00660D0U)	/* Read Data and Bit Flip Register 24 */
#define MC80_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00660D2U)	/* Read Data and Bit Flip Register 25 */
#define MC80_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00660D4U)	/* Read Data and Bit Flip Register 26 */
#define MC80_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00660D6U)	/* Read Data and Bit Flip Register 27 */
#define MC80_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00660D8U)	/* Read Data and Bit Flip Register 28 */
#define MC80_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00660DAU)	/* Read Data and Bit Flip Register 29 */
#define MC80_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00660DCU)	/* Read Data and Bit Flip Register 30 */
#define MC80_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00660DEU)	/* Read Data and Bit Flip Register 31 */
#define MC80_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00660E0U)	/* Read Data and Bit Flip Register 32 */
#define MC80_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00660E2U)	/* Read Data and Bit Flip Register 33 */
#define MC80_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00660E4U)	/* Read Data and Bit Flip Register 34 */
#define MC80_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00660E6U)	/* Read Data and Bit Flip Register 35 */
#define MC80_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00660E8U)	/* Read Data and Bit Flip Register 36 */
#define MC80_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00660EAU)	/* Read Data and Bit Flip Register 37 */
#define MC80_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00660ECU)	/* Read Data and Bit Flip Register 38 */
#define MC80_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00660EEU)	/* Read Data and Bit Flip Register 39 */
#define MC81_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00661A0U)	/* Read Data and Bit Flip Register 0 */
#define MC81_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00661A2U)	/* Read Data and Bit Flip Register 1 */
#define MC81_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00661A4U)	/* Read Data and Bit Flip Register 2 */
#define MC81_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00661A6U)	/* Read Data and Bit Flip Register 3 */
#define MC81_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00661A8U)	/* Read Data and Bit Flip Register 4 */
#define MC81_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00661AAU)	/* Read Data and Bit Flip Register 5 */
#define MC81_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00661ACU)	/* Read Data and Bit Flip Register 6 */
#define MC81_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00661AEU)	/* Read Data and Bit Flip Register 7 */
#define MC81_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00661B0U)	/* Read Data and Bit Flip Register 8 */
#define MC81_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00661B2U)	/* Read Data and Bit Flip Register 9 */
#define MC81_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00661B4U)	/* Read Data and Bit Flip Register 10 */
#define MC81_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00661B6U)	/* Read Data and Bit Flip Register 11 */
#define MC81_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00661B8U)	/* Read Data and Bit Flip Register 12 */
#define MC81_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00661BAU)	/* Read Data and Bit Flip Register 13 */
#define MC81_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00661BCU)	/* Read Data and Bit Flip Register 14 */
#define MC81_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00661BEU)	/* Read Data and Bit Flip Register 15 */
#define MC81_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00661C0U)	/* Read Data and Bit Flip Register 16 */
#define MC81_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00661C2U)	/* Read Data and Bit Flip Register 17 */
#define MC81_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00661C4U)	/* Read Data and Bit Flip Register 18 */
#define MC81_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00661C6U)	/* Read Data and Bit Flip Register 19 */
#define MC81_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00661C8U)	/* Read Data and Bit Flip Register 20 */
#define MC81_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00661CAU)	/* Read Data and Bit Flip Register 21 */
#define MC81_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00661CCU)	/* Read Data and Bit Flip Register 22 */
#define MC81_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00661CEU)	/* Read Data and Bit Flip Register 23 */
#define MC81_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00661D0U)	/* Read Data and Bit Flip Register 24 */
#define MC81_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00661D2U)	/* Read Data and Bit Flip Register 25 */
#define MC81_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00661D4U)	/* Read Data and Bit Flip Register 26 */
#define MC81_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00661D6U)	/* Read Data and Bit Flip Register 27 */
#define MC81_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00661D8U)	/* Read Data and Bit Flip Register 28 */
#define MC81_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00661DAU)	/* Read Data and Bit Flip Register 29 */
#define MC81_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00661DCU)	/* Read Data and Bit Flip Register 30 */
#define MC81_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00661DEU)	/* Read Data and Bit Flip Register 31 */
#define MC81_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00661E0U)	/* Read Data and Bit Flip Register 32 */
#define MC81_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00661E2U)	/* Read Data and Bit Flip Register 33 */
#define MC81_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00661E4U)	/* Read Data and Bit Flip Register 34 */
#define MC81_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00661E6U)	/* Read Data and Bit Flip Register 35 */
#define MC81_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00661E8U)	/* Read Data and Bit Flip Register 36 */
#define MC81_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00661EAU)	/* Read Data and Bit Flip Register 37 */
#define MC81_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00661ECU)	/* Read Data and Bit Flip Register 38 */
#define MC81_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00661EEU)	/* Read Data and Bit Flip Register 39 */
#define MC82_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00662A0U)	/* Read Data and Bit Flip Register 0 */
#define MC82_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00662A2U)	/* Read Data and Bit Flip Register 1 */
#define MC82_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00662A4U)	/* Read Data and Bit Flip Register 2 */
#define MC82_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00662A6U)	/* Read Data and Bit Flip Register 3 */
#define MC82_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00662A8U)	/* Read Data and Bit Flip Register 4 */
#define MC82_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00662AAU)	/* Read Data and Bit Flip Register 5 */
#define MC82_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00662ACU)	/* Read Data and Bit Flip Register 6 */
#define MC82_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00662AEU)	/* Read Data and Bit Flip Register 7 */
#define MC82_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00662B0U)	/* Read Data and Bit Flip Register 8 */
#define MC82_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00662B2U)	/* Read Data and Bit Flip Register 9 */
#define MC82_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00662B4U)	/* Read Data and Bit Flip Register 10 */
#define MC82_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00662B6U)	/* Read Data and Bit Flip Register 11 */
#define MC82_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00662B8U)	/* Read Data and Bit Flip Register 12 */
#define MC82_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00662BAU)	/* Read Data and Bit Flip Register 13 */
#define MC82_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00662BCU)	/* Read Data and Bit Flip Register 14 */
#define MC82_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00662BEU)	/* Read Data and Bit Flip Register 15 */
#define MC82_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00662C0U)	/* Read Data and Bit Flip Register 16 */
#define MC82_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00662C2U)	/* Read Data and Bit Flip Register 17 */
#define MC82_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00662C4U)	/* Read Data and Bit Flip Register 18 */
#define MC82_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00662C6U)	/* Read Data and Bit Flip Register 19 */
#define MC82_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00662C8U)	/* Read Data and Bit Flip Register 20 */
#define MC82_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00662CAU)	/* Read Data and Bit Flip Register 21 */
#define MC82_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00662CCU)	/* Read Data and Bit Flip Register 22 */
#define MC82_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00662CEU)	/* Read Data and Bit Flip Register 23 */
#define MC82_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00662D0U)	/* Read Data and Bit Flip Register 24 */
#define MC82_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00662D2U)	/* Read Data and Bit Flip Register 25 */
#define MC82_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00662D4U)	/* Read Data and Bit Flip Register 26 */
#define MC82_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00662D6U)	/* Read Data and Bit Flip Register 27 */
#define MC82_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00662D8U)	/* Read Data and Bit Flip Register 28 */
#define MC82_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00662DAU)	/* Read Data and Bit Flip Register 29 */
#define MC82_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00662DCU)	/* Read Data and Bit Flip Register 30 */
#define MC82_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00662DEU)	/* Read Data and Bit Flip Register 31 */
#define MC82_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00662E0U)	/* Read Data and Bit Flip Register 32 */
#define MC82_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00662E2U)	/* Read Data and Bit Flip Register 33 */
#define MC82_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00662E4U)	/* Read Data and Bit Flip Register 34 */
#define MC82_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00662E6U)	/* Read Data and Bit Flip Register 35 */
#define MC82_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00662E8U)	/* Read Data and Bit Flip Register 36 */
#define MC82_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00662EAU)	/* Read Data and Bit Flip Register 37 */
#define MC82_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00662ECU)	/* Read Data and Bit Flip Register 38 */
#define MC82_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00662EEU)	/* Read Data and Bit Flip Register 39 */
#define MC83_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00663A0U)	/* Read Data and Bit Flip Register 0 */
#define MC83_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00663A2U)	/* Read Data and Bit Flip Register 1 */
#define MC83_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00663A4U)	/* Read Data and Bit Flip Register 2 */
#define MC83_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00663A6U)	/* Read Data and Bit Flip Register 3 */
#define MC83_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00663A8U)	/* Read Data and Bit Flip Register 4 */
#define MC83_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00663AAU)	/* Read Data and Bit Flip Register 5 */
#define MC83_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00663ACU)	/* Read Data and Bit Flip Register 6 */
#define MC83_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00663AEU)	/* Read Data and Bit Flip Register 7 */
#define MC83_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00663B0U)	/* Read Data and Bit Flip Register 8 */
#define MC83_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00663B2U)	/* Read Data and Bit Flip Register 9 */
#define MC83_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00663B4U)	/* Read Data and Bit Flip Register 10 */
#define MC83_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00663B6U)	/* Read Data and Bit Flip Register 11 */
#define MC83_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00663B8U)	/* Read Data and Bit Flip Register 12 */
#define MC83_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00663BAU)	/* Read Data and Bit Flip Register 13 */
#define MC83_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00663BCU)	/* Read Data and Bit Flip Register 14 */
#define MC83_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00663BEU)	/* Read Data and Bit Flip Register 15 */
#define MC83_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00663C0U)	/* Read Data and Bit Flip Register 16 */
#define MC83_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00663C2U)	/* Read Data and Bit Flip Register 17 */
#define MC83_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00663C4U)	/* Read Data and Bit Flip Register 18 */
#define MC83_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00663C6U)	/* Read Data and Bit Flip Register 19 */
#define MC83_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00663C8U)	/* Read Data and Bit Flip Register 20 */
#define MC83_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00663CAU)	/* Read Data and Bit Flip Register 21 */
#define MC83_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00663CCU)	/* Read Data and Bit Flip Register 22 */
#define MC83_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00663CEU)	/* Read Data and Bit Flip Register 23 */
#define MC83_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00663D0U)	/* Read Data and Bit Flip Register 24 */
#define MC83_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00663D2U)	/* Read Data and Bit Flip Register 25 */
#define MC83_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00663D4U)	/* Read Data and Bit Flip Register 26 */
#define MC83_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00663D6U)	/* Read Data and Bit Flip Register 27 */
#define MC83_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00663D8U)	/* Read Data and Bit Flip Register 28 */
#define MC83_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00663DAU)	/* Read Data and Bit Flip Register 29 */
#define MC83_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00663DCU)	/* Read Data and Bit Flip Register 30 */
#define MC83_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00663DEU)	/* Read Data and Bit Flip Register 31 */
#define MC83_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00663E0U)	/* Read Data and Bit Flip Register 32 */
#define MC83_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00663E2U)	/* Read Data and Bit Flip Register 33 */
#define MC83_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00663E4U)	/* Read Data and Bit Flip Register 34 */
#define MC83_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00663E6U)	/* Read Data and Bit Flip Register 35 */
#define MC83_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00663E8U)	/* Read Data and Bit Flip Register 36 */
#define MC83_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00663EAU)	/* Read Data and Bit Flip Register 37 */
#define MC83_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00663ECU)	/* Read Data and Bit Flip Register 38 */
#define MC83_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00663EEU)	/* Read Data and Bit Flip Register 39 */
#define MC84_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00664A0U)	/* Read Data and Bit Flip Register 0 */
#define MC84_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00664A2U)	/* Read Data and Bit Flip Register 1 */
#define MC84_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00664A4U)	/* Read Data and Bit Flip Register 2 */
#define MC84_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00664A6U)	/* Read Data and Bit Flip Register 3 */
#define MC84_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00664A8U)	/* Read Data and Bit Flip Register 4 */
#define MC84_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00664AAU)	/* Read Data and Bit Flip Register 5 */
#define MC84_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00664ACU)	/* Read Data and Bit Flip Register 6 */
#define MC84_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00664AEU)	/* Read Data and Bit Flip Register 7 */
#define MC84_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00664B0U)	/* Read Data and Bit Flip Register 8 */
#define MC84_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00664B2U)	/* Read Data and Bit Flip Register 9 */
#define MC84_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00664B4U)	/* Read Data and Bit Flip Register 10 */
#define MC84_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00664B6U)	/* Read Data and Bit Flip Register 11 */
#define MC84_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00664B8U)	/* Read Data and Bit Flip Register 12 */
#define MC84_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00664BAU)	/* Read Data and Bit Flip Register 13 */
#define MC84_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00664BCU)	/* Read Data and Bit Flip Register 14 */
#define MC84_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00664BEU)	/* Read Data and Bit Flip Register 15 */
#define MC84_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00664C0U)	/* Read Data and Bit Flip Register 16 */
#define MC84_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00664C2U)	/* Read Data and Bit Flip Register 17 */
#define MC84_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00664C4U)	/* Read Data and Bit Flip Register 18 */
#define MC84_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00664C6U)	/* Read Data and Bit Flip Register 19 */
#define MC84_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00664C8U)	/* Read Data and Bit Flip Register 20 */
#define MC84_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00664CAU)	/* Read Data and Bit Flip Register 21 */
#define MC84_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00664CCU)	/* Read Data and Bit Flip Register 22 */
#define MC84_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00664CEU)	/* Read Data and Bit Flip Register 23 */
#define MC84_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00664D0U)	/* Read Data and Bit Flip Register 24 */
#define MC84_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00664D2U)	/* Read Data and Bit Flip Register 25 */
#define MC84_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00664D4U)	/* Read Data and Bit Flip Register 26 */
#define MC84_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00664D6U)	/* Read Data and Bit Flip Register 27 */
#define MC84_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00664D8U)	/* Read Data and Bit Flip Register 28 */
#define MC84_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00664DAU)	/* Read Data and Bit Flip Register 29 */
#define MC84_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00664DCU)	/* Read Data and Bit Flip Register 30 */
#define MC84_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00664DEU)	/* Read Data and Bit Flip Register 31 */
#define MC84_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00664E0U)	/* Read Data and Bit Flip Register 32 */
#define MC84_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00664E2U)	/* Read Data and Bit Flip Register 33 */
#define MC84_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00664E4U)	/* Read Data and Bit Flip Register 34 */
#define MC84_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00664E6U)	/* Read Data and Bit Flip Register 35 */
#define MC84_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00664E8U)	/* Read Data and Bit Flip Register 36 */
#define MC84_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00664EAU)	/* Read Data and Bit Flip Register 37 */
#define MC84_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00664ECU)	/* Read Data and Bit Flip Register 38 */
#define MC84_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00664EEU)	/* Read Data and Bit Flip Register 39 */
#define MC85_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00665A0U)	/* Read Data and Bit Flip Register 0 */
#define MC85_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00665A2U)	/* Read Data and Bit Flip Register 1 */
#define MC85_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00665A4U)	/* Read Data and Bit Flip Register 2 */
#define MC85_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00665A6U)	/* Read Data and Bit Flip Register 3 */
#define MC85_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00665A8U)	/* Read Data and Bit Flip Register 4 */
#define MC85_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00665AAU)	/* Read Data and Bit Flip Register 5 */
#define MC85_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00665ACU)	/* Read Data and Bit Flip Register 6 */
#define MC85_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00665AEU)	/* Read Data and Bit Flip Register 7 */
#define MC85_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00665B0U)	/* Read Data and Bit Flip Register 8 */
#define MC85_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00665B2U)	/* Read Data and Bit Flip Register 9 */
#define MC85_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00665B4U)	/* Read Data and Bit Flip Register 10 */
#define MC85_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00665B6U)	/* Read Data and Bit Flip Register 11 */
#define MC85_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00665B8U)	/* Read Data and Bit Flip Register 12 */
#define MC85_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00665BAU)	/* Read Data and Bit Flip Register 13 */
#define MC85_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00665BCU)	/* Read Data and Bit Flip Register 14 */
#define MC85_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00665BEU)	/* Read Data and Bit Flip Register 15 */
#define MC85_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00665C0U)	/* Read Data and Bit Flip Register 16 */
#define MC85_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00665C2U)	/* Read Data and Bit Flip Register 17 */
#define MC85_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00665C4U)	/* Read Data and Bit Flip Register 18 */
#define MC85_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00665C6U)	/* Read Data and Bit Flip Register 19 */
#define MC85_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00665C8U)	/* Read Data and Bit Flip Register 20 */
#define MC85_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00665CAU)	/* Read Data and Bit Flip Register 21 */
#define MC85_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00665CCU)	/* Read Data and Bit Flip Register 22 */
#define MC85_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00665CEU)	/* Read Data and Bit Flip Register 23 */
#define MC85_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00665D0U)	/* Read Data and Bit Flip Register 24 */
#define MC85_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00665D2U)	/* Read Data and Bit Flip Register 25 */
#define MC85_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00665D4U)	/* Read Data and Bit Flip Register 26 */
#define MC85_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00665D6U)	/* Read Data and Bit Flip Register 27 */
#define MC85_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00665D8U)	/* Read Data and Bit Flip Register 28 */
#define MC85_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00665DAU)	/* Read Data and Bit Flip Register 29 */
#define MC85_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00665DCU)	/* Read Data and Bit Flip Register 30 */
#define MC85_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00665DEU)	/* Read Data and Bit Flip Register 31 */
#define MC85_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00665E0U)	/* Read Data and Bit Flip Register 32 */
#define MC85_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00665E2U)	/* Read Data and Bit Flip Register 33 */
#define MC85_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00665E4U)	/* Read Data and Bit Flip Register 34 */
#define MC85_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00665E6U)	/* Read Data and Bit Flip Register 35 */
#define MC85_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00665E8U)	/* Read Data and Bit Flip Register 36 */
#define MC85_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00665EAU)	/* Read Data and Bit Flip Register 37 */
#define MC85_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00665ECU)	/* Read Data and Bit Flip Register 38 */
#define MC85_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00665EEU)	/* Read Data and Bit Flip Register 39 */
#define MC86_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00666A0U)	/* Read Data and Bit Flip Register 0 */
#define MC86_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00666A2U)	/* Read Data and Bit Flip Register 1 */
#define MC86_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00666A4U)	/* Read Data and Bit Flip Register 2 */
#define MC86_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00666A6U)	/* Read Data and Bit Flip Register 3 */
#define MC86_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00666A8U)	/* Read Data and Bit Flip Register 4 */
#define MC86_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00666AAU)	/* Read Data and Bit Flip Register 5 */
#define MC86_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00666ACU)	/* Read Data and Bit Flip Register 6 */
#define MC86_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00666AEU)	/* Read Data and Bit Flip Register 7 */
#define MC86_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00666B0U)	/* Read Data and Bit Flip Register 8 */
#define MC86_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00666B2U)	/* Read Data and Bit Flip Register 9 */
#define MC86_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00666B4U)	/* Read Data and Bit Flip Register 10 */
#define MC86_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00666B6U)	/* Read Data and Bit Flip Register 11 */
#define MC86_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00666B8U)	/* Read Data and Bit Flip Register 12 */
#define MC86_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00666BAU)	/* Read Data and Bit Flip Register 13 */
#define MC86_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00666BCU)	/* Read Data and Bit Flip Register 14 */
#define MC86_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00666BEU)	/* Read Data and Bit Flip Register 15 */
#define MC86_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00666C0U)	/* Read Data and Bit Flip Register 16 */
#define MC86_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00666C2U)	/* Read Data and Bit Flip Register 17 */
#define MC86_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00666C4U)	/* Read Data and Bit Flip Register 18 */
#define MC86_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00666C6U)	/* Read Data and Bit Flip Register 19 */
#define MC86_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00666C8U)	/* Read Data and Bit Flip Register 20 */
#define MC86_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00666CAU)	/* Read Data and Bit Flip Register 21 */
#define MC86_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00666CCU)	/* Read Data and Bit Flip Register 22 */
#define MC86_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00666CEU)	/* Read Data and Bit Flip Register 23 */
#define MC86_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00666D0U)	/* Read Data and Bit Flip Register 24 */
#define MC86_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00666D2U)	/* Read Data and Bit Flip Register 25 */
#define MC86_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00666D4U)	/* Read Data and Bit Flip Register 26 */
#define MC86_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00666D6U)	/* Read Data and Bit Flip Register 27 */
#define MC86_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00666D8U)	/* Read Data and Bit Flip Register 28 */
#define MC86_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00666DAU)	/* Read Data and Bit Flip Register 29 */
#define MC86_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00666DCU)	/* Read Data and Bit Flip Register 30 */
#define MC86_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00666DEU)	/* Read Data and Bit Flip Register 31 */
#define MC86_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00666E0U)	/* Read Data and Bit Flip Register 32 */
#define MC86_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00666E2U)	/* Read Data and Bit Flip Register 33 */
#define MC86_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00666E4U)	/* Read Data and Bit Flip Register 34 */
#define MC86_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00666E6U)	/* Read Data and Bit Flip Register 35 */
#define MC86_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00666E8U)	/* Read Data and Bit Flip Register 36 */
#define MC86_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00666EAU)	/* Read Data and Bit Flip Register 37 */
#define MC86_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00666ECU)	/* Read Data and Bit Flip Register 38 */
#define MC86_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00666EEU)	/* Read Data and Bit Flip Register 39 */
#define MC87_RDBFL0	(*( MC0_RDBFL0_type *) 0xF00667A0U)	/* Read Data and Bit Flip Register 0 */
#define MC87_RDBFL1	(*( MC0_RDBFL0_type *) 0xF00667A2U)	/* Read Data and Bit Flip Register 1 */
#define MC87_RDBFL2	(*( MC0_RDBFL0_type *) 0xF00667A4U)	/* Read Data and Bit Flip Register 2 */
#define MC87_RDBFL3	(*( MC0_RDBFL0_type *) 0xF00667A6U)	/* Read Data and Bit Flip Register 3 */
#define MC87_RDBFL4	(*( MC0_RDBFL0_type *) 0xF00667A8U)	/* Read Data and Bit Flip Register 4 */
#define MC87_RDBFL5	(*( MC0_RDBFL0_type *) 0xF00667AAU)	/* Read Data and Bit Flip Register 5 */
#define MC87_RDBFL6	(*( MC0_RDBFL0_type *) 0xF00667ACU)	/* Read Data and Bit Flip Register 6 */
#define MC87_RDBFL7	(*( MC0_RDBFL0_type *) 0xF00667AEU)	/* Read Data and Bit Flip Register 7 */
#define MC87_RDBFL8	(*( MC0_RDBFL0_type *) 0xF00667B0U)	/* Read Data and Bit Flip Register 8 */
#define MC87_RDBFL9	(*( MC0_RDBFL0_type *) 0xF00667B2U)	/* Read Data and Bit Flip Register 9 */
#define MC87_RDBFL10	(*( MC0_RDBFL0_type *) 0xF00667B4U)	/* Read Data and Bit Flip Register 10 */
#define MC87_RDBFL11	(*( MC0_RDBFL0_type *) 0xF00667B6U)	/* Read Data and Bit Flip Register 11 */
#define MC87_RDBFL12	(*( MC0_RDBFL0_type *) 0xF00667B8U)	/* Read Data and Bit Flip Register 12 */
#define MC87_RDBFL13	(*( MC0_RDBFL0_type *) 0xF00667BAU)	/* Read Data and Bit Flip Register 13 */
#define MC87_RDBFL14	(*( MC0_RDBFL0_type *) 0xF00667BCU)	/* Read Data and Bit Flip Register 14 */
#define MC87_RDBFL15	(*( MC0_RDBFL0_type *) 0xF00667BEU)	/* Read Data and Bit Flip Register 15 */
#define MC87_RDBFL16	(*( MC0_RDBFL0_type *) 0xF00667C0U)	/* Read Data and Bit Flip Register 16 */
#define MC87_RDBFL17	(*( MC0_RDBFL0_type *) 0xF00667C2U)	/* Read Data and Bit Flip Register 17 */
#define MC87_RDBFL18	(*( MC0_RDBFL0_type *) 0xF00667C4U)	/* Read Data and Bit Flip Register 18 */
#define MC87_RDBFL19	(*( MC0_RDBFL0_type *) 0xF00667C6U)	/* Read Data and Bit Flip Register 19 */
#define MC87_RDBFL20	(*( MC0_RDBFL0_type *) 0xF00667C8U)	/* Read Data and Bit Flip Register 20 */
#define MC87_RDBFL21	(*( MC0_RDBFL0_type *) 0xF00667CAU)	/* Read Data and Bit Flip Register 21 */
#define MC87_RDBFL22	(*( MC0_RDBFL0_type *) 0xF00667CCU)	/* Read Data and Bit Flip Register 22 */
#define MC87_RDBFL23	(*( MC0_RDBFL0_type *) 0xF00667CEU)	/* Read Data and Bit Flip Register 23 */
#define MC87_RDBFL24	(*( MC0_RDBFL0_type *) 0xF00667D0U)	/* Read Data and Bit Flip Register 24 */
#define MC87_RDBFL25	(*( MC0_RDBFL0_type *) 0xF00667D2U)	/* Read Data and Bit Flip Register 25 */
#define MC87_RDBFL26	(*( MC0_RDBFL0_type *) 0xF00667D4U)	/* Read Data and Bit Flip Register 26 */
#define MC87_RDBFL27	(*( MC0_RDBFL0_type *) 0xF00667D6U)	/* Read Data and Bit Flip Register 27 */
#define MC87_RDBFL28	(*( MC0_RDBFL0_type *) 0xF00667D8U)	/* Read Data and Bit Flip Register 28 */
#define MC87_RDBFL29	(*( MC0_RDBFL0_type *) 0xF00667DAU)	/* Read Data and Bit Flip Register 29 */
#define MC87_RDBFL30	(*( MC0_RDBFL0_type *) 0xF00667DCU)	/* Read Data and Bit Flip Register 30 */
#define MC87_RDBFL31	(*( MC0_RDBFL0_type *) 0xF00667DEU)	/* Read Data and Bit Flip Register 31 */
#define MC87_RDBFL32	(*( MC0_RDBFL0_type *) 0xF00667E0U)	/* Read Data and Bit Flip Register 32 */
#define MC87_RDBFL33	(*( MC0_RDBFL0_type *) 0xF00667E2U)	/* Read Data and Bit Flip Register 33 */
#define MC87_RDBFL34	(*( MC0_RDBFL0_type *) 0xF00667E4U)	/* Read Data and Bit Flip Register 34 */
#define MC87_RDBFL35	(*( MC0_RDBFL0_type *) 0xF00667E6U)	/* Read Data and Bit Flip Register 35 */
#define MC87_RDBFL36	(*( MC0_RDBFL0_type *) 0xF00667E8U)	/* Read Data and Bit Flip Register 36 */
#define MC87_RDBFL37	(*( MC0_RDBFL0_type *) 0xF00667EAU)	/* Read Data and Bit Flip Register 37 */
#define MC87_RDBFL38	(*( MC0_RDBFL0_type *) 0xF00667ECU)	/* Read Data and Bit Flip Register 38 */
#define MC87_RDBFL39	(*( MC0_RDBFL0_type *) 0xF00667EEU)	/* Read Data and Bit Flip Register 39 */
#define MTU_MEMTEST0	(*( MTU_MEMTEST0_type *) 0xF0060010U)	/* Memory MBISTEnable Register 0 */
#define MTU_MEMTEST1	(*( MTU_MEMTEST1_type *) 0xF0060014U)	/* Memory MBISTEnable Register 1 */
#define MTU_MEMTEST2	(*( MTU_MEMTEST2_type *) 0xF0060018U)	/* Memory MBISTEnable Register 2 */
#define MTU_MEMMAP	(*( MTU_MEMMAP_type *) 0xF006001CU)	/* Memory Mapping Enable Register */
#define MTU_MEMSTAT0	(*( MTU_MEMSTAT0_type *) 0xF0060038U)	/* Memory Status Register 0 */
#define MTU_MEMSTAT1	(*( MTU_RES3_type *) 0xF006003CU)	/* Memory Status Register 1 */
#define MTU_MEMSTAT2	(*( MTU_RES3_type *) 0xF0060040U)	/* Memory Status Register 2 */
#define SCU_OSCCON	(*( SCU_OSCCON_type *) 0xF0036010U)	/* OSC Control Register */
#define SCU_PLLSTAT	(*( SCU_PLLSTAT_type *) 0xF0036014U)	/* PLL Status Register */
#define SCU_PLLCON0	(*( SCU_PLLCON0_type *) 0xF0036018U)	/* PLL Configuration 0 Register */
#define SCU_PLLCON1	(*( SCU_PLLCON1_type *) 0xF003601CU)	/* PLL Configuration 1 Register */
#define SCU_PLLCON2	(*( SCU_PLLCON2_type *) 0xF0036020U)	/* PLL Configuration 2 Register */
#define SCU_PLLERAYSTAT	(*( SCU_PLLERAYSTAT_type *) 0xF0036024U)	/* PLL_ERAY Status Register */
#define SCU_PLLERAYCON0	(*( SCU_PLLERAYCON0_type *) 0xF0036028U)	/* PLL_ERAY Configuration 0 Register */
#define SCU_PLLERAYCON1	(*( SCU_PLLERAYCON1_type *) 0xF003602CU)	/* PLL_ERAY Configuration 1 Register */
#define SCU_CCUCON0	(*( SCU_CCUCON0_type *) 0xF0036030U)	/* CCU Clock Control Register 0 */
#define SCU_CCUCON1	(*( SCU_CCUCON1_type *) 0xF0036034U)	/* CCU Clock Control Register 1 */
#define SCU_CCUCON5	(*( SCU_CCUCON5_type *) 0xF003604CU)	/* CCU Clock Control Register 5 */
#define SCU_CCUCON2	(*( SCU_CCUCON2_type *) 0xF0036040U)	/* CCU Clock Control Register 2 */
#define SCU_CCUCON6	(*( SCU_CCUCON6_type *) 0xF0036080U)	/* CCU Clock Control Register 6 */
#define SCU_CCUCON3	(*( SCU_CCUCON3_type *) 0xF0036044U)	/* CCU Clock Control Register 3 */
#define SCU_CCUCON4	(*( SCU_CCUCON4_type *) 0xF0036048U)	/* CCU Clock Control Register 4 */
#define SCU_EXTCON	(*( SCU_EXTCON_type *) 0xF003603CU)	/* External Clock Control Register */
#define SCU_FDR	(*( SCU_FDR_type *) 0xF0036038U)	/* Fractional Divider Register */
#define SCU_RSTSTAT	(*( SCU_RSTSTAT_type *) 0xF0036050U)	/* Reset Status Register */
#define SCU_RSTCON	(*( SCU_RSTCON_type *) 0xF0036058U)	/* Reset Configuration Register */
#define SCU_ARSTDIS	(*( SCU_ARSTDIS_type *) 0xF003605CU)	/* Application Reset Disable Register */
#define SCU_SWRSTCON	(*( SCU_SWRSTCON_type *) 0xF0036060U)	/* Software Reset Configuration Register */
#define SCU_RSTCON2	(*( SCU_RSTCON2_type *) 0xF0036064U)	/* Additional Reset Control Register */
#define SCU_ESRCFG0	(*( SCU_ESRCFG0_type *) 0xF0036070U)	/* ESR0 Input Configuration Register */
#define SCU_ESRCFG1	(*( SCU_ESRCFG0_type *) 0xF0036074U)	/* ESR1 Input Configuration Register */
#define SCU_ESROCFG	(*( SCU_ESROCFG_type *) 0xF0036078U)	/* ESR Output Configuration Register */
#define SCU_IOCR	(*( SCU_IOCR_type *) 0xF00360A0U)	/* Input/Output Control Register */
#define SCU_OUT	(*( SCU_OUT_type *) 0xF00360A4U)	/* ESR Output Register */
#define SCU_OMR	(*( SCU_OMR_type *) 0xF00360A8U)	/* ESR Output Modification Register */
#define SCU_IN	(*( SCU_IN_type *) 0xF00360ACU)	/* ESR Input Register */
#define SCU_PDISC	(*( SCU_PDISC_type *) 0xF003618CU)	/* Pad Disable Control Register */
#define SCU_PDR	(*( SCU_PDR_type *) 0xF003609CU)	/* ESR Pad Driver Mode Register */
#define SCU_STSTAT	(*( SCU_STSTAT_type *) 0xF00360C0U)	/* Start-up Status Register */
#define SCU_TRAPSTAT	(*( SCU_TRAPSTAT_type *) 0xF0036124U)	/* Trap Status Register */
#define SCU_TRAPSET	(*( SCU_TRAPSET_type *) 0xF0036128U)	/* Trap Set Register */
#define SCU_TRAPCLR	(*( SCU_TRAPCLR_type *) 0xF003612CU)	/* Trap Clear Register */
#define SCU_TRAPDIS	(*( SCU_TRAPDIS_type *) 0xF0036130U)	/* Trap Disable Register */
#define SCU_EVRSTAT	(*( SCU_EVRSTAT_type *) 0xF00360B0U)	/* EVR Status Register */
#define SCU_EVRADCSTAT	(*( SCU_EVRADCSTAT_type *) 0xF003619CU)	/* EVR ADC Status Register */
#define SCU_EVRRSTCON	(*( SCU_EVRRSTCON_type *) 0xF003606CU)	/* EVR Reset Control Register */
#define SCU_EVROVMON	(*( SCU_EVROVMON_type *) 0xF00361A4U)	/* EVR Over-voltage Configuration Register */
#define SCU_EVRUVMON	(*( SCU_EVRUVMON_type *) 0xF00361A0U)	/* EVR Under-voltage Configuration Register */
#define SCU_EVRMONCTRL	(*( SCU_EVRMONCTRL_type *) 0xF00361A8U)	/* EVR Monitor Control Register */
#define SCU_EVR13CON	(*( SCU_EVR13CON_type *) 0xF00360B8U)	/* EVR13 Control Register */
#define SCU_EVRSDCTRL1	(*( SCU_EVRSDCTRL1_type *) 0xF00361B0U)	/* EVR13 SD Control Register 1 */
#define SCU_EVRSDCTRL2	(*( SCU_EVRSDCTRL2_type *) 0xF00361B4U)	/* EVR13 SD Control Register 2 */
#define SCU_EVRSDCTRL3	(*( SCU_EVRSDCTRL3_type *) 0xF00361B8U)	/* EVR13 SD Control Register 3 */
#define SCU_EVRSDCOEFF2	(*( SCU_EVRSDCOEFF2_type *) 0xF00361C4U)	/* EVR13 SD Coefficient Register 2 */
#define SCU_PMCSR0	(*( SCU_PMCSR0_type *) 0xF00360D4U)	/* Power Management Control and Status Register */
#define SCU_PMSWCR0	(*( SCU_PMSWCR0_type *) 0xF00360C8U)	/* Standby and Wake-up Control Register 0 */
#define SCU_PMSWCR1	(*( SCU_PMSWCR1_type *) 0xF00360E8U)	/* Standby and Wake-up Control Register 1 */
#define SCU_PMSWCR3	(*( SCU_PMSWCR3_type *) 0xF0036300U)	/* Standby and Wake-up Control Register 3 */
#define SCU_PMSWUTCNT	(*( SCU_PMSWUTCNT_type *) 0xF00361DCU)	/* Standby WUT Counter Register */
#define SCU_PMSWSTAT	(*( SCU_PMSWSTAT_type *) 0xF00360CCU)	/* Standby and Wake-up Status Flag Register */
#define SCU_PMSWSTATCLR	(*( SCU_PMSWSTATCLR_type *) 0xF00360D0U)	/* Standby and Wake-up Status Clear Register */
#define SCU_EICR0	(*( SCU_EICR0_type *) 0xF0036210U)	/* External Input Channel Register 0 */
#define SCU_EICR1	(*( SCU_EICR0_type *) 0xF0036214U)	/* External Input Channel Register 1 */
#define SCU_EICR2	(*( SCU_EICR0_type *) 0xF0036218U)	/* External Input Channel Register 2 */
#define SCU_EICR3	(*( SCU_EICR0_type *) 0xF003621CU)	/* External Input Channel Register 3 */
#define SCU_EIFR	(*( SCU_EIFR_type *) 0xF0036220U)	/* External Input Flag Register */
#define SCU_FMR	(*( SCU_FMR_type *) 0xF0036224U)	/* Flag Modification Register */
#define SCU_PDRR	(*( SCU_PDRR_type *) 0xF0036228U)	/* Pattern Detection Result Register */
#define SCU_IGCR0	(*( SCU_IGCR0_type *) 0xF003622CU)	/* Flag Gating Register 0 */
#define SCU_IGCR1	(*( SCU_IGCR0_type *) 0xF0036230U)	/* Flag Gating Register 1 */
#define SCU_IGCR2	(*( SCU_IGCR0_type *) 0xF0036234U)	/* Flag Gating Register 2 */
#define SCU_IGCR3	(*( SCU_IGCR0_type *) 0xF0036238U)	/* Flag Gating Register 3 */
#define SCU_LCLCON0	(*( SCU_LCLCON0_type *) 0xF0036134U)	/* LCL CPU0 Control Register */
#define SCU_LCLCON1	(*( SCU_LCLCON1_type *) 0xF0036138U)	/* LCL CPU1 Control Register */
#define SCU_LCLTEST	(*( SCU_LCLTEST_type *) 0xF003613CU)	/* LCL Test Register */
#define SCU_DTSCON	(*( SCU_DTSCON_type *) 0xF00360E4U)	/* Die Temperature Sensor Control Register */
#define SCU_DTSSTAT	(*( SCU_DTSSTAT_type *) 0xF00360E0U)	/* Die Temperature Sensor Status Register */
#define SCU_DTSLIM	(*( SCU_DTSLIM_type *) 0xF0036240U)	/* Die Temperature Sensor Limit Register */
#define SCU_WDTSCON0	(*( SCU_WDTSCON0_type *) 0xF00360F0U)	/* Safety WDT Control Register 0 */
#define SCU_WDTCPU0CON0	(*( SCU_WDTSCON0_type *) 0xF0036100U)	/* CPU0 WDT Control Register 0 */
#define SCU_WDTCPU1CON0	(*( SCU_WDTCPU1CON0_type *) 0xF003610CU)	/* Reserved Register */
#define SCU_WDTCPU2CON0	(*( SCU_WDTCPU1CON0_type *) 0xF0036118U)	/* Reserved Register */
#define SCU_WDTSCON1	(*( SCU_WDTSCON1_type *) 0xF00360F4U)	/* Safety WDT Control Register 1 */
#define SCU_WDTCPU0CON1	(*( SCU_WDTCPU0CON1_type *) 0xF0036104U)	/* CPU0 WDT Control Register 1 */
#define SCU_WDTCPU1CON1	(*( XBAR_PRIOH0_type *) 0xF0036110U)	/* Reserved Register */
#define SCU_WDTCPU2CON1	(*( XBAR_PRIOH0_type *) 0xF003611CU)	/* Reserved Register */
#define SCU_WDTSSR	(*( SCU_WDTSSR_type *) 0xF00360F8U)	/* Safety WDT Status Register */
#define SCU_WDTCPU0SR	(*( SCU_WDTSSR_type *) 0xF0036108U)	/* CPU0 WDT Status Register */
#define SCU_WDTCPU1SR	(*( SCU_WDTCPU1SR_type *) 0xF0036114U)	/* CPU1 WDT Status Register */
#define SCU_WDTCPU2SR	(*( SCU_WDTCPU1SR_type *) 0xF0036120U)	/* CPU2 WDT Status Register */
#define SCU_SAFECON	(*( SCU_SAFECON_type *) 0xF0036150U)	/* Safety Heartbeat Register */
#define SCU_EMSR	(*( SCU_EMSR_type *) 0xF00360FCU)	/* Emergency Stop Register */
#define SCU_LBISTCTRL0	(*( SCU_LBISTCTRL0_type *) 0xF0036164U)	/* Logic BIST Control 0 Register */
#define SCU_LBISTCTRL1	(*( SCU_LBISTCTRL1_type *) 0xF0036168U)	/* Logic BIST Control 1 Register */
#define SCU_LBISTCTRL2	(*( SCU_LBISTCTRL2_type *) 0xF003616CU)	/* Logic BIST Control 2 Register */
#define SCU_OVCENABLE	(*( SCU_OVCENABLE_type *) 0xF00361E0U)	/* Overlay Enable Register */
#define SCU_OVCCON	(*( SCU_OVCCON_type *) 0xF00361E4U)	/* Overlay Control Register */
#define SCU_SYSCON	(*( SCU_SYSCON_type *) 0xF003607CU)	/* System Control Register */
#define SCU_CHIPID	(*( SCU_CHIPID_type *) 0xF0036140U)	/* Chip Identification Register */
#define SCU_ID	(*( MTU_ID_type *) 0xF0036008U)	/* Identification Register */
#define SCU_MANID	(*( SCU_MANID_type *) 0xF0036144U)	/* Manufacturer Identification Register */
#define SCU_ACCEN0	(*( XBAR_ACCEN0_type *) 0xF00363FCU)	/* Access Enable Register 0 */
#define SCU_ACCEN1	(*( XBAR_PRIOH0_type *) 0xF00363F8U)	/* Access Enable Register 1 */
#define SMU_CLC	(*( SMU_CLC_type *) 0xF0036800U)	/* Clock Control Register */
#define SMU_ID	(*( XBAR_ID_type *) 0xF0036808U)	/* Module Identification Register */
#define SMU_OCS	(*( SMU_OCS_type *) 0xF0036FE8U)	/* OCDS Control and Status */
#define SMU_KRSTCLR	(*( SMU_KRSTCLR_type *) 0xF0036FECU)	/* SMU Reset Status Clear Register */
#define SMU_KRST1	(*( SMU_KRST1_type *) 0xF0036FF0U)	/* SMU Reset Register 1 */
#define SMU_KRST0	(*( SMU_KRST0_type *) 0xF0036FF4U)	/* SMU Reset Register 0 */
#define SMU_ACCEN1	(*( XBAR_PRIOH0_type *) 0xF0036FF8U)	/* SMU Access Enable Register 1 */
#define SMU_ACCEN0	(*( XBAR_ACCEN0_type *) 0xF0036FFCU)	/* SMU Access Enable Register 0 */
#define SMU_CMD	(*( SMU_CMD_type *) 0xF0036820U)	/* Command Register */
#define SMU_STS	(*( SMU_STS_type *) 0xF0036824U)	/* Status Register */
#define SMU_FSP	(*( SMU_FSP_type *) 0xF0036828U)	/* Fault Signaling Protocol */
#define SMU_AGC	(*( SMU_AGC_type *) 0xF003682CU)	/* Alarm Global Configuration */
#define SMU_RTC	(*( SMU_RTC_type *) 0xF0036830U)	/* Recovery Timer Configuration */
#define SMU_KEYS	(*( SMU_KEYS_type *) 0xF0036834U)	/* Key Register */
#define SMU_DBG	(*( SMU_DBG_type *) 0xF0036838U)	/* Debug Register */
#define SMU_PCTL	(*( SMU_PCTL_type *) 0xF003683CU)	/* Port Control */
#define SMU_AFCNT	(*( SMU_AFCNT_type *) 0xF0036840U)	/* Alarm and Fault Counter */
#define SMU_RTAC0	(*( SMU_RTAC0_type *) 0xF0036860U)	/* Recovery Timer Alarm Configuration */
#define SMU_RTAC1	(*( SMU_RTAC0_type *) 0xF0036864U)	/* Recovery Timer Alarm Configuration */
#define SMU_AG0CF0	(*( SMU_AG0CF0_type *) 0xF0036900U)	/* Alarm Configuration Register */
#define SMU_AG0CF1	(*( SMU_AG0CF0_type *) 0xF0036904U)	/* Alarm Configuration Register */
#define SMU_AG0CF2	(*( SMU_AG0CF0_type *) 0xF0036908U)	/* Alarm Configuration Register */
#define SMU_AG1CF0	(*( SMU_AG1CF0_type *) 0xF003690CU)	/* Alarm Configuration Register */
#define SMU_AG1CF1	(*( SMU_AG1CF0_type *) 0xF0036910U)	/* Alarm Configuration Register */
#define SMU_AG1CF2	(*( SMU_AG1CF0_type *) 0xF0036914U)	/* Alarm Configuration Register */
#define SMU_AG2CF0	(*( SMU_AG2CF0_type *) 0xF0036918U)	/* Alarm Configuration Register */
#define SMU_AG2CF1	(*( SMU_AG2CF0_type *) 0xF003691CU)	/* Alarm Configuration Register */
#define SMU_AG2CF2	(*( SMU_AG2CF0_type *) 0xF0036920U)	/* Alarm Configuration Register */
#define SMU_AG3CF0	(*( SMU_AG3CF0_type *) 0xF0036924U)	/* Alarm Configuration Register */
#define SMU_AG3CF1	(*( SMU_AG3CF1_type *) 0xF0036928U)	/* Alarm Configuration Register */
#define SMU_AG3CF2	(*( SMU_AG3CF2_type *) 0xF003692CU)	/* Alarm Configuration Register */
#define SMU_AG4CF0	(*( SMU_AG4CF0_type *) 0xF0036930U)	/* Alarm Configuration Register */
#define SMU_AG4CF1	(*( SMU_AG4CF0_type *) 0xF0036934U)	/* Alarm Configuration Register */
#define SMU_AG4CF2	(*( SMU_AG4CF0_type *) 0xF0036938U)	/* Alarm Configuration Register */
#define SMU_AG5CF0	(*( SMU_AG5CF0_type *) 0xF003693CU)	/* Alarm Configuration Register */
#define SMU_AG5CF1	(*( SMU_AG5CF0_type *) 0xF0036940U)	/* Alarm Configuration Register */
#define SMU_AG5CF2	(*( SMU_AG5CF0_type *) 0xF0036944U)	/* Alarm Configuration Register */
#define SMU_AG6CF0	(*( SMU_AG6CF0_type *) 0xF0036948U)	/* Alarm Configuration Register */
#define SMU_AG6CF1	(*( SMU_AG6CF0_type *) 0xF003694CU)	/* Alarm Configuration Register */
#define SMU_AG6CF2	(*( SMU_AG6CF0_type *) 0xF0036950U)	/* Alarm Configuration Register */
#define SMU_AG0FSP	(*( SMU_AG0FSP_type *) 0xF0036980U)	/* FSP Configuration Register */
#define SMU_AG1FSP	(*( SMU_AG1FSP_type *) 0xF0036984U)	/* FSP Configuration Register */
#define SMU_AG2FSP	(*( SMU_AG2FSP_type *) 0xF0036988U)	/* FSP Configuration Register */
#define SMU_AG3FSP	(*( SMU_AG3FSP_type *) 0xF003698CU)	/* FSP Configuration Register */
#define SMU_AG4FSP	(*( SMU_AG4FSP_type *) 0xF0036990U)	/* FSP Configuration Register */
#define SMU_AG5FSP	(*( SMU_AG5FSP_type *) 0xF0036994U)	/* FSP Configuration Register */
#define SMU_AG6FSP	(*( SMU_AG6FSP_type *) 0xF0036998U)	/* FSP Configuration Register */
#define SMU_AG0	(*( SMU_AG0_type *) 0xF00369C0U)	/* Alarm Status Register */
#define SMU_AG1	(*( SMU_AG0_type *) 0xF00369C4U)	/* Alarm Status Register */
#define SMU_AG2	(*( SMU_AG0_type *) 0xF00369C8U)	/* Alarm Status Register */
#define SMU_AG3	(*( SMU_AG0_type *) 0xF00369CCU)	/* Alarm Status Register */
#define SMU_AG4	(*( SMU_AG0_type *) 0xF00369D0U)	/* Alarm Status Register */
#define SMU_AG5	(*( SMU_AG0_type *) 0xF00369D4U)	/* Alarm Status Register */
#define SMU_AG6	(*( SMU_AG0_type *) 0xF00369D8U)	/* Alarm Status Register */
#define SMU_AD0	(*( SMU_AD0_type *) 0xF0036A00U)	/* Alarm Status Register */
#define SMU_AD1	(*( SMU_AD0_type *) 0xF0036A04U)	/* Alarm Status Register */
#define SMU_AD2	(*( SMU_AD0_type *) 0xF0036A08U)	/* Alarm Status Register */
#define SMU_AD3	(*( SMU_AD0_type *) 0xF0036A0CU)	/* Alarm Status Register */
#define SMU_AD4	(*( SMU_AD0_type *) 0xF0036A10U)	/* Alarm Status Register */
#define SMU_AD5	(*( SMU_AD0_type *) 0xF0036A14U)	/* Alarm Status Register */
#define SMU_AD6	(*( SMU_AD0_type *) 0xF0036A18U)	/* Alarm Status Register */
#define SMU_RMCTL	(*( SMU_RMCTL_type *) 0xF0036B00U)	/* Register Monitor Control */
#define SMU_RMEF	(*( SMU_RMEF_type *) 0xF0036B04U)	/* Register Monitor Error Flags */
#define SMU_RMSTS	(*( SMU_RMSTS_type *) 0xF0036B08U)	/* Register Monitor Self Test Status */
#define IOM_ID	(*( IOM_ID_type *) 0xF0035008U)	/* IOM Identification Register */
#define IOM_FPCESR	(*( IOM_FPCESR_type *) 0xF0035078U)	/* IOM Filter and Prescaler Cells Rising & Falling Edge Status Register */
#define IOM_FPCCTR0	(*( IOM_FPCCTR0_type *) 0xF0035080U)	/* IOM Filter and Prescaler Cell Control Register0 */
#define IOM_FPCCTR1	(*( IOM_FPCCTR0_type *) 0xF0035084U)	/* IOM Filter and Prescaler Cell Control Register1 */
#define IOM_FPCCTR2	(*( IOM_FPCCTR0_type *) 0xF0035088U)	/* IOM Filter and Prescaler Cell Control Register2 */
#define IOM_FPCCTR3	(*( IOM_FPCCTR0_type *) 0xF003508CU)	/* IOM Filter and Prescaler Cell Control Register3 */
#define IOM_FPCCTR4	(*( IOM_FPCCTR0_type *) 0xF0035090U)	/* IOM Filter and Prescaler Cell Control Register4 */
#define IOM_FPCCTR5	(*( IOM_FPCCTR0_type *) 0xF0035094U)	/* IOM Filter and Prescaler Cell Control Register5 */
#define IOM_FPCCTR6	(*( IOM_FPCCTR0_type *) 0xF0035098U)	/* IOM Filter and Prescaler Cell Control Register6 */
#define IOM_FPCCTR7	(*( IOM_FPCCTR0_type *) 0xF003509CU)	/* IOM Filter and Prescaler Cell Control Register7 */
#define IOM_FPCCTR8	(*( IOM_FPCCTR0_type *) 0xF00350A0U)	/* IOM Filter and Prescaler Cell Control Register8 */
#define IOM_FPCCTR9	(*( IOM_FPCCTR0_type *) 0xF00350A4U)	/* IOM Filter and Prescaler Cell Control Register9 */
#define IOM_FPCCTR10	(*( IOM_FPCCTR0_type *) 0xF00350A8U)	/* IOM Filter and Prescaler Cell Control Register10 */
#define IOM_FPCCTR11	(*( IOM_FPCCTR0_type *) 0xF00350ACU)	/* IOM Filter and Prescaler Cell Control Register11 */
#define IOM_FPCCTR12	(*( IOM_FPCCTR0_type *) 0xF00350B0U)	/* IOM Filter and Prescaler Cell Control Register12 */
#define IOM_FPCCTR13	(*( IOM_FPCCTR0_type *) 0xF00350B4U)	/* IOM Filter and Prescaler Cell Control Register13 */
#define IOM_FPCCTR14	(*( IOM_FPCCTR0_type *) 0xF00350B8U)	/* IOM Filter and Prescaler Cell Control Register14 */
#define IOM_FPCCTR15	(*( IOM_FPCCTR0_type *) 0xF00350BCU)	/* IOM Filter and Prescaler Cell Control Register15 */
#define IOM_FPCTIM0	(*( IOM_FPCTIM0_type *) 0xF00350C0U)	/* IOM Filter and Prescaler Cell 0Timer Registerk */
#define IOM_FPCTIM1	(*( IOM_FPCTIM0_type *) 0xF00350C4U)	/* IOM Filter and Prescaler Cell 1Timer Registerk */
#define IOM_FPCTIM2	(*( IOM_FPCTIM0_type *) 0xF00350C8U)	/* IOM Filter and Prescaler Cell 2Timer Registerk */
#define IOM_FPCTIM3	(*( IOM_FPCTIM0_type *) 0xF00350CCU)	/* IOM Filter and Prescaler Cell 3Timer Registerk */
#define IOM_FPCTIM4	(*( IOM_FPCTIM0_type *) 0xF00350D0U)	/* IOM Filter and Prescaler Cell 4Timer Registerk */
#define IOM_FPCTIM5	(*( IOM_FPCTIM0_type *) 0xF00350D4U)	/* IOM Filter and Prescaler Cell 5Timer Registerk */
#define IOM_FPCTIM6	(*( IOM_FPCTIM0_type *) 0xF00350D8U)	/* IOM Filter and Prescaler Cell 6Timer Registerk */
#define IOM_FPCTIM7	(*( IOM_FPCTIM0_type *) 0xF00350DCU)	/* IOM Filter and Prescaler Cell 7Timer Registerk */
#define IOM_FPCTIM8	(*( IOM_FPCTIM0_type *) 0xF00350E0U)	/* IOM Filter and Prescaler Cell 8Timer Registerk */
#define IOM_FPCTIM9	(*( IOM_FPCTIM0_type *) 0xF00350E4U)	/* IOM Filter and Prescaler Cell 9Timer Registerk */
#define IOM_FPCTIM10	(*( IOM_FPCTIM0_type *) 0xF00350E8U)	/* IOM Filter and Prescaler Cell 10Timer Registerk */
#define IOM_FPCTIM11	(*( IOM_FPCTIM0_type *) 0xF00350ECU)	/* IOM Filter and Prescaler Cell 11Timer Registerk */
#define IOM_FPCTIM12	(*( IOM_FPCTIM0_type *) 0xF00350F0U)	/* IOM Filter and Prescaler Cell 12Timer Registerk */
#define IOM_FPCTIM13	(*( IOM_FPCTIM0_type *) 0xF00350F4U)	/* IOM Filter and Prescaler Cell 13Timer Registerk */
#define IOM_FPCTIM14	(*( IOM_FPCTIM0_type *) 0xF00350F8U)	/* IOM Filter and Prescaler Cell 14Timer Registerk */
#define IOM_FPCTIM15	(*( IOM_FPCTIM0_type *) 0xF00350FCU)	/* IOM Filter and Prescaler Cell 15Timer Registerk */
#define IOM_GTMEXR	(*( IOM_GTMEXR_type *) 0xF0035040U)	/* IOM GTM Input EXOR Combiner Selection Register */
#define IOM_LAMEWC0	(*( IOM_LAMEWC0_type *) 0xF0035100U)	/* IOM Logic Analyzer Module Event Window Count Status Register0 */
#define IOM_LAMEWC1	(*( IOM_LAMEWC0_type *) 0xF0035104U)	/* IOM Logic Analyzer Module Event Window Count Status Register1 */
#define IOM_LAMEWC2	(*( IOM_LAMEWC0_type *) 0xF0035108U)	/* IOM Logic Analyzer Module Event Window Count Status Register2 */
#define IOM_LAMEWC3	(*( IOM_LAMEWC0_type *) 0xF003510CU)	/* IOM Logic Analyzer Module Event Window Count Status Register3 */
#define IOM_LAMEWC4	(*( IOM_LAMEWC0_type *) 0xF0035110U)	/* IOM Logic Analyzer Module Event Window Count Status Register4 */
#define IOM_LAMEWC5	(*( IOM_LAMEWC0_type *) 0xF0035114U)	/* IOM Logic Analyzer Module Event Window Count Status Register5 */
#define IOM_LAMEWC6	(*( IOM_LAMEWC0_type *) 0xF0035118U)	/* IOM Logic Analyzer Module Event Window Count Status Register6 */
#define IOM_LAMEWC7	(*( IOM_LAMEWC0_type *) 0xF003511CU)	/* IOM Logic Analyzer Module Event Window Count Status Register7 */
#define IOM_LAMEWC8	(*( IOM_LAMEWC0_type *) 0xF0035120U)	/* IOM Logic Analyzer Module Event Window Count Status Register8 */
#define IOM_LAMEWC9	(*( IOM_LAMEWC0_type *) 0xF0035124U)	/* IOM Logic Analyzer Module Event Window Count Status Register9 */
#define IOM_LAMEWC10	(*( IOM_LAMEWC0_type *) 0xF0035128U)	/* IOM Logic Analyzer Module Event Window Count Status Register10 */
#define IOM_LAMEWC11	(*( IOM_LAMEWC0_type *) 0xF003512CU)	/* IOM Logic Analyzer Module Event Window Count Status Register11 */
#define IOM_LAMEWC12	(*( IOM_LAMEWC0_type *) 0xF0035130U)	/* IOM Logic Analyzer Module Event Window Count Status Register12 */
#define IOM_LAMEWC13	(*( IOM_LAMEWC0_type *) 0xF0035134U)	/* IOM Logic Analyzer Module Event Window Count Status Register13 */
#define IOM_LAMEWC14	(*( IOM_LAMEWC0_type *) 0xF0035138U)	/* IOM Logic Analyzer Module Event Window Count Status Register14 */
#define IOM_LAMEWC15	(*( IOM_LAMEWC0_type *) 0xF003513CU)	/* IOM Logic Analyzer Module Event Window Count Status Register15 */
#define IOM_LAMCFG0	(*( IOM_LAMCFG0_type *) 0xF0035180U)	/* IOM Logic Analyzer Module Configuration Register0 */
#define IOM_LAMCFG1	(*( IOM_LAMCFG0_type *) 0xF0035184U)	/* IOM Logic Analyzer Module Configuration Register1 */
#define IOM_LAMCFG2	(*( IOM_LAMCFG0_type *) 0xF0035188U)	/* IOM Logic Analyzer Module Configuration Register2 */
#define IOM_LAMCFG3	(*( IOM_LAMCFG0_type *) 0xF003518CU)	/* IOM Logic Analyzer Module Configuration Register3 */
#define IOM_LAMCFG4	(*( IOM_LAMCFG0_type *) 0xF0035190U)	/* IOM Logic Analyzer Module Configuration Register4 */
#define IOM_LAMCFG5	(*( IOM_LAMCFG0_type *) 0xF0035194U)	/* IOM Logic Analyzer Module Configuration Register5 */
#define IOM_LAMCFG6	(*( IOM_LAMCFG0_type *) 0xF0035198U)	/* IOM Logic Analyzer Module Configuration Register6 */
#define IOM_LAMCFG7	(*( IOM_LAMCFG0_type *) 0xF003519CU)	/* IOM Logic Analyzer Module Configuration Register7 */
#define IOM_LAMCFG8	(*( IOM_LAMCFG0_type *) 0xF00351A0U)	/* IOM Logic Analyzer Module Configuration Register8 */
#define IOM_LAMCFG9	(*( IOM_LAMCFG0_type *) 0xF00351A4U)	/* IOM Logic Analyzer Module Configuration Register9 */
#define IOM_LAMCFG10	(*( IOM_LAMCFG0_type *) 0xF00351A8U)	/* IOM Logic Analyzer Module Configuration Register10 */
#define IOM_LAMCFG11	(*( IOM_LAMCFG0_type *) 0xF00351ACU)	/* IOM Logic Analyzer Module Configuration Register11 */
#define IOM_LAMCFG12	(*( IOM_LAMCFG0_type *) 0xF00351B0U)	/* IOM Logic Analyzer Module Configuration Register12 */
#define IOM_LAMCFG13	(*( IOM_LAMCFG0_type *) 0xF00351B4U)	/* IOM Logic Analyzer Module Configuration Register13 */
#define IOM_LAMCFG14	(*( IOM_LAMCFG0_type *) 0xF00351B8U)	/* IOM Logic Analyzer Module Configuration Register14 */
#define IOM_LAMCFG15	(*( IOM_LAMCFG0_type *) 0xF00351BCU)	/* IOM Logic Analyzer Module Configuration Register15 */
#define IOM_LAMEWS0	(*( IOM_LAMEWS0_type *) 0xF00351C0U)	/* IOM Logic Analyzer Module Event Window Configuration Register0 */
#define IOM_LAMEWS1	(*( IOM_LAMEWS0_type *) 0xF00351C4U)	/* IOM Logic Analyzer Module Event Window Configuration Register1 */
#define IOM_LAMEWS2	(*( IOM_LAMEWS0_type *) 0xF00351C8U)	/* IOM Logic Analyzer Module Event Window Configuration Register2 */
#define IOM_LAMEWS3	(*( IOM_LAMEWS0_type *) 0xF00351CCU)	/* IOM Logic Analyzer Module Event Window Configuration Register3 */
#define IOM_LAMEWS4	(*( IOM_LAMEWS0_type *) 0xF00351D0U)	/* IOM Logic Analyzer Module Event Window Configuration Register4 */
#define IOM_LAMEWS5	(*( IOM_LAMEWS0_type *) 0xF00351D4U)	/* IOM Logic Analyzer Module Event Window Configuration Register5 */
#define IOM_LAMEWS6	(*( IOM_LAMEWS0_type *) 0xF00351D8U)	/* IOM Logic Analyzer Module Event Window Configuration Register6 */
#define IOM_LAMEWS7	(*( IOM_LAMEWS0_type *) 0xF00351DCU)	/* IOM Logic Analyzer Module Event Window Configuration Register7 */
#define IOM_LAMEWS8	(*( IOM_LAMEWS0_type *) 0xF00351E0U)	/* IOM Logic Analyzer Module Event Window Configuration Register8 */
#define IOM_LAMEWS9	(*( IOM_LAMEWS0_type *) 0xF00351E4U)	/* IOM Logic Analyzer Module Event Window Configuration Register9 */
#define IOM_LAMEWS10	(*( IOM_LAMEWS0_type *) 0xF00351E8U)	/* IOM Logic Analyzer Module Event Window Configuration Register10 */
#define IOM_LAMEWS11	(*( IOM_LAMEWS0_type *) 0xF00351ECU)	/* IOM Logic Analyzer Module Event Window Configuration Register11 */
#define IOM_LAMEWS12	(*( IOM_LAMEWS0_type *) 0xF00351F0U)	/* IOM Logic Analyzer Module Event Window Configuration Register12 */
#define IOM_LAMEWS13	(*( IOM_LAMEWS0_type *) 0xF00351F4U)	/* IOM Logic Analyzer Module Event Window Configuration Register13 */
#define IOM_LAMEWS14	(*( IOM_LAMEWS0_type *) 0xF00351F8U)	/* IOM Logic Analyzer Module Event Window Configuration Register14 */
#define IOM_LAMEWS15	(*( IOM_LAMEWS0_type *) 0xF00351FCU)	/* IOM Logic Analyzer Module Event Window Configuration Register15 */
#define IOM_ECMCCFG	(*( IOM_ECMCCFG_type *) 0xF0035030U)	/* IOM Event Combiner Module Counter Configuration Register */
#define IOM_ECMSELR	(*( IOM_ECMSELR_type *) 0xF0035034U)	/* IOM Event Combiner Module Global Event Selection Register */
#define IOM_ECMETH0	(*( IOM_ECMETH0_type *) 0xF0035038U)	/* IOM Event Combiner Module Event Trigger History Register 0 */
#define IOM_ECMETH1	(*( IOM_ECMETH1_type *) 0xF003503CU)	/* IOM Event Combiner Module Event Trigger History Register 1 */
#define IOM_CLC	(*( IOM_CLC_type *) 0xF0035000U)	/* IOM Clock Control Register */
#define IOM_ACCEN0	(*( XBAR_ACCEN0_type *) 0xF003502CU)	/* IOM Access Enable Register 0 */
#define IOM_ACCEN1	(*( XBAR_PRIOH0_type *) 0xF0035028U)	/* IOM Access Enable Register 1 */
#define IOM_KRST0	(*( SMU_KRST0_type *) 0xF0035024U)	/* IOM Kernel Reset Register 0 */
#define IOM_KRST1	(*( SMU_KRST1_type *) 0xF0035020U)	/* IOM Kernel Reset Register 1 */
#define IOM_KRSTCLR	(*( SMU_KRSTCLR_type *) 0xF003501CU)	/* IOM Kernel Reset Status Clear Register */
#define ASCLIN0_IOCR	(*( ASCLIN0_IOCR_type *) 0xF0000604U)	/* Input and Output Control Register */
#define ASCLIN1_IOCR	(*( ASCLIN0_IOCR_type *) 0xF0000704U)	/* Input and Output Control Register */
#define ASCLIN0_ID	(*( ASCLIN0_ID_type *) 0xF0000608U)	/* Module Identification Register */
#define ASCLIN1_ID	(*( ASCLIN0_ID_type *) 0xF0000708U)	/* Module Identification Register */
#define ASCLIN0_TXFIFOCON	(*( ASCLIN0_TXFIFOCON_type *) 0xF000060CU)	/* TX FIFO Configuration Register */
#define ASCLIN1_TXFIFOCON	(*( ASCLIN0_TXFIFOCON_type *) 0xF000070CU)	/* TX FIFO Configuration Register */
#define ASCLIN0_RXFIFOCON	(*( ASCLIN0_RXFIFOCON_type *) 0xF0000610U)	/* RX FIFO Configuration Register */
#define ASCLIN1_RXFIFOCON	(*( ASCLIN0_RXFIFOCON_type *) 0xF0000710U)	/* RX FIFO Configuration Register */
#define ASCLIN0_BITCON	(*( ASCLIN0_BITCON_type *) 0xF0000614U)	/* Bit Configuration Register */
#define ASCLIN1_BITCON	(*( ASCLIN0_BITCON_type *) 0xF0000714U)	/* Bit Configuration Register */
#define ASCLIN0_FRAMECON	(*( ASCLIN0_FRAMECON_type *) 0xF0000618U)	/* Frame Control Register */
#define ASCLIN1_FRAMECON	(*( ASCLIN0_FRAMECON_type *) 0xF0000718U)	/* Frame Control Register */
#define ASCLIN0_DATCON	(*( ASCLIN0_DATCON_type *) 0xF000061CU)	/* Data Configuration Register */
#define ASCLIN1_DATCON	(*( ASCLIN0_DATCON_type *) 0xF000071CU)	/* Data Configuration Register */
#define ASCLIN0_BRG	(*( ASCLIN0_BRG_type *) 0xF0000620U)	/* Baud Rate Generation Register */
#define ASCLIN1_BRG	(*( ASCLIN0_BRG_type *) 0xF0000720U)	/* Baud Rate Generation Register */
#define ASCLIN0_BRD	(*( ASCLIN0_BRD_type *) 0xF0000624U)	/* Baud Rate Detection Register */
#define ASCLIN1_BRD	(*( ASCLIN0_BRD_type *) 0xF0000724U)	/* Baud Rate Detection Register */
#define ASCLIN0_LINCON	(*( ASCLIN0_LINCON_type *) 0xF0000628U)	/* LIN Control Register */
#define ASCLIN1_LINCON	(*( ASCLIN0_LINCON_type *) 0xF0000728U)	/* LIN Control Register */
#define ASCLIN0_LINBTIMER	(*( ASCLIN0_LINBTIMER_type *) 0xF000062CU)	/* LIN Break Timer Register */
#define ASCLIN1_LINBTIMER	(*( ASCLIN0_LINBTIMER_type *) 0xF000072CU)	/* LIN Break Timer Register */
#define ASCLIN0_LINHTIMER	(*( ASCLIN0_LINHTIMER_type *) 0xF0000630U)	/* LIN Header Timer Register */
#define ASCLIN1_LINHTIMER	(*( ASCLIN0_LINHTIMER_type *) 0xF0000730U)	/* LIN Header Timer Register */
#define ASCLIN0_FLAGS	(*( ASCLIN0_FLAGS_type *) 0xF0000634U)	/* Flags Register */
#define ASCLIN1_FLAGS	(*( ASCLIN0_FLAGS_type *) 0xF0000734U)	/* Flags Register */
#define ASCLIN0_FLAGSSET	(*( ASCLIN0_FLAGSSET_type *) 0xF0000638U)	/* Flags Set Register */
#define ASCLIN1_FLAGSSET	(*( ASCLIN0_FLAGSSET_type *) 0xF0000738U)	/* Flags Set Register */
#define ASCLIN0_FLAGSCLEAR	(*( ASCLIN0_FLAGSCLEAR_type *) 0xF000063CU)	/* Flags Clear Register */
#define ASCLIN1_FLAGSCLEAR	(*( ASCLIN0_FLAGSCLEAR_type *) 0xF000073CU)	/* Flags Clear Register */
#define ASCLIN0_FLAGSENABLE	(*( ASCLIN0_FLAGSENABLE_type *) 0xF0000640U)	/* Flags Enable Register */
#define ASCLIN1_FLAGSENABLE	(*( ASCLIN0_FLAGSENABLE_type *) 0xF0000740U)	/* Flags Enable Register */
#define ASCLIN0_TXDATA	(*( ASCLIN0_TXDATA_type *) 0xF0000644U)	/* Transmit Data Register */
#define ASCLIN1_TXDATA	(*( ASCLIN0_TXDATA_type *) 0xF0000744U)	/* Transmit Data Register */
#define ASCLIN0_RXDATA	(*( ASCLIN0_TXDATA_type *) 0xF0000648U)	/* Receive Data Register */
#define ASCLIN1_RXDATA	(*( ASCLIN0_TXDATA_type *) 0xF0000748U)	/* Receive Data Register */
#define ASCLIN0_CSR	(*( ASCLIN0_CSR_type *) 0xF000064CU)	/* Clock Selection Register */
#define ASCLIN1_CSR	(*( ASCLIN0_CSR_type *) 0xF000074CU)	/* Clock Selection Register */
#define ASCLIN0_RXDATAD	(*( ASCLIN0_TXDATA_type *) 0xF0000650U)	/* Receive Data Debug Register */
#define ASCLIN1_RXDATAD	(*( ASCLIN0_TXDATA_type *) 0xF0000750U)	/* Receive Data Debug Register */
#define ASCLIN0_CLC	(*( ASCLIN0_CLC_type *) 0xF0000600U)	/* Clock Control Register */
#define ASCLIN1_CLC	(*( ASCLIN0_CLC_type *) 0xF0000700U)	/* Clock Control Register */
#define ASCLIN0_OCS	(*( ASCLIN0_OCS_type *) 0xF00006E8U)	/* OCDS Control and Status */
#define ASCLIN1_OCS	(*( ASCLIN0_OCS_type *) 0xF00007E8U)	/* OCDS Control and Status */
#define ASCLIN0_ACCEN0	(*( XBAR_ACCEN0_type *) 0xF00006FCU)	/* Access Enable Register 0 */
#define ASCLIN1_ACCEN0	(*( XBAR_ACCEN0_type *) 0xF00007FCU)	/* Access Enable Register 0 */
#define ASCLIN0_ACCEN1	(*( XBAR_PRIOH0_type *) 0xF00006F8U)	/* Access Enable Register 1 */
#define ASCLIN1_ACCEN1	(*( XBAR_PRIOH0_type *) 0xF00007F8U)	/* Access Enable Register 1 */
#define ASCLIN0_KRST0	(*( SMU_KRST0_type *) 0xF00006F4U)	/* Kernel Reset Register 0 */
#define ASCLIN1_KRST0	(*( SMU_KRST0_type *) 0xF00007F4U)	/* Kernel Reset Register 0 */
#define ASCLIN0_KRST1	(*( SMU_KRST1_type *) 0xF00006F0U)	/* Kernel Reset Register 1 */
#define ASCLIN1_KRST1	(*( SMU_KRST1_type *) 0xF00007F0U)	/* Kernel Reset Register 1 */
#define ASCLIN0_KRSTCLR	(*( SMU_KRSTCLR_type *) 0xF00006ECU)	/* Kernel Reset Status Clear Register */
#define ASCLIN1_KRSTCLR	(*( SMU_KRSTCLR_type *) 0xF00007ECU)	/* Kernel Reset Status Clear Register */
#define QSPI0_PISEL	(*( QSPI0_PISEL_type *) 0xF0001C04U)	/* Port Input Select Register */
#define QSPI1_PISEL	(*( QSPI0_PISEL_type *) 0xF0001D04U)	/* Port Input Select Register */
#define QSPI2_PISEL	(*( QSPI0_PISEL_type *) 0xF0001E04U)	/* Port Input Select Register */
#define QSPI3_PISEL	(*( QSPI0_PISEL_type *) 0xF0001F04U)	/* Port Input Select Register */
#define QSPI0_ID	(*( ASCLIN0_ID_type *) 0xF0001C08U)	/* Module Identification Register */
#define QSPI1_ID	(*( ASCLIN0_ID_type *) 0xF0001D08U)	/* Module Identification Register */
#define QSPI2_ID	(*( ASCLIN0_ID_type *) 0xF0001E08U)	/* Module Identification Register */
#define QSPI3_ID	(*( ASCLIN0_ID_type *) 0xF0001F08U)	/* Module Identification Register */
#define QSPI0_GLOBALCON	(*( QSPI0_GLOBALCON_type *) 0xF0001C10U)	/* Global Configuration Register */
#define QSPI1_GLOBALCON	(*( QSPI0_GLOBALCON_type *) 0xF0001D10U)	/* Global Configuration Register */
#define QSPI2_GLOBALCON	(*( QSPI0_GLOBALCON_type *) 0xF0001E10U)	/* Global Configuration Register */
#define QSPI3_GLOBALCON	(*( QSPI0_GLOBALCON_type *) 0xF0001F10U)	/* Global Configuration Register */
#define QSPI0_GLOBALCON1	(*( QSPI0_GLOBALCON1_type *) 0xF0001C14U)	/* Global Configuration Register 1 */
#define QSPI1_GLOBALCON1	(*( QSPI0_GLOBALCON1_type *) 0xF0001D14U)	/* Global Configuration Register 1 */
#define QSPI2_GLOBALCON1	(*( QSPI0_GLOBALCON1_type *) 0xF0001E14U)	/* Global Configuration Register 1 */
#define QSPI3_GLOBALCON1	(*( QSPI0_GLOBALCON1_type *) 0xF0001F14U)	/* Global Configuration Register 1 */
#define QSPI0_BACON	(*( QSPI0_BACON_type *) 0xF0001C18U)	/* Basic Configuration Register */
#define QSPI1_BACON	(*( QSPI0_BACON_type *) 0xF0001D18U)	/* Basic Configuration Register */
#define QSPI2_BACON	(*( QSPI0_BACON_type *) 0xF0001E18U)	/* Basic Configuration Register */
#define QSPI3_BACON	(*( QSPI0_BACON_type *) 0xF0001F18U)	/* Basic Configuration Register */
#define QSPI0_ECON0	(*( QSPI0_ECON0_type *) 0xF0001C20U)	/* Configuration Extension 0 */
#define QSPI0_ECON1	(*( QSPI0_ECON0_type *) 0xF0001C24U)	/* Configuration Extension 1 */
#define QSPI0_ECON2	(*( QSPI0_ECON0_type *) 0xF0001C28U)	/* Configuration Extension 2 */
#define QSPI0_ECON3	(*( QSPI0_ECON0_type *) 0xF0001C2CU)	/* Configuration Extension 3 */
#define QSPI0_ECON4	(*( QSPI0_ECON0_type *) 0xF0001C30U)	/* Configuration Extension 4 */
#define QSPI0_ECON5	(*( QSPI0_ECON0_type *) 0xF0001C34U)	/* Configuration Extension 5 */
#define QSPI0_ECON6	(*( QSPI0_ECON0_type *) 0xF0001C38U)	/* Configuration Extension 6 */
#define QSPI0_ECON7	(*( QSPI0_ECON0_type *) 0xF0001C3CU)	/* Configuration Extension 7 */
#define QSPI1_ECON0	(*( QSPI0_ECON0_type *) 0xF0001D20U)	/* Configuration Extension 0 */
#define QSPI1_ECON1	(*( QSPI0_ECON0_type *) 0xF0001D24U)	/* Configuration Extension 1 */
#define QSPI1_ECON2	(*( QSPI0_ECON0_type *) 0xF0001D28U)	/* Configuration Extension 2 */
#define QSPI1_ECON3	(*( QSPI0_ECON0_type *) 0xF0001D2CU)	/* Configuration Extension 3 */
#define QSPI1_ECON4	(*( QSPI0_ECON0_type *) 0xF0001D30U)	/* Configuration Extension 4 */
#define QSPI1_ECON5	(*( QSPI0_ECON0_type *) 0xF0001D34U)	/* Configuration Extension 5 */
#define QSPI1_ECON6	(*( QSPI0_ECON0_type *) 0xF0001D38U)	/* Configuration Extension 6 */
#define QSPI1_ECON7	(*( QSPI0_ECON0_type *) 0xF0001D3CU)	/* Configuration Extension 7 */
#define QSPI2_ECON0	(*( QSPI0_ECON0_type *) 0xF0001E20U)	/* Configuration Extension 0 */
#define QSPI2_ECON1	(*( QSPI0_ECON0_type *) 0xF0001E24U)	/* Configuration Extension 1 */
#define QSPI2_ECON2	(*( QSPI0_ECON0_type *) 0xF0001E28U)	/* Configuration Extension 2 */
#define QSPI2_ECON3	(*( QSPI0_ECON0_type *) 0xF0001E2CU)	/* Configuration Extension 3 */
#define QSPI2_ECON4	(*( QSPI0_ECON0_type *) 0xF0001E30U)	/* Configuration Extension 4 */
#define QSPI2_ECON5	(*( QSPI0_ECON0_type *) 0xF0001E34U)	/* Configuration Extension 5 */
#define QSPI2_ECON6	(*( QSPI0_ECON0_type *) 0xF0001E38U)	/* Configuration Extension 6 */
#define QSPI2_ECON7	(*( QSPI0_ECON0_type *) 0xF0001E3CU)	/* Configuration Extension 7 */
#define QSPI3_ECON0	(*( QSPI0_ECON0_type *) 0xF0001F20U)	/* Configuration Extension 0 */
#define QSPI3_ECON1	(*( QSPI0_ECON0_type *) 0xF0001F24U)	/* Configuration Extension 1 */
#define QSPI3_ECON2	(*( QSPI0_ECON0_type *) 0xF0001F28U)	/* Configuration Extension 2 */
#define QSPI3_ECON3	(*( QSPI0_ECON0_type *) 0xF0001F2CU)	/* Configuration Extension 3 */
#define QSPI3_ECON4	(*( QSPI0_ECON0_type *) 0xF0001F30U)	/* Configuration Extension 4 */
#define QSPI3_ECON5	(*( QSPI0_ECON0_type *) 0xF0001F34U)	/* Configuration Extension 5 */
#define QSPI3_ECON6	(*( QSPI0_ECON0_type *) 0xF0001F38U)	/* Configuration Extension 6 */
#define QSPI3_ECON7	(*( QSPI0_ECON0_type *) 0xF0001F3CU)	/* Configuration Extension 7 */
#define QSPI0_STATUS	(*( QSPI0_STATUS_type *) 0xF0001C40U)	/* Status Register */
#define QSPI1_STATUS	(*( QSPI0_STATUS_type *) 0xF0001D40U)	/* Status Register */
#define QSPI2_STATUS	(*( QSPI0_STATUS_type *) 0xF0001E40U)	/* Status Register */
#define QSPI3_STATUS	(*( QSPI0_STATUS_type *) 0xF0001F40U)	/* Status Register */
#define QSPI0_STATUS1	(*( QSPI0_STATUS1_type *) 0xF0001C44U)	/* Status Register 1 */
#define QSPI1_STATUS1	(*( QSPI0_STATUS1_type *) 0xF0001D44U)	/* Status Register 1 */
#define QSPI2_STATUS1	(*( QSPI0_STATUS1_type *) 0xF0001E44U)	/* Status Register 1 */
#define QSPI3_STATUS1	(*( QSPI0_STATUS1_type *) 0xF0001F44U)	/* Status Register 1 */
#define QSPI0_SSOC	(*( QSPI0_SSOC_type *) 0xF0001C48U)	/* Slave Select Output Control Register */
#define QSPI1_SSOC	(*( QSPI0_SSOC_type *) 0xF0001D48U)	/* Slave Select Output Control Register */
#define QSPI2_SSOC	(*( QSPI0_SSOC_type *) 0xF0001E48U)	/* Slave Select Output Control Register */
#define QSPI3_SSOC	(*( QSPI0_SSOC_type *) 0xF0001F48U)	/* Slave Select Output Control Register */
#define QSPI0_FLAGSCLEAR	(*( QSPI0_FLAGSCLEAR_type *) 0xF0001C54U)	/* Flags Clear Register */
#define QSPI1_FLAGSCLEAR	(*( QSPI0_FLAGSCLEAR_type *) 0xF0001D54U)	/* Flags Clear Register */
#define QSPI2_FLAGSCLEAR	(*( QSPI0_FLAGSCLEAR_type *) 0xF0001E54U)	/* Flags Clear Register */
#define QSPI3_FLAGSCLEAR	(*( QSPI0_FLAGSCLEAR_type *) 0xF0001F54U)	/* Flags Clear Register */
#define QSPI0_XXLCON	(*( QSPI0_XXLCON_type *) 0xF0001C58U)	/* Extra Large Data Configuration Register */
#define QSPI1_XXLCON	(*( QSPI0_XXLCON_type *) 0xF0001D58U)	/* Extra Large Data Configuration Register */
#define QSPI2_XXLCON	(*( QSPI0_XXLCON_type *) 0xF0001E58U)	/* Extra Large Data Configuration Register */
#define QSPI3_XXLCON	(*( QSPI0_XXLCON_type *) 0xF0001F58U)	/* Extra Large Data Configuration Register */
#define QSPI0_MIXENTRY	(*( QSPI0_MIXENTRY_type *) 0xF0001C5CU)	/* MIX_ENTRY Register */
#define QSPI1_MIXENTRY	(*( QSPI0_MIXENTRY_type *) 0xF0001D5CU)	/* MIX_ENTRY Register */
#define QSPI2_MIXENTRY	(*( QSPI0_MIXENTRY_type *) 0xF0001E5CU)	/* MIX_ENTRY Register */
#define QSPI3_MIXENTRY	(*( QSPI0_MIXENTRY_type *) 0xF0001F5CU)	/* MIX_ENTRY Register */
#define QSPI0_BACONENTRY	(*( QSPI0_MIXENTRY_type *) 0xF0001C60U)	/* BACON_ENTRY Register */
#define QSPI1_BACONENTRY	(*( QSPI0_MIXENTRY_type *) 0xF0001D60U)	/* BACON_ENTRY Register */
#define QSPI2_BACONENTRY	(*( QSPI0_MIXENTRY_type *) 0xF0001E60U)	/* BACON_ENTRY Register */
#define QSPI3_BACONENTRY	(*( QSPI0_MIXENTRY_type *) 0xF0001F60U)	/* BACON_ENTRY Register */
#define QSPI0_DATAENTRY0	(*( QSPI0_MIXENTRY_type *) 0xF0001C64U)	/* DATA_ENTRY Register 0 */
#define QSPI0_DATAENTRY1	(*( QSPI0_MIXENTRY_type *) 0xF0001C68U)	/* DATA_ENTRY Register 1 */
#define QSPI0_DATAENTRY2	(*( QSPI0_MIXENTRY_type *) 0xF0001C6CU)	/* DATA_ENTRY Register 2 */
#define QSPI0_DATAENTRY3	(*( QSPI0_MIXENTRY_type *) 0xF0001C70U)	/* DATA_ENTRY Register 3 */
#define QSPI0_DATAENTRY4	(*( QSPI0_MIXENTRY_type *) 0xF0001C74U)	/* DATA_ENTRY Register 4 */
#define QSPI0_DATAENTRY5	(*( QSPI0_MIXENTRY_type *) 0xF0001C78U)	/* DATA_ENTRY Register 5 */
#define QSPI0_DATAENTRY6	(*( QSPI0_MIXENTRY_type *) 0xF0001C7CU)	/* DATA_ENTRY Register 6 */
#define QSPI0_DATAENTRY7	(*( QSPI0_MIXENTRY_type *) 0xF0001C80U)	/* DATA_ENTRY Register 7 */
#define QSPI1_DATAENTRY0	(*( QSPI0_MIXENTRY_type *) 0xF0001D64U)	/* DATA_ENTRY Register 0 */
#define QSPI1_DATAENTRY1	(*( QSPI0_MIXENTRY_type *) 0xF0001D68U)	/* DATA_ENTRY Register 1 */
#define QSPI1_DATAENTRY2	(*( QSPI0_MIXENTRY_type *) 0xF0001D6CU)	/* DATA_ENTRY Register 2 */
#define QSPI1_DATAENTRY3	(*( QSPI0_MIXENTRY_type *) 0xF0001D70U)	/* DATA_ENTRY Register 3 */
#define QSPI1_DATAENTRY4	(*( QSPI0_MIXENTRY_type *) 0xF0001D74U)	/* DATA_ENTRY Register 4 */
#define QSPI1_DATAENTRY5	(*( QSPI0_MIXENTRY_type *) 0xF0001D78U)	/* DATA_ENTRY Register 5 */
#define QSPI1_DATAENTRY6	(*( QSPI0_MIXENTRY_type *) 0xF0001D7CU)	/* DATA_ENTRY Register 6 */
#define QSPI1_DATAENTRY7	(*( QSPI0_MIXENTRY_type *) 0xF0001D80U)	/* DATA_ENTRY Register 7 */
#define QSPI2_DATAENTRY0	(*( QSPI0_MIXENTRY_type *) 0xF0001E64U)	/* DATA_ENTRY Register 0 */
#define QSPI2_DATAENTRY1	(*( QSPI0_MIXENTRY_type *) 0xF0001E68U)	/* DATA_ENTRY Register 1 */
#define QSPI2_DATAENTRY2	(*( QSPI0_MIXENTRY_type *) 0xF0001E6CU)	/* DATA_ENTRY Register 2 */
#define QSPI2_DATAENTRY3	(*( QSPI0_MIXENTRY_type *) 0xF0001E70U)	/* DATA_ENTRY Register 3 */
#define QSPI2_DATAENTRY4	(*( QSPI0_MIXENTRY_type *) 0xF0001E74U)	/* DATA_ENTRY Register 4 */
#define QSPI2_DATAENTRY5	(*( QSPI0_MIXENTRY_type *) 0xF0001E78U)	/* DATA_ENTRY Register 5 */
#define QSPI2_DATAENTRY6	(*( QSPI0_MIXENTRY_type *) 0xF0001E7CU)	/* DATA_ENTRY Register 6 */
#define QSPI2_DATAENTRY7	(*( QSPI0_MIXENTRY_type *) 0xF0001E80U)	/* DATA_ENTRY Register 7 */
#define QSPI3_DATAENTRY0	(*( QSPI0_MIXENTRY_type *) 0xF0001F64U)	/* DATA_ENTRY Register 0 */
#define QSPI3_DATAENTRY1	(*( QSPI0_MIXENTRY_type *) 0xF0001F68U)	/* DATA_ENTRY Register 1 */
#define QSPI3_DATAENTRY2	(*( QSPI0_MIXENTRY_type *) 0xF0001F6CU)	/* DATA_ENTRY Register 2 */
#define QSPI3_DATAENTRY3	(*( QSPI0_MIXENTRY_type *) 0xF0001F70U)	/* DATA_ENTRY Register 3 */
#define QSPI3_DATAENTRY4	(*( QSPI0_MIXENTRY_type *) 0xF0001F74U)	/* DATA_ENTRY Register 4 */
#define QSPI3_DATAENTRY5	(*( QSPI0_MIXENTRY_type *) 0xF0001F78U)	/* DATA_ENTRY Register 5 */
#define QSPI3_DATAENTRY6	(*( QSPI0_MIXENTRY_type *) 0xF0001F7CU)	/* DATA_ENTRY Register 6 */
#define QSPI3_DATAENTRY7	(*( QSPI0_MIXENTRY_type *) 0xF0001F80U)	/* DATA_ENTRY Register 7 */
#define QSPI0_RXEXIT	(*( QSPI0_RXEXIT_type *) 0xF0001C90U)	/* RX_EXIT Register */
#define QSPI1_RXEXIT	(*( QSPI0_RXEXIT_type *) 0xF0001D90U)	/* RX_EXIT Register */
#define QSPI2_RXEXIT	(*( QSPI0_RXEXIT_type *) 0xF0001E90U)	/* RX_EXIT Register */
#define QSPI3_RXEXIT	(*( QSPI0_RXEXIT_type *) 0xF0001F90U)	/* RX_EXIT Register */
#define QSPI0_RXEXITD	(*( QSPI0_RXEXIT_type *) 0xF0001C94U)	/* RX_EXIT Debug Register */
#define QSPI1_RXEXITD	(*( QSPI0_RXEXIT_type *) 0xF0001D94U)	/* RX_EXIT Debug Register */
#define QSPI2_RXEXITD	(*( QSPI0_RXEXIT_type *) 0xF0001E94U)	/* RX_EXIT Debug Register */
#define QSPI3_RXEXITD	(*( QSPI0_RXEXIT_type *) 0xF0001F94U)	/* RX_EXIT Debug Register */
#define QSPI0_CLC	(*( ASCLIN0_CLC_type *) 0xF0001C00U)	/* Clock Control Register */
#define QSPI1_CLC	(*( ASCLIN0_CLC_type *) 0xF0001D00U)	/* Clock Control Register */
#define QSPI2_CLC	(*( ASCLIN0_CLC_type *) 0xF0001E00U)	/* Clock Control Register */
#define QSPI3_CLC	(*( ASCLIN0_CLC_type *) 0xF0001F00U)	/* Clock Control Register */
#define QSPI0_OCS	(*( ASCLIN0_OCS_type *) 0xF0001CE8U)	/* OCDS Control and Status */
#define QSPI1_OCS	(*( ASCLIN0_OCS_type *) 0xF0001DE8U)	/* OCDS Control and Status */
#define QSPI2_OCS	(*( ASCLIN0_OCS_type *) 0xF0001EE8U)	/* OCDS Control and Status */
#define QSPI3_OCS	(*( ASCLIN0_OCS_type *) 0xF0001FE8U)	/* OCDS Control and Status */
#define QSPI0_ACCEN0	(*( XBAR_ACCEN0_type *) 0xF0001CFCU)	/* Access Enable Register 0 */
#define QSPI1_ACCEN0	(*( XBAR_ACCEN0_type *) 0xF0001DFCU)	/* Access Enable Register 0 */
#define QSPI2_ACCEN0	(*( XBAR_ACCEN0_type *) 0xF0001EFCU)	/* Access Enable Register 0 */
#define QSPI3_ACCEN0	(*( XBAR_ACCEN0_type *) 0xF0001FFCU)	/* Access Enable Register 0 */
#define QSPI0_ACCEN1	(*( XBAR_PRIOH0_type *) 0xF0001CF8U)	/* Access Enable Register 1 */
#define QSPI1_ACCEN1	(*( XBAR_PRIOH0_type *) 0xF0001DF8U)	/* Access Enable Register 1 */
#define QSPI2_ACCEN1	(*( XBAR_PRIOH0_type *) 0xF0001EF8U)	/* Access Enable Register 1 */
#define QSPI3_ACCEN1	(*( XBAR_PRIOH0_type *) 0xF0001FF8U)	/* Access Enable Register 1 */
#define QSPI0_KRST0	(*( SMU_KRST0_type *) 0xF0001CF4U)	/* Kernel Reset Register 0 */
#define QSPI1_KRST0	(*( SMU_KRST0_type *) 0xF0001DF4U)	/* Kernel Reset Register 0 */
#define QSPI2_KRST0	(*( SMU_KRST0_type *) 0xF0001EF4U)	/* Kernel Reset Register 0 */
#define QSPI3_KRST0	(*( SMU_KRST0_type *) 0xF0001FF4U)	/* Kernel Reset Register 0 */
#define QSPI0_KRST1	(*( SMU_KRST1_type *) 0xF0001CF0U)	/* Kernel Reset Register 1 */
#define QSPI1_KRST1	(*( SMU_KRST1_type *) 0xF0001DF0U)	/* Kernel Reset Register 1 */
#define QSPI2_KRST1	(*( SMU_KRST1_type *) 0xF0001EF0U)	/* Kernel Reset Register 1 */
#define QSPI3_KRST1	(*( SMU_KRST1_type *) 0xF0001FF0U)	/* Kernel Reset Register 1 */
#define QSPI0_KRSTCLR	(*( SMU_KRSTCLR_type *) 0xF0001CECU)	/* Kernel Reset Status Clear Register */
#define QSPI1_KRSTCLR	(*( SMU_KRSTCLR_type *) 0xF0001DECU)	/* Kernel Reset Status Clear Register */
#define QSPI2_KRSTCLR	(*( SMU_KRSTCLR_type *) 0xF0001EECU)	/* Kernel Reset Status Clear Register */
#define QSPI3_KRSTCLR	(*( SMU_KRSTCLR_type *) 0xF0001FECU)	/* Kernel Reset Status Clear Register */
#define QSPI2_CAPCON	(*( QSPI2_CAPCON_type *) 0xF0001EA0U)	/* Capture Control Register */
#define QSPI3_CAPCON	(*( QSPI2_CAPCON_type *) 0xF0001FA0U)	/* Capture Control Register */
#define CAN_ID	(*( XBAR_ID_type *) 0xF0018008U)	/* Module Identification Register */
#define CAN1_ID	(*( XBAR_ID_type *) 0xF0028008U)	/* Module Identification Register */
#define CAN_PANCTR	(*( CAN_PANCTR_type *) 0xF00181C4U)	/* Panel Control Register */
#define CAN1_PANCTR	(*( CAN_PANCTR_type *) 0xF00281C4U)	/* Panel Control Register */
#define CAN_MCR	(*( CAN_MCR_type *) 0xF00181C8U)	/* Module Control Register */
#define CAN1_MCR	(*( CAN_MCR_type *) 0xF00281C8U)	/* Module Control Register */
#define CAN_MITR	(*( CAN_MITR_type *) 0xF00181CCU)	/* Module Interrupt Trigger Register */
#define CAN1_MITR	(*( CAN_MITR_type *) 0xF00281CCU)	/* Module Interrupt Trigger Register */
#define CAN_LIST0	(*( CAN_LIST0_type *) 0xF0018100U)	/* List Register 0 */
#define CAN1_LIST0	(*( CAN_LIST0_type *) 0xF0028100U)	/* List Register 0 */
#define CAN_LIST1	(*( CAN_LIST0_type *) 0xF0018104U)	/* List Register 1 */
#define CAN_LIST2	(*( CAN_LIST0_type *) 0xF0018108U)	/* List Register 2 */
#define CAN_LIST3	(*( CAN_LIST0_type *) 0xF001810CU)	/* List Register 3 */
#define CAN_LIST4	(*( CAN_LIST0_type *) 0xF0018110U)	/* List Register 4 */
#define CAN_LIST5	(*( CAN_LIST0_type *) 0xF0018114U)	/* List Register 5 */
#define CAN_LIST6	(*( CAN_LIST0_type *) 0xF0018118U)	/* List Register 6 */
#define CAN_LIST7	(*( CAN_LIST0_type *) 0xF001811CU)	/* List Register 7 */
#define CAN_LIST8	(*( CAN_LIST0_type *) 0xF0018120U)	/* List Register 8 */
#define CAN_LIST9	(*( CAN_LIST0_type *) 0xF0018124U)	/* List Register 9 */
#define CAN_LIST10	(*( CAN_LIST0_type *) 0xF0018128U)	/* List Register 10 */
#define CAN_LIST11	(*( CAN_LIST0_type *) 0xF001812CU)	/* List Register 11 */
#define CAN_LIST12	(*( CAN_LIST0_type *) 0xF0018130U)	/* List Register 12 */
#define CAN_LIST13	(*( CAN_LIST0_type *) 0xF0018134U)	/* List Register 13 */
#define CAN_LIST14	(*( CAN_LIST0_type *) 0xF0018138U)	/* List Register 14 */
#define CAN_LIST15	(*( CAN_LIST0_type *) 0xF001813CU)	/* List Register 15 */
#define CAN1_LIST1	(*( CAN_LIST0_type *) 0xF0028104U)	/* List Register 1 */
#define CAN1_LIST2	(*( CAN_LIST0_type *) 0xF0028108U)	/* List Register 2 */
#define CAN1_LIST3	(*( CAN_LIST0_type *) 0xF002810CU)	/* List Register 3 */
#define CAN1_LIST4	(*( CAN_LIST0_type *) 0xF0028110U)	/* List Register 4 */
#define CAN1_LIST5	(*( CAN_LIST0_type *) 0xF0028114U)	/* List Register 5 */
#define CAN1_LIST6	(*( CAN_LIST0_type *) 0xF0028118U)	/* List Register 6 */
#define CAN1_LIST7	(*( CAN_LIST0_type *) 0xF002811CU)	/* List Register 7 */
#define CAN1_LIST8	(*( CAN_LIST0_type *) 0xF0028120U)	/* List Register 8 */
#define CAN1_LIST9	(*( CAN_LIST0_type *) 0xF0028124U)	/* List Register 9 */
#define CAN1_LIST10	(*( CAN_LIST0_type *) 0xF0028128U)	/* List Register 10 */
#define CAN1_LIST11	(*( CAN_LIST0_type *) 0xF002812CU)	/* List Register 11 */
#define CAN1_LIST12	(*( CAN_LIST0_type *) 0xF0028130U)	/* List Register 12 */
#define CAN1_LIST13	(*( CAN_LIST0_type *) 0xF0028134U)	/* List Register 13 */
#define CAN1_LIST14	(*( CAN_LIST0_type *) 0xF0028138U)	/* List Register 14 */
#define CAN1_LIST15	(*( CAN_LIST0_type *) 0xF002813CU)	/* List Register 15 */
#define CAN_MSPND0	(*( CAN_MSPND0_type *) 0xF0018140U)	/* Message Pending Register 0 */
#define CAN_MSPND1	(*( CAN_MSPND0_type *) 0xF0018144U)	/* Message Pending Register 1 */
#define CAN_MSPND2	(*( CAN_MSPND0_type *) 0xF0018148U)	/* Message Pending Register 2 */
#define CAN_MSPND3	(*( CAN_MSPND0_type *) 0xF001814CU)	/* Message Pending Register 3 */
#define CAN_MSPND4	(*( CAN_MSPND0_type *) 0xF0018150U)	/* Message Pending Register 4 */
#define CAN_MSPND5	(*( CAN_MSPND0_type *) 0xF0018154U)	/* Message Pending Register 5 */
#define CAN_MSPND6	(*( CAN_MSPND0_type *) 0xF0018158U)	/* Message Pending Register 6 */
#define CAN_MSPND7	(*( CAN_MSPND0_type *) 0xF001815CU)	/* Message Pending Register 7 */
#define CAN1_MSPND0	(*( CAN_MSPND0_type *) 0xF0028140U)	/* Message Pending Register 0 */
#define CAN1_MSPND1	(*( CAN_MSPND0_type *) 0xF0028144U)	/* Message Pending Register 1 */
#define CAN1_MSPND2	(*( CAN_MSPND0_type *) 0xF0028148U)	/* Message Pending Register 2 */
#define CAN1_MSPND3	(*( CAN_MSPND0_type *) 0xF002814CU)	/* Message Pending Register 3 */
#define CAN1_MSPND4	(*( CAN_MSPND0_type *) 0xF0028150U)	/* Message Pending Register 4 */
#define CAN1_MSPND5	(*( CAN_MSPND0_type *) 0xF0028154U)	/* Message Pending Register 5 */
#define CAN1_MSPND6	(*( CAN_MSPND0_type *) 0xF0028158U)	/* Message Pending Register 6 */
#define CAN1_MSPND7	(*( CAN_MSPND0_type *) 0xF002815CU)	/* Message Pending Register 7 */
#define CAN_MSID0	(*( CAN_MSID0_type *) 0xF0018180U)	/* Message Index Register 0 */
#define CAN_MSID1	(*( CAN_MSID0_type *) 0xF0018184U)	/* Message Index Register 1 */
#define CAN_MSID2	(*( CAN_MSID0_type *) 0xF0018188U)	/* Message Index Register 2 */
#define CAN_MSID3	(*( CAN_MSID0_type *) 0xF001818CU)	/* Message Index Register 3 */
#define CAN_MSID4	(*( CAN_MSID0_type *) 0xF0018190U)	/* Message Index Register 4 */
#define CAN_MSID5	(*( CAN_MSID0_type *) 0xF0018194U)	/* Message Index Register 5 */
#define CAN_MSID6	(*( CAN_MSID0_type *) 0xF0018198U)	/* Message Index Register 6 */
#define CAN_MSID7	(*( CAN_MSID0_type *) 0xF001819CU)	/* Message Index Register 7 */
#define CAN1_MSID0	(*( CAN_MSID0_type *) 0xF0028180U)	/* Message Index Register 0 */
#define CAN1_MSID1	(*( CAN_MSID0_type *) 0xF0028184U)	/* Message Index Register 1 */
#define CAN1_MSID2	(*( CAN_MSID0_type *) 0xF0028188U)	/* Message Index Register 2 */
#define CAN1_MSID3	(*( CAN_MSID0_type *) 0xF002818CU)	/* Message Index Register 3 */
#define CAN1_MSID4	(*( CAN_MSID0_type *) 0xF0028190U)	/* Message Index Register 4 */
#define CAN1_MSID5	(*( CAN_MSID0_type *) 0xF0028194U)	/* Message Index Register 5 */
#define CAN1_MSID6	(*( CAN_MSID0_type *) 0xF0028198U)	/* Message Index Register 6 */
#define CAN1_MSID7	(*( CAN_MSID0_type *) 0xF002819CU)	/* Message Index Register 7 */
#define CAN_MSIMASK	(*( CAN_MSIMASK_type *) 0xF00181C0U)	/* Message Index Mask Register */
#define CAN1_MSIMASK	(*( CAN_MSIMASK_type *) 0xF00281C0U)	/* Message Index Mask Register */
#define CAN_MECR	(*( CAN_MECR_type *) 0xF00181D0U)	/* Measurement Control Register */
#define CAN1_MECR	(*( CAN_MECR_type *) 0xF00281D0U)	/* Measurement Control Register */
#define CAN_MESTAT	(*( CAN_MESTAT_type *) 0xF00181D4U)	/* Measurement Status Register */
#define CAN1_MESTAT	(*( CAN_MESTAT_type *) 0xF00281D4U)	/* Measurement Status Register */
#define CAN_NCR0	(*( CAN_NCR0_type *) 0xF0018200U)	/* Node 0 Control Register */
#define CAN_NCR1	(*( CAN_NCR0_type *) 0xF0018300U)	/* Node 1 Control Register */
#define CAN_NCR2	(*( CAN_NCR0_type *) 0xF0018400U)	/* Node 2 Control Register */
#define CAN1_NCR0	(*( CAN_NCR0_type *) 0xF0028200U)	/* Node 0 Control Register */
#define CAN1_NCR1	(*( CAN_NCR0_type *) 0xF0028300U)	/* Node 1 Control Register */
#define CAN1_NCR2	(*( CAN_NCR0_type *) 0xF0028400U)	/* Node 2 Control Register */
#define CAN_NSR0	(*( CAN_NSR0_type *) 0xF0018204U)	/* Node 0 Status Register */
#define CAN_NSR1	(*( CAN_NSR0_type *) 0xF0018304U)	/* Node 1 Status Register */
#define CAN_NSR2	(*( CAN_NSR0_type *) 0xF0018404U)	/* Node 2 Status Register */
#define CAN1_NSR0	(*( CAN_NSR0_type *) 0xF0028204U)	/* Node 0 Status Register */
#define CAN1_NSR1	(*( CAN_NSR0_type *) 0xF0028304U)	/* Node 1 Status Register */
#define CAN1_NSR2	(*( CAN_NSR0_type *) 0xF0028404U)	/* Node 2 Status Register */
#define CAN_NIPR0	(*( CAN_NIPR0_type *) 0xF0018208U)	/* Node 0 Interrupt Pointer Register */
#define CAN_NIPR1	(*( CAN_NIPR0_type *) 0xF0018308U)	/* Node 1 Interrupt Pointer Register */
#define CAN_NIPR2	(*( CAN_NIPR0_type *) 0xF0018408U)	/* Node 2 Interrupt Pointer Register */
#define CAN1_NIPR0	(*( CAN_NIPR0_type *) 0xF0028208U)	/* Node 0 Interrupt Pointer Register */
#define CAN1_NIPR1	(*( CAN_NIPR0_type *) 0xF0028308U)	/* Node 1 Interrupt Pointer Register */
#define CAN1_NIPR2	(*( CAN_NIPR0_type *) 0xF0028408U)	/* Node 2 Interrupt Pointer Register */
#define CAN_NPCR0	(*( CAN_NPCR0_type *) 0xF001820CU)	/* Node 0 Port Control Register */
#define CAN_NPCR1	(*( CAN_NPCR0_type *) 0xF001830CU)	/* Node 1 Port Control Register */
#define CAN_NPCR2	(*( CAN_NPCR0_type *) 0xF001840CU)	/* Node 2 Port Control Register */
#define CAN1_NPCR0	(*( CAN_NPCR0_type *) 0xF002820CU)	/* Node 0 Port Control Register */
#define CAN1_NPCR1	(*( CAN_NPCR0_type *) 0xF002830CU)	/* Node 1 Port Control Register */
#define CAN1_NPCR2	(*( CAN_NPCR0_type *) 0xF002840CU)	/* Node 2 Port Control Register */
#define CAN_NBTR0	(*( CAN_NBTR0_type *) 0xF0018210U)	/* Node 0 Bit Timing Register */
#define CAN_NBTR1	(*( CAN_NBTR0_type *) 0xF0018310U)	/* Node 1 Bit Timing Register */
#define CAN_NBTR2	(*( CAN_NBTR0_type *) 0xF0018410U)	/* Node 2 Bit Timing Register */
#define CAN1_NBTR0	(*( CAN_NBTR0_type *) 0xF0028210U)	/* Node 0 Bit Timing Register */
#define CAN1_NBTR1	(*( CAN_NBTR0_type *) 0xF0028310U)	/* Node 1 Bit Timing Register */
#define CAN1_NBTR2	(*( CAN_NBTR0_type *) 0xF0028410U)	/* Node 2 Bit Timing Register */
#define CAN_NBTEVR0	(*( CAN_NBTEVR0_type *) 0xF0018210U)	/* Node 0 Bit Timing Extended View Register */
#define CAN_NBTEVR1	(*( CAN_NBTEVR0_type *) 0xF0018310U)	/* Node 1 Bit Timing Extended View Register */
#define CAN_NBTEVR2	(*( CAN_NBTEVR0_type *) 0xF0018410U)	/* Node 2 Bit Timing Extended View Register */
#define CAN1_NBTEVR0	(*( CAN_NBTEVR0_type *) 0xF0028210U)	/* Node 0 Bit Timing Extended View Register */
#define CAN1_NBTEVR1	(*( CAN_NBTEVR0_type *) 0xF0028310U)	/* Node 1 Bit Timing Extended View Register */
#define CAN1_NBTEVR2	(*( CAN_NBTEVR0_type *) 0xF0028410U)	/* Node 2 Bit Timing Extended View Register */
#define CAN_FNBTR0	(*( CAN_FNBTR0_type *) 0xF0018238U)	/* Fast Node 0 Bit Timing Register */
#define CAN_FNBTR1	(*( CAN_FNBTR0_type *) 0xF0018338U)	/* Fast Node 1 Bit Timing Register */
#define CAN_FNBTR2	(*( CAN_FNBTR0_type *) 0xF0018438U)	/* Fast Node 2 Bit Timing Register */
#define CAN1_FNBTR0	(*( CAN_FNBTR0_type *) 0xF0028238U)	/* Fast Node 0 Bit Timing Register */
#define CAN1_FNBTR1	(*( CAN_FNBTR0_type *) 0xF0028338U)	/* Fast Node 1 Bit Timing Register */
#define CAN1_FNBTR2	(*( CAN_FNBTR0_type *) 0xF0028438U)	/* Fast Node 2 Bit Timing Register */
#define CAN_NTDCR0	(*( CAN_NTDCR0_type *) 0xF001823CU)	/* Node 0 Transmitter Delay Compensation Register */
#define CAN_NTDCR1	(*( CAN_NTDCR0_type *) 0xF001833CU)	/* Node 1 Transmitter Delay Compensation Register */
#define CAN_NTDCR2	(*( CAN_NTDCR0_type *) 0xF001843CU)	/* Node 2 Transmitter Delay Compensation Register */
#define CAN1_NTDCR0	(*( CAN_NTDCR0_type *) 0xF002823CU)	/* Node 0 Transmitter Delay Compensation Register */
#define CAN1_NTDCR1	(*( CAN_NTDCR0_type *) 0xF002833CU)	/* Node 1 Transmitter Delay Compensation Register */
#define CAN1_NTDCR2	(*( CAN_NTDCR0_type *) 0xF002843CU)	/* Node 2 Transmitter Delay Compensation Register */
#define CAN_NECNT0	(*( CAN_NECNT0_type *) 0xF0018214U)	/* Node 0 Error Counter Register */
#define CAN_NECNT1	(*( CAN_NECNT0_type *) 0xF0018314U)	/* Node 1 Error Counter Register */
#define CAN_NECNT2	(*( CAN_NECNT0_type *) 0xF0018414U)	/* Node 2 Error Counter Register */
#define CAN1_NECNT0	(*( CAN_NECNT0_type *) 0xF0028214U)	/* Node 0 Error Counter Register */
#define CAN1_NECNT1	(*( CAN_NECNT0_type *) 0xF0028314U)	/* Node 1 Error Counter Register */
#define CAN1_NECNT2	(*( CAN_NECNT0_type *) 0xF0028414U)	/* Node 2 Error Counter Register */
#define CAN_NFCR0	(*( CAN_NFCR0_type *) 0xF0018218U)	/* Node 0 Frame Counter Register */
#define CAN_NFCR1	(*( CAN_NFCR0_type *) 0xF0018318U)	/* Node 1 Frame Counter Register */
#define CAN_NFCR2	(*( CAN_NFCR0_type *) 0xF0018418U)	/* Node 2 Frame Counter Register */
#define CAN1_NFCR0	(*( CAN_NFCR0_type *) 0xF0028218U)	/* Node 0 Frame Counter Register */
#define CAN1_NFCR1	(*( CAN_NFCR0_type *) 0xF0028318U)	/* Node 1 Frame Counter Register */
#define CAN1_NFCR2	(*( CAN_NFCR0_type *) 0xF0028418U)	/* Node 2 Frame Counter Register */
#define CAN_NTCCR0	(*( CAN_NTCCR0_type *) 0xF001821CU)	/* Node 0 Timer Clock Control Register */
#define CAN_NTCCR1	(*( CAN_NTCCR0_type *) 0xF001831CU)	/* Node 1 Timer Clock Control Register */
#define CAN_NTCCR2	(*( CAN_NTCCR0_type *) 0xF001841CU)	/* Node 2 Timer Clock Control Register */
#define CAN1_NTCCR0	(*( CAN_NTCCR0_type *) 0xF002821CU)	/* Node 0 Timer Clock Control Register */
#define CAN1_NTCCR1	(*( CAN_NTCCR0_type *) 0xF002831CU)	/* Node 1 Timer Clock Control Register */
#define CAN1_NTCCR2	(*( CAN_NTCCR0_type *) 0xF002841CU)	/* Node 2 Timer Clock Control Register */
#define CAN_NTRTR0	(*( CAN_NTRTR0_type *) 0xF0018220U)	/* Node 0 Timer Receive Timeout Register */
#define CAN_NTRTR1	(*( CAN_NTRTR0_type *) 0xF0018320U)	/* Node 1 Timer Receive Timeout Register */
#define CAN_NTRTR2	(*( CAN_NTRTR0_type *) 0xF0018420U)	/* Node 2 Timer Receive Timeout Register */
#define CAN1_NTRTR0	(*( CAN_NTRTR0_type *) 0xF0028220U)	/* Node 0 Timer Receive Timeout Register */
#define CAN1_NTRTR1	(*( CAN_NTRTR0_type *) 0xF0028320U)	/* Node 1 Timer Receive Timeout Register */
#define CAN1_NTRTR2	(*( CAN_NTRTR0_type *) 0xF0028420U)	/* Node 2 Timer Receive Timeout Register */
#define CAN_NTATTR0	(*( CAN_NTATTR0_type *) 0xF0018224U)	/* Node 0 Timer A Transmit Trigger Register */
#define CAN_NTATTR1	(*( CAN_NTATTR0_type *) 0xF0018324U)	/* Node 1 Timer A Transmit Trigger Register */
#define CAN_NTATTR2	(*( CAN_NTATTR0_type *) 0xF0018424U)	/* Node 2 Timer A Transmit Trigger Register */
#define CAN1_NTATTR0	(*( CAN_NTATTR0_type *) 0xF0028224U)	/* Node 0 Timer A Transmit Trigger Register */
#define CAN1_NTATTR1	(*( CAN_NTATTR0_type *) 0xF0028324U)	/* Node 1 Timer A Transmit Trigger Register */
#define CAN1_NTATTR2	(*( CAN_NTATTR0_type *) 0xF0028424U)	/* Node 2 Timer A Transmit Trigger Register */
#define CAN_NTBTTR0	(*( CAN_NTATTR0_type *) 0xF0018228U)	/* Node 0 Timer B Transmit Trigger Register */
#define CAN_NTBTTR1	(*( CAN_NTATTR0_type *) 0xF0018328U)	/* Node 1 Timer B Transmit Trigger Register */
#define CAN_NTBTTR2	(*( CAN_NTATTR0_type *) 0xF0018428U)	/* Node 2 Timer B Transmit Trigger Register */
#define CAN1_NTBTTR0	(*( CAN_NTATTR0_type *) 0xF0028228U)	/* Node 0 Timer B Transmit Trigger Register */
#define CAN1_NTBTTR1	(*( CAN_NTATTR0_type *) 0xF0028328U)	/* Node 1 Timer B Transmit Trigger Register */
#define CAN1_NTBTTR2	(*( CAN_NTATTR0_type *) 0xF0028428U)	/* Node 2 Timer B Transmit Trigger Register */
#define CAN_NTCTTR0	(*( CAN_NTATTR0_type *) 0xF001822CU)	/* Node 0 Timer C Transmit Trigger Register */
#define CAN_NTCTTR1	(*( CAN_NTATTR0_type *) 0xF001832CU)	/* Node 1 Timer C Transmit Trigger Register */
#define CAN_NTCTTR2	(*( CAN_NTATTR0_type *) 0xF001842CU)	/* Node 2 Timer C Transmit Trigger Register */
#define CAN1_NTCTTR0	(*( CAN_NTATTR0_type *) 0xF002822CU)	/* Node 0 Timer C Transmit Trigger Register */
#define CAN1_NTCTTR1	(*( CAN_NTATTR0_type *) 0xF002832CU)	/* Node 1 Timer C Transmit Trigger Register */
#define CAN1_NTCTTR2	(*( CAN_NTATTR0_type *) 0xF002842CU)	/* Node 2 Timer C Transmit Trigger Register */
#define CAN_MOCTR0	(*( CAN_MOCTR0_type *) 0xF001901CU)	/* Message Object 0 Control Register */
#define CAN_MOCTR1	(*( CAN_MOCTR0_type *) 0xF001903CU)	/* Message Object 1 Control Register */
#define CAN_MOCTR2	(*( CAN_MOCTR0_type *) 0xF001905CU)	/* Message Object 2 Control Register */
#define CAN_MOCTR3	(*( CAN_MOCTR0_type *) 0xF001907CU)	/* Message Object 3 Control Register */
#define CAN_MOCTR4	(*( CAN_MOCTR0_type *) 0xF001909CU)	/* Message Object 4 Control Register */
#define CAN_MOCTR5	(*( CAN_MOCTR0_type *) 0xF00190BCU)	/* Message Object 5 Control Register */
#define CAN_MOCTR6	(*( CAN_MOCTR0_type *) 0xF00190DCU)	/* Message Object 6 Control Register */
#define CAN_MOCTR7	(*( CAN_MOCTR0_type *) 0xF00190FCU)	/* Message Object 7 Control Register */
#define CAN_MOCTR8	(*( CAN_MOCTR0_type *) 0xF001911CU)	/* Message Object 8 Control Register */
#define CAN_MOCTR9	(*( CAN_MOCTR0_type *) 0xF001913CU)	/* Message Object 9 Control Register */
#define CAN_MOCTR10	(*( CAN_MOCTR0_type *) 0xF001915CU)	/* Message Object 10 Control Register */
#define CAN_MOCTR11	(*( CAN_MOCTR0_type *) 0xF001917CU)	/* Message Object 11 Control Register */
#define CAN_MOCTR12	(*( CAN_MOCTR0_type *) 0xF001919CU)	/* Message Object 12 Control Register */
#define CAN_MOCTR13	(*( CAN_MOCTR0_type *) 0xF00191BCU)	/* Message Object 13 Control Register */
#define CAN_MOCTR14	(*( CAN_MOCTR0_type *) 0xF00191DCU)	/* Message Object 14 Control Register */
#define CAN_MOCTR15	(*( CAN_MOCTR0_type *) 0xF00191FCU)	/* Message Object 15 Control Register */
#define CAN_MOCTR16	(*( CAN_MOCTR0_type *) 0xF001921CU)	/* Message Object 16 Control Register */
#define CAN_MOCTR17	(*( CAN_MOCTR0_type *) 0xF001923CU)	/* Message Object 17 Control Register */
#define CAN_MOCTR18	(*( CAN_MOCTR0_type *) 0xF001925CU)	/* Message Object 18 Control Register */
#define CAN_MOCTR19	(*( CAN_MOCTR0_type *) 0xF001927CU)	/* Message Object 19 Control Register */
#define CAN_MOCTR20	(*( CAN_MOCTR0_type *) 0xF001929CU)	/* Message Object 20 Control Register */
#define CAN_MOCTR21	(*( CAN_MOCTR0_type *) 0xF00192BCU)	/* Message Object 21 Control Register */
#define CAN_MOCTR22	(*( CAN_MOCTR0_type *) 0xF00192DCU)	/* Message Object 22 Control Register */
#define CAN_MOCTR23	(*( CAN_MOCTR0_type *) 0xF00192FCU)	/* Message Object 23 Control Register */
#define CAN_MOCTR24	(*( CAN_MOCTR0_type *) 0xF001931CU)	/* Message Object 24 Control Register */
#define CAN_MOCTR25	(*( CAN_MOCTR0_type *) 0xF001933CU)	/* Message Object 25 Control Register */
#define CAN_MOCTR26	(*( CAN_MOCTR0_type *) 0xF001935CU)	/* Message Object 26 Control Register */
#define CAN_MOCTR27	(*( CAN_MOCTR0_type *) 0xF001937CU)	/* Message Object 27 Control Register */
#define CAN_MOCTR28	(*( CAN_MOCTR0_type *) 0xF001939CU)	/* Message Object 28 Control Register */
#define CAN_MOCTR29	(*( CAN_MOCTR0_type *) 0xF00193BCU)	/* Message Object 29 Control Register */
#define CAN_MOCTR30	(*( CAN_MOCTR0_type *) 0xF00193DCU)	/* Message Object 30 Control Register */
#define CAN_MOCTR31	(*( CAN_MOCTR0_type *) 0xF00193FCU)	/* Message Object 31 Control Register */
#define CAN_MOCTR32	(*( CAN_MOCTR0_type *) 0xF001941CU)	/* Message Object 32 Control Register */
#define CAN_MOCTR33	(*( CAN_MOCTR0_type *) 0xF001943CU)	/* Message Object 33 Control Register */
#define CAN_MOCTR34	(*( CAN_MOCTR0_type *) 0xF001945CU)	/* Message Object 34 Control Register */
#define CAN_MOCTR35	(*( CAN_MOCTR0_type *) 0xF001947CU)	/* Message Object 35 Control Register */
#define CAN_MOCTR36	(*( CAN_MOCTR0_type *) 0xF001949CU)	/* Message Object 36 Control Register */
#define CAN_MOCTR37	(*( CAN_MOCTR0_type *) 0xF00194BCU)	/* Message Object 37 Control Register */
#define CAN_MOCTR38	(*( CAN_MOCTR0_type *) 0xF00194DCU)	/* Message Object 38 Control Register */
#define CAN_MOCTR39	(*( CAN_MOCTR0_type *) 0xF00194FCU)	/* Message Object 39 Control Register */
#define CAN_MOCTR40	(*( CAN_MOCTR0_type *) 0xF001951CU)	/* Message Object 40 Control Register */
#define CAN_MOCTR41	(*( CAN_MOCTR0_type *) 0xF001953CU)	/* Message Object 41 Control Register */
#define CAN_MOCTR42	(*( CAN_MOCTR0_type *) 0xF001955CU)	/* Message Object 42 Control Register */
#define CAN_MOCTR43	(*( CAN_MOCTR0_type *) 0xF001957CU)	/* Message Object 43 Control Register */
#define CAN_MOCTR44	(*( CAN_MOCTR0_type *) 0xF001959CU)	/* Message Object 44 Control Register */
#define CAN_MOCTR45	(*( CAN_MOCTR0_type *) 0xF00195BCU)	/* Message Object 45 Control Register */
#define CAN_MOCTR46	(*( CAN_MOCTR0_type *) 0xF00195DCU)	/* Message Object 46 Control Register */
#define CAN_MOCTR47	(*( CAN_MOCTR0_type *) 0xF00195FCU)	/* Message Object 47 Control Register */
#define CAN_MOCTR48	(*( CAN_MOCTR0_type *) 0xF001961CU)	/* Message Object 48 Control Register */
#define CAN_MOCTR49	(*( CAN_MOCTR0_type *) 0xF001963CU)	/* Message Object 49 Control Register */
#define CAN_MOCTR50	(*( CAN_MOCTR0_type *) 0xF001965CU)	/* Message Object 50 Control Register */
#define CAN_MOCTR51	(*( CAN_MOCTR0_type *) 0xF001967CU)	/* Message Object 51 Control Register */
#define CAN_MOCTR52	(*( CAN_MOCTR0_type *) 0xF001969CU)	/* Message Object 52 Control Register */
#define CAN_MOCTR53	(*( CAN_MOCTR0_type *) 0xF00196BCU)	/* Message Object 53 Control Register */
#define CAN_MOCTR54	(*( CAN_MOCTR0_type *) 0xF00196DCU)	/* Message Object 54 Control Register */
#define CAN_MOCTR55	(*( CAN_MOCTR0_type *) 0xF00196FCU)	/* Message Object 55 Control Register */
#define CAN_MOCTR56	(*( CAN_MOCTR0_type *) 0xF001971CU)	/* Message Object 56 Control Register */
#define CAN_MOCTR57	(*( CAN_MOCTR0_type *) 0xF001973CU)	/* Message Object 57 Control Register */
#define CAN_MOCTR58	(*( CAN_MOCTR0_type *) 0xF001975CU)	/* Message Object 58 Control Register */
#define CAN_MOCTR59	(*( CAN_MOCTR0_type *) 0xF001977CU)	/* Message Object 59 Control Register */
#define CAN_MOCTR60	(*( CAN_MOCTR0_type *) 0xF001979CU)	/* Message Object 60 Control Register */
#define CAN_MOCTR61	(*( CAN_MOCTR0_type *) 0xF00197BCU)	/* Message Object 61 Control Register */
#define CAN_MOCTR62	(*( CAN_MOCTR0_type *) 0xF00197DCU)	/* Message Object 62 Control Register */
#define CAN_MOCTR63	(*( CAN_MOCTR0_type *) 0xF00197FCU)	/* Message Object 63 Control Register */
#define CAN_MOCTR64	(*( CAN_MOCTR0_type *) 0xF001981CU)	/* Message Object 64 Control Register */
#define CAN_MOCTR65	(*( CAN_MOCTR0_type *) 0xF001983CU)	/* Message Object 65 Control Register */
#define CAN_MOCTR66	(*( CAN_MOCTR0_type *) 0xF001985CU)	/* Message Object 66 Control Register */
#define CAN_MOCTR67	(*( CAN_MOCTR0_type *) 0xF001987CU)	/* Message Object 67 Control Register */
#define CAN_MOCTR68	(*( CAN_MOCTR0_type *) 0xF001989CU)	/* Message Object 68 Control Register */
#define CAN_MOCTR69	(*( CAN_MOCTR0_type *) 0xF00198BCU)	/* Message Object 69 Control Register */
#define CAN_MOCTR70	(*( CAN_MOCTR0_type *) 0xF00198DCU)	/* Message Object 70 Control Register */
#define CAN_MOCTR71	(*( CAN_MOCTR0_type *) 0xF00198FCU)	/* Message Object 71 Control Register */
#define CAN_MOCTR72	(*( CAN_MOCTR0_type *) 0xF001991CU)	/* Message Object 72 Control Register */
#define CAN_MOCTR73	(*( CAN_MOCTR0_type *) 0xF001993CU)	/* Message Object 73 Control Register */
#define CAN_MOCTR74	(*( CAN_MOCTR0_type *) 0xF001995CU)	/* Message Object 74 Control Register */
#define CAN_MOCTR75	(*( CAN_MOCTR0_type *) 0xF001997CU)	/* Message Object 75 Control Register */
#define CAN_MOCTR76	(*( CAN_MOCTR0_type *) 0xF001999CU)	/* Message Object 76 Control Register */
#define CAN_MOCTR77	(*( CAN_MOCTR0_type *) 0xF00199BCU)	/* Message Object 77 Control Register */
#define CAN_MOCTR78	(*( CAN_MOCTR0_type *) 0xF00199DCU)	/* Message Object 78 Control Register */
#define CAN_MOCTR79	(*( CAN_MOCTR0_type *) 0xF00199FCU)	/* Message Object 79 Control Register */
#define CAN_MOCTR80	(*( CAN_MOCTR0_type *) 0xF0019A1CU)	/* Message Object 80 Control Register */
#define CAN_MOCTR81	(*( CAN_MOCTR0_type *) 0xF0019A3CU)	/* Message Object 81 Control Register */
#define CAN_MOCTR82	(*( CAN_MOCTR0_type *) 0xF0019A5CU)	/* Message Object 82 Control Register */
#define CAN_MOCTR83	(*( CAN_MOCTR0_type *) 0xF0019A7CU)	/* Message Object 83 Control Register */
#define CAN_MOCTR84	(*( CAN_MOCTR0_type *) 0xF0019A9CU)	/* Message Object 84 Control Register */
#define CAN_MOCTR85	(*( CAN_MOCTR0_type *) 0xF0019ABCU)	/* Message Object 85 Control Register */
#define CAN_MOCTR86	(*( CAN_MOCTR0_type *) 0xF0019ADCU)	/* Message Object 86 Control Register */
#define CAN_MOCTR87	(*( CAN_MOCTR0_type *) 0xF0019AFCU)	/* Message Object 87 Control Register */
#define CAN_MOCTR88	(*( CAN_MOCTR0_type *) 0xF0019B1CU)	/* Message Object 88 Control Register */
#define CAN_MOCTR89	(*( CAN_MOCTR0_type *) 0xF0019B3CU)	/* Message Object 89 Control Register */
#define CAN_MOCTR90	(*( CAN_MOCTR0_type *) 0xF0019B5CU)	/* Message Object 90 Control Register */
#define CAN_MOCTR91	(*( CAN_MOCTR0_type *) 0xF0019B7CU)	/* Message Object 91 Control Register */
#define CAN_MOCTR92	(*( CAN_MOCTR0_type *) 0xF0019B9CU)	/* Message Object 92 Control Register */
#define CAN_MOCTR93	(*( CAN_MOCTR0_type *) 0xF0019BBCU)	/* Message Object 93 Control Register */
#define CAN_MOCTR94	(*( CAN_MOCTR0_type *) 0xF0019BDCU)	/* Message Object 94 Control Register */
#define CAN_MOCTR95	(*( CAN_MOCTR0_type *) 0xF0019BFCU)	/* Message Object 95 Control Register */
#define CAN_MOCTR96	(*( CAN_MOCTR0_type *) 0xF0019C1CU)	/* Message Object 96 Control Register */
#define CAN_MOCTR97	(*( CAN_MOCTR0_type *) 0xF0019C3CU)	/* Message Object 97 Control Register */
#define CAN_MOCTR98	(*( CAN_MOCTR0_type *) 0xF0019C5CU)	/* Message Object 98 Control Register */
#define CAN_MOCTR99	(*( CAN_MOCTR0_type *) 0xF0019C7CU)	/* Message Object 99 Control Register */
#define CAN_MOCTR100	(*( CAN_MOCTR0_type *) 0xF0019C9CU)	/* Message Object 100 Control Register */
#define CAN_MOCTR101	(*( CAN_MOCTR0_type *) 0xF0019CBCU)	/* Message Object 101 Control Register */
#define CAN_MOCTR102	(*( CAN_MOCTR0_type *) 0xF0019CDCU)	/* Message Object 102 Control Register */
#define CAN_MOCTR103	(*( CAN_MOCTR0_type *) 0xF0019CFCU)	/* Message Object 103 Control Register */
#define CAN_MOCTR104	(*( CAN_MOCTR0_type *) 0xF0019D1CU)	/* Message Object 104 Control Register */
#define CAN_MOCTR105	(*( CAN_MOCTR0_type *) 0xF0019D3CU)	/* Message Object 105 Control Register */
#define CAN_MOCTR106	(*( CAN_MOCTR0_type *) 0xF0019D5CU)	/* Message Object 106 Control Register */
#define CAN_MOCTR107	(*( CAN_MOCTR0_type *) 0xF0019D7CU)	/* Message Object 107 Control Register */
#define CAN_MOCTR108	(*( CAN_MOCTR0_type *) 0xF0019D9CU)	/* Message Object 108 Control Register */
#define CAN_MOCTR109	(*( CAN_MOCTR0_type *) 0xF0019DBCU)	/* Message Object 109 Control Register */
#define CAN_MOCTR110	(*( CAN_MOCTR0_type *) 0xF0019DDCU)	/* Message Object 110 Control Register */
#define CAN_MOCTR111	(*( CAN_MOCTR0_type *) 0xF0019DFCU)	/* Message Object 111 Control Register */
#define CAN_MOCTR112	(*( CAN_MOCTR0_type *) 0xF0019E1CU)	/* Message Object 112 Control Register */
#define CAN_MOCTR113	(*( CAN_MOCTR0_type *) 0xF0019E3CU)	/* Message Object 113 Control Register */
#define CAN_MOCTR114	(*( CAN_MOCTR0_type *) 0xF0019E5CU)	/* Message Object 114 Control Register */
#define CAN_MOCTR115	(*( CAN_MOCTR0_type *) 0xF0019E7CU)	/* Message Object 115 Control Register */
#define CAN_MOCTR116	(*( CAN_MOCTR0_type *) 0xF0019E9CU)	/* Message Object 116 Control Register */
#define CAN_MOCTR117	(*( CAN_MOCTR0_type *) 0xF0019EBCU)	/* Message Object 117 Control Register */
#define CAN_MOCTR118	(*( CAN_MOCTR0_type *) 0xF0019EDCU)	/* Message Object 118 Control Register */
#define CAN_MOCTR119	(*( CAN_MOCTR0_type *) 0xF0019EFCU)	/* Message Object 119 Control Register */
#define CAN_MOCTR120	(*( CAN_MOCTR0_type *) 0xF0019F1CU)	/* Message Object 120 Control Register */
#define CAN_MOCTR121	(*( CAN_MOCTR0_type *) 0xF0019F3CU)	/* Message Object 121 Control Register */
#define CAN_MOCTR122	(*( CAN_MOCTR0_type *) 0xF0019F5CU)	/* Message Object 122 Control Register */
#define CAN_MOCTR123	(*( CAN_MOCTR0_type *) 0xF0019F7CU)	/* Message Object 123 Control Register */
#define CAN_MOCTR124	(*( CAN_MOCTR0_type *) 0xF0019F9CU)	/* Message Object 124 Control Register */
#define CAN_MOCTR125	(*( CAN_MOCTR0_type *) 0xF0019FBCU)	/* Message Object 125 Control Register */
#define CAN_MOCTR126	(*( CAN_MOCTR0_type *) 0xF0019FDCU)	/* Message Object 126 Control Register */
#define CAN1_MOCTR0	(*( CAN_MOCTR0_type *) 0xF002901CU)	/* Message Object 0 Control Register */
#define CAN1_MOCTR1	(*( CAN_MOCTR0_type *) 0xF002903CU)	/* Message Object 1 Control Register */
#define CAN1_MOCTR2	(*( CAN_MOCTR0_type *) 0xF002905CU)	/* Message Object 2 Control Register */
#define CAN1_MOCTR3	(*( CAN_MOCTR0_type *) 0xF002907CU)	/* Message Object 3 Control Register */
#define CAN1_MOCTR4	(*( CAN_MOCTR0_type *) 0xF002909CU)	/* Message Object 4 Control Register */
#define CAN1_MOCTR5	(*( CAN_MOCTR0_type *) 0xF00290BCU)	/* Message Object 5 Control Register */
#define CAN1_MOCTR6	(*( CAN_MOCTR0_type *) 0xF00290DCU)	/* Message Object 6 Control Register */
#define CAN1_MOCTR7	(*( CAN_MOCTR0_type *) 0xF00290FCU)	/* Message Object 7 Control Register */
#define CAN1_MOCTR8	(*( CAN_MOCTR0_type *) 0xF002911CU)	/* Message Object 8 Control Register */
#define CAN1_MOCTR9	(*( CAN_MOCTR0_type *) 0xF002913CU)	/* Message Object 9 Control Register */
#define CAN1_MOCTR10	(*( CAN_MOCTR0_type *) 0xF002915CU)	/* Message Object 10 Control Register */
#define CAN1_MOCTR11	(*( CAN_MOCTR0_type *) 0xF002917CU)	/* Message Object 11 Control Register */
#define CAN1_MOCTR12	(*( CAN_MOCTR0_type *) 0xF002919CU)	/* Message Object 12 Control Register */
#define CAN1_MOCTR13	(*( CAN_MOCTR0_type *) 0xF00291BCU)	/* Message Object 13 Control Register */
#define CAN1_MOCTR14	(*( CAN_MOCTR0_type *) 0xF00291DCU)	/* Message Object 14 Control Register */
#define CAN1_MOCTR15	(*( CAN_MOCTR0_type *) 0xF00291FCU)	/* Message Object 15 Control Register */
#define CAN1_MOCTR16	(*( CAN_MOCTR0_type *) 0xF002921CU)	/* Message Object 16 Control Register */
#define CAN1_MOCTR17	(*( CAN_MOCTR0_type *) 0xF002923CU)	/* Message Object 17 Control Register */
#define CAN1_MOCTR18	(*( CAN_MOCTR0_type *) 0xF002925CU)	/* Message Object 18 Control Register */
#define CAN1_MOCTR19	(*( CAN_MOCTR0_type *) 0xF002927CU)	/* Message Object 19 Control Register */
#define CAN1_MOCTR20	(*( CAN_MOCTR0_type *) 0xF002929CU)	/* Message Object 20 Control Register */
#define CAN1_MOCTR21	(*( CAN_MOCTR0_type *) 0xF00292BCU)	/* Message Object 21 Control Register */
#define CAN1_MOCTR22	(*( CAN_MOCTR0_type *) 0xF00292DCU)	/* Message Object 22 Control Register */
#define CAN1_MOCTR23	(*( CAN_MOCTR0_type *) 0xF00292FCU)	/* Message Object 23 Control Register */
#define CAN1_MOCTR24	(*( CAN_MOCTR0_type *) 0xF002931CU)	/* Message Object 24 Control Register */
#define CAN1_MOCTR25	(*( CAN_MOCTR0_type *) 0xF002933CU)	/* Message Object 25 Control Register */
#define CAN1_MOCTR26	(*( CAN_MOCTR0_type *) 0xF002935CU)	/* Message Object 26 Control Register */
#define CAN1_MOCTR27	(*( CAN_MOCTR0_type *) 0xF002937CU)	/* Message Object 27 Control Register */
#define CAN1_MOCTR28	(*( CAN_MOCTR0_type *) 0xF002939CU)	/* Message Object 28 Control Register */
#define CAN1_MOCTR29	(*( CAN_MOCTR0_type *) 0xF00293BCU)	/* Message Object 29 Control Register */
#define CAN1_MOCTR30	(*( CAN_MOCTR0_type *) 0xF00293DCU)	/* Message Object 30 Control Register */
#define CAN1_MOCTR31	(*( CAN_MOCTR0_type *) 0xF00293FCU)	/* Message Object 31 Control Register */
#define CAN1_MOCTR32	(*( CAN_MOCTR0_type *) 0xF002941CU)	/* Message Object 32 Control Register */
#define CAN1_MOCTR33	(*( CAN_MOCTR0_type *) 0xF002943CU)	/* Message Object 33 Control Register */
#define CAN1_MOCTR34	(*( CAN_MOCTR0_type *) 0xF002945CU)	/* Message Object 34 Control Register */
#define CAN1_MOCTR35	(*( CAN_MOCTR0_type *) 0xF002947CU)	/* Message Object 35 Control Register */
#define CAN1_MOCTR36	(*( CAN_MOCTR0_type *) 0xF002949CU)	/* Message Object 36 Control Register */
#define CAN1_MOCTR37	(*( CAN_MOCTR0_type *) 0xF00294BCU)	/* Message Object 37 Control Register */
#define CAN1_MOCTR38	(*( CAN_MOCTR0_type *) 0xF00294DCU)	/* Message Object 38 Control Register */
#define CAN1_MOCTR39	(*( CAN_MOCTR0_type *) 0xF00294FCU)	/* Message Object 39 Control Register */
#define CAN1_MOCTR40	(*( CAN_MOCTR0_type *) 0xF002951CU)	/* Message Object 40 Control Register */
#define CAN1_MOCTR41	(*( CAN_MOCTR0_type *) 0xF002953CU)	/* Message Object 41 Control Register */
#define CAN1_MOCTR42	(*( CAN_MOCTR0_type *) 0xF002955CU)	/* Message Object 42 Control Register */
#define CAN1_MOCTR43	(*( CAN_MOCTR0_type *) 0xF002957CU)	/* Message Object 43 Control Register */
#define CAN1_MOCTR44	(*( CAN_MOCTR0_type *) 0xF002959CU)	/* Message Object 44 Control Register */
#define CAN1_MOCTR45	(*( CAN_MOCTR0_type *) 0xF00295BCU)	/* Message Object 45 Control Register */
#define CAN1_MOCTR46	(*( CAN_MOCTR0_type *) 0xF00295DCU)	/* Message Object 46 Control Register */
#define CAN1_MOCTR47	(*( CAN_MOCTR0_type *) 0xF00295FCU)	/* Message Object 47 Control Register */
#define CAN1_MOCTR48	(*( CAN_MOCTR0_type *) 0xF002961CU)	/* Message Object 48 Control Register */
#define CAN1_MOCTR49	(*( CAN_MOCTR0_type *) 0xF002963CU)	/* Message Object 49 Control Register */
#define CAN1_MOCTR50	(*( CAN_MOCTR0_type *) 0xF002965CU)	/* Message Object 50 Control Register */
#define CAN1_MOCTR51	(*( CAN_MOCTR0_type *) 0xF002967CU)	/* Message Object 51 Control Register */
#define CAN1_MOCTR52	(*( CAN_MOCTR0_type *) 0xF002969CU)	/* Message Object 52 Control Register */
#define CAN1_MOCTR53	(*( CAN_MOCTR0_type *) 0xF00296BCU)	/* Message Object 53 Control Register */
#define CAN1_MOCTR54	(*( CAN_MOCTR0_type *) 0xF00296DCU)	/* Message Object 54 Control Register */
#define CAN1_MOCTR55	(*( CAN_MOCTR0_type *) 0xF00296FCU)	/* Message Object 55 Control Register */
#define CAN1_MOCTR56	(*( CAN_MOCTR0_type *) 0xF002971CU)	/* Message Object 56 Control Register */
#define CAN1_MOCTR57	(*( CAN_MOCTR0_type *) 0xF002973CU)	/* Message Object 57 Control Register */
#define CAN1_MOCTR58	(*( CAN_MOCTR0_type *) 0xF002975CU)	/* Message Object 58 Control Register */
#define CAN1_MOCTR59	(*( CAN_MOCTR0_type *) 0xF002977CU)	/* Message Object 59 Control Register */
#define CAN1_MOCTR60	(*( CAN_MOCTR0_type *) 0xF002979CU)	/* Message Object 60 Control Register */
#define CAN1_MOCTR61	(*( CAN_MOCTR0_type *) 0xF00297BCU)	/* Message Object 61 Control Register */
#define CAN1_MOCTR62	(*( CAN_MOCTR0_type *) 0xF00297DCU)	/* Message Object 62 Control Register */
#define CAN1_MOCTR63	(*( CAN_MOCTR0_type *) 0xF00297FCU)	/* Message Object 63 Control Register */
#define CAN1_MOCTR64	(*( CAN_MOCTR0_type *) 0xF002981CU)	/* Message Object 64 Control Register */
#define CAN1_MOCTR65	(*( CAN_MOCTR0_type *) 0xF002983CU)	/* Message Object 65 Control Register */
#define CAN1_MOCTR66	(*( CAN_MOCTR0_type *) 0xF002985CU)	/* Message Object 66 Control Register */
#define CAN1_MOCTR67	(*( CAN_MOCTR0_type *) 0xF002987CU)	/* Message Object 67 Control Register */
#define CAN1_MOCTR68	(*( CAN_MOCTR0_type *) 0xF002989CU)	/* Message Object 68 Control Register */
#define CAN1_MOCTR69	(*( CAN_MOCTR0_type *) 0xF00298BCU)	/* Message Object 69 Control Register */
#define CAN1_MOCTR70	(*( CAN_MOCTR0_type *) 0xF00298DCU)	/* Message Object 70 Control Register */
#define CAN1_MOCTR71	(*( CAN_MOCTR0_type *) 0xF00298FCU)	/* Message Object 71 Control Register */
#define CAN1_MOCTR72	(*( CAN_MOCTR0_type *) 0xF002991CU)	/* Message Object 72 Control Register */
#define CAN1_MOCTR73	(*( CAN_MOCTR0_type *) 0xF002993CU)	/* Message Object 73 Control Register */
#define CAN1_MOCTR74	(*( CAN_MOCTR0_type *) 0xF002995CU)	/* Message Object 74 Control Register */
#define CAN1_MOCTR75	(*( CAN_MOCTR0_type *) 0xF002997CU)	/* Message Object 75 Control Register */
#define CAN1_MOCTR76	(*( CAN_MOCTR0_type *) 0xF002999CU)	/* Message Object 76 Control Register */
#define CAN1_MOCTR77	(*( CAN_MOCTR0_type *) 0xF00299BCU)	/* Message Object 77 Control Register */
#define CAN1_MOCTR78	(*( CAN_MOCTR0_type *) 0xF00299DCU)	/* Message Object 78 Control Register */
#define CAN1_MOCTR79	(*( CAN_MOCTR0_type *) 0xF00299FCU)	/* Message Object 79 Control Register */
#define CAN1_MOCTR80	(*( CAN_MOCTR0_type *) 0xF0029A1CU)	/* Message Object 80 Control Register */
#define CAN1_MOCTR81	(*( CAN_MOCTR0_type *) 0xF0029A3CU)	/* Message Object 81 Control Register */
#define CAN1_MOCTR82	(*( CAN_MOCTR0_type *) 0xF0029A5CU)	/* Message Object 82 Control Register */
#define CAN1_MOCTR83	(*( CAN_MOCTR0_type *) 0xF0029A7CU)	/* Message Object 83 Control Register */
#define CAN1_MOCTR84	(*( CAN_MOCTR0_type *) 0xF0029A9CU)	/* Message Object 84 Control Register */
#define CAN1_MOCTR85	(*( CAN_MOCTR0_type *) 0xF0029ABCU)	/* Message Object 85 Control Register */
#define CAN1_MOCTR86	(*( CAN_MOCTR0_type *) 0xF0029ADCU)	/* Message Object 86 Control Register */
#define CAN1_MOCTR87	(*( CAN_MOCTR0_type *) 0xF0029AFCU)	/* Message Object 87 Control Register */
#define CAN1_MOCTR88	(*( CAN_MOCTR0_type *) 0xF0029B1CU)	/* Message Object 88 Control Register */
#define CAN1_MOCTR89	(*( CAN_MOCTR0_type *) 0xF0029B3CU)	/* Message Object 89 Control Register */
#define CAN1_MOCTR90	(*( CAN_MOCTR0_type *) 0xF0029B5CU)	/* Message Object 90 Control Register */
#define CAN1_MOCTR91	(*( CAN_MOCTR0_type *) 0xF0029B7CU)	/* Message Object 91 Control Register */
#define CAN1_MOCTR92	(*( CAN_MOCTR0_type *) 0xF0029B9CU)	/* Message Object 92 Control Register */
#define CAN1_MOCTR93	(*( CAN_MOCTR0_type *) 0xF0029BBCU)	/* Message Object 93 Control Register */
#define CAN1_MOCTR94	(*( CAN_MOCTR0_type *) 0xF0029BDCU)	/* Message Object 94 Control Register */
#define CAN1_MOCTR95	(*( CAN_MOCTR0_type *) 0xF0029BFCU)	/* Message Object 95 Control Register */
#define CAN1_MOCTR96	(*( CAN_MOCTR0_type *) 0xF0029C1CU)	/* Message Object 96 Control Register */
#define CAN1_MOCTR97	(*( CAN_MOCTR0_type *) 0xF0029C3CU)	/* Message Object 97 Control Register */
#define CAN1_MOCTR98	(*( CAN_MOCTR0_type *) 0xF0029C5CU)	/* Message Object 98 Control Register */
#define CAN1_MOCTR99	(*( CAN_MOCTR0_type *) 0xF0029C7CU)	/* Message Object 99 Control Register */
#define CAN1_MOCTR100	(*( CAN_MOCTR0_type *) 0xF0029C9CU)	/* Message Object 100 Control Register */
#define CAN1_MOCTR101	(*( CAN_MOCTR0_type *) 0xF0029CBCU)	/* Message Object 101 Control Register */
#define CAN1_MOCTR102	(*( CAN_MOCTR0_type *) 0xF0029CDCU)	/* Message Object 102 Control Register */
#define CAN1_MOCTR103	(*( CAN_MOCTR0_type *) 0xF0029CFCU)	/* Message Object 103 Control Register */
#define CAN1_MOCTR104	(*( CAN_MOCTR0_type *) 0xF0029D1CU)	/* Message Object 104 Control Register */
#define CAN1_MOCTR105	(*( CAN_MOCTR0_type *) 0xF0029D3CU)	/* Message Object 105 Control Register */
#define CAN1_MOCTR106	(*( CAN_MOCTR0_type *) 0xF0029D5CU)	/* Message Object 106 Control Register */
#define CAN1_MOCTR107	(*( CAN_MOCTR0_type *) 0xF0029D7CU)	/* Message Object 107 Control Register */
#define CAN1_MOCTR108	(*( CAN_MOCTR0_type *) 0xF0029D9CU)	/* Message Object 108 Control Register */
#define CAN1_MOCTR109	(*( CAN_MOCTR0_type *) 0xF0029DBCU)	/* Message Object 109 Control Register */
#define CAN1_MOCTR110	(*( CAN_MOCTR0_type *) 0xF0029DDCU)	/* Message Object 110 Control Register */
#define CAN1_MOCTR111	(*( CAN_MOCTR0_type *) 0xF0029DFCU)	/* Message Object 111 Control Register */
#define CAN1_MOCTR112	(*( CAN_MOCTR0_type *) 0xF0029E1CU)	/* Message Object 112 Control Register */
#define CAN1_MOCTR113	(*( CAN_MOCTR0_type *) 0xF0029E3CU)	/* Message Object 113 Control Register */
#define CAN1_MOCTR114	(*( CAN_MOCTR0_type *) 0xF0029E5CU)	/* Message Object 114 Control Register */
#define CAN1_MOCTR115	(*( CAN_MOCTR0_type *) 0xF0029E7CU)	/* Message Object 115 Control Register */
#define CAN1_MOCTR116	(*( CAN_MOCTR0_type *) 0xF0029E9CU)	/* Message Object 116 Control Register */
#define CAN1_MOCTR117	(*( CAN_MOCTR0_type *) 0xF0029EBCU)	/* Message Object 117 Control Register */
#define CAN1_MOCTR118	(*( CAN_MOCTR0_type *) 0xF0029EDCU)	/* Message Object 118 Control Register */
#define CAN1_MOCTR119	(*( CAN_MOCTR0_type *) 0xF0029EFCU)	/* Message Object 119 Control Register */
#define CAN1_MOCTR120	(*( CAN_MOCTR0_type *) 0xF0029F1CU)	/* Message Object 120 Control Register */
#define CAN1_MOCTR121	(*( CAN_MOCTR0_type *) 0xF0029F3CU)	/* Message Object 121 Control Register */
#define CAN1_MOCTR122	(*( CAN_MOCTR0_type *) 0xF0029F5CU)	/* Message Object 122 Control Register */
#define CAN1_MOCTR123	(*( CAN_MOCTR0_type *) 0xF0029F7CU)	/* Message Object 123 Control Register */
#define CAN1_MOCTR124	(*( CAN_MOCTR0_type *) 0xF0029F9CU)	/* Message Object 124 Control Register */
#define CAN1_MOCTR125	(*( CAN_MOCTR0_type *) 0xF0029FBCU)	/* Message Object 125 Control Register */
#define CAN1_MOCTR126	(*( CAN_MOCTR0_type *) 0xF0029FDCU)	/* Message Object 126 Control Register */
#define CAN_MOCTR127	(*( CAN_MOCTR0_type *) 0xF0019FFCU)	/* Message Object 127 Control Register */
#define CAN1_MOCTR127	(*( CAN_MOCTR0_type *) 0xF0029FFCU)	/* Message Object 127 Control Register */
#define CAN_MOSTAT0	(*( CAN_MOSTAT0_type *) 0xF001901CU)	/* Message Object 0 Status Register */
#define CAN1_MOSTAT0	(*( CAN_MOSTAT0_type *) 0xF002901CU)	/* Message Object 0 Status Register */
#define CAN_MOSTAT1	(*( CAN_MOSTAT0_type *) 0xF001903CU)	/* Message Object 1 Status Register */
#define CAN_MOSTAT2	(*( CAN_MOSTAT0_type *) 0xF001905CU)	/* Message Object 2 Status Register */
#define CAN_MOSTAT3	(*( CAN_MOSTAT0_type *) 0xF001907CU)	/* Message Object 3 Status Register */
#define CAN_MOSTAT4	(*( CAN_MOSTAT0_type *) 0xF001909CU)	/* Message Object 4 Status Register */
#define CAN_MOSTAT5	(*( CAN_MOSTAT0_type *) 0xF00190BCU)	/* Message Object 5 Status Register */
#define CAN_MOSTAT6	(*( CAN_MOSTAT0_type *) 0xF00190DCU)	/* Message Object 6 Status Register */
#define CAN_MOSTAT7	(*( CAN_MOSTAT0_type *) 0xF00190FCU)	/* Message Object 7 Status Register */
#define CAN_MOSTAT8	(*( CAN_MOSTAT0_type *) 0xF001911CU)	/* Message Object 8 Status Register */
#define CAN_MOSTAT9	(*( CAN_MOSTAT0_type *) 0xF001913CU)	/* Message Object 9 Status Register */
#define CAN_MOSTAT10	(*( CAN_MOSTAT0_type *) 0xF001915CU)	/* Message Object 10 Status Register */
#define CAN_MOSTAT11	(*( CAN_MOSTAT0_type *) 0xF001917CU)	/* Message Object 11 Status Register */
#define CAN_MOSTAT12	(*( CAN_MOSTAT0_type *) 0xF001919CU)	/* Message Object 12 Status Register */
#define CAN_MOSTAT13	(*( CAN_MOSTAT0_type *) 0xF00191BCU)	/* Message Object 13 Status Register */
#define CAN_MOSTAT14	(*( CAN_MOSTAT0_type *) 0xF00191DCU)	/* Message Object 14 Status Register */
#define CAN_MOSTAT15	(*( CAN_MOSTAT0_type *) 0xF00191FCU)	/* Message Object 15 Status Register */
#define CAN_MOSTAT16	(*( CAN_MOSTAT0_type *) 0xF001921CU)	/* Message Object 16 Status Register */
#define CAN_MOSTAT17	(*( CAN_MOSTAT0_type *) 0xF001923CU)	/* Message Object 17 Status Register */
#define CAN_MOSTAT18	(*( CAN_MOSTAT0_type *) 0xF001925CU)	/* Message Object 18 Status Register */
#define CAN_MOSTAT19	(*( CAN_MOSTAT0_type *) 0xF001927CU)	/* Message Object 19 Status Register */
#define CAN_MOSTAT20	(*( CAN_MOSTAT0_type *) 0xF001929CU)	/* Message Object 20 Status Register */
#define CAN_MOSTAT21	(*( CAN_MOSTAT0_type *) 0xF00192BCU)	/* Message Object 21 Status Register */
#define CAN_MOSTAT22	(*( CAN_MOSTAT0_type *) 0xF00192DCU)	/* Message Object 22 Status Register */
#define CAN_MOSTAT23	(*( CAN_MOSTAT0_type *) 0xF00192FCU)	/* Message Object 23 Status Register */
#define CAN_MOSTAT24	(*( CAN_MOSTAT0_type *) 0xF001931CU)	/* Message Object 24 Status Register */
#define CAN_MOSTAT25	(*( CAN_MOSTAT0_type *) 0xF001933CU)	/* Message Object 25 Status Register */
#define CAN_MOSTAT26	(*( CAN_MOSTAT0_type *) 0xF001935CU)	/* Message Object 26 Status Register */
#define CAN_MOSTAT27	(*( CAN_MOSTAT0_type *) 0xF001937CU)	/* Message Object 27 Status Register */
#define CAN_MOSTAT28	(*( CAN_MOSTAT0_type *) 0xF001939CU)	/* Message Object 28 Status Register */
#define CAN_MOSTAT29	(*( CAN_MOSTAT0_type *) 0xF00193BCU)	/* Message Object 29 Status Register */
#define CAN_MOSTAT30	(*( CAN_MOSTAT0_type *) 0xF00193DCU)	/* Message Object 30 Status Register */
#define CAN_MOSTAT31	(*( CAN_MOSTAT0_type *) 0xF00193FCU)	/* Message Object 31 Status Register */
#define CAN_MOSTAT32	(*( CAN_MOSTAT0_type *) 0xF001941CU)	/* Message Object 32 Status Register */
#define CAN_MOSTAT33	(*( CAN_MOSTAT0_type *) 0xF001943CU)	/* Message Object 33 Status Register */
#define CAN_MOSTAT34	(*( CAN_MOSTAT0_type *) 0xF001945CU)	/* Message Object 34 Status Register */
#define CAN_MOSTAT35	(*( CAN_MOSTAT0_type *) 0xF001947CU)	/* Message Object 35 Status Register */
#define CAN_MOSTAT36	(*( CAN_MOSTAT0_type *) 0xF001949CU)	/* Message Object 36 Status Register */
#define CAN_MOSTAT37	(*( CAN_MOSTAT0_type *) 0xF00194BCU)	/* Message Object 37 Status Register */
#define CAN_MOSTAT38	(*( CAN_MOSTAT0_type *) 0xF00194DCU)	/* Message Object 38 Status Register */
#define CAN_MOSTAT39	(*( CAN_MOSTAT0_type *) 0xF00194FCU)	/* Message Object 39 Status Register */
#define CAN_MOSTAT40	(*( CAN_MOSTAT0_type *) 0xF001951CU)	/* Message Object 40 Status Register */
#define CAN_MOSTAT41	(*( CAN_MOSTAT0_type *) 0xF001953CU)	/* Message Object 41 Status Register */
#define CAN_MOSTAT42	(*( CAN_MOSTAT0_type *) 0xF001955CU)	/* Message Object 42 Status Register */
#define CAN_MOSTAT43	(*( CAN_MOSTAT0_type *) 0xF001957CU)	/* Message Object 43 Status Register */
#define CAN_MOSTAT44	(*( CAN_MOSTAT0_type *) 0xF001959CU)	/* Message Object 44 Status Register */
#define CAN_MOSTAT45	(*( CAN_MOSTAT0_type *) 0xF00195BCU)	/* Message Object 45 Status Register */
#define CAN_MOSTAT46	(*( CAN_MOSTAT0_type *) 0xF00195DCU)	/* Message Object 46 Status Register */
#define CAN_MOSTAT47	(*( CAN_MOSTAT0_type *) 0xF00195FCU)	/* Message Object 47 Status Register */
#define CAN_MOSTAT48	(*( CAN_MOSTAT0_type *) 0xF001961CU)	/* Message Object 48 Status Register */
#define CAN_MOSTAT49	(*( CAN_MOSTAT0_type *) 0xF001963CU)	/* Message Object 49 Status Register */
#define CAN_MOSTAT50	(*( CAN_MOSTAT0_type *) 0xF001965CU)	/* Message Object 50 Status Register */
#define CAN_MOSTAT51	(*( CAN_MOSTAT0_type *) 0xF001967CU)	/* Message Object 51 Status Register */
#define CAN_MOSTAT52	(*( CAN_MOSTAT0_type *) 0xF001969CU)	/* Message Object 52 Status Register */
#define CAN_MOSTAT53	(*( CAN_MOSTAT0_type *) 0xF00196BCU)	/* Message Object 53 Status Register */
#define CAN_MOSTAT54	(*( CAN_MOSTAT0_type *) 0xF00196DCU)	/* Message Object 54 Status Register */
#define CAN_MOSTAT55	(*( CAN_MOSTAT0_type *) 0xF00196FCU)	/* Message Object 55 Status Register */
#define CAN_MOSTAT56	(*( CAN_MOSTAT0_type *) 0xF001971CU)	/* Message Object 56 Status Register */
#define CAN_MOSTAT57	(*( CAN_MOSTAT0_type *) 0xF001973CU)	/* Message Object 57 Status Register */
#define CAN_MOSTAT58	(*( CAN_MOSTAT0_type *) 0xF001975CU)	/* Message Object 58 Status Register */
#define CAN_MOSTAT59	(*( CAN_MOSTAT0_type *) 0xF001977CU)	/* Message Object 59 Status Register */
#define CAN_MOSTAT60	(*( CAN_MOSTAT0_type *) 0xF001979CU)	/* Message Object 60 Status Register */
#define CAN_MOSTAT61	(*( CAN_MOSTAT0_type *) 0xF00197BCU)	/* Message Object 61 Status Register */
#define CAN_MOSTAT62	(*( CAN_MOSTAT0_type *) 0xF00197DCU)	/* Message Object 62 Status Register */
#define CAN_MOSTAT63	(*( CAN_MOSTAT0_type *) 0xF00197FCU)	/* Message Object 63 Status Register */
#define CAN_MOSTAT64	(*( CAN_MOSTAT0_type *) 0xF001981CU)	/* Message Object 64 Status Register */
#define CAN_MOSTAT65	(*( CAN_MOSTAT0_type *) 0xF001983CU)	/* Message Object 65 Status Register */
#define CAN_MOSTAT66	(*( CAN_MOSTAT0_type *) 0xF001985CU)	/* Message Object 66 Status Register */
#define CAN_MOSTAT67	(*( CAN_MOSTAT0_type *) 0xF001987CU)	/* Message Object 67 Status Register */
#define CAN_MOSTAT68	(*( CAN_MOSTAT0_type *) 0xF001989CU)	/* Message Object 68 Status Register */
#define CAN_MOSTAT69	(*( CAN_MOSTAT0_type *) 0xF00198BCU)	/* Message Object 69 Status Register */
#define CAN_MOSTAT70	(*( CAN_MOSTAT0_type *) 0xF00198DCU)	/* Message Object 70 Status Register */
#define CAN_MOSTAT71	(*( CAN_MOSTAT0_type *) 0xF00198FCU)	/* Message Object 71 Status Register */
#define CAN_MOSTAT72	(*( CAN_MOSTAT0_type *) 0xF001991CU)	/* Message Object 72 Status Register */
#define CAN_MOSTAT73	(*( CAN_MOSTAT0_type *) 0xF001993CU)	/* Message Object 73 Status Register */
#define CAN_MOSTAT74	(*( CAN_MOSTAT0_type *) 0xF001995CU)	/* Message Object 74 Status Register */
#define CAN_MOSTAT75	(*( CAN_MOSTAT0_type *) 0xF001997CU)	/* Message Object 75 Status Register */
#define CAN_MOSTAT76	(*( CAN_MOSTAT0_type *) 0xF001999CU)	/* Message Object 76 Status Register */
#define CAN_MOSTAT77	(*( CAN_MOSTAT0_type *) 0xF00199BCU)	/* Message Object 77 Status Register */
#define CAN_MOSTAT78	(*( CAN_MOSTAT0_type *) 0xF00199DCU)	/* Message Object 78 Status Register */
#define CAN_MOSTAT79	(*( CAN_MOSTAT0_type *) 0xF00199FCU)	/* Message Object 79 Status Register */
#define CAN_MOSTAT80	(*( CAN_MOSTAT0_type *) 0xF0019A1CU)	/* Message Object 80 Status Register */
#define CAN_MOSTAT81	(*( CAN_MOSTAT0_type *) 0xF0019A3CU)	/* Message Object 81 Status Register */
#define CAN_MOSTAT82	(*( CAN_MOSTAT0_type *) 0xF0019A5CU)	/* Message Object 82 Status Register */
#define CAN_MOSTAT83	(*( CAN_MOSTAT0_type *) 0xF0019A7CU)	/* Message Object 83 Status Register */
#define CAN_MOSTAT84	(*( CAN_MOSTAT0_type *) 0xF0019A9CU)	/* Message Object 84 Status Register */
#define CAN_MOSTAT85	(*( CAN_MOSTAT0_type *) 0xF0019ABCU)	/* Message Object 85 Status Register */
#define CAN_MOSTAT86	(*( CAN_MOSTAT0_type *) 0xF0019ADCU)	/* Message Object 86 Status Register */
#define CAN_MOSTAT87	(*( CAN_MOSTAT0_type *) 0xF0019AFCU)	/* Message Object 87 Status Register */
#define CAN_MOSTAT88	(*( CAN_MOSTAT0_type *) 0xF0019B1CU)	/* Message Object 88 Status Register */
#define CAN_MOSTAT89	(*( CAN_MOSTAT0_type *) 0xF0019B3CU)	/* Message Object 89 Status Register */
#define CAN_MOSTAT90	(*( CAN_MOSTAT0_type *) 0xF0019B5CU)	/* Message Object 90 Status Register */
#define CAN_MOSTAT91	(*( CAN_MOSTAT0_type *) 0xF0019B7CU)	/* Message Object 91 Status Register */
#define CAN_MOSTAT92	(*( CAN_MOSTAT0_type *) 0xF0019B9CU)	/* Message Object 92 Status Register */
#define CAN_MOSTAT93	(*( CAN_MOSTAT0_type *) 0xF0019BBCU)	/* Message Object 93 Status Register */
#define CAN_MOSTAT94	(*( CAN_MOSTAT0_type *) 0xF0019BDCU)	/* Message Object 94 Status Register */
#define CAN_MOSTAT95	(*( CAN_MOSTAT0_type *) 0xF0019BFCU)	/* Message Object 95 Status Register */
#define CAN_MOSTAT96	(*( CAN_MOSTAT0_type *) 0xF0019C1CU)	/* Message Object 96 Status Register */
#define CAN_MOSTAT97	(*( CAN_MOSTAT0_type *) 0xF0019C3CU)	/* Message Object 97 Status Register */
#define CAN_MOSTAT98	(*( CAN_MOSTAT0_type *) 0xF0019C5CU)	/* Message Object 98 Status Register */
#define CAN_MOSTAT99	(*( CAN_MOSTAT0_type *) 0xF0019C7CU)	/* Message Object 99 Status Register */
#define CAN_MOSTAT100	(*( CAN_MOSTAT0_type *) 0xF0019C9CU)	/* Message Object 100 Status Register */
#define CAN_MOSTAT101	(*( CAN_MOSTAT0_type *) 0xF0019CBCU)	/* Message Object 101 Status Register */
#define CAN_MOSTAT102	(*( CAN_MOSTAT0_type *) 0xF0019CDCU)	/* Message Object 102 Status Register */
#define CAN_MOSTAT103	(*( CAN_MOSTAT0_type *) 0xF0019CFCU)	/* Message Object 103 Status Register */
#define CAN_MOSTAT104	(*( CAN_MOSTAT0_type *) 0xF0019D1CU)	/* Message Object 104 Status Register */
#define CAN_MOSTAT105	(*( CAN_MOSTAT0_type *) 0xF0019D3CU)	/* Message Object 105 Status Register */
#define CAN_MOSTAT106	(*( CAN_MOSTAT0_type *) 0xF0019D5CU)	/* Message Object 106 Status Register */
#define CAN_MOSTAT107	(*( CAN_MOSTAT0_type *) 0xF0019D7CU)	/* Message Object 107 Status Register */
#define CAN_MOSTAT108	(*( CAN_MOSTAT0_type *) 0xF0019D9CU)	/* Message Object 108 Status Register */
#define CAN_MOSTAT109	(*( CAN_MOSTAT0_type *) 0xF0019DBCU)	/* Message Object 109 Status Register */
#define CAN_MOSTAT110	(*( CAN_MOSTAT0_type *) 0xF0019DDCU)	/* Message Object 110 Status Register */
#define CAN_MOSTAT111	(*( CAN_MOSTAT0_type *) 0xF0019DFCU)	/* Message Object 111 Status Register */
#define CAN_MOSTAT112	(*( CAN_MOSTAT0_type *) 0xF0019E1CU)	/* Message Object 112 Status Register */
#define CAN_MOSTAT113	(*( CAN_MOSTAT0_type *) 0xF0019E3CU)	/* Message Object 113 Status Register */
#define CAN_MOSTAT114	(*( CAN_MOSTAT0_type *) 0xF0019E5CU)	/* Message Object 114 Status Register */
#define CAN_MOSTAT115	(*( CAN_MOSTAT0_type *) 0xF0019E7CU)	/* Message Object 115 Status Register */
#define CAN_MOSTAT116	(*( CAN_MOSTAT0_type *) 0xF0019E9CU)	/* Message Object 116 Status Register */
#define CAN_MOSTAT117	(*( CAN_MOSTAT0_type *) 0xF0019EBCU)	/* Message Object 117 Status Register */
#define CAN_MOSTAT118	(*( CAN_MOSTAT0_type *) 0xF0019EDCU)	/* Message Object 118 Status Register */
#define CAN_MOSTAT119	(*( CAN_MOSTAT0_type *) 0xF0019EFCU)	/* Message Object 119 Status Register */
#define CAN_MOSTAT120	(*( CAN_MOSTAT0_type *) 0xF0019F1CU)	/* Message Object 120 Status Register */
#define CAN_MOSTAT121	(*( CAN_MOSTAT0_type *) 0xF0019F3CU)	/* Message Object 121 Status Register */
#define CAN_MOSTAT122	(*( CAN_MOSTAT0_type *) 0xF0019F5CU)	/* Message Object 122 Status Register */
#define CAN_MOSTAT123	(*( CAN_MOSTAT0_type *) 0xF0019F7CU)	/* Message Object 123 Status Register */
#define CAN_MOSTAT124	(*( CAN_MOSTAT0_type *) 0xF0019F9CU)	/* Message Object 124 Status Register */
#define CAN_MOSTAT125	(*( CAN_MOSTAT0_type *) 0xF0019FBCU)	/* Message Object 125 Status Register */
#define CAN_MOSTAT126	(*( CAN_MOSTAT0_type *) 0xF0019FDCU)	/* Message Object 126 Status Register */
#define CAN1_MOSTAT1	(*( CAN_MOSTAT0_type *) 0xF002903CU)	/* Message Object 1 Status Register */
#define CAN1_MOSTAT2	(*( CAN_MOSTAT0_type *) 0xF002905CU)	/* Message Object 2 Status Register */
#define CAN1_MOSTAT3	(*( CAN_MOSTAT0_type *) 0xF002907CU)	/* Message Object 3 Status Register */
#define CAN1_MOSTAT4	(*( CAN_MOSTAT0_type *) 0xF002909CU)	/* Message Object 4 Status Register */
#define CAN1_MOSTAT5	(*( CAN_MOSTAT0_type *) 0xF00290BCU)	/* Message Object 5 Status Register */
#define CAN1_MOSTAT6	(*( CAN_MOSTAT0_type *) 0xF00290DCU)	/* Message Object 6 Status Register */
#define CAN1_MOSTAT7	(*( CAN_MOSTAT0_type *) 0xF00290FCU)	/* Message Object 7 Status Register */
#define CAN1_MOSTAT8	(*( CAN_MOSTAT0_type *) 0xF002911CU)	/* Message Object 8 Status Register */
#define CAN1_MOSTAT9	(*( CAN_MOSTAT0_type *) 0xF002913CU)	/* Message Object 9 Status Register */
#define CAN1_MOSTAT10	(*( CAN_MOSTAT0_type *) 0xF002915CU)	/* Message Object 10 Status Register */
#define CAN1_MOSTAT11	(*( CAN_MOSTAT0_type *) 0xF002917CU)	/* Message Object 11 Status Register */
#define CAN1_MOSTAT12	(*( CAN_MOSTAT0_type *) 0xF002919CU)	/* Message Object 12 Status Register */
#define CAN1_MOSTAT13	(*( CAN_MOSTAT0_type *) 0xF00291BCU)	/* Message Object 13 Status Register */
#define CAN1_MOSTAT14	(*( CAN_MOSTAT0_type *) 0xF00291DCU)	/* Message Object 14 Status Register */
#define CAN1_MOSTAT15	(*( CAN_MOSTAT0_type *) 0xF00291FCU)	/* Message Object 15 Status Register */
#define CAN1_MOSTAT16	(*( CAN_MOSTAT0_type *) 0xF002921CU)	/* Message Object 16 Status Register */
#define CAN1_MOSTAT17	(*( CAN_MOSTAT0_type *) 0xF002923CU)	/* Message Object 17 Status Register */
#define CAN1_MOSTAT18	(*( CAN_MOSTAT0_type *) 0xF002925CU)	/* Message Object 18 Status Register */
#define CAN1_MOSTAT19	(*( CAN_MOSTAT0_type *) 0xF002927CU)	/* Message Object 19 Status Register */
#define CAN1_MOSTAT20	(*( CAN_MOSTAT0_type *) 0xF002929CU)	/* Message Object 20 Status Register */
#define CAN1_MOSTAT21	(*( CAN_MOSTAT0_type *) 0xF00292BCU)	/* Message Object 21 Status Register */
#define CAN1_MOSTAT22	(*( CAN_MOSTAT0_type *) 0xF00292DCU)	/* Message Object 22 Status Register */
#define CAN1_MOSTAT23	(*( CAN_MOSTAT0_type *) 0xF00292FCU)	/* Message Object 23 Status Register */
#define CAN1_MOSTAT24	(*( CAN_MOSTAT0_type *) 0xF002931CU)	/* Message Object 24 Status Register */
#define CAN1_MOSTAT25	(*( CAN_MOSTAT0_type *) 0xF002933CU)	/* Message Object 25 Status Register */
#define CAN1_MOSTAT26	(*( CAN_MOSTAT0_type *) 0xF002935CU)	/* Message Object 26 Status Register */
#define CAN1_MOSTAT27	(*( CAN_MOSTAT0_type *) 0xF002937CU)	/* Message Object 27 Status Register */
#define CAN1_MOSTAT28	(*( CAN_MOSTAT0_type *) 0xF002939CU)	/* Message Object 28 Status Register */
#define CAN1_MOSTAT29	(*( CAN_MOSTAT0_type *) 0xF00293BCU)	/* Message Object 29 Status Register */
#define CAN1_MOSTAT30	(*( CAN_MOSTAT0_type *) 0xF00293DCU)	/* Message Object 30 Status Register */
#define CAN1_MOSTAT31	(*( CAN_MOSTAT0_type *) 0xF00293FCU)	/* Message Object 31 Status Register */
#define CAN1_MOSTAT32	(*( CAN_MOSTAT0_type *) 0xF002941CU)	/* Message Object 32 Status Register */
#define CAN1_MOSTAT33	(*( CAN_MOSTAT0_type *) 0xF002943CU)	/* Message Object 33 Status Register */
#define CAN1_MOSTAT34	(*( CAN_MOSTAT0_type *) 0xF002945CU)	/* Message Object 34 Status Register */
#define CAN1_MOSTAT35	(*( CAN_MOSTAT0_type *) 0xF002947CU)	/* Message Object 35 Status Register */
#define CAN1_MOSTAT36	(*( CAN_MOSTAT0_type *) 0xF002949CU)	/* Message Object 36 Status Register */
#define CAN1_MOSTAT37	(*( CAN_MOSTAT0_type *) 0xF00294BCU)	/* Message Object 37 Status Register */
#define CAN1_MOSTAT38	(*( CAN_MOSTAT0_type *) 0xF00294DCU)	/* Message Object 38 Status Register */
#define CAN1_MOSTAT39	(*( CAN_MOSTAT0_type *) 0xF00294FCU)	/* Message Object 39 Status Register */
#define CAN1_MOSTAT40	(*( CAN_MOSTAT0_type *) 0xF002951CU)	/* Message Object 40 Status Register */
#define CAN1_MOSTAT41	(*( CAN_MOSTAT0_type *) 0xF002953CU)	/* Message Object 41 Status Register */
#define CAN1_MOSTAT42	(*( CAN_MOSTAT0_type *) 0xF002955CU)	/* Message Object 42 Status Register */
#define CAN1_MOSTAT43	(*( CAN_MOSTAT0_type *) 0xF002957CU)	/* Message Object 43 Status Register */
#define CAN1_MOSTAT44	(*( CAN_MOSTAT0_type *) 0xF002959CU)	/* Message Object 44 Status Register */
#define CAN1_MOSTAT45	(*( CAN_MOSTAT0_type *) 0xF00295BCU)	/* Message Object 45 Status Register */
#define CAN1_MOSTAT46	(*( CAN_MOSTAT0_type *) 0xF00295DCU)	/* Message Object 46 Status Register */
#define CAN1_MOSTAT47	(*( CAN_MOSTAT0_type *) 0xF00295FCU)	/* Message Object 47 Status Register */
#define CAN1_MOSTAT48	(*( CAN_MOSTAT0_type *) 0xF002961CU)	/* Message Object 48 Status Register */
#define CAN1_MOSTAT49	(*( CAN_MOSTAT0_type *) 0xF002963CU)	/* Message Object 49 Status Register */
#define CAN1_MOSTAT50	(*( CAN_MOSTAT0_type *) 0xF002965CU)	/* Message Object 50 Status Register */
#define CAN1_MOSTAT51	(*( CAN_MOSTAT0_type *) 0xF002967CU)	/* Message Object 51 Status Register */
#define CAN1_MOSTAT52	(*( CAN_MOSTAT0_type *) 0xF002969CU)	/* Message Object 52 Status Register */
#define CAN1_MOSTAT53	(*( CAN_MOSTAT0_type *) 0xF00296BCU)	/* Message Object 53 Status Register */
#define CAN1_MOSTAT54	(*( CAN_MOSTAT0_type *) 0xF00296DCU)	/* Message Object 54 Status Register */
#define CAN1_MOSTAT55	(*( CAN_MOSTAT0_type *) 0xF00296FCU)	/* Message Object 55 Status Register */
#define CAN1_MOSTAT56	(*( CAN_MOSTAT0_type *) 0xF002971CU)	/* Message Object 56 Status Register */
#define CAN1_MOSTAT57	(*( CAN_MOSTAT0_type *) 0xF002973CU)	/* Message Object 57 Status Register */
#define CAN1_MOSTAT58	(*( CAN_MOSTAT0_type *) 0xF002975CU)	/* Message Object 58 Status Register */
#define CAN1_MOSTAT59	(*( CAN_MOSTAT0_type *) 0xF002977CU)	/* Message Object 59 Status Register */
#define CAN1_MOSTAT60	(*( CAN_MOSTAT0_type *) 0xF002979CU)	/* Message Object 60 Status Register */
#define CAN1_MOSTAT61	(*( CAN_MOSTAT0_type *) 0xF00297BCU)	/* Message Object 61 Status Register */
#define CAN1_MOSTAT62	(*( CAN_MOSTAT0_type *) 0xF00297DCU)	/* Message Object 62 Status Register */
#define CAN1_MOSTAT63	(*( CAN_MOSTAT0_type *) 0xF00297FCU)	/* Message Object 63 Status Register */
#define CAN1_MOSTAT64	(*( CAN_MOSTAT0_type *) 0xF002981CU)	/* Message Object 64 Status Register */
#define CAN1_MOSTAT65	(*( CAN_MOSTAT0_type *) 0xF002983CU)	/* Message Object 65 Status Register */
#define CAN1_MOSTAT66	(*( CAN_MOSTAT0_type *) 0xF002985CU)	/* Message Object 66 Status Register */
#define CAN1_MOSTAT67	(*( CAN_MOSTAT0_type *) 0xF002987CU)	/* Message Object 67 Status Register */
#define CAN1_MOSTAT68	(*( CAN_MOSTAT0_type *) 0xF002989CU)	/* Message Object 68 Status Register */
#define CAN1_MOSTAT69	(*( CAN_MOSTAT0_type *) 0xF00298BCU)	/* Message Object 69 Status Register */
#define CAN1_MOSTAT70	(*( CAN_MOSTAT0_type *) 0xF00298DCU)	/* Message Object 70 Status Register */
#define CAN1_MOSTAT71	(*( CAN_MOSTAT0_type *) 0xF00298FCU)	/* Message Object 71 Status Register */
#define CAN1_MOSTAT72	(*( CAN_MOSTAT0_type *) 0xF002991CU)	/* Message Object 72 Status Register */
#define CAN1_MOSTAT73	(*( CAN_MOSTAT0_type *) 0xF002993CU)	/* Message Object 73 Status Register */
#define CAN1_MOSTAT74	(*( CAN_MOSTAT0_type *) 0xF002995CU)	/* Message Object 74 Status Register */
#define CAN1_MOSTAT75	(*( CAN_MOSTAT0_type *) 0xF002997CU)	/* Message Object 75 Status Register */
#define CAN1_MOSTAT76	(*( CAN_MOSTAT0_type *) 0xF002999CU)	/* Message Object 76 Status Register */
#define CAN1_MOSTAT77	(*( CAN_MOSTAT0_type *) 0xF00299BCU)	/* Message Object 77 Status Register */
#define CAN1_MOSTAT78	(*( CAN_MOSTAT0_type *) 0xF00299DCU)	/* Message Object 78 Status Register */
#define CAN1_MOSTAT79	(*( CAN_MOSTAT0_type *) 0xF00299FCU)	/* Message Object 79 Status Register */
#define CAN1_MOSTAT80	(*( CAN_MOSTAT0_type *) 0xF0029A1CU)	/* Message Object 80 Status Register */
#define CAN1_MOSTAT81	(*( CAN_MOSTAT0_type *) 0xF0029A3CU)	/* Message Object 81 Status Register */
#define CAN1_MOSTAT82	(*( CAN_MOSTAT0_type *) 0xF0029A5CU)	/* Message Object 82 Status Register */
#define CAN1_MOSTAT83	(*( CAN_MOSTAT0_type *) 0xF0029A7CU)	/* Message Object 83 Status Register */
#define CAN1_MOSTAT84	(*( CAN_MOSTAT0_type *) 0xF0029A9CU)	/* Message Object 84 Status Register */
#define CAN1_MOSTAT85	(*( CAN_MOSTAT0_type *) 0xF0029ABCU)	/* Message Object 85 Status Register */
#define CAN1_MOSTAT86	(*( CAN_MOSTAT0_type *) 0xF0029ADCU)	/* Message Object 86 Status Register */
#define CAN1_MOSTAT87	(*( CAN_MOSTAT0_type *) 0xF0029AFCU)	/* Message Object 87 Status Register */
#define CAN1_MOSTAT88	(*( CAN_MOSTAT0_type *) 0xF0029B1CU)	/* Message Object 88 Status Register */
#define CAN1_MOSTAT89	(*( CAN_MOSTAT0_type *) 0xF0029B3CU)	/* Message Object 89 Status Register */
#define CAN1_MOSTAT90	(*( CAN_MOSTAT0_type *) 0xF0029B5CU)	/* Message Object 90 Status Register */
#define CAN1_MOSTAT91	(*( CAN_MOSTAT0_type *) 0xF0029B7CU)	/* Message Object 91 Status Register */
#define CAN1_MOSTAT92	(*( CAN_MOSTAT0_type *) 0xF0029B9CU)	/* Message Object 92 Status Register */
#define CAN1_MOSTAT93	(*( CAN_MOSTAT0_type *) 0xF0029BBCU)	/* Message Object 93 Status Register */
#define CAN1_MOSTAT94	(*( CAN_MOSTAT0_type *) 0xF0029BDCU)	/* Message Object 94 Status Register */
#define CAN1_MOSTAT95	(*( CAN_MOSTAT0_type *) 0xF0029BFCU)	/* Message Object 95 Status Register */
#define CAN1_MOSTAT96	(*( CAN_MOSTAT0_type *) 0xF0029C1CU)	/* Message Object 96 Status Register */
#define CAN1_MOSTAT97	(*( CAN_MOSTAT0_type *) 0xF0029C3CU)	/* Message Object 97 Status Register */
#define CAN1_MOSTAT98	(*( CAN_MOSTAT0_type *) 0xF0029C5CU)	/* Message Object 98 Status Register */
#define CAN1_MOSTAT99	(*( CAN_MOSTAT0_type *) 0xF0029C7CU)	/* Message Object 99 Status Register */
#define CAN1_MOSTAT100	(*( CAN_MOSTAT0_type *) 0xF0029C9CU)	/* Message Object 100 Status Register */
#define CAN1_MOSTAT101	(*( CAN_MOSTAT0_type *) 0xF0029CBCU)	/* Message Object 101 Status Register */
#define CAN1_MOSTAT102	(*( CAN_MOSTAT0_type *) 0xF0029CDCU)	/* Message Object 102 Status Register */
#define CAN1_MOSTAT103	(*( CAN_MOSTAT0_type *) 0xF0029CFCU)	/* Message Object 103 Status Register */
#define CAN1_MOSTAT104	(*( CAN_MOSTAT0_type *) 0xF0029D1CU)	/* Message Object 104 Status Register */
#define CAN1_MOSTAT105	(*( CAN_MOSTAT0_type *) 0xF0029D3CU)	/* Message Object 105 Status Register */
#define CAN1_MOSTAT106	(*( CAN_MOSTAT0_type *) 0xF0029D5CU)	/* Message Object 106 Status Register */
#define CAN1_MOSTAT107	(*( CAN_MOSTAT0_type *) 0xF0029D7CU)	/* Message Object 107 Status Register */
#define CAN1_MOSTAT108	(*( CAN_MOSTAT0_type *) 0xF0029D9CU)	/* Message Object 108 Status Register */
#define CAN1_MOSTAT109	(*( CAN_MOSTAT0_type *) 0xF0029DBCU)	/* Message Object 109 Status Register */
#define CAN1_MOSTAT110	(*( CAN_MOSTAT0_type *) 0xF0029DDCU)	/* Message Object 110 Status Register */
#define CAN1_MOSTAT111	(*( CAN_MOSTAT0_type *) 0xF0029DFCU)	/* Message Object 111 Status Register */
#define CAN1_MOSTAT112	(*( CAN_MOSTAT0_type *) 0xF0029E1CU)	/* Message Object 112 Status Register */
#define CAN1_MOSTAT113	(*( CAN_MOSTAT0_type *) 0xF0029E3CU)	/* Message Object 113 Status Register */
#define CAN1_MOSTAT114	(*( CAN_MOSTAT0_type *) 0xF0029E5CU)	/* Message Object 114 Status Register */
#define CAN1_MOSTAT115	(*( CAN_MOSTAT0_type *) 0xF0029E7CU)	/* Message Object 115 Status Register */
#define CAN1_MOSTAT116	(*( CAN_MOSTAT0_type *) 0xF0029E9CU)	/* Message Object 116 Status Register */
#define CAN1_MOSTAT117	(*( CAN_MOSTAT0_type *) 0xF0029EBCU)	/* Message Object 117 Status Register */
#define CAN1_MOSTAT118	(*( CAN_MOSTAT0_type *) 0xF0029EDCU)	/* Message Object 118 Status Register */
#define CAN1_MOSTAT119	(*( CAN_MOSTAT0_type *) 0xF0029EFCU)	/* Message Object 119 Status Register */
#define CAN1_MOSTAT120	(*( CAN_MOSTAT0_type *) 0xF0029F1CU)	/* Message Object 120 Status Register */
#define CAN1_MOSTAT121	(*( CAN_MOSTAT0_type *) 0xF0029F3CU)	/* Message Object 121 Status Register */
#define CAN1_MOSTAT122	(*( CAN_MOSTAT0_type *) 0xF0029F5CU)	/* Message Object 122 Status Register */
#define CAN1_MOSTAT123	(*( CAN_MOSTAT0_type *) 0xF0029F7CU)	/* Message Object 123 Status Register */
#define CAN1_MOSTAT124	(*( CAN_MOSTAT0_type *) 0xF0029F9CU)	/* Message Object 124 Status Register */
#define CAN1_MOSTAT125	(*( CAN_MOSTAT0_type *) 0xF0029FBCU)	/* Message Object 125 Status Register */
#define CAN1_MOSTAT126	(*( CAN_MOSTAT0_type *) 0xF0029FDCU)	/* Message Object 126 Status Register */
#define CAN_MOSTAT127	(*( CAN_MOSTAT0_type *) 0xF0019FFCU)	/* Message Object 127 Status Register */
#define CAN1_MOSTAT127	(*( CAN_MOSTAT0_type *) 0xF0029FFCU)	/* Message Object 127 Status Register */
#define CAN_MOIPR0	(*( CAN_MOIPR0_type *) 0xF0019008U)	/* Message Object 0 Interrupt Pointer Register */
#define CAN_MOIPR1	(*( CAN_MOIPR0_type *) 0xF0019028U)	/* Message Object 1 Interrupt Pointer Register */
#define CAN_MOIPR2	(*( CAN_MOIPR0_type *) 0xF0019048U)	/* Message Object 2 Interrupt Pointer Register */
#define CAN_MOIPR3	(*( CAN_MOIPR0_type *) 0xF0019068U)	/* Message Object 3 Interrupt Pointer Register */
#define CAN_MOIPR4	(*( CAN_MOIPR0_type *) 0xF0019088U)	/* Message Object 4 Interrupt Pointer Register */
#define CAN_MOIPR5	(*( CAN_MOIPR0_type *) 0xF00190A8U)	/* Message Object 5 Interrupt Pointer Register */
#define CAN_MOIPR6	(*( CAN_MOIPR0_type *) 0xF00190C8U)	/* Message Object 6 Interrupt Pointer Register */
#define CAN_MOIPR7	(*( CAN_MOIPR0_type *) 0xF00190E8U)	/* Message Object 7 Interrupt Pointer Register */
#define CAN_MOIPR8	(*( CAN_MOIPR0_type *) 0xF0019108U)	/* Message Object 8 Interrupt Pointer Register */
#define CAN_MOIPR9	(*( CAN_MOIPR0_type *) 0xF0019128U)	/* Message Object 9 Interrupt Pointer Register */
#define CAN_MOIPR10	(*( CAN_MOIPR0_type *) 0xF0019148U)	/* Message Object 10 Interrupt Pointer Register */
#define CAN_MOIPR11	(*( CAN_MOIPR0_type *) 0xF0019168U)	/* Message Object 11 Interrupt Pointer Register */
#define CAN_MOIPR12	(*( CAN_MOIPR0_type *) 0xF0019188U)	/* Message Object 12 Interrupt Pointer Register */
#define CAN_MOIPR13	(*( CAN_MOIPR0_type *) 0xF00191A8U)	/* Message Object 13 Interrupt Pointer Register */
#define CAN_MOIPR14	(*( CAN_MOIPR0_type *) 0xF00191C8U)	/* Message Object 14 Interrupt Pointer Register */
#define CAN_MOIPR15	(*( CAN_MOIPR0_type *) 0xF00191E8U)	/* Message Object 15 Interrupt Pointer Register */
#define CAN_MOIPR16	(*( CAN_MOIPR0_type *) 0xF0019208U)	/* Message Object 16 Interrupt Pointer Register */
#define CAN_MOIPR17	(*( CAN_MOIPR0_type *) 0xF0019228U)	/* Message Object 17 Interrupt Pointer Register */
#define CAN_MOIPR18	(*( CAN_MOIPR0_type *) 0xF0019248U)	/* Message Object 18 Interrupt Pointer Register */
#define CAN_MOIPR19	(*( CAN_MOIPR0_type *) 0xF0019268U)	/* Message Object 19 Interrupt Pointer Register */
#define CAN_MOIPR20	(*( CAN_MOIPR0_type *) 0xF0019288U)	/* Message Object 20 Interrupt Pointer Register */
#define CAN_MOIPR21	(*( CAN_MOIPR0_type *) 0xF00192A8U)	/* Message Object 21 Interrupt Pointer Register */
#define CAN_MOIPR22	(*( CAN_MOIPR0_type *) 0xF00192C8U)	/* Message Object 22 Interrupt Pointer Register */
#define CAN_MOIPR23	(*( CAN_MOIPR0_type *) 0xF00192E8U)	/* Message Object 23 Interrupt Pointer Register */
#define CAN_MOIPR24	(*( CAN_MOIPR0_type *) 0xF0019308U)	/* Message Object 24 Interrupt Pointer Register */
#define CAN_MOIPR25	(*( CAN_MOIPR0_type *) 0xF0019328U)	/* Message Object 25 Interrupt Pointer Register */
#define CAN_MOIPR26	(*( CAN_MOIPR0_type *) 0xF0019348U)	/* Message Object 26 Interrupt Pointer Register */
#define CAN_MOIPR27	(*( CAN_MOIPR0_type *) 0xF0019368U)	/* Message Object 27 Interrupt Pointer Register */
#define CAN_MOIPR28	(*( CAN_MOIPR0_type *) 0xF0019388U)	/* Message Object 28 Interrupt Pointer Register */
#define CAN_MOIPR29	(*( CAN_MOIPR0_type *) 0xF00193A8U)	/* Message Object 29 Interrupt Pointer Register */
#define CAN_MOIPR30	(*( CAN_MOIPR0_type *) 0xF00193C8U)	/* Message Object 30 Interrupt Pointer Register */
#define CAN_MOIPR31	(*( CAN_MOIPR0_type *) 0xF00193E8U)	/* Message Object 31 Interrupt Pointer Register */
#define CAN_MOIPR32	(*( CAN_MOIPR0_type *) 0xF0019408U)	/* Message Object 32 Interrupt Pointer Register */
#define CAN_MOIPR33	(*( CAN_MOIPR0_type *) 0xF0019428U)	/* Message Object 33 Interrupt Pointer Register */
#define CAN_MOIPR34	(*( CAN_MOIPR0_type *) 0xF0019448U)	/* Message Object 34 Interrupt Pointer Register */
#define CAN_MOIPR35	(*( CAN_MOIPR0_type *) 0xF0019468U)	/* Message Object 35 Interrupt Pointer Register */
#define CAN_MOIPR36	(*( CAN_MOIPR0_type *) 0xF0019488U)	/* Message Object 36 Interrupt Pointer Register */
#define CAN_MOIPR37	(*( CAN_MOIPR0_type *) 0xF00194A8U)	/* Message Object 37 Interrupt Pointer Register */
#define CAN_MOIPR38	(*( CAN_MOIPR0_type *) 0xF00194C8U)	/* Message Object 38 Interrupt Pointer Register */
#define CAN_MOIPR39	(*( CAN_MOIPR0_type *) 0xF00194E8U)	/* Message Object 39 Interrupt Pointer Register */
#define CAN_MOIPR40	(*( CAN_MOIPR0_type *) 0xF0019508U)	/* Message Object 40 Interrupt Pointer Register */
#define CAN_MOIPR41	(*( CAN_MOIPR0_type *) 0xF0019528U)	/* Message Object 41 Interrupt Pointer Register */
#define CAN_MOIPR42	(*( CAN_MOIPR0_type *) 0xF0019548U)	/* Message Object 42 Interrupt Pointer Register */
#define CAN_MOIPR43	(*( CAN_MOIPR0_type *) 0xF0019568U)	/* Message Object 43 Interrupt Pointer Register */
#define CAN_MOIPR44	(*( CAN_MOIPR0_type *) 0xF0019588U)	/* Message Object 44 Interrupt Pointer Register */
#define CAN_MOIPR45	(*( CAN_MOIPR0_type *) 0xF00195A8U)	/* Message Object 45 Interrupt Pointer Register */
#define CAN_MOIPR46	(*( CAN_MOIPR0_type *) 0xF00195C8U)	/* Message Object 46 Interrupt Pointer Register */
#define CAN_MOIPR47	(*( CAN_MOIPR0_type *) 0xF00195E8U)	/* Message Object 47 Interrupt Pointer Register */
#define CAN_MOIPR48	(*( CAN_MOIPR0_type *) 0xF0019608U)	/* Message Object 48 Interrupt Pointer Register */
#define CAN_MOIPR49	(*( CAN_MOIPR0_type *) 0xF0019628U)	/* Message Object 49 Interrupt Pointer Register */
#define CAN_MOIPR50	(*( CAN_MOIPR0_type *) 0xF0019648U)	/* Message Object 50 Interrupt Pointer Register */
#define CAN_MOIPR51	(*( CAN_MOIPR0_type *) 0xF0019668U)	/* Message Object 51 Interrupt Pointer Register */
#define CAN_MOIPR52	(*( CAN_MOIPR0_type *) 0xF0019688U)	/* Message Object 52 Interrupt Pointer Register */
#define CAN_MOIPR53	(*( CAN_MOIPR0_type *) 0xF00196A8U)	/* Message Object 53 Interrupt Pointer Register */
#define CAN_MOIPR54	(*( CAN_MOIPR0_type *) 0xF00196C8U)	/* Message Object 54 Interrupt Pointer Register */
#define CAN_MOIPR55	(*( CAN_MOIPR0_type *) 0xF00196E8U)	/* Message Object 55 Interrupt Pointer Register */
#define CAN_MOIPR56	(*( CAN_MOIPR0_type *) 0xF0019708U)	/* Message Object 56 Interrupt Pointer Register */
#define CAN_MOIPR57	(*( CAN_MOIPR0_type *) 0xF0019728U)	/* Message Object 57 Interrupt Pointer Register */
#define CAN_MOIPR58	(*( CAN_MOIPR0_type *) 0xF0019748U)	/* Message Object 58 Interrupt Pointer Register */
#define CAN_MOIPR59	(*( CAN_MOIPR0_type *) 0xF0019768U)	/* Message Object 59 Interrupt Pointer Register */
#define CAN_MOIPR60	(*( CAN_MOIPR0_type *) 0xF0019788U)	/* Message Object 60 Interrupt Pointer Register */
#define CAN_MOIPR61	(*( CAN_MOIPR0_type *) 0xF00197A8U)	/* Message Object 61 Interrupt Pointer Register */
#define CAN_MOIPR62	(*( CAN_MOIPR0_type *) 0xF00197C8U)	/* Message Object 62 Interrupt Pointer Register */
#define CAN_MOIPR63	(*( CAN_MOIPR0_type *) 0xF00197E8U)	/* Message Object 63 Interrupt Pointer Register */
#define CAN_MOIPR64	(*( CAN_MOIPR0_type *) 0xF0019808U)	/* Message Object 64 Interrupt Pointer Register */
#define CAN_MOIPR65	(*( CAN_MOIPR0_type *) 0xF0019828U)	/* Message Object 65 Interrupt Pointer Register */
#define CAN_MOIPR66	(*( CAN_MOIPR0_type *) 0xF0019848U)	/* Message Object 66 Interrupt Pointer Register */
#define CAN_MOIPR67	(*( CAN_MOIPR0_type *) 0xF0019868U)	/* Message Object 67 Interrupt Pointer Register */
#define CAN_MOIPR68	(*( CAN_MOIPR0_type *) 0xF0019888U)	/* Message Object 68 Interrupt Pointer Register */
#define CAN_MOIPR69	(*( CAN_MOIPR0_type *) 0xF00198A8U)	/* Message Object 69 Interrupt Pointer Register */
#define CAN_MOIPR70	(*( CAN_MOIPR0_type *) 0xF00198C8U)	/* Message Object 70 Interrupt Pointer Register */
#define CAN_MOIPR71	(*( CAN_MOIPR0_type *) 0xF00198E8U)	/* Message Object 71 Interrupt Pointer Register */
#define CAN_MOIPR72	(*( CAN_MOIPR0_type *) 0xF0019908U)	/* Message Object 72 Interrupt Pointer Register */
#define CAN_MOIPR73	(*( CAN_MOIPR0_type *) 0xF0019928U)	/* Message Object 73 Interrupt Pointer Register */
#define CAN_MOIPR74	(*( CAN_MOIPR0_type *) 0xF0019948U)	/* Message Object 74 Interrupt Pointer Register */
#define CAN_MOIPR75	(*( CAN_MOIPR0_type *) 0xF0019968U)	/* Message Object 75 Interrupt Pointer Register */
#define CAN_MOIPR76	(*( CAN_MOIPR0_type *) 0xF0019988U)	/* Message Object 76 Interrupt Pointer Register */
#define CAN_MOIPR77	(*( CAN_MOIPR0_type *) 0xF00199A8U)	/* Message Object 77 Interrupt Pointer Register */
#define CAN_MOIPR78	(*( CAN_MOIPR0_type *) 0xF00199C8U)	/* Message Object 78 Interrupt Pointer Register */
#define CAN_MOIPR79	(*( CAN_MOIPR0_type *) 0xF00199E8U)	/* Message Object 79 Interrupt Pointer Register */
#define CAN_MOIPR80	(*( CAN_MOIPR0_type *) 0xF0019A08U)	/* Message Object 80 Interrupt Pointer Register */
#define CAN_MOIPR81	(*( CAN_MOIPR0_type *) 0xF0019A28U)	/* Message Object 81 Interrupt Pointer Register */
#define CAN_MOIPR82	(*( CAN_MOIPR0_type *) 0xF0019A48U)	/* Message Object 82 Interrupt Pointer Register */
#define CAN_MOIPR83	(*( CAN_MOIPR0_type *) 0xF0019A68U)	/* Message Object 83 Interrupt Pointer Register */
#define CAN_MOIPR84	(*( CAN_MOIPR0_type *) 0xF0019A88U)	/* Message Object 84 Interrupt Pointer Register */
#define CAN_MOIPR85	(*( CAN_MOIPR0_type *) 0xF0019AA8U)	/* Message Object 85 Interrupt Pointer Register */
#define CAN_MOIPR86	(*( CAN_MOIPR0_type *) 0xF0019AC8U)	/* Message Object 86 Interrupt Pointer Register */
#define CAN_MOIPR87	(*( CAN_MOIPR0_type *) 0xF0019AE8U)	/* Message Object 87 Interrupt Pointer Register */
#define CAN_MOIPR88	(*( CAN_MOIPR0_type *) 0xF0019B08U)	/* Message Object 88 Interrupt Pointer Register */
#define CAN_MOIPR89	(*( CAN_MOIPR0_type *) 0xF0019B28U)	/* Message Object 89 Interrupt Pointer Register */
#define CAN_MOIPR90	(*( CAN_MOIPR0_type *) 0xF0019B48U)	/* Message Object 90 Interrupt Pointer Register */
#define CAN_MOIPR91	(*( CAN_MOIPR0_type *) 0xF0019B68U)	/* Message Object 91 Interrupt Pointer Register */
#define CAN_MOIPR92	(*( CAN_MOIPR0_type *) 0xF0019B88U)	/* Message Object 92 Interrupt Pointer Register */
#define CAN_MOIPR93	(*( CAN_MOIPR0_type *) 0xF0019BA8U)	/* Message Object 93 Interrupt Pointer Register */
#define CAN_MOIPR94	(*( CAN_MOIPR0_type *) 0xF0019BC8U)	/* Message Object 94 Interrupt Pointer Register */
#define CAN_MOIPR95	(*( CAN_MOIPR0_type *) 0xF0019BE8U)	/* Message Object 95 Interrupt Pointer Register */
#define CAN_MOIPR96	(*( CAN_MOIPR0_type *) 0xF0019C08U)	/* Message Object 96 Interrupt Pointer Register */
#define CAN_MOIPR97	(*( CAN_MOIPR0_type *) 0xF0019C28U)	/* Message Object 97 Interrupt Pointer Register */
#define CAN_MOIPR98	(*( CAN_MOIPR0_type *) 0xF0019C48U)	/* Message Object 98 Interrupt Pointer Register */
#define CAN_MOIPR99	(*( CAN_MOIPR0_type *) 0xF0019C68U)	/* Message Object 99 Interrupt Pointer Register */
#define CAN_MOIPR100	(*( CAN_MOIPR0_type *) 0xF0019C88U)	/* Message Object 100 Interrupt Pointer Register */
#define CAN_MOIPR101	(*( CAN_MOIPR0_type *) 0xF0019CA8U)	/* Message Object 101 Interrupt Pointer Register */
#define CAN_MOIPR102	(*( CAN_MOIPR0_type *) 0xF0019CC8U)	/* Message Object 102 Interrupt Pointer Register */
#define CAN_MOIPR103	(*( CAN_MOIPR0_type *) 0xF0019CE8U)	/* Message Object 103 Interrupt Pointer Register */
#define CAN_MOIPR104	(*( CAN_MOIPR0_type *) 0xF0019D08U)	/* Message Object 104 Interrupt Pointer Register */
#define CAN_MOIPR105	(*( CAN_MOIPR0_type *) 0xF0019D28U)	/* Message Object 105 Interrupt Pointer Register */
#define CAN_MOIPR106	(*( CAN_MOIPR0_type *) 0xF0019D48U)	/* Message Object 106 Interrupt Pointer Register */
#define CAN_MOIPR107	(*( CAN_MOIPR0_type *) 0xF0019D68U)	/* Message Object 107 Interrupt Pointer Register */
#define CAN_MOIPR108	(*( CAN_MOIPR0_type *) 0xF0019D88U)	/* Message Object 108 Interrupt Pointer Register */
#define CAN_MOIPR109	(*( CAN_MOIPR0_type *) 0xF0019DA8U)	/* Message Object 109 Interrupt Pointer Register */
#define CAN_MOIPR110	(*( CAN_MOIPR0_type *) 0xF0019DC8U)	/* Message Object 110 Interrupt Pointer Register */
#define CAN_MOIPR111	(*( CAN_MOIPR0_type *) 0xF0019DE8U)	/* Message Object 111 Interrupt Pointer Register */
#define CAN_MOIPR112	(*( CAN_MOIPR0_type *) 0xF0019E08U)	/* Message Object 112 Interrupt Pointer Register */
#define CAN_MOIPR113	(*( CAN_MOIPR0_type *) 0xF0019E28U)	/* Message Object 113 Interrupt Pointer Register */
#define CAN_MOIPR114	(*( CAN_MOIPR0_type *) 0xF0019E48U)	/* Message Object 114 Interrupt Pointer Register */
#define CAN_MOIPR115	(*( CAN_MOIPR0_type *) 0xF0019E68U)	/* Message Object 115 Interrupt Pointer Register */
#define CAN_MOIPR116	(*( CAN_MOIPR0_type *) 0xF0019E88U)	/* Message Object 116 Interrupt Pointer Register */
#define CAN_MOIPR117	(*( CAN_MOIPR0_type *) 0xF0019EA8U)	/* Message Object 117 Interrupt Pointer Register */
#define CAN_MOIPR118	(*( CAN_MOIPR0_type *) 0xF0019EC8U)	/* Message Object 118 Interrupt Pointer Register */
#define CAN_MOIPR119	(*( CAN_MOIPR0_type *) 0xF0019EE8U)	/* Message Object 119 Interrupt Pointer Register */
#define CAN_MOIPR120	(*( CAN_MOIPR0_type *) 0xF0019F08U)	/* Message Object 120 Interrupt Pointer Register */
#define CAN_MOIPR121	(*( CAN_MOIPR0_type *) 0xF0019F28U)	/* Message Object 121 Interrupt Pointer Register */
#define CAN_MOIPR122	(*( CAN_MOIPR0_type *) 0xF0019F48U)	/* Message Object 122 Interrupt Pointer Register */
#define CAN_MOIPR123	(*( CAN_MOIPR0_type *) 0xF0019F68U)	/* Message Object 123 Interrupt Pointer Register */
#define CAN_MOIPR124	(*( CAN_MOIPR0_type *) 0xF0019F88U)	/* Message Object 124 Interrupt Pointer Register */
#define CAN_MOIPR125	(*( CAN_MOIPR0_type *) 0xF0019FA8U)	/* Message Object 125 Interrupt Pointer Register */
#define CAN_MOIPR126	(*( CAN_MOIPR0_type *) 0xF0019FC8U)	/* Message Object 126 Interrupt Pointer Register */
#define CAN_MOIPR127	(*( CAN_MOIPR0_type *) 0xF0019FE8U)	/* Message Object 127 Interrupt Pointer Register */
#define CAN1_MOIPR0	(*( CAN_MOIPR0_type *) 0xF0029008U)	/* Message Object 0 Interrupt Pointer Register */
#define CAN1_MOIPR1	(*( CAN_MOIPR0_type *) 0xF0029028U)	/* Message Object 1 Interrupt Pointer Register */
#define CAN1_MOIPR2	(*( CAN_MOIPR0_type *) 0xF0029048U)	/* Message Object 2 Interrupt Pointer Register */
#define CAN1_MOIPR3	(*( CAN_MOIPR0_type *) 0xF0029068U)	/* Message Object 3 Interrupt Pointer Register */
#define CAN1_MOIPR4	(*( CAN_MOIPR0_type *) 0xF0029088U)	/* Message Object 4 Interrupt Pointer Register */
#define CAN1_MOIPR5	(*( CAN_MOIPR0_type *) 0xF00290A8U)	/* Message Object 5 Interrupt Pointer Register */
#define CAN1_MOIPR6	(*( CAN_MOIPR0_type *) 0xF00290C8U)	/* Message Object 6 Interrupt Pointer Register */
#define CAN1_MOIPR7	(*( CAN_MOIPR0_type *) 0xF00290E8U)	/* Message Object 7 Interrupt Pointer Register */
#define CAN1_MOIPR8	(*( CAN_MOIPR0_type *) 0xF0029108U)	/* Message Object 8 Interrupt Pointer Register */
#define CAN1_MOIPR9	(*( CAN_MOIPR0_type *) 0xF0029128U)	/* Message Object 9 Interrupt Pointer Register */
#define CAN1_MOIPR10	(*( CAN_MOIPR0_type *) 0xF0029148U)	/* Message Object 10 Interrupt Pointer Register */
#define CAN1_MOIPR11	(*( CAN_MOIPR0_type *) 0xF0029168U)	/* Message Object 11 Interrupt Pointer Register */
#define CAN1_MOIPR12	(*( CAN_MOIPR0_type *) 0xF0029188U)	/* Message Object 12 Interrupt Pointer Register */
#define CAN1_MOIPR13	(*( CAN_MOIPR0_type *) 0xF00291A8U)	/* Message Object 13 Interrupt Pointer Register */
#define CAN1_MOIPR14	(*( CAN_MOIPR0_type *) 0xF00291C8U)	/* Message Object 14 Interrupt Pointer Register */
#define CAN1_MOIPR15	(*( CAN_MOIPR0_type *) 0xF00291E8U)	/* Message Object 15 Interrupt Pointer Register */
#define CAN1_MOIPR16	(*( CAN_MOIPR0_type *) 0xF0029208U)	/* Message Object 16 Interrupt Pointer Register */
#define CAN1_MOIPR17	(*( CAN_MOIPR0_type *) 0xF0029228U)	/* Message Object 17 Interrupt Pointer Register */
#define CAN1_MOIPR18	(*( CAN_MOIPR0_type *) 0xF0029248U)	/* Message Object 18 Interrupt Pointer Register */
#define CAN1_MOIPR19	(*( CAN_MOIPR0_type *) 0xF0029268U)	/* Message Object 19 Interrupt Pointer Register */
#define CAN1_MOIPR20	(*( CAN_MOIPR0_type *) 0xF0029288U)	/* Message Object 20 Interrupt Pointer Register */
#define CAN1_MOIPR21	(*( CAN_MOIPR0_type *) 0xF00292A8U)	/* Message Object 21 Interrupt Pointer Register */
#define CAN1_MOIPR22	(*( CAN_MOIPR0_type *) 0xF00292C8U)	/* Message Object 22 Interrupt Pointer Register */
#define CAN1_MOIPR23	(*( CAN_MOIPR0_type *) 0xF00292E8U)	/* Message Object 23 Interrupt Pointer Register */
#define CAN1_MOIPR24	(*( CAN_MOIPR0_type *) 0xF0029308U)	/* Message Object 24 Interrupt Pointer Register */
#define CAN1_MOIPR25	(*( CAN_MOIPR0_type *) 0xF0029328U)	/* Message Object 25 Interrupt Pointer Register */
#define CAN1_MOIPR26	(*( CAN_MOIPR0_type *) 0xF0029348U)	/* Message Object 26 Interrupt Pointer Register */
#define CAN1_MOIPR27	(*( CAN_MOIPR0_type *) 0xF0029368U)	/* Message Object 27 Interrupt Pointer Register */
#define CAN1_MOIPR28	(*( CAN_MOIPR0_type *) 0xF0029388U)	/* Message Object 28 Interrupt Pointer Register */
#define CAN1_MOIPR29	(*( CAN_MOIPR0_type *) 0xF00293A8U)	/* Message Object 29 Interrupt Pointer Register */
#define CAN1_MOIPR30	(*( CAN_MOIPR0_type *) 0xF00293C8U)	/* Message Object 30 Interrupt Pointer Register */
#define CAN1_MOIPR31	(*( CAN_MOIPR0_type *) 0xF00293E8U)	/* Message Object 31 Interrupt Pointer Register */
#define CAN1_MOIPR32	(*( CAN_MOIPR0_type *) 0xF0029408U)	/* Message Object 32 Interrupt Pointer Register */
#define CAN1_MOIPR33	(*( CAN_MOIPR0_type *) 0xF0029428U)	/* Message Object 33 Interrupt Pointer Register */
#define CAN1_MOIPR34	(*( CAN_MOIPR0_type *) 0xF0029448U)	/* Message Object 34 Interrupt Pointer Register */
#define CAN1_MOIPR35	(*( CAN_MOIPR0_type *) 0xF0029468U)	/* Message Object 35 Interrupt Pointer Register */
#define CAN1_MOIPR36	(*( CAN_MOIPR0_type *) 0xF0029488U)	/* Message Object 36 Interrupt Pointer Register */
#define CAN1_MOIPR37	(*( CAN_MOIPR0_type *) 0xF00294A8U)	/* Message Object 37 Interrupt Pointer Register */
#define CAN1_MOIPR38	(*( CAN_MOIPR0_type *) 0xF00294C8U)	/* Message Object 38 Interrupt Pointer Register */
#define CAN1_MOIPR39	(*( CAN_MOIPR0_type *) 0xF00294E8U)	/* Message Object 39 Interrupt Pointer Register */
#define CAN1_MOIPR40	(*( CAN_MOIPR0_type *) 0xF0029508U)	/* Message Object 40 Interrupt Pointer Register */
#define CAN1_MOIPR41	(*( CAN_MOIPR0_type *) 0xF0029528U)	/* Message Object 41 Interrupt Pointer Register */
#define CAN1_MOIPR42	(*( CAN_MOIPR0_type *) 0xF0029548U)	/* Message Object 42 Interrupt Pointer Register */
#define CAN1_MOIPR43	(*( CAN_MOIPR0_type *) 0xF0029568U)	/* Message Object 43 Interrupt Pointer Register */
#define CAN1_MOIPR44	(*( CAN_MOIPR0_type *) 0xF0029588U)	/* Message Object 44 Interrupt Pointer Register */
#define CAN1_MOIPR45	(*( CAN_MOIPR0_type *) 0xF00295A8U)	/* Message Object 45 Interrupt Pointer Register */
#define CAN1_MOIPR46	(*( CAN_MOIPR0_type *) 0xF00295C8U)	/* Message Object 46 Interrupt Pointer Register */
#define CAN1_MOIPR47	(*( CAN_MOIPR0_type *) 0xF00295E8U)	/* Message Object 47 Interrupt Pointer Register */
#define CAN1_MOIPR48	(*( CAN_MOIPR0_type *) 0xF0029608U)	/* Message Object 48 Interrupt Pointer Register */
#define CAN1_MOIPR49	(*( CAN_MOIPR0_type *) 0xF0029628U)	/* Message Object 49 Interrupt Pointer Register */
#define CAN1_MOIPR50	(*( CAN_MOIPR0_type *) 0xF0029648U)	/* Message Object 50 Interrupt Pointer Register */
#define CAN1_MOIPR51	(*( CAN_MOIPR0_type *) 0xF0029668U)	/* Message Object 51 Interrupt Pointer Register */
#define CAN1_MOIPR52	(*( CAN_MOIPR0_type *) 0xF0029688U)	/* Message Object 52 Interrupt Pointer Register */
#define CAN1_MOIPR53	(*( CAN_MOIPR0_type *) 0xF00296A8U)	/* Message Object 53 Interrupt Pointer Register */
#define CAN1_MOIPR54	(*( CAN_MOIPR0_type *) 0xF00296C8U)	/* Message Object 54 Interrupt Pointer Register */
#define CAN1_MOIPR55	(*( CAN_MOIPR0_type *) 0xF00296E8U)	/* Message Object 55 Interrupt Pointer Register */
#define CAN1_MOIPR56	(*( CAN_MOIPR0_type *) 0xF0029708U)	/* Message Object 56 Interrupt Pointer Register */
#define CAN1_MOIPR57	(*( CAN_MOIPR0_type *) 0xF0029728U)	/* Message Object 57 Interrupt Pointer Register */
#define CAN1_MOIPR58	(*( CAN_MOIPR0_type *) 0xF0029748U)	/* Message Object 58 Interrupt Pointer Register */
#define CAN1_MOIPR59	(*( CAN_MOIPR0_type *) 0xF0029768U)	/* Message Object 59 Interrupt Pointer Register */
#define CAN1_MOIPR60	(*( CAN_MOIPR0_type *) 0xF0029788U)	/* Message Object 60 Interrupt Pointer Register */
#define CAN1_MOIPR61	(*( CAN_MOIPR0_type *) 0xF00297A8U)	/* Message Object 61 Interrupt Pointer Register */
#define CAN1_MOIPR62	(*( CAN_MOIPR0_type *) 0xF00297C8U)	/* Message Object 62 Interrupt Pointer Register */
#define CAN1_MOIPR63	(*( CAN_MOIPR0_type *) 0xF00297E8U)	/* Message Object 63 Interrupt Pointer Register */
#define CAN1_MOIPR64	(*( CAN_MOIPR0_type *) 0xF0029808U)	/* Message Object 64 Interrupt Pointer Register */
#define CAN1_MOIPR65	(*( CAN_MOIPR0_type *) 0xF0029828U)	/* Message Object 65 Interrupt Pointer Register */
#define CAN1_MOIPR66	(*( CAN_MOIPR0_type *) 0xF0029848U)	/* Message Object 66 Interrupt Pointer Register */
#define CAN1_MOIPR67	(*( CAN_MOIPR0_type *) 0xF0029868U)	/* Message Object 67 Interrupt Pointer Register */
#define CAN1_MOIPR68	(*( CAN_MOIPR0_type *) 0xF0029888U)	/* Message Object 68 Interrupt Pointer Register */
#define CAN1_MOIPR69	(*( CAN_MOIPR0_type *) 0xF00298A8U)	/* Message Object 69 Interrupt Pointer Register */
#define CAN1_MOIPR70	(*( CAN_MOIPR0_type *) 0xF00298C8U)	/* Message Object 70 Interrupt Pointer Register */
#define CAN1_MOIPR71	(*( CAN_MOIPR0_type *) 0xF00298E8U)	/* Message Object 71 Interrupt Pointer Register */
#define CAN1_MOIPR72	(*( CAN_MOIPR0_type *) 0xF0029908U)	/* Message Object 72 Interrupt Pointer Register */
#define CAN1_MOIPR73	(*( CAN_MOIPR0_type *) 0xF0029928U)	/* Message Object 73 Interrupt Pointer Register */
#define CAN1_MOIPR74	(*( CAN_MOIPR0_type *) 0xF0029948U)	/* Message Object 74 Interrupt Pointer Register */
#define CAN1_MOIPR75	(*( CAN_MOIPR0_type *) 0xF0029968U)	/* Message Object 75 Interrupt Pointer Register */
#define CAN1_MOIPR76	(*( CAN_MOIPR0_type *) 0xF0029988U)	/* Message Object 76 Interrupt Pointer Register */
#define CAN1_MOIPR77	(*( CAN_MOIPR0_type *) 0xF00299A8U)	/* Message Object 77 Interrupt Pointer Register */
#define CAN1_MOIPR78	(*( CAN_MOIPR0_type *) 0xF00299C8U)	/* Message Object 78 Interrupt Pointer Register */
#define CAN1_MOIPR79	(*( CAN_MOIPR0_type *) 0xF00299E8U)	/* Message Object 79 Interrupt Pointer Register */
#define CAN1_MOIPR80	(*( CAN_MOIPR0_type *) 0xF0029A08U)	/* Message Object 80 Interrupt Pointer Register */
#define CAN1_MOIPR81	(*( CAN_MOIPR0_type *) 0xF0029A28U)	/* Message Object 81 Interrupt Pointer Register */
#define CAN1_MOIPR82	(*( CAN_MOIPR0_type *) 0xF0029A48U)	/* Message Object 82 Interrupt Pointer Register */
#define CAN1_MOIPR83	(*( CAN_MOIPR0_type *) 0xF0029A68U)	/* Message Object 83 Interrupt Pointer Register */
#define CAN1_MOIPR84	(*( CAN_MOIPR0_type *) 0xF0029A88U)	/* Message Object 84 Interrupt Pointer Register */
#define CAN1_MOIPR85	(*( CAN_MOIPR0_type *) 0xF0029AA8U)	/* Message Object 85 Interrupt Pointer Register */
#define CAN1_MOIPR86	(*( CAN_MOIPR0_type *) 0xF0029AC8U)	/* Message Object 86 Interrupt Pointer Register */
#define CAN1_MOIPR87	(*( CAN_MOIPR0_type *) 0xF0029AE8U)	/* Message Object 87 Interrupt Pointer Register */
#define CAN1_MOIPR88	(*( CAN_MOIPR0_type *) 0xF0029B08U)	/* Message Object 88 Interrupt Pointer Register */
#define CAN1_MOIPR89	(*( CAN_MOIPR0_type *) 0xF0029B28U)	/* Message Object 89 Interrupt Pointer Register */
#define CAN1_MOIPR90	(*( CAN_MOIPR0_type *) 0xF0029B48U)	/* Message Object 90 Interrupt Pointer Register */
#define CAN1_MOIPR91	(*( CAN_MOIPR0_type *) 0xF0029B68U)	/* Message Object 91 Interrupt Pointer Register */
#define CAN1_MOIPR92	(*( CAN_MOIPR0_type *) 0xF0029B88U)	/* Message Object 92 Interrupt Pointer Register */
#define CAN1_MOIPR93	(*( CAN_MOIPR0_type *) 0xF0029BA8U)	/* Message Object 93 Interrupt Pointer Register */
#define CAN1_MOIPR94	(*( CAN_MOIPR0_type *) 0xF0029BC8U)	/* Message Object 94 Interrupt Pointer Register */
#define CAN1_MOIPR95	(*( CAN_MOIPR0_type *) 0xF0029BE8U)	/* Message Object 95 Interrupt Pointer Register */
#define CAN1_MOIPR96	(*( CAN_MOIPR0_type *) 0xF0029C08U)	/* Message Object 96 Interrupt Pointer Register */
#define CAN1_MOIPR97	(*( CAN_MOIPR0_type *) 0xF0029C28U)	/* Message Object 97 Interrupt Pointer Register */
#define CAN1_MOIPR98	(*( CAN_MOIPR0_type *) 0xF0029C48U)	/* Message Object 98 Interrupt Pointer Register */
#define CAN1_MOIPR99	(*( CAN_MOIPR0_type *) 0xF0029C68U)	/* Message Object 99 Interrupt Pointer Register */
#define CAN1_MOIPR100	(*( CAN_MOIPR0_type *) 0xF0029C88U)	/* Message Object 100 Interrupt Pointer Register */
#define CAN1_MOIPR101	(*( CAN_MOIPR0_type *) 0xF0029CA8U)	/* Message Object 101 Interrupt Pointer Register */
#define CAN1_MOIPR102	(*( CAN_MOIPR0_type *) 0xF0029CC8U)	/* Message Object 102 Interrupt Pointer Register */
#define CAN1_MOIPR103	(*( CAN_MOIPR0_type *) 0xF0029CE8U)	/* Message Object 103 Interrupt Pointer Register */
#define CAN1_MOIPR104	(*( CAN_MOIPR0_type *) 0xF0029D08U)	/* Message Object 104 Interrupt Pointer Register */
#define CAN1_MOIPR105	(*( CAN_MOIPR0_type *) 0xF0029D28U)	/* Message Object 105 Interrupt Pointer Register */
#define CAN1_MOIPR106	(*( CAN_MOIPR0_type *) 0xF0029D48U)	/* Message Object 106 Interrupt Pointer Register */
#define CAN1_MOIPR107	(*( CAN_MOIPR0_type *) 0xF0029D68U)	/* Message Object 107 Interrupt Pointer Register */
#define CAN1_MOIPR108	(*( CAN_MOIPR0_type *) 0xF0029D88U)	/* Message Object 108 Interrupt Pointer Register */
#define CAN1_MOIPR109	(*( CAN_MOIPR0_type *) 0xF0029DA8U)	/* Message Object 109 Interrupt Pointer Register */
#define CAN1_MOIPR110	(*( CAN_MOIPR0_type *) 0xF0029DC8U)	/* Message Object 110 Interrupt Pointer Register */
#define CAN1_MOIPR111	(*( CAN_MOIPR0_type *) 0xF0029DE8U)	/* Message Object 111 Interrupt Pointer Register */
#define CAN1_MOIPR112	(*( CAN_MOIPR0_type *) 0xF0029E08U)	/* Message Object 112 Interrupt Pointer Register */
#define CAN1_MOIPR113	(*( CAN_MOIPR0_type *) 0xF0029E28U)	/* Message Object 113 Interrupt Pointer Register */
#define CAN1_MOIPR114	(*( CAN_MOIPR0_type *) 0xF0029E48U)	/* Message Object 114 Interrupt Pointer Register */
#define CAN1_MOIPR115	(*( CAN_MOIPR0_type *) 0xF0029E68U)	/* Message Object 115 Interrupt Pointer Register */
#define CAN1_MOIPR116	(*( CAN_MOIPR0_type *) 0xF0029E88U)	/* Message Object 116 Interrupt Pointer Register */
#define CAN1_MOIPR117	(*( CAN_MOIPR0_type *) 0xF0029EA8U)	/* Message Object 117 Interrupt Pointer Register */
#define CAN1_MOIPR118	(*( CAN_MOIPR0_type *) 0xF0029EC8U)	/* Message Object 118 Interrupt Pointer Register */
#define CAN1_MOIPR119	(*( CAN_MOIPR0_type *) 0xF0029EE8U)	/* Message Object 119 Interrupt Pointer Register */
#define CAN1_MOIPR120	(*( CAN_MOIPR0_type *) 0xF0029F08U)	/* Message Object 120 Interrupt Pointer Register */
#define CAN1_MOIPR121	(*( CAN_MOIPR0_type *) 0xF0029F28U)	/* Message Object 121 Interrupt Pointer Register */
#define CAN1_MOIPR122	(*( CAN_MOIPR0_type *) 0xF0029F48U)	/* Message Object 122 Interrupt Pointer Register */
#define CAN1_MOIPR123	(*( CAN_MOIPR0_type *) 0xF0029F68U)	/* Message Object 123 Interrupt Pointer Register */
#define CAN1_MOIPR124	(*( CAN_MOIPR0_type *) 0xF0029F88U)	/* Message Object 124 Interrupt Pointer Register */
#define CAN1_MOIPR125	(*( CAN_MOIPR0_type *) 0xF0029FA8U)	/* Message Object 125 Interrupt Pointer Register */
#define CAN1_MOIPR126	(*( CAN_MOIPR0_type *) 0xF0029FC8U)	/* Message Object 126 Interrupt Pointer Register */
#define CAN1_MOIPR127	(*( CAN_MOIPR0_type *) 0xF0029FE8U)	/* Message Object 127 Interrupt Pointer Register */
#define CAN_MOFCR0	(*( CAN_MOFCR0_type *) 0xF0019000U)	/* Message Object 0 Function Control Register */
#define CAN_MOFCR1	(*( CAN_MOFCR0_type *) 0xF0019020U)	/* Message Object 1 Function Control Register */
#define CAN_MOFCR2	(*( CAN_MOFCR0_type *) 0xF0019040U)	/* Message Object 2 Function Control Register */
#define CAN_MOFCR3	(*( CAN_MOFCR0_type *) 0xF0019060U)	/* Message Object 3 Function Control Register */
#define CAN_MOFCR4	(*( CAN_MOFCR0_type *) 0xF0019080U)	/* Message Object 4 Function Control Register */
#define CAN_MOFCR5	(*( CAN_MOFCR0_type *) 0xF00190A0U)	/* Message Object 5 Function Control Register */
#define CAN_MOFCR6	(*( CAN_MOFCR0_type *) 0xF00190C0U)	/* Message Object 6 Function Control Register */
#define CAN_MOFCR7	(*( CAN_MOFCR0_type *) 0xF00190E0U)	/* Message Object 7 Function Control Register */
#define CAN_MOFCR8	(*( CAN_MOFCR0_type *) 0xF0019100U)	/* Message Object 8 Function Control Register */
#define CAN_MOFCR9	(*( CAN_MOFCR0_type *) 0xF0019120U)	/* Message Object 9 Function Control Register */
#define CAN_MOFCR10	(*( CAN_MOFCR0_type *) 0xF0019140U)	/* Message Object 10 Function Control Register */
#define CAN_MOFCR11	(*( CAN_MOFCR0_type *) 0xF0019160U)	/* Message Object 11 Function Control Register */
#define CAN_MOFCR12	(*( CAN_MOFCR0_type *) 0xF0019180U)	/* Message Object 12 Function Control Register */
#define CAN_MOFCR13	(*( CAN_MOFCR0_type *) 0xF00191A0U)	/* Message Object 13 Function Control Register */
#define CAN_MOFCR14	(*( CAN_MOFCR0_type *) 0xF00191C0U)	/* Message Object 14 Function Control Register */
#define CAN_MOFCR15	(*( CAN_MOFCR0_type *) 0xF00191E0U)	/* Message Object 15 Function Control Register */
#define CAN_MOFCR16	(*( CAN_MOFCR0_type *) 0xF0019200U)	/* Message Object 16 Function Control Register */
#define CAN_MOFCR17	(*( CAN_MOFCR0_type *) 0xF0019220U)	/* Message Object 17 Function Control Register */
#define CAN_MOFCR18	(*( CAN_MOFCR0_type *) 0xF0019240U)	/* Message Object 18 Function Control Register */
#define CAN_MOFCR19	(*( CAN_MOFCR0_type *) 0xF0019260U)	/* Message Object 19 Function Control Register */
#define CAN_MOFCR20	(*( CAN_MOFCR0_type *) 0xF0019280U)	/* Message Object 20 Function Control Register */
#define CAN_MOFCR21	(*( CAN_MOFCR0_type *) 0xF00192A0U)	/* Message Object 21 Function Control Register */
#define CAN_MOFCR22	(*( CAN_MOFCR0_type *) 0xF00192C0U)	/* Message Object 22 Function Control Register */
#define CAN_MOFCR23	(*( CAN_MOFCR0_type *) 0xF00192E0U)	/* Message Object 23 Function Control Register */
#define CAN_MOFCR24	(*( CAN_MOFCR0_type *) 0xF0019300U)	/* Message Object 24 Function Control Register */
#define CAN_MOFCR25	(*( CAN_MOFCR0_type *) 0xF0019320U)	/* Message Object 25 Function Control Register */
#define CAN_MOFCR26	(*( CAN_MOFCR0_type *) 0xF0019340U)	/* Message Object 26 Function Control Register */
#define CAN_MOFCR27	(*( CAN_MOFCR0_type *) 0xF0019360U)	/* Message Object 27 Function Control Register */
#define CAN_MOFCR28	(*( CAN_MOFCR0_type *) 0xF0019380U)	/* Message Object 28 Function Control Register */
#define CAN_MOFCR29	(*( CAN_MOFCR0_type *) 0xF00193A0U)	/* Message Object 29 Function Control Register */
#define CAN_MOFCR30	(*( CAN_MOFCR0_type *) 0xF00193C0U)	/* Message Object 30 Function Control Register */
#define CAN_MOFCR31	(*( CAN_MOFCR0_type *) 0xF00193E0U)	/* Message Object 31 Function Control Register */
#define CAN_MOFCR32	(*( CAN_MOFCR0_type *) 0xF0019400U)	/* Message Object 32 Function Control Register */
#define CAN_MOFCR33	(*( CAN_MOFCR0_type *) 0xF0019420U)	/* Message Object 33 Function Control Register */
#define CAN_MOFCR34	(*( CAN_MOFCR0_type *) 0xF0019440U)	/* Message Object 34 Function Control Register */
#define CAN_MOFCR35	(*( CAN_MOFCR0_type *) 0xF0019460U)	/* Message Object 35 Function Control Register */
#define CAN_MOFCR36	(*( CAN_MOFCR0_type *) 0xF0019480U)	/* Message Object 36 Function Control Register */
#define CAN_MOFCR37	(*( CAN_MOFCR0_type *) 0xF00194A0U)	/* Message Object 37 Function Control Register */
#define CAN_MOFCR38	(*( CAN_MOFCR0_type *) 0xF00194C0U)	/* Message Object 38 Function Control Register */
#define CAN_MOFCR39	(*( CAN_MOFCR0_type *) 0xF00194E0U)	/* Message Object 39 Function Control Register */
#define CAN_MOFCR40	(*( CAN_MOFCR0_type *) 0xF0019500U)	/* Message Object 40 Function Control Register */
#define CAN_MOFCR41	(*( CAN_MOFCR0_type *) 0xF0019520U)	/* Message Object 41 Function Control Register */
#define CAN_MOFCR42	(*( CAN_MOFCR0_type *) 0xF0019540U)	/* Message Object 42 Function Control Register */
#define CAN_MOFCR43	(*( CAN_MOFCR0_type *) 0xF0019560U)	/* Message Object 43 Function Control Register */
#define CAN_MOFCR44	(*( CAN_MOFCR0_type *) 0xF0019580U)	/* Message Object 44 Function Control Register */
#define CAN_MOFCR45	(*( CAN_MOFCR0_type *) 0xF00195A0U)	/* Message Object 45 Function Control Register */
#define CAN_MOFCR46	(*( CAN_MOFCR0_type *) 0xF00195C0U)	/* Message Object 46 Function Control Register */
#define CAN_MOFCR47	(*( CAN_MOFCR0_type *) 0xF00195E0U)	/* Message Object 47 Function Control Register */
#define CAN_MOFCR48	(*( CAN_MOFCR0_type *) 0xF0019600U)	/* Message Object 48 Function Control Register */
#define CAN_MOFCR49	(*( CAN_MOFCR0_type *) 0xF0019620U)	/* Message Object 49 Function Control Register */
#define CAN_MOFCR50	(*( CAN_MOFCR0_type *) 0xF0019640U)	/* Message Object 50 Function Control Register */
#define CAN_MOFCR51	(*( CAN_MOFCR0_type *) 0xF0019660U)	/* Message Object 51 Function Control Register */
#define CAN_MOFCR52	(*( CAN_MOFCR0_type *) 0xF0019680U)	/* Message Object 52 Function Control Register */
#define CAN_MOFCR53	(*( CAN_MOFCR0_type *) 0xF00196A0U)	/* Message Object 53 Function Control Register */
#define CAN_MOFCR54	(*( CAN_MOFCR0_type *) 0xF00196C0U)	/* Message Object 54 Function Control Register */
#define CAN_MOFCR55	(*( CAN_MOFCR0_type *) 0xF00196E0U)	/* Message Object 55 Function Control Register */
#define CAN_MOFCR56	(*( CAN_MOFCR0_type *) 0xF0019700U)	/* Message Object 56 Function Control Register */
#define CAN_MOFCR57	(*( CAN_MOFCR0_type *) 0xF0019720U)	/* Message Object 57 Function Control Register */
#define CAN_MOFCR58	(*( CAN_MOFCR0_type *) 0xF0019740U)	/* Message Object 58 Function Control Register */
#define CAN_MOFCR59	(*( CAN_MOFCR0_type *) 0xF0019760U)	/* Message Object 59 Function Control Register */
#define CAN_MOFCR60	(*( CAN_MOFCR0_type *) 0xF0019780U)	/* Message Object 60 Function Control Register */
#define CAN_MOFCR61	(*( CAN_MOFCR0_type *) 0xF00197A0U)	/* Message Object 61 Function Control Register */
#define CAN_MOFCR62	(*( CAN_MOFCR0_type *) 0xF00197C0U)	/* Message Object 62 Function Control Register */
#define CAN_MOFCR63	(*( CAN_MOFCR0_type *) 0xF00197E0U)	/* Message Object 63 Function Control Register */
#define CAN_MOFCR64	(*( CAN_MOFCR0_type *) 0xF0019800U)	/* Message Object 64 Function Control Register */
#define CAN_MOFCR65	(*( CAN_MOFCR0_type *) 0xF0019820U)	/* Message Object 65 Function Control Register */
#define CAN_MOFCR66	(*( CAN_MOFCR0_type *) 0xF0019840U)	/* Message Object 66 Function Control Register */
#define CAN_MOFCR67	(*( CAN_MOFCR0_type *) 0xF0019860U)	/* Message Object 67 Function Control Register */
#define CAN_MOFCR68	(*( CAN_MOFCR0_type *) 0xF0019880U)	/* Message Object 68 Function Control Register */
#define CAN_MOFCR69	(*( CAN_MOFCR0_type *) 0xF00198A0U)	/* Message Object 69 Function Control Register */
#define CAN_MOFCR70	(*( CAN_MOFCR0_type *) 0xF00198C0U)	/* Message Object 70 Function Control Register */
#define CAN_MOFCR71	(*( CAN_MOFCR0_type *) 0xF00198E0U)	/* Message Object 71 Function Control Register */
#define CAN_MOFCR72	(*( CAN_MOFCR0_type *) 0xF0019900U)	/* Message Object 72 Function Control Register */
#define CAN_MOFCR73	(*( CAN_MOFCR0_type *) 0xF0019920U)	/* Message Object 73 Function Control Register */
#define CAN_MOFCR74	(*( CAN_MOFCR0_type *) 0xF0019940U)	/* Message Object 74 Function Control Register */
#define CAN_MOFCR75	(*( CAN_MOFCR0_type *) 0xF0019960U)	/* Message Object 75 Function Control Register */
#define CAN_MOFCR76	(*( CAN_MOFCR0_type *) 0xF0019980U)	/* Message Object 76 Function Control Register */
#define CAN_MOFCR77	(*( CAN_MOFCR0_type *) 0xF00199A0U)	/* Message Object 77 Function Control Register */
#define CAN_MOFCR78	(*( CAN_MOFCR0_type *) 0xF00199C0U)	/* Message Object 78 Function Control Register */
#define CAN_MOFCR79	(*( CAN_MOFCR0_type *) 0xF00199E0U)	/* Message Object 79 Function Control Register */
#define CAN_MOFCR80	(*( CAN_MOFCR0_type *) 0xF0019A00U)	/* Message Object 80 Function Control Register */
#define CAN_MOFCR81	(*( CAN_MOFCR0_type *) 0xF0019A20U)	/* Message Object 81 Function Control Register */
#define CAN_MOFCR82	(*( CAN_MOFCR0_type *) 0xF0019A40U)	/* Message Object 82 Function Control Register */
#define CAN_MOFCR83	(*( CAN_MOFCR0_type *) 0xF0019A60U)	/* Message Object 83 Function Control Register */
#define CAN_MOFCR84	(*( CAN_MOFCR0_type *) 0xF0019A80U)	/* Message Object 84 Function Control Register */
#define CAN_MOFCR85	(*( CAN_MOFCR0_type *) 0xF0019AA0U)	/* Message Object 85 Function Control Register */
#define CAN_MOFCR86	(*( CAN_MOFCR0_type *) 0xF0019AC0U)	/* Message Object 86 Function Control Register */
#define CAN_MOFCR87	(*( CAN_MOFCR0_type *) 0xF0019AE0U)	/* Message Object 87 Function Control Register */
#define CAN_MOFCR88	(*( CAN_MOFCR0_type *) 0xF0019B00U)	/* Message Object 88 Function Control Register */
#define CAN_MOFCR89	(*( CAN_MOFCR0_type *) 0xF0019B20U)	/* Message Object 89 Function Control Register */
#define CAN_MOFCR90	(*( CAN_MOFCR0_type *) 0xF0019B40U)	/* Message Object 90 Function Control Register */
#define CAN_MOFCR91	(*( CAN_MOFCR0_type *) 0xF0019B60U)	/* Message Object 91 Function Control Register */
#define CAN_MOFCR92	(*( CAN_MOFCR0_type *) 0xF0019B80U)	/* Message Object 92 Function Control Register */
#define CAN_MOFCR93	(*( CAN_MOFCR0_type *) 0xF0019BA0U)	/* Message Object 93 Function Control Register */
#define CAN_MOFCR94	(*( CAN_MOFCR0_type *) 0xF0019BC0U)	/* Message Object 94 Function Control Register */
#define CAN_MOFCR95	(*( CAN_MOFCR0_type *) 0xF0019BE0U)	/* Message Object 95 Function Control Register */
#define CAN_MOFCR96	(*( CAN_MOFCR0_type *) 0xF0019C00U)	/* Message Object 96 Function Control Register */
#define CAN_MOFCR97	(*( CAN_MOFCR0_type *) 0xF0019C20U)	/* Message Object 97 Function Control Register */
#define CAN_MOFCR98	(*( CAN_MOFCR0_type *) 0xF0019C40U)	/* Message Object 98 Function Control Register */
#define CAN_MOFCR99	(*( CAN_MOFCR0_type *) 0xF0019C60U)	/* Message Object 99 Function Control Register */
#define CAN_MOFCR100	(*( CAN_MOFCR0_type *) 0xF0019C80U)	/* Message Object 100 Function Control Register */
#define CAN_MOFCR101	(*( CAN_MOFCR0_type *) 0xF0019CA0U)	/* Message Object 101 Function Control Register */
#define CAN_MOFCR102	(*( CAN_MOFCR0_type *) 0xF0019CC0U)	/* Message Object 102 Function Control Register */
#define CAN_MOFCR103	(*( CAN_MOFCR0_type *) 0xF0019CE0U)	/* Message Object 103 Function Control Register */
#define CAN_MOFCR104	(*( CAN_MOFCR0_type *) 0xF0019D00U)	/* Message Object 104 Function Control Register */
#define CAN_MOFCR105	(*( CAN_MOFCR0_type *) 0xF0019D20U)	/* Message Object 105 Function Control Register */
#define CAN_MOFCR106	(*( CAN_MOFCR0_type *) 0xF0019D40U)	/* Message Object 106 Function Control Register */
#define CAN_MOFCR107	(*( CAN_MOFCR0_type *) 0xF0019D60U)	/* Message Object 107 Function Control Register */
#define CAN_MOFCR108	(*( CAN_MOFCR0_type *) 0xF0019D80U)	/* Message Object 108 Function Control Register */
#define CAN_MOFCR109	(*( CAN_MOFCR0_type *) 0xF0019DA0U)	/* Message Object 109 Function Control Register */
#define CAN_MOFCR110	(*( CAN_MOFCR0_type *) 0xF0019DC0U)	/* Message Object 110 Function Control Register */
#define CAN_MOFCR111	(*( CAN_MOFCR0_type *) 0xF0019DE0U)	/* Message Object 111 Function Control Register */
#define CAN_MOFCR112	(*( CAN_MOFCR0_type *) 0xF0019E00U)	/* Message Object 112 Function Control Register */
#define CAN_MOFCR113	(*( CAN_MOFCR0_type *) 0xF0019E20U)	/* Message Object 113 Function Control Register */
#define CAN_MOFCR114	(*( CAN_MOFCR0_type *) 0xF0019E40U)	/* Message Object 114 Function Control Register */
#define CAN_MOFCR115	(*( CAN_MOFCR0_type *) 0xF0019E60U)	/* Message Object 115 Function Control Register */
#define CAN_MOFCR116	(*( CAN_MOFCR0_type *) 0xF0019E80U)	/* Message Object 116 Function Control Register */
#define CAN_MOFCR117	(*( CAN_MOFCR0_type *) 0xF0019EA0U)	/* Message Object 117 Function Control Register */
#define CAN_MOFCR118	(*( CAN_MOFCR0_type *) 0xF0019EC0U)	/* Message Object 118 Function Control Register */
#define CAN_MOFCR119	(*( CAN_MOFCR0_type *) 0xF0019EE0U)	/* Message Object 119 Function Control Register */
#define CAN_MOFCR120	(*( CAN_MOFCR0_type *) 0xF0019F00U)	/* Message Object 120 Function Control Register */
#define CAN_MOFCR121	(*( CAN_MOFCR0_type *) 0xF0019F20U)	/* Message Object 121 Function Control Register */
#define CAN_MOFCR122	(*( CAN_MOFCR0_type *) 0xF0019F40U)	/* Message Object 122 Function Control Register */
#define CAN_MOFCR123	(*( CAN_MOFCR0_type *) 0xF0019F60U)	/* Message Object 123 Function Control Register */
#define CAN_MOFCR124	(*( CAN_MOFCR0_type *) 0xF0019F80U)	/* Message Object 124 Function Control Register */
#define CAN_MOFCR125	(*( CAN_MOFCR0_type *) 0xF0019FA0U)	/* Message Object 125 Function Control Register */
#define CAN_MOFCR126	(*( CAN_MOFCR0_type *) 0xF0019FC0U)	/* Message Object 126 Function Control Register */
#define CAN_MOFCR127	(*( CAN_MOFCR0_type *) 0xF0019FE0U)	/* Message Object 127 Function Control Register */
#define CAN1_MOFCR0	(*( CAN_MOFCR0_type *) 0xF0029000U)	/* Message Object 0 Function Control Register */
#define CAN1_MOFCR1	(*( CAN_MOFCR0_type *) 0xF0029020U)	/* Message Object 1 Function Control Register */
#define CAN1_MOFCR2	(*( CAN_MOFCR0_type *) 0xF0029040U)	/* Message Object 2 Function Control Register */
#define CAN1_MOFCR3	(*( CAN_MOFCR0_type *) 0xF0029060U)	/* Message Object 3 Function Control Register */
#define CAN1_MOFCR4	(*( CAN_MOFCR0_type *) 0xF0029080U)	/* Message Object 4 Function Control Register */
#define CAN1_MOFCR5	(*( CAN_MOFCR0_type *) 0xF00290A0U)	/* Message Object 5 Function Control Register */
#define CAN1_MOFCR6	(*( CAN_MOFCR0_type *) 0xF00290C0U)	/* Message Object 6 Function Control Register */
#define CAN1_MOFCR7	(*( CAN_MOFCR0_type *) 0xF00290E0U)	/* Message Object 7 Function Control Register */
#define CAN1_MOFCR8	(*( CAN_MOFCR0_type *) 0xF0029100U)	/* Message Object 8 Function Control Register */
#define CAN1_MOFCR9	(*( CAN_MOFCR0_type *) 0xF0029120U)	/* Message Object 9 Function Control Register */
#define CAN1_MOFCR10	(*( CAN_MOFCR0_type *) 0xF0029140U)	/* Message Object 10 Function Control Register */
#define CAN1_MOFCR11	(*( CAN_MOFCR0_type *) 0xF0029160U)	/* Message Object 11 Function Control Register */
#define CAN1_MOFCR12	(*( CAN_MOFCR0_type *) 0xF0029180U)	/* Message Object 12 Function Control Register */
#define CAN1_MOFCR13	(*( CAN_MOFCR0_type *) 0xF00291A0U)	/* Message Object 13 Function Control Register */
#define CAN1_MOFCR14	(*( CAN_MOFCR0_type *) 0xF00291C0U)	/* Message Object 14 Function Control Register */
#define CAN1_MOFCR15	(*( CAN_MOFCR0_type *) 0xF00291E0U)	/* Message Object 15 Function Control Register */
#define CAN1_MOFCR16	(*( CAN_MOFCR0_type *) 0xF0029200U)	/* Message Object 16 Function Control Register */
#define CAN1_MOFCR17	(*( CAN_MOFCR0_type *) 0xF0029220U)	/* Message Object 17 Function Control Register */
#define CAN1_MOFCR18	(*( CAN_MOFCR0_type *) 0xF0029240U)	/* Message Object 18 Function Control Register */
#define CAN1_MOFCR19	(*( CAN_MOFCR0_type *) 0xF0029260U)	/* Message Object 19 Function Control Register */
#define CAN1_MOFCR20	(*( CAN_MOFCR0_type *) 0xF0029280U)	/* Message Object 20 Function Control Register */
#define CAN1_MOFCR21	(*( CAN_MOFCR0_type *) 0xF00292A0U)	/* Message Object 21 Function Control Register */
#define CAN1_MOFCR22	(*( CAN_MOFCR0_type *) 0xF00292C0U)	/* Message Object 22 Function Control Register */
#define CAN1_MOFCR23	(*( CAN_MOFCR0_type *) 0xF00292E0U)	/* Message Object 23 Function Control Register */
#define CAN1_MOFCR24	(*( CAN_MOFCR0_type *) 0xF0029300U)	/* Message Object 24 Function Control Register */
#define CAN1_MOFCR25	(*( CAN_MOFCR0_type *) 0xF0029320U)	/* Message Object 25 Function Control Register */
#define CAN1_MOFCR26	(*( CAN_MOFCR0_type *) 0xF0029340U)	/* Message Object 26 Function Control Register */
#define CAN1_MOFCR27	(*( CAN_MOFCR0_type *) 0xF0029360U)	/* Message Object 27 Function Control Register */
#define CAN1_MOFCR28	(*( CAN_MOFCR0_type *) 0xF0029380U)	/* Message Object 28 Function Control Register */
#define CAN1_MOFCR29	(*( CAN_MOFCR0_type *) 0xF00293A0U)	/* Message Object 29 Function Control Register */
#define CAN1_MOFCR30	(*( CAN_MOFCR0_type *) 0xF00293C0U)	/* Message Object 30 Function Control Register */
#define CAN1_MOFCR31	(*( CAN_MOFCR0_type *) 0xF00293E0U)	/* Message Object 31 Function Control Register */
#define CAN1_MOFCR32	(*( CAN_MOFCR0_type *) 0xF0029400U)	/* Message Object 32 Function Control Register */
#define CAN1_MOFCR33	(*( CAN_MOFCR0_type *) 0xF0029420U)	/* Message Object 33 Function Control Register */
#define CAN1_MOFCR34	(*( CAN_MOFCR0_type *) 0xF0029440U)	/* Message Object 34 Function Control Register */
#define CAN1_MOFCR35	(*( CAN_MOFCR0_type *) 0xF0029460U)	/* Message Object 35 Function Control Register */
#define CAN1_MOFCR36	(*( CAN_MOFCR0_type *) 0xF0029480U)	/* Message Object 36 Function Control Register */
#define CAN1_MOFCR37	(*( CAN_MOFCR0_type *) 0xF00294A0U)	/* Message Object 37 Function Control Register */
#define CAN1_MOFCR38	(*( CAN_MOFCR0_type *) 0xF00294C0U)	/* Message Object 38 Function Control Register */
#define CAN1_MOFCR39	(*( CAN_MOFCR0_type *) 0xF00294E0U)	/* Message Object 39 Function Control Register */
#define CAN1_MOFCR40	(*( CAN_MOFCR0_type *) 0xF0029500U)	/* Message Object 40 Function Control Register */
#define CAN1_MOFCR41	(*( CAN_MOFCR0_type *) 0xF0029520U)	/* Message Object 41 Function Control Register */
#define CAN1_MOFCR42	(*( CAN_MOFCR0_type *) 0xF0029540U)	/* Message Object 42 Function Control Register */
#define CAN1_MOFCR43	(*( CAN_MOFCR0_type *) 0xF0029560U)	/* Message Object 43 Function Control Register */
#define CAN1_MOFCR44	(*( CAN_MOFCR0_type *) 0xF0029580U)	/* Message Object 44 Function Control Register */
#define CAN1_MOFCR45	(*( CAN_MOFCR0_type *) 0xF00295A0U)	/* Message Object 45 Function Control Register */
#define CAN1_MOFCR46	(*( CAN_MOFCR0_type *) 0xF00295C0U)	/* Message Object 46 Function Control Register */
#define CAN1_MOFCR47	(*( CAN_MOFCR0_type *) 0xF00295E0U)	/* Message Object 47 Function Control Register */
#define CAN1_MOFCR48	(*( CAN_MOFCR0_type *) 0xF0029600U)	/* Message Object 48 Function Control Register */
#define CAN1_MOFCR49	(*( CAN_MOFCR0_type *) 0xF0029620U)	/* Message Object 49 Function Control Register */
#define CAN1_MOFCR50	(*( CAN_MOFCR0_type *) 0xF0029640U)	/* Message Object 50 Function Control Register */
#define CAN1_MOFCR51	(*( CAN_MOFCR0_type *) 0xF0029660U)	/* Message Object 51 Function Control Register */
#define CAN1_MOFCR52	(*( CAN_MOFCR0_type *) 0xF0029680U)	/* Message Object 52 Function Control Register */
#define CAN1_MOFCR53	(*( CAN_MOFCR0_type *) 0xF00296A0U)	/* Message Object 53 Function Control Register */
#define CAN1_MOFCR54	(*( CAN_MOFCR0_type *) 0xF00296C0U)	/* Message Object 54 Function Control Register */
#define CAN1_MOFCR55	(*( CAN_MOFCR0_type *) 0xF00296E0U)	/* Message Object 55 Function Control Register */
#define CAN1_MOFCR56	(*( CAN_MOFCR0_type *) 0xF0029700U)	/* Message Object 56 Function Control Register */
#define CAN1_MOFCR57	(*( CAN_MOFCR0_type *) 0xF0029720U)	/* Message Object 57 Function Control Register */
#define CAN1_MOFCR58	(*( CAN_MOFCR0_type *) 0xF0029740U)	/* Message Object 58 Function Control Register */
#define CAN1_MOFCR59	(*( CAN_MOFCR0_type *) 0xF0029760U)	/* Message Object 59 Function Control Register */
#define CAN1_MOFCR60	(*( CAN_MOFCR0_type *) 0xF0029780U)	/* Message Object 60 Function Control Register */
#define CAN1_MOFCR61	(*( CAN_MOFCR0_type *) 0xF00297A0U)	/* Message Object 61 Function Control Register */
#define CAN1_MOFCR62	(*( CAN_MOFCR0_type *) 0xF00297C0U)	/* Message Object 62 Function Control Register */
#define CAN1_MOFCR63	(*( CAN_MOFCR0_type *) 0xF00297E0U)	/* Message Object 63 Function Control Register */
#define CAN1_MOFCR64	(*( CAN_MOFCR0_type *) 0xF0029800U)	/* Message Object 64 Function Control Register */
#define CAN1_MOFCR65	(*( CAN_MOFCR0_type *) 0xF0029820U)	/* Message Object 65 Function Control Register */
#define CAN1_MOFCR66	(*( CAN_MOFCR0_type *) 0xF0029840U)	/* Message Object 66 Function Control Register */
#define CAN1_MOFCR67	(*( CAN_MOFCR0_type *) 0xF0029860U)	/* Message Object 67 Function Control Register */
#define CAN1_MOFCR68	(*( CAN_MOFCR0_type *) 0xF0029880U)	/* Message Object 68 Function Control Register */
#define CAN1_MOFCR69	(*( CAN_MOFCR0_type *) 0xF00298A0U)	/* Message Object 69 Function Control Register */
#define CAN1_MOFCR70	(*( CAN_MOFCR0_type *) 0xF00298C0U)	/* Message Object 70 Function Control Register */
#define CAN1_MOFCR71	(*( CAN_MOFCR0_type *) 0xF00298E0U)	/* Message Object 71 Function Control Register */
#define CAN1_MOFCR72	(*( CAN_MOFCR0_type *) 0xF0029900U)	/* Message Object 72 Function Control Register */
#define CAN1_MOFCR73	(*( CAN_MOFCR0_type *) 0xF0029920U)	/* Message Object 73 Function Control Register */
#define CAN1_MOFCR74	(*( CAN_MOFCR0_type *) 0xF0029940U)	/* Message Object 74 Function Control Register */
#define CAN1_MOFCR75	(*( CAN_MOFCR0_type *) 0xF0029960U)	/* Message Object 75 Function Control Register */
#define CAN1_MOFCR76	(*( CAN_MOFCR0_type *) 0xF0029980U)	/* Message Object 76 Function Control Register */
#define CAN1_MOFCR77	(*( CAN_MOFCR0_type *) 0xF00299A0U)	/* Message Object 77 Function Control Register */
#define CAN1_MOFCR78	(*( CAN_MOFCR0_type *) 0xF00299C0U)	/* Message Object 78 Function Control Register */
#define CAN1_MOFCR79	(*( CAN_MOFCR0_type *) 0xF00299E0U)	/* Message Object 79 Function Control Register */
#define CAN1_MOFCR80	(*( CAN_MOFCR0_type *) 0xF0029A00U)	/* Message Object 80 Function Control Register */
#define CAN1_MOFCR81	(*( CAN_MOFCR0_type *) 0xF0029A20U)	/* Message Object 81 Function Control Register */
#define CAN1_MOFCR82	(*( CAN_MOFCR0_type *) 0xF0029A40U)	/* Message Object 82 Function Control Register */
#define CAN1_MOFCR83	(*( CAN_MOFCR0_type *) 0xF0029A60U)	/* Message Object 83 Function Control Register */
#define CAN1_MOFCR84	(*( CAN_MOFCR0_type *) 0xF0029A80U)	/* Message Object 84 Function Control Register */
#define CAN1_MOFCR85	(*( CAN_MOFCR0_type *) 0xF0029AA0U)	/* Message Object 85 Function Control Register */
#define CAN1_MOFCR86	(*( CAN_MOFCR0_type *) 0xF0029AC0U)	/* Message Object 86 Function Control Register */
#define CAN1_MOFCR87	(*( CAN_MOFCR0_type *) 0xF0029AE0U)	/* Message Object 87 Function Control Register */
#define CAN1_MOFCR88	(*( CAN_MOFCR0_type *) 0xF0029B00U)	/* Message Object 88 Function Control Register */
#define CAN1_MOFCR89	(*( CAN_MOFCR0_type *) 0xF0029B20U)	/* Message Object 89 Function Control Register */
#define CAN1_MOFCR90	(*( CAN_MOFCR0_type *) 0xF0029B40U)	/* Message Object 90 Function Control Register */
#define CAN1_MOFCR91	(*( CAN_MOFCR0_type *) 0xF0029B60U)	/* Message Object 91 Function Control Register */
#define CAN1_MOFCR92	(*( CAN_MOFCR0_type *) 0xF0029B80U)	/* Message Object 92 Function Control Register */
#define CAN1_MOFCR93	(*( CAN_MOFCR0_type *) 0xF0029BA0U)	/* Message Object 93 Function Control Register */
#define CAN1_MOFCR94	(*( CAN_MOFCR0_type *) 0xF0029BC0U)	/* Message Object 94 Function Control Register */
#define CAN1_MOFCR95	(*( CAN_MOFCR0_type *) 0xF0029BE0U)	/* Message Object 95 Function Control Register */
#define CAN1_MOFCR96	(*( CAN_MOFCR0_type *) 0xF0029C00U)	/* Message Object 96 Function Control Register */
#define CAN1_MOFCR97	(*( CAN_MOFCR0_type *) 0xF0029C20U)	/* Message Object 97 Function Control Register */
#define CAN1_MOFCR98	(*( CAN_MOFCR0_type *) 0xF0029C40U)	/* Message Object 98 Function Control Register */
#define CAN1_MOFCR99	(*( CAN_MOFCR0_type *) 0xF0029C60U)	/* Message Object 99 Function Control Register */
#define CAN1_MOFCR100	(*( CAN_MOFCR0_type *) 0xF0029C80U)	/* Message Object 100 Function Control Register */
#define CAN1_MOFCR101	(*( CAN_MOFCR0_type *) 0xF0029CA0U)	/* Message Object 101 Function Control Register */
#define CAN1_MOFCR102	(*( CAN_MOFCR0_type *) 0xF0029CC0U)	/* Message Object 102 Function Control Register */
#define CAN1_MOFCR103	(*( CAN_MOFCR0_type *) 0xF0029CE0U)	/* Message Object 103 Function Control Register */
#define CAN1_MOFCR104	(*( CAN_MOFCR0_type *) 0xF0029D00U)	/* Message Object 104 Function Control Register */
#define CAN1_MOFCR105	(*( CAN_MOFCR0_type *) 0xF0029D20U)	/* Message Object 105 Function Control Register */
#define CAN1_MOFCR106	(*( CAN_MOFCR0_type *) 0xF0029D40U)	/* Message Object 106 Function Control Register */
#define CAN1_MOFCR107	(*( CAN_MOFCR0_type *) 0xF0029D60U)	/* Message Object 107 Function Control Register */
#define CAN1_MOFCR108	(*( CAN_MOFCR0_type *) 0xF0029D80U)	/* Message Object 108 Function Control Register */
#define CAN1_MOFCR109	(*( CAN_MOFCR0_type *) 0xF0029DA0U)	/* Message Object 109 Function Control Register */
#define CAN1_MOFCR110	(*( CAN_MOFCR0_type *) 0xF0029DC0U)	/* Message Object 110 Function Control Register */
#define CAN1_MOFCR111	(*( CAN_MOFCR0_type *) 0xF0029DE0U)	/* Message Object 111 Function Control Register */
#define CAN1_MOFCR112	(*( CAN_MOFCR0_type *) 0xF0029E00U)	/* Message Object 112 Function Control Register */
#define CAN1_MOFCR113	(*( CAN_MOFCR0_type *) 0xF0029E20U)	/* Message Object 113 Function Control Register */
#define CAN1_MOFCR114	(*( CAN_MOFCR0_type *) 0xF0029E40U)	/* Message Object 114 Function Control Register */
#define CAN1_MOFCR115	(*( CAN_MOFCR0_type *) 0xF0029E60U)	/* Message Object 115 Function Control Register */
#define CAN1_MOFCR116	(*( CAN_MOFCR0_type *) 0xF0029E80U)	/* Message Object 116 Function Control Register */
#define CAN1_MOFCR117	(*( CAN_MOFCR0_type *) 0xF0029EA0U)	/* Message Object 117 Function Control Register */
#define CAN1_MOFCR118	(*( CAN_MOFCR0_type *) 0xF0029EC0U)	/* Message Object 118 Function Control Register */
#define CAN1_MOFCR119	(*( CAN_MOFCR0_type *) 0xF0029EE0U)	/* Message Object 119 Function Control Register */
#define CAN1_MOFCR120	(*( CAN_MOFCR0_type *) 0xF0029F00U)	/* Message Object 120 Function Control Register */
#define CAN1_MOFCR121	(*( CAN_MOFCR0_type *) 0xF0029F20U)	/* Message Object 121 Function Control Register */
#define CAN1_MOFCR122	(*( CAN_MOFCR0_type *) 0xF0029F40U)	/* Message Object 122 Function Control Register */
#define CAN1_MOFCR123	(*( CAN_MOFCR0_type *) 0xF0029F60U)	/* Message Object 123 Function Control Register */
#define CAN1_MOFCR124	(*( CAN_MOFCR0_type *) 0xF0029F80U)	/* Message Object 124 Function Control Register */
#define CAN1_MOFCR125	(*( CAN_MOFCR0_type *) 0xF0029FA0U)	/* Message Object 125 Function Control Register */
#define CAN1_MOFCR126	(*( CAN_MOFCR0_type *) 0xF0029FC0U)	/* Message Object 126 Function Control Register */
#define CAN1_MOFCR127	(*( CAN_MOFCR0_type *) 0xF0029FE0U)	/* Message Object 127 Function Control Register */
#define CAN_MOFGPR0	(*( CAN_MOFGPR0_type *) 0xF0019004U)	/* Message Object 0 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR1	(*( CAN_MOFGPR0_type *) 0xF0019024U)	/* Message Object 1 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR2	(*( CAN_MOFGPR0_type *) 0xF0019044U)	/* Message Object 2 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR3	(*( CAN_MOFGPR0_type *) 0xF0019064U)	/* Message Object 3 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR4	(*( CAN_MOFGPR0_type *) 0xF0019084U)	/* Message Object 4 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR5	(*( CAN_MOFGPR0_type *) 0xF00190A4U)	/* Message Object 5 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR6	(*( CAN_MOFGPR0_type *) 0xF00190C4U)	/* Message Object 6 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR7	(*( CAN_MOFGPR0_type *) 0xF00190E4U)	/* Message Object 7 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR8	(*( CAN_MOFGPR0_type *) 0xF0019104U)	/* Message Object 8 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR9	(*( CAN_MOFGPR0_type *) 0xF0019124U)	/* Message Object 9 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR10	(*( CAN_MOFGPR0_type *) 0xF0019144U)	/* Message Object 10 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR11	(*( CAN_MOFGPR0_type *) 0xF0019164U)	/* Message Object 11 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR12	(*( CAN_MOFGPR0_type *) 0xF0019184U)	/* Message Object 12 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR13	(*( CAN_MOFGPR0_type *) 0xF00191A4U)	/* Message Object 13 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR14	(*( CAN_MOFGPR0_type *) 0xF00191C4U)	/* Message Object 14 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR15	(*( CAN_MOFGPR0_type *) 0xF00191E4U)	/* Message Object 15 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR16	(*( CAN_MOFGPR0_type *) 0xF0019204U)	/* Message Object 16 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR17	(*( CAN_MOFGPR0_type *) 0xF0019224U)	/* Message Object 17 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR18	(*( CAN_MOFGPR0_type *) 0xF0019244U)	/* Message Object 18 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR19	(*( CAN_MOFGPR0_type *) 0xF0019264U)	/* Message Object 19 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR20	(*( CAN_MOFGPR0_type *) 0xF0019284U)	/* Message Object 20 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR21	(*( CAN_MOFGPR0_type *) 0xF00192A4U)	/* Message Object 21 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR22	(*( CAN_MOFGPR0_type *) 0xF00192C4U)	/* Message Object 22 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR23	(*( CAN_MOFGPR0_type *) 0xF00192E4U)	/* Message Object 23 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR24	(*( CAN_MOFGPR0_type *) 0xF0019304U)	/* Message Object 24 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR25	(*( CAN_MOFGPR0_type *) 0xF0019324U)	/* Message Object 25 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR26	(*( CAN_MOFGPR0_type *) 0xF0019344U)	/* Message Object 26 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR27	(*( CAN_MOFGPR0_type *) 0xF0019364U)	/* Message Object 27 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR28	(*( CAN_MOFGPR0_type *) 0xF0019384U)	/* Message Object 28 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR29	(*( CAN_MOFGPR0_type *) 0xF00193A4U)	/* Message Object 29 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR30	(*( CAN_MOFGPR0_type *) 0xF00193C4U)	/* Message Object 30 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR31	(*( CAN_MOFGPR0_type *) 0xF00193E4U)	/* Message Object 31 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR32	(*( CAN_MOFGPR0_type *) 0xF0019404U)	/* Message Object 32 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR33	(*( CAN_MOFGPR0_type *) 0xF0019424U)	/* Message Object 33 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR34	(*( CAN_MOFGPR0_type *) 0xF0019444U)	/* Message Object 34 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR35	(*( CAN_MOFGPR0_type *) 0xF0019464U)	/* Message Object 35 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR36	(*( CAN_MOFGPR0_type *) 0xF0019484U)	/* Message Object 36 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR37	(*( CAN_MOFGPR0_type *) 0xF00194A4U)	/* Message Object 37 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR38	(*( CAN_MOFGPR0_type *) 0xF00194C4U)	/* Message Object 38 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR39	(*( CAN_MOFGPR0_type *) 0xF00194E4U)	/* Message Object 39 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR40	(*( CAN_MOFGPR0_type *) 0xF0019504U)	/* Message Object 40 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR41	(*( CAN_MOFGPR0_type *) 0xF0019524U)	/* Message Object 41 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR42	(*( CAN_MOFGPR0_type *) 0xF0019544U)	/* Message Object 42 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR43	(*( CAN_MOFGPR0_type *) 0xF0019564U)	/* Message Object 43 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR44	(*( CAN_MOFGPR0_type *) 0xF0019584U)	/* Message Object 44 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR45	(*( CAN_MOFGPR0_type *) 0xF00195A4U)	/* Message Object 45 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR46	(*( CAN_MOFGPR0_type *) 0xF00195C4U)	/* Message Object 46 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR47	(*( CAN_MOFGPR0_type *) 0xF00195E4U)	/* Message Object 47 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR48	(*( CAN_MOFGPR0_type *) 0xF0019604U)	/* Message Object 48 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR49	(*( CAN_MOFGPR0_type *) 0xF0019624U)	/* Message Object 49 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR50	(*( CAN_MOFGPR0_type *) 0xF0019644U)	/* Message Object 50 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR51	(*( CAN_MOFGPR0_type *) 0xF0019664U)	/* Message Object 51 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR52	(*( CAN_MOFGPR0_type *) 0xF0019684U)	/* Message Object 52 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR53	(*( CAN_MOFGPR0_type *) 0xF00196A4U)	/* Message Object 53 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR54	(*( CAN_MOFGPR0_type *) 0xF00196C4U)	/* Message Object 54 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR55	(*( CAN_MOFGPR0_type *) 0xF00196E4U)	/* Message Object 55 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR56	(*( CAN_MOFGPR0_type *) 0xF0019704U)	/* Message Object 56 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR57	(*( CAN_MOFGPR0_type *) 0xF0019724U)	/* Message Object 57 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR58	(*( CAN_MOFGPR0_type *) 0xF0019744U)	/* Message Object 58 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR59	(*( CAN_MOFGPR0_type *) 0xF0019764U)	/* Message Object 59 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR60	(*( CAN_MOFGPR0_type *) 0xF0019784U)	/* Message Object 60 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR61	(*( CAN_MOFGPR0_type *) 0xF00197A4U)	/* Message Object 61 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR62	(*( CAN_MOFGPR0_type *) 0xF00197C4U)	/* Message Object 62 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR63	(*( CAN_MOFGPR0_type *) 0xF00197E4U)	/* Message Object 63 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR64	(*( CAN_MOFGPR0_type *) 0xF0019804U)	/* Message Object 64 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR65	(*( CAN_MOFGPR0_type *) 0xF0019824U)	/* Message Object 65 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR66	(*( CAN_MOFGPR0_type *) 0xF0019844U)	/* Message Object 66 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR67	(*( CAN_MOFGPR0_type *) 0xF0019864U)	/* Message Object 67 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR68	(*( CAN_MOFGPR0_type *) 0xF0019884U)	/* Message Object 68 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR69	(*( CAN_MOFGPR0_type *) 0xF00198A4U)	/* Message Object 69 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR70	(*( CAN_MOFGPR0_type *) 0xF00198C4U)	/* Message Object 70 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR71	(*( CAN_MOFGPR0_type *) 0xF00198E4U)	/* Message Object 71 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR72	(*( CAN_MOFGPR0_type *) 0xF0019904U)	/* Message Object 72 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR73	(*( CAN_MOFGPR0_type *) 0xF0019924U)	/* Message Object 73 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR74	(*( CAN_MOFGPR0_type *) 0xF0019944U)	/* Message Object 74 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR75	(*( CAN_MOFGPR0_type *) 0xF0019964U)	/* Message Object 75 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR76	(*( CAN_MOFGPR0_type *) 0xF0019984U)	/* Message Object 76 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR77	(*( CAN_MOFGPR0_type *) 0xF00199A4U)	/* Message Object 77 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR78	(*( CAN_MOFGPR0_type *) 0xF00199C4U)	/* Message Object 78 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR79	(*( CAN_MOFGPR0_type *) 0xF00199E4U)	/* Message Object 79 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR80	(*( CAN_MOFGPR0_type *) 0xF0019A04U)	/* Message Object 80 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR81	(*( CAN_MOFGPR0_type *) 0xF0019A24U)	/* Message Object 81 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR82	(*( CAN_MOFGPR0_type *) 0xF0019A44U)	/* Message Object 82 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR83	(*( CAN_MOFGPR0_type *) 0xF0019A64U)	/* Message Object 83 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR84	(*( CAN_MOFGPR0_type *) 0xF0019A84U)	/* Message Object 84 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR85	(*( CAN_MOFGPR0_type *) 0xF0019AA4U)	/* Message Object 85 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR86	(*( CAN_MOFGPR0_type *) 0xF0019AC4U)	/* Message Object 86 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR87	(*( CAN_MOFGPR0_type *) 0xF0019AE4U)	/* Message Object 87 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR88	(*( CAN_MOFGPR0_type *) 0xF0019B04U)	/* Message Object 88 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR89	(*( CAN_MOFGPR0_type *) 0xF0019B24U)	/* Message Object 89 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR90	(*( CAN_MOFGPR0_type *) 0xF0019B44U)	/* Message Object 90 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR91	(*( CAN_MOFGPR0_type *) 0xF0019B64U)	/* Message Object 91 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR92	(*( CAN_MOFGPR0_type *) 0xF0019B84U)	/* Message Object 92 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR93	(*( CAN_MOFGPR0_type *) 0xF0019BA4U)	/* Message Object 93 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR94	(*( CAN_MOFGPR0_type *) 0xF0019BC4U)	/* Message Object 94 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR95	(*( CAN_MOFGPR0_type *) 0xF0019BE4U)	/* Message Object 95 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR96	(*( CAN_MOFGPR0_type *) 0xF0019C04U)	/* Message Object 96 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR97	(*( CAN_MOFGPR0_type *) 0xF0019C24U)	/* Message Object 97 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR98	(*( CAN_MOFGPR0_type *) 0xF0019C44U)	/* Message Object 98 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR99	(*( CAN_MOFGPR0_type *) 0xF0019C64U)	/* Message Object 99 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR100	(*( CAN_MOFGPR0_type *) 0xF0019C84U)	/* Message Object 100 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR101	(*( CAN_MOFGPR0_type *) 0xF0019CA4U)	/* Message Object 101 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR102	(*( CAN_MOFGPR0_type *) 0xF0019CC4U)	/* Message Object 102 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR103	(*( CAN_MOFGPR0_type *) 0xF0019CE4U)	/* Message Object 103 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR104	(*( CAN_MOFGPR0_type *) 0xF0019D04U)	/* Message Object 104 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR105	(*( CAN_MOFGPR0_type *) 0xF0019D24U)	/* Message Object 105 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR106	(*( CAN_MOFGPR0_type *) 0xF0019D44U)	/* Message Object 106 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR107	(*( CAN_MOFGPR0_type *) 0xF0019D64U)	/* Message Object 107 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR108	(*( CAN_MOFGPR0_type *) 0xF0019D84U)	/* Message Object 108 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR109	(*( CAN_MOFGPR0_type *) 0xF0019DA4U)	/* Message Object 109 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR110	(*( CAN_MOFGPR0_type *) 0xF0019DC4U)	/* Message Object 110 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR111	(*( CAN_MOFGPR0_type *) 0xF0019DE4U)	/* Message Object 111 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR112	(*( CAN_MOFGPR0_type *) 0xF0019E04U)	/* Message Object 112 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR113	(*( CAN_MOFGPR0_type *) 0xF0019E24U)	/* Message Object 113 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR114	(*( CAN_MOFGPR0_type *) 0xF0019E44U)	/* Message Object 114 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR115	(*( CAN_MOFGPR0_type *) 0xF0019E64U)	/* Message Object 115 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR116	(*( CAN_MOFGPR0_type *) 0xF0019E84U)	/* Message Object 116 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR117	(*( CAN_MOFGPR0_type *) 0xF0019EA4U)	/* Message Object 117 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR118	(*( CAN_MOFGPR0_type *) 0xF0019EC4U)	/* Message Object 118 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR119	(*( CAN_MOFGPR0_type *) 0xF0019EE4U)	/* Message Object 119 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR120	(*( CAN_MOFGPR0_type *) 0xF0019F04U)	/* Message Object 120 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR121	(*( CAN_MOFGPR0_type *) 0xF0019F24U)	/* Message Object 121 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR122	(*( CAN_MOFGPR0_type *) 0xF0019F44U)	/* Message Object 122 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR123	(*( CAN_MOFGPR0_type *) 0xF0019F64U)	/* Message Object 123 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR124	(*( CAN_MOFGPR0_type *) 0xF0019F84U)	/* Message Object 124 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR125	(*( CAN_MOFGPR0_type *) 0xF0019FA4U)	/* Message Object 125 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR126	(*( CAN_MOFGPR0_type *) 0xF0019FC4U)	/* Message Object 126 FIFO/Gateway Pointer Register */
#define CAN_MOFGPR127	(*( CAN_MOFGPR0_type *) 0xF0019FE4U)	/* Message Object 127 FIFO/Gateway Pointer Register */
#define CAN1_MOFGPR0	(*( CAN_MOFGPR0_type *) 0xF0029004U)	/* Message Object n FIFO/Gate0ay Pointer Register */
#define CAN1_MOFGPR1	(*( CAN_MOFGPR0_type *) 0xF0029024U)	/* Message Object n FIFO/Gate1ay Pointer Register */
#define CAN1_MOFGPR2	(*( CAN_MOFGPR0_type *) 0xF0029044U)	/* Message Object n FIFO/Gate2ay Pointer Register */
#define CAN1_MOFGPR3	(*( CAN_MOFGPR0_type *) 0xF0029064U)	/* Message Object n FIFO/Gate3ay Pointer Register */
#define CAN1_MOFGPR4	(*( CAN_MOFGPR0_type *) 0xF0029084U)	/* Message Object n FIFO/Gate4ay Pointer Register */
#define CAN1_MOFGPR5	(*( CAN_MOFGPR0_type *) 0xF00290A4U)	/* Message Object n FIFO/Gate5ay Pointer Register */
#define CAN1_MOFGPR6	(*( CAN_MOFGPR0_type *) 0xF00290C4U)	/* Message Object n FIFO/Gate6ay Pointer Register */
#define CAN1_MOFGPR7	(*( CAN_MOFGPR0_type *) 0xF00290E4U)	/* Message Object n FIFO/Gate7ay Pointer Register */
#define CAN1_MOFGPR8	(*( CAN_MOFGPR0_type *) 0xF0029104U)	/* Message Object n FIFO/Gate8ay Pointer Register */
#define CAN1_MOFGPR9	(*( CAN_MOFGPR0_type *) 0xF0029124U)	/* Message Object n FIFO/Gate9ay Pointer Register */
#define CAN1_MOFGPR10	(*( CAN_MOFGPR0_type *) 0xF0029144U)	/* Message Object n FIFO/Gate10ay Pointer Register */
#define CAN1_MOFGPR11	(*( CAN_MOFGPR0_type *) 0xF0029164U)	/* Message Object n FIFO/Gate11ay Pointer Register */
#define CAN1_MOFGPR12	(*( CAN_MOFGPR0_type *) 0xF0029184U)	/* Message Object n FIFO/Gate12ay Pointer Register */
#define CAN1_MOFGPR13	(*( CAN_MOFGPR0_type *) 0xF00291A4U)	/* Message Object n FIFO/Gate13ay Pointer Register */
#define CAN1_MOFGPR14	(*( CAN_MOFGPR0_type *) 0xF00291C4U)	/* Message Object n FIFO/Gate14ay Pointer Register */
#define CAN1_MOFGPR15	(*( CAN_MOFGPR0_type *) 0xF00291E4U)	/* Message Object n FIFO/Gate15ay Pointer Register */
#define CAN1_MOFGPR16	(*( CAN_MOFGPR0_type *) 0xF0029204U)	/* Message Object n FIFO/Gate16ay Pointer Register */
#define CAN1_MOFGPR17	(*( CAN_MOFGPR0_type *) 0xF0029224U)	/* Message Object n FIFO/Gate17ay Pointer Register */
#define CAN1_MOFGPR18	(*( CAN_MOFGPR0_type *) 0xF0029244U)	/* Message Object n FIFO/Gate18ay Pointer Register */
#define CAN1_MOFGPR19	(*( CAN_MOFGPR0_type *) 0xF0029264U)	/* Message Object n FIFO/Gate19ay Pointer Register */
#define CAN1_MOFGPR20	(*( CAN_MOFGPR0_type *) 0xF0029284U)	/* Message Object n FIFO/Gate20ay Pointer Register */
#define CAN1_MOFGPR21	(*( CAN_MOFGPR0_type *) 0xF00292A4U)	/* Message Object n FIFO/Gate21ay Pointer Register */
#define CAN1_MOFGPR22	(*( CAN_MOFGPR0_type *) 0xF00292C4U)	/* Message Object n FIFO/Gate22ay Pointer Register */
#define CAN1_MOFGPR23	(*( CAN_MOFGPR0_type *) 0xF00292E4U)	/* Message Object n FIFO/Gate23ay Pointer Register */
#define CAN1_MOFGPR24	(*( CAN_MOFGPR0_type *) 0xF0029304U)	/* Message Object n FIFO/Gate24ay Pointer Register */
#define CAN1_MOFGPR25	(*( CAN_MOFGPR0_type *) 0xF0029324U)	/* Message Object n FIFO/Gate25ay Pointer Register */
#define CAN1_MOFGPR26	(*( CAN_MOFGPR0_type *) 0xF0029344U)	/* Message Object n FIFO/Gate26ay Pointer Register */
#define CAN1_MOFGPR27	(*( CAN_MOFGPR0_type *) 0xF0029364U)	/* Message Object n FIFO/Gate27ay Pointer Register */
#define CAN1_MOFGPR28	(*( CAN_MOFGPR0_type *) 0xF0029384U)	/* Message Object n FIFO/Gate28ay Pointer Register */
#define CAN1_MOFGPR29	(*( CAN_MOFGPR0_type *) 0xF00293A4U)	/* Message Object n FIFO/Gate29ay Pointer Register */
#define CAN1_MOFGPR30	(*( CAN_MOFGPR0_type *) 0xF00293C4U)	/* Message Object n FIFO/Gate30ay Pointer Register */
#define CAN1_MOFGPR31	(*( CAN_MOFGPR0_type *) 0xF00293E4U)	/* Message Object n FIFO/Gate31ay Pointer Register */
#define CAN1_MOFGPR32	(*( CAN_MOFGPR0_type *) 0xF0029404U)	/* Message Object n FIFO/Gate32ay Pointer Register */
#define CAN1_MOFGPR33	(*( CAN_MOFGPR0_type *) 0xF0029424U)	/* Message Object n FIFO/Gate33ay Pointer Register */
#define CAN1_MOFGPR34	(*( CAN_MOFGPR0_type *) 0xF0029444U)	/* Message Object n FIFO/Gate34ay Pointer Register */
#define CAN1_MOFGPR35	(*( CAN_MOFGPR0_type *) 0xF0029464U)	/* Message Object n FIFO/Gate35ay Pointer Register */
#define CAN1_MOFGPR36	(*( CAN_MOFGPR0_type *) 0xF0029484U)	/* Message Object n FIFO/Gate36ay Pointer Register */
#define CAN1_MOFGPR37	(*( CAN_MOFGPR0_type *) 0xF00294A4U)	/* Message Object n FIFO/Gate37ay Pointer Register */
#define CAN1_MOFGPR38	(*( CAN_MOFGPR0_type *) 0xF00294C4U)	/* Message Object n FIFO/Gate38ay Pointer Register */
#define CAN1_MOFGPR39	(*( CAN_MOFGPR0_type *) 0xF00294E4U)	/* Message Object n FIFO/Gate39ay Pointer Register */
#define CAN1_MOFGPR40	(*( CAN_MOFGPR0_type *) 0xF0029504U)	/* Message Object n FIFO/Gate40ay Pointer Register */
#define CAN1_MOFGPR41	(*( CAN_MOFGPR0_type *) 0xF0029524U)	/* Message Object n FIFO/Gate41ay Pointer Register */
#define CAN1_MOFGPR42	(*( CAN_MOFGPR0_type *) 0xF0029544U)	/* Message Object n FIFO/Gate42ay Pointer Register */
#define CAN1_MOFGPR43	(*( CAN_MOFGPR0_type *) 0xF0029564U)	/* Message Object n FIFO/Gate43ay Pointer Register */
#define CAN1_MOFGPR44	(*( CAN_MOFGPR0_type *) 0xF0029584U)	/* Message Object n FIFO/Gate44ay Pointer Register */
#define CAN1_MOFGPR45	(*( CAN_MOFGPR0_type *) 0xF00295A4U)	/* Message Object n FIFO/Gate45ay Pointer Register */
#define CAN1_MOFGPR46	(*( CAN_MOFGPR0_type *) 0xF00295C4U)	/* Message Object n FIFO/Gate46ay Pointer Register */
#define CAN1_MOFGPR47	(*( CAN_MOFGPR0_type *) 0xF00295E4U)	/* Message Object n FIFO/Gate47ay Pointer Register */
#define CAN1_MOFGPR48	(*( CAN_MOFGPR0_type *) 0xF0029604U)	/* Message Object n FIFO/Gate48ay Pointer Register */
#define CAN1_MOFGPR49	(*( CAN_MOFGPR0_type *) 0xF0029624U)	/* Message Object n FIFO/Gate49ay Pointer Register */
#define CAN1_MOFGPR50	(*( CAN_MOFGPR0_type *) 0xF0029644U)	/* Message Object n FIFO/Gate50ay Pointer Register */
#define CAN1_MOFGPR51	(*( CAN_MOFGPR0_type *) 0xF0029664U)	/* Message Object n FIFO/Gate51ay Pointer Register */
#define CAN1_MOFGPR52	(*( CAN_MOFGPR0_type *) 0xF0029684U)	/* Message Object n FIFO/Gate52ay Pointer Register */
#define CAN1_MOFGPR53	(*( CAN_MOFGPR0_type *) 0xF00296A4U)	/* Message Object n FIFO/Gate53ay Pointer Register */
#define CAN1_MOFGPR54	(*( CAN_MOFGPR0_type *) 0xF00296C4U)	/* Message Object n FIFO/Gate54ay Pointer Register */
#define CAN1_MOFGPR55	(*( CAN_MOFGPR0_type *) 0xF00296E4U)	/* Message Object n FIFO/Gate55ay Pointer Register */
#define CAN1_MOFGPR56	(*( CAN_MOFGPR0_type *) 0xF0029704U)	/* Message Object n FIFO/Gate56ay Pointer Register */
#define CAN1_MOFGPR57	(*( CAN_MOFGPR0_type *) 0xF0029724U)	/* Message Object n FIFO/Gate57ay Pointer Register */
#define CAN1_MOFGPR58	(*( CAN_MOFGPR0_type *) 0xF0029744U)	/* Message Object n FIFO/Gate58ay Pointer Register */
#define CAN1_MOFGPR59	(*( CAN_MOFGPR0_type *) 0xF0029764U)	/* Message Object n FIFO/Gate59ay Pointer Register */
#define CAN1_MOFGPR60	(*( CAN_MOFGPR0_type *) 0xF0029784U)	/* Message Object n FIFO/Gate60ay Pointer Register */
#define CAN1_MOFGPR61	(*( CAN_MOFGPR0_type *) 0xF00297A4U)	/* Message Object n FIFO/Gate61ay Pointer Register */
#define CAN1_MOFGPR62	(*( CAN_MOFGPR0_type *) 0xF00297C4U)	/* Message Object n FIFO/Gate62ay Pointer Register */
#define CAN1_MOFGPR63	(*( CAN_MOFGPR0_type *) 0xF00297E4U)	/* Message Object n FIFO/Gate63ay Pointer Register */
#define CAN1_MOFGPR64	(*( CAN_MOFGPR0_type *) 0xF0029804U)	/* Message Object n FIFO/Gate64ay Pointer Register */
#define CAN1_MOFGPR65	(*( CAN_MOFGPR0_type *) 0xF0029824U)	/* Message Object n FIFO/Gate65ay Pointer Register */
#define CAN1_MOFGPR66	(*( CAN_MOFGPR0_type *) 0xF0029844U)	/* Message Object n FIFO/Gate66ay Pointer Register */
#define CAN1_MOFGPR67	(*( CAN_MOFGPR0_type *) 0xF0029864U)	/* Message Object n FIFO/Gate67ay Pointer Register */
#define CAN1_MOFGPR68	(*( CAN_MOFGPR0_type *) 0xF0029884U)	/* Message Object n FIFO/Gate68ay Pointer Register */
#define CAN1_MOFGPR69	(*( CAN_MOFGPR0_type *) 0xF00298A4U)	/* Message Object n FIFO/Gate69ay Pointer Register */
#define CAN1_MOFGPR70	(*( CAN_MOFGPR0_type *) 0xF00298C4U)	/* Message Object n FIFO/Gate70ay Pointer Register */
#define CAN1_MOFGPR71	(*( CAN_MOFGPR0_type *) 0xF00298E4U)	/* Message Object n FIFO/Gate71ay Pointer Register */
#define CAN1_MOFGPR72	(*( CAN_MOFGPR0_type *) 0xF0029904U)	/* Message Object n FIFO/Gate72ay Pointer Register */
#define CAN1_MOFGPR73	(*( CAN_MOFGPR0_type *) 0xF0029924U)	/* Message Object n FIFO/Gate73ay Pointer Register */
#define CAN1_MOFGPR74	(*( CAN_MOFGPR0_type *) 0xF0029944U)	/* Message Object n FIFO/Gate74ay Pointer Register */
#define CAN1_MOFGPR75	(*( CAN_MOFGPR0_type *) 0xF0029964U)	/* Message Object n FIFO/Gate75ay Pointer Register */
#define CAN1_MOFGPR76	(*( CAN_MOFGPR0_type *) 0xF0029984U)	/* Message Object n FIFO/Gate76ay Pointer Register */
#define CAN1_MOFGPR77	(*( CAN_MOFGPR0_type *) 0xF00299A4U)	/* Message Object n FIFO/Gate77ay Pointer Register */
#define CAN1_MOFGPR78	(*( CAN_MOFGPR0_type *) 0xF00299C4U)	/* Message Object n FIFO/Gate78ay Pointer Register */
#define CAN1_MOFGPR79	(*( CAN_MOFGPR0_type *) 0xF00299E4U)	/* Message Object n FIFO/Gate79ay Pointer Register */
#define CAN1_MOFGPR80	(*( CAN_MOFGPR0_type *) 0xF0029A04U)	/* Message Object n FIFO/Gate80ay Pointer Register */
#define CAN1_MOFGPR81	(*( CAN_MOFGPR0_type *) 0xF0029A24U)	/* Message Object n FIFO/Gate81ay Pointer Register */
#define CAN1_MOFGPR82	(*( CAN_MOFGPR0_type *) 0xF0029A44U)	/* Message Object n FIFO/Gate82ay Pointer Register */
#define CAN1_MOFGPR83	(*( CAN_MOFGPR0_type *) 0xF0029A64U)	/* Message Object n FIFO/Gate83ay Pointer Register */
#define CAN1_MOFGPR84	(*( CAN_MOFGPR0_type *) 0xF0029A84U)	/* Message Object n FIFO/Gate84ay Pointer Register */
#define CAN1_MOFGPR85	(*( CAN_MOFGPR0_type *) 0xF0029AA4U)	/* Message Object n FIFO/Gate85ay Pointer Register */
#define CAN1_MOFGPR86	(*( CAN_MOFGPR0_type *) 0xF0029AC4U)	/* Message Object n FIFO/Gate86ay Pointer Register */
#define CAN1_MOFGPR87	(*( CAN_MOFGPR0_type *) 0xF0029AE4U)	/* Message Object n FIFO/Gate87ay Pointer Register */
#define CAN1_MOFGPR88	(*( CAN_MOFGPR0_type *) 0xF0029B04U)	/* Message Object n FIFO/Gate88ay Pointer Register */
#define CAN1_MOFGPR89	(*( CAN_MOFGPR0_type *) 0xF0029B24U)	/* Message Object n FIFO/Gate89ay Pointer Register */
#define CAN1_MOFGPR90	(*( CAN_MOFGPR0_type *) 0xF0029B44U)	/* Message Object n FIFO/Gate90ay Pointer Register */
#define CAN1_MOFGPR91	(*( CAN_MOFGPR0_type *) 0xF0029B64U)	/* Message Object n FIFO/Gate91ay Pointer Register */
#define CAN1_MOFGPR92	(*( CAN_MOFGPR0_type *) 0xF0029B84U)	/* Message Object n FIFO/Gate92ay Pointer Register */
#define CAN1_MOFGPR93	(*( CAN_MOFGPR0_type *) 0xF0029BA4U)	/* Message Object n FIFO/Gate93ay Pointer Register */
#define CAN1_MOFGPR94	(*( CAN_MOFGPR0_type *) 0xF0029BC4U)	/* Message Object n FIFO/Gate94ay Pointer Register */
#define CAN1_MOFGPR95	(*( CAN_MOFGPR0_type *) 0xF0029BE4U)	/* Message Object n FIFO/Gate95ay Pointer Register */
#define CAN1_MOFGPR96	(*( CAN_MOFGPR0_type *) 0xF0029C04U)	/* Message Object n FIFO/Gate96ay Pointer Register */
#define CAN1_MOFGPR97	(*( CAN_MOFGPR0_type *) 0xF0029C24U)	/* Message Object n FIFO/Gate97ay Pointer Register */
#define CAN1_MOFGPR98	(*( CAN_MOFGPR0_type *) 0xF0029C44U)	/* Message Object n FIFO/Gate98ay Pointer Register */
#define CAN1_MOFGPR99	(*( CAN_MOFGPR0_type *) 0xF0029C64U)	/* Message Object n FIFO/Gate99ay Pointer Register */
#define CAN1_MOFGPR100	(*( CAN_MOFGPR0_type *) 0xF0029C84U)	/* Message Object n FIFO/Gate100ay Pointer Register */
#define CAN1_MOFGPR101	(*( CAN_MOFGPR0_type *) 0xF0029CA4U)	/* Message Object n FIFO/Gate101ay Pointer Register */
#define CAN1_MOFGPR102	(*( CAN_MOFGPR0_type *) 0xF0029CC4U)	/* Message Object n FIFO/Gate102ay Pointer Register */
#define CAN1_MOFGPR103	(*( CAN_MOFGPR0_type *) 0xF0029CE4U)	/* Message Object n FIFO/Gate103ay Pointer Register */
#define CAN1_MOFGPR104	(*( CAN_MOFGPR0_type *) 0xF0029D04U)	/* Message Object n FIFO/Gate104ay Pointer Register */
#define CAN1_MOFGPR105	(*( CAN_MOFGPR0_type *) 0xF0029D24U)	/* Message Object n FIFO/Gate105ay Pointer Register */
#define CAN1_MOFGPR106	(*( CAN_MOFGPR0_type *) 0xF0029D44U)	/* Message Object n FIFO/Gate106ay Pointer Register */
#define CAN1_MOFGPR107	(*( CAN_MOFGPR0_type *) 0xF0029D64U)	/* Message Object n FIFO/Gate107ay Pointer Register */
#define CAN1_MOFGPR108	(*( CAN_MOFGPR0_type *) 0xF0029D84U)	/* Message Object n FIFO/Gate108ay Pointer Register */
#define CAN1_MOFGPR109	(*( CAN_MOFGPR0_type *) 0xF0029DA4U)	/* Message Object n FIFO/Gate109ay Pointer Register */
#define CAN1_MOFGPR110	(*( CAN_MOFGPR0_type *) 0xF0029DC4U)	/* Message Object n FIFO/Gate110ay Pointer Register */
#define CAN1_MOFGPR111	(*( CAN_MOFGPR0_type *) 0xF0029DE4U)	/* Message Object n FIFO/Gate111ay Pointer Register */
#define CAN1_MOFGPR112	(*( CAN_MOFGPR0_type *) 0xF0029E04U)	/* Message Object n FIFO/Gate112ay Pointer Register */
#define CAN1_MOFGPR113	(*( CAN_MOFGPR0_type *) 0xF0029E24U)	/* Message Object n FIFO/Gate113ay Pointer Register */
#define CAN1_MOFGPR114	(*( CAN_MOFGPR0_type *) 0xF0029E44U)	/* Message Object n FIFO/Gate114ay Pointer Register */
#define CAN1_MOFGPR115	(*( CAN_MOFGPR0_type *) 0xF0029E64U)	/* Message Object n FIFO/Gate115ay Pointer Register */
#define CAN1_MOFGPR116	(*( CAN_MOFGPR0_type *) 0xF0029E84U)	/* Message Object n FIFO/Gate116ay Pointer Register */
#define CAN1_MOFGPR117	(*( CAN_MOFGPR0_type *) 0xF0029EA4U)	/* Message Object n FIFO/Gate117ay Pointer Register */
#define CAN1_MOFGPR118	(*( CAN_MOFGPR0_type *) 0xF0029EC4U)	/* Message Object n FIFO/Gate118ay Pointer Register */
#define CAN1_MOFGPR119	(*( CAN_MOFGPR0_type *) 0xF0029EE4U)	/* Message Object n FIFO/Gate119ay Pointer Register */
#define CAN1_MOFGPR120	(*( CAN_MOFGPR0_type *) 0xF0029F04U)	/* Message Object n FIFO/Gate120ay Pointer Register */
#define CAN1_MOFGPR121	(*( CAN_MOFGPR0_type *) 0xF0029F24U)	/* Message Object n FIFO/Gate121ay Pointer Register */
#define CAN1_MOFGPR122	(*( CAN_MOFGPR0_type *) 0xF0029F44U)	/* Message Object n FIFO/Gate122ay Pointer Register */
#define CAN1_MOFGPR123	(*( CAN_MOFGPR0_type *) 0xF0029F64U)	/* Message Object n FIFO/Gate123ay Pointer Register */
#define CAN1_MOFGPR124	(*( CAN_MOFGPR0_type *) 0xF0029F84U)	/* Message Object n FIFO/Gate124ay Pointer Register */
#define CAN1_MOFGPR125	(*( CAN_MOFGPR0_type *) 0xF0029FA4U)	/* Message Object n FIFO/Gate125ay Pointer Register */
#define CAN1_MOFGPR126	(*( CAN_MOFGPR0_type *) 0xF0029FC4U)	/* Message Object n FIFO/Gate126ay Pointer Register */
#define CAN1_MOFGPR127	(*( CAN_MOFGPR0_type *) 0xF0029FE4U)	/* Message Object n FIFO/Gate127ay Pointer Register */
#define CAN_MOAMR0	(*( CAN_MOAMR0_type *) 0xF001900CU)	/* Message Object 0 Acceptance Mask Register */
#define CAN_MOAMR1	(*( CAN_MOAMR0_type *) 0xF001902CU)	/* Message Object 1 Acceptance Mask Register */
#define CAN_MOAMR2	(*( CAN_MOAMR0_type *) 0xF001904CU)	/* Message Object 2 Acceptance Mask Register */
#define CAN_MOAMR3	(*( CAN_MOAMR0_type *) 0xF001906CU)	/* Message Object 3 Acceptance Mask Register */
#define CAN_MOAMR4	(*( CAN_MOAMR0_type *) 0xF001908CU)	/* Message Object 4 Acceptance Mask Register */
#define CAN_MOAMR5	(*( CAN_MOAMR0_type *) 0xF00190ACU)	/* Message Object 5 Acceptance Mask Register */
#define CAN_MOAMR6	(*( CAN_MOAMR0_type *) 0xF00190CCU)	/* Message Object 6 Acceptance Mask Register */
#define CAN_MOAMR7	(*( CAN_MOAMR0_type *) 0xF00190ECU)	/* Message Object 7 Acceptance Mask Register */
#define CAN_MOAMR8	(*( CAN_MOAMR0_type *) 0xF001910CU)	/* Message Object 8 Acceptance Mask Register */
#define CAN_MOAMR9	(*( CAN_MOAMR0_type *) 0xF001912CU)	/* Message Object 9 Acceptance Mask Register */
#define CAN_MOAMR10	(*( CAN_MOAMR0_type *) 0xF001914CU)	/* Message Object 10 Acceptance Mask Register */
#define CAN_MOAMR11	(*( CAN_MOAMR0_type *) 0xF001916CU)	/* Message Object 11 Acceptance Mask Register */
#define CAN_MOAMR12	(*( CAN_MOAMR0_type *) 0xF001918CU)	/* Message Object 12 Acceptance Mask Register */
#define CAN_MOAMR13	(*( CAN_MOAMR0_type *) 0xF00191ACU)	/* Message Object 13 Acceptance Mask Register */
#define CAN_MOAMR14	(*( CAN_MOAMR0_type *) 0xF00191CCU)	/* Message Object 14 Acceptance Mask Register */
#define CAN_MOAMR15	(*( CAN_MOAMR0_type *) 0xF00191ECU)	/* Message Object 15 Acceptance Mask Register */
#define CAN_MOAMR16	(*( CAN_MOAMR0_type *) 0xF001920CU)	/* Message Object 16 Acceptance Mask Register */
#define CAN_MOAMR17	(*( CAN_MOAMR0_type *) 0xF001922CU)	/* Message Object 17 Acceptance Mask Register */
#define CAN_MOAMR18	(*( CAN_MOAMR0_type *) 0xF001924CU)	/* Message Object 18 Acceptance Mask Register */
#define CAN_MOAMR19	(*( CAN_MOAMR0_type *) 0xF001926CU)	/* Message Object 19 Acceptance Mask Register */
#define CAN_MOAMR20	(*( CAN_MOAMR0_type *) 0xF001928CU)	/* Message Object 20 Acceptance Mask Register */
#define CAN_MOAMR21	(*( CAN_MOAMR0_type *) 0xF00192ACU)	/* Message Object 21 Acceptance Mask Register */
#define CAN_MOAMR22	(*( CAN_MOAMR0_type *) 0xF00192CCU)	/* Message Object 22 Acceptance Mask Register */
#define CAN_MOAMR23	(*( CAN_MOAMR0_type *) 0xF00192ECU)	/* Message Object 23 Acceptance Mask Register */
#define CAN_MOAMR24	(*( CAN_MOAMR0_type *) 0xF001930CU)	/* Message Object 24 Acceptance Mask Register */
#define CAN_MOAMR25	(*( CAN_MOAMR0_type *) 0xF001932CU)	/* Message Object 25 Acceptance Mask Register */
#define CAN_MOAMR26	(*( CAN_MOAMR0_type *) 0xF001934CU)	/* Message Object 26 Acceptance Mask Register */
#define CAN_MOAMR27	(*( CAN_MOAMR0_type *) 0xF001936CU)	/* Message Object 27 Acceptance Mask Register */
#define CAN_MOAMR28	(*( CAN_MOAMR0_type *) 0xF001938CU)	/* Message Object 28 Acceptance Mask Register */
#define CAN_MOAMR29	(*( CAN_MOAMR0_type *) 0xF00193ACU)	/* Message Object 29 Acceptance Mask Register */
#define CAN_MOAMR30	(*( CAN_MOAMR0_type *) 0xF00193CCU)	/* Message Object 30 Acceptance Mask Register */
#define CAN_MOAMR31	(*( CAN_MOAMR0_type *) 0xF00193ECU)	/* Message Object 31 Acceptance Mask Register */
#define CAN_MOAMR32	(*( CAN_MOAMR0_type *) 0xF001940CU)	/* Message Object 32 Acceptance Mask Register */
#define CAN_MOAMR33	(*( CAN_MOAMR0_type *) 0xF001942CU)	/* Message Object 33 Acceptance Mask Register */
#define CAN_MOAMR34	(*( CAN_MOAMR0_type *) 0xF001944CU)	/* Message Object 34 Acceptance Mask Register */
#define CAN_MOAMR35	(*( CAN_MOAMR0_type *) 0xF001946CU)	/* Message Object 35 Acceptance Mask Register */
#define CAN_MOAMR36	(*( CAN_MOAMR0_type *) 0xF001948CU)	/* Message Object 36 Acceptance Mask Register */
#define CAN_MOAMR37	(*( CAN_MOAMR0_type *) 0xF00194ACU)	/* Message Object 37 Acceptance Mask Register */
#define CAN_MOAMR38	(*( CAN_MOAMR0_type *) 0xF00194CCU)	/* Message Object 38 Acceptance Mask Register */
#define CAN_MOAMR39	(*( CAN_MOAMR0_type *) 0xF00194ECU)	/* Message Object 39 Acceptance Mask Register */
#define CAN_MOAMR40	(*( CAN_MOAMR0_type *) 0xF001950CU)	/* Message Object 40 Acceptance Mask Register */
#define CAN_MOAMR41	(*( CAN_MOAMR0_type *) 0xF001952CU)	/* Message Object 41 Acceptance Mask Register */
#define CAN_MOAMR42	(*( CAN_MOAMR0_type *) 0xF001954CU)	/* Message Object 42 Acceptance Mask Register */
#define CAN_MOAMR43	(*( CAN_MOAMR0_type *) 0xF001956CU)	/* Message Object 43 Acceptance Mask Register */
#define CAN_MOAMR44	(*( CAN_MOAMR0_type *) 0xF001958CU)	/* Message Object 44 Acceptance Mask Register */
#define CAN_MOAMR45	(*( CAN_MOAMR0_type *) 0xF00195ACU)	/* Message Object 45 Acceptance Mask Register */
#define CAN_MOAMR46	(*( CAN_MOAMR0_type *) 0xF00195CCU)	/* Message Object 46 Acceptance Mask Register */
#define CAN_MOAMR47	(*( CAN_MOAMR0_type *) 0xF00195ECU)	/* Message Object 47 Acceptance Mask Register */
#define CAN_MOAMR48	(*( CAN_MOAMR0_type *) 0xF001960CU)	/* Message Object 48 Acceptance Mask Register */
#define CAN_MOAMR49	(*( CAN_MOAMR0_type *) 0xF001962CU)	/* Message Object 49 Acceptance Mask Register */
#define CAN_MOAMR50	(*( CAN_MOAMR0_type *) 0xF001964CU)	/* Message Object 50 Acceptance Mask Register */
#define CAN_MOAMR51	(*( CAN_MOAMR0_type *) 0xF001966CU)	/* Message Object 51 Acceptance Mask Register */
#define CAN_MOAMR52	(*( CAN_MOAMR0_type *) 0xF001968CU)	/* Message Object 52 Acceptance Mask Register */
#define CAN_MOAMR53	(*( CAN_MOAMR0_type *) 0xF00196ACU)	/* Message Object 53 Acceptance Mask Register */
#define CAN_MOAMR54	(*( CAN_MOAMR0_type *) 0xF00196CCU)	/* Message Object 54 Acceptance Mask Register */
#define CAN_MOAMR55	(*( CAN_MOAMR0_type *) 0xF00196ECU)	/* Message Object 55 Acceptance Mask Register */
#define CAN_MOAMR56	(*( CAN_MOAMR0_type *) 0xF001970CU)	/* Message Object 56 Acceptance Mask Register */
#define CAN_MOAMR57	(*( CAN_MOAMR0_type *) 0xF001972CU)	/* Message Object 57 Acceptance Mask Register */
#define CAN_MOAMR58	(*( CAN_MOAMR0_type *) 0xF001974CU)	/* Message Object 58 Acceptance Mask Register */
#define CAN_MOAMR59	(*( CAN_MOAMR0_type *) 0xF001976CU)	/* Message Object 59 Acceptance Mask Register */
#define CAN_MOAMR60	(*( CAN_MOAMR0_type *) 0xF001978CU)	/* Message Object 60 Acceptance Mask Register */
#define CAN_MOAMR61	(*( CAN_MOAMR0_type *) 0xF00197ACU)	/* Message Object 61 Acceptance Mask Register */
#define CAN_MOAMR62	(*( CAN_MOAMR0_type *) 0xF00197CCU)	/* Message Object 62 Acceptance Mask Register */
#define CAN_MOAMR63	(*( CAN_MOAMR0_type *) 0xF00197ECU)	/* Message Object 63 Acceptance Mask Register */
#define CAN_MOAMR64	(*( CAN_MOAMR0_type *) 0xF001980CU)	/* Message Object 64 Acceptance Mask Register */
#define CAN_MOAMR65	(*( CAN_MOAMR0_type *) 0xF001982CU)	/* Message Object 65 Acceptance Mask Register */
#define CAN_MOAMR66	(*( CAN_MOAMR0_type *) 0xF001984CU)	/* Message Object 66 Acceptance Mask Register */
#define CAN_MOAMR67	(*( CAN_MOAMR0_type *) 0xF001986CU)	/* Message Object 67 Acceptance Mask Register */
#define CAN_MOAMR68	(*( CAN_MOAMR0_type *) 0xF001988CU)	/* Message Object 68 Acceptance Mask Register */
#define CAN_MOAMR69	(*( CAN_MOAMR0_type *) 0xF00198ACU)	/* Message Object 69 Acceptance Mask Register */
#define CAN_MOAMR70	(*( CAN_MOAMR0_type *) 0xF00198CCU)	/* Message Object 70 Acceptance Mask Register */
#define CAN_MOAMR71	(*( CAN_MOAMR0_type *) 0xF00198ECU)	/* Message Object 71 Acceptance Mask Register */
#define CAN_MOAMR72	(*( CAN_MOAMR0_type *) 0xF001990CU)	/* Message Object 72 Acceptance Mask Register */
#define CAN_MOAMR73	(*( CAN_MOAMR0_type *) 0xF001992CU)	/* Message Object 73 Acceptance Mask Register */
#define CAN_MOAMR74	(*( CAN_MOAMR0_type *) 0xF001994CU)	/* Message Object 74 Acceptance Mask Register */
#define CAN_MOAMR75	(*( CAN_MOAMR0_type *) 0xF001996CU)	/* Message Object 75 Acceptance Mask Register */
#define CAN_MOAMR76	(*( CAN_MOAMR0_type *) 0xF001998CU)	/* Message Object 76 Acceptance Mask Register */
#define CAN_MOAMR77	(*( CAN_MOAMR0_type *) 0xF00199ACU)	/* Message Object 77 Acceptance Mask Register */
#define CAN_MOAMR78	(*( CAN_MOAMR0_type *) 0xF00199CCU)	/* Message Object 78 Acceptance Mask Register */
#define CAN_MOAMR79	(*( CAN_MOAMR0_type *) 0xF00199ECU)	/* Message Object 79 Acceptance Mask Register */
#define CAN_MOAMR80	(*( CAN_MOAMR0_type *) 0xF0019A0CU)	/* Message Object 80 Acceptance Mask Register */
#define CAN_MOAMR81	(*( CAN_MOAMR0_type *) 0xF0019A2CU)	/* Message Object 81 Acceptance Mask Register */
#define CAN_MOAMR82	(*( CAN_MOAMR0_type *) 0xF0019A4CU)	/* Message Object 82 Acceptance Mask Register */
#define CAN_MOAMR83	(*( CAN_MOAMR0_type *) 0xF0019A6CU)	/* Message Object 83 Acceptance Mask Register */
#define CAN_MOAMR84	(*( CAN_MOAMR0_type *) 0xF0019A8CU)	/* Message Object 84 Acceptance Mask Register */
#define CAN_MOAMR85	(*( CAN_MOAMR0_type *) 0xF0019AACU)	/* Message Object 85 Acceptance Mask Register */
#define CAN_MOAMR86	(*( CAN_MOAMR0_type *) 0xF0019ACCU)	/* Message Object 86 Acceptance Mask Register */
#define CAN_MOAMR87	(*( CAN_MOAMR0_type *) 0xF0019AECU)	/* Message Object 87 Acceptance Mask Register */
#define CAN_MOAMR88	(*( CAN_MOAMR0_type *) 0xF0019B0CU)	/* Message Object 88 Acceptance Mask Register */
#define CAN_MOAMR89	(*( CAN_MOAMR0_type *) 0xF0019B2CU)	/* Message Object 89 Acceptance Mask Register */
#define CAN_MOAMR90	(*( CAN_MOAMR0_type *) 0xF0019B4CU)	/* Message Object 90 Acceptance Mask Register */
#define CAN_MOAMR91	(*( CAN_MOAMR0_type *) 0xF0019B6CU)	/* Message Object 91 Acceptance Mask Register */
#define CAN_MOAMR92	(*( CAN_MOAMR0_type *) 0xF0019B8CU)	/* Message Object 92 Acceptance Mask Register */
#define CAN_MOAMR93	(*( CAN_MOAMR0_type *) 0xF0019BACU)	/* Message Object 93 Acceptance Mask Register */
#define CAN_MOAMR94	(*( CAN_MOAMR0_type *) 0xF0019BCCU)	/* Message Object 94 Acceptance Mask Register */
#define CAN_MOAMR95	(*( CAN_MOAMR0_type *) 0xF0019BECU)	/* Message Object 95 Acceptance Mask Register */
#define CAN_MOAMR96	(*( CAN_MOAMR0_type *) 0xF0019C0CU)	/* Message Object 96 Acceptance Mask Register */
#define CAN_MOAMR97	(*( CAN_MOAMR0_type *) 0xF0019C2CU)	/* Message Object 97 Acceptance Mask Register */
#define CAN_MOAMR98	(*( CAN_MOAMR0_type *) 0xF0019C4CU)	/* Message Object 98 Acceptance Mask Register */
#define CAN_MOAMR99	(*( CAN_MOAMR0_type *) 0xF0019C6CU)	/* Message Object 99 Acceptance Mask Register */
#define CAN_MOAMR100	(*( CAN_MOAMR0_type *) 0xF0019C8CU)	/* Message Object 100 Acceptance Mask Register */
#define CAN_MOAMR101	(*( CAN_MOAMR0_type *) 0xF0019CACU)	/* Message Object 101 Acceptance Mask Register */
#define CAN_MOAMR102	(*( CAN_MOAMR0_type *) 0xF0019CCCU)	/* Message Object 102 Acceptance Mask Register */
#define CAN_MOAMR103	(*( CAN_MOAMR0_type *) 0xF0019CECU)	/* Message Object 103 Acceptance Mask Register */
#define CAN_MOAMR104	(*( CAN_MOAMR0_type *) 0xF0019D0CU)	/* Message Object 104 Acceptance Mask Register */
#define CAN_MOAMR105	(*( CAN_MOAMR0_type *) 0xF0019D2CU)	/* Message Object 105 Acceptance Mask Register */
#define CAN_MOAMR106	(*( CAN_MOAMR0_type *) 0xF0019D4CU)	/* Message Object 106 Acceptance Mask Register */
#define CAN_MOAMR107	(*( CAN_MOAMR0_type *) 0xF0019D6CU)	/* Message Object 107 Acceptance Mask Register */
#define CAN_MOAMR108	(*( CAN_MOAMR0_type *) 0xF0019D8CU)	/* Message Object 108 Acceptance Mask Register */
#define CAN_MOAMR109	(*( CAN_MOAMR0_type *) 0xF0019DACU)	/* Message Object 109 Acceptance Mask Register */
#define CAN_MOAMR110	(*( CAN_MOAMR0_type *) 0xF0019DCCU)	/* Message Object 110 Acceptance Mask Register */
#define CAN_MOAMR111	(*( CAN_MOAMR0_type *) 0xF0019DECU)	/* Message Object 111 Acceptance Mask Register */
#define CAN_MOAMR112	(*( CAN_MOAMR0_type *) 0xF0019E0CU)	/* Message Object 112 Acceptance Mask Register */
#define CAN_MOAMR113	(*( CAN_MOAMR0_type *) 0xF0019E2CU)	/* Message Object 113 Acceptance Mask Register */
#define CAN_MOAMR114	(*( CAN_MOAMR0_type *) 0xF0019E4CU)	/* Message Object 114 Acceptance Mask Register */
#define CAN_MOAMR115	(*( CAN_MOAMR0_type *) 0xF0019E6CU)	/* Message Object 115 Acceptance Mask Register */
#define CAN_MOAMR116	(*( CAN_MOAMR0_type *) 0xF0019E8CU)	/* Message Object 116 Acceptance Mask Register */
#define CAN_MOAMR117	(*( CAN_MOAMR0_type *) 0xF0019EACU)	/* Message Object 117 Acceptance Mask Register */
#define CAN_MOAMR118	(*( CAN_MOAMR0_type *) 0xF0019ECCU)	/* Message Object 118 Acceptance Mask Register */
#define CAN_MOAMR119	(*( CAN_MOAMR0_type *) 0xF0019EECU)	/* Message Object 119 Acceptance Mask Register */
#define CAN_MOAMR120	(*( CAN_MOAMR0_type *) 0xF0019F0CU)	/* Message Object 120 Acceptance Mask Register */
#define CAN_MOAMR121	(*( CAN_MOAMR0_type *) 0xF0019F2CU)	/* Message Object 121 Acceptance Mask Register */
#define CAN_MOAMR122	(*( CAN_MOAMR0_type *) 0xF0019F4CU)	/* Message Object 122 Acceptance Mask Register */
#define CAN_MOAMR123	(*( CAN_MOAMR0_type *) 0xF0019F6CU)	/* Message Object 123 Acceptance Mask Register */
#define CAN_MOAMR124	(*( CAN_MOAMR0_type *) 0xF0019F8CU)	/* Message Object 124 Acceptance Mask Register */
#define CAN_MOAMR125	(*( CAN_MOAMR0_type *) 0xF0019FACU)	/* Message Object 125 Acceptance Mask Register */
#define CAN_MOAMR126	(*( CAN_MOAMR0_type *) 0xF0019FCCU)	/* Message Object 126 Acceptance Mask Register */
#define CAN_MOAMR127	(*( CAN_MOAMR0_type *) 0xF0019FECU)	/* Message Object 127 Acceptance Mask Register */
#define CAN1_MOAMR0	(*( CAN_MOAMR0_type *) 0xF002900CU)	/* Message Object 0 Acceptance Mask Register */
#define CAN1_MOAMR1	(*( CAN_MOAMR0_type *) 0xF002902CU)	/* Message Object 1 Acceptance Mask Register */
#define CAN1_MOAMR2	(*( CAN_MOAMR0_type *) 0xF002904CU)	/* Message Object 2 Acceptance Mask Register */
#define CAN1_MOAMR3	(*( CAN_MOAMR0_type *) 0xF002906CU)	/* Message Object 3 Acceptance Mask Register */
#define CAN1_MOAMR4	(*( CAN_MOAMR0_type *) 0xF002908CU)	/* Message Object 4 Acceptance Mask Register */
#define CAN1_MOAMR5	(*( CAN_MOAMR0_type *) 0xF00290ACU)	/* Message Object 5 Acceptance Mask Register */
#define CAN1_MOAMR6	(*( CAN_MOAMR0_type *) 0xF00290CCU)	/* Message Object 6 Acceptance Mask Register */
#define CAN1_MOAMR7	(*( CAN_MOAMR0_type *) 0xF00290ECU)	/* Message Object 7 Acceptance Mask Register */
#define CAN1_MOAMR8	(*( CAN_MOAMR0_type *) 0xF002910CU)	/* Message Object 8 Acceptance Mask Register */
#define CAN1_MOAMR9	(*( CAN_MOAMR0_type *) 0xF002912CU)	/* Message Object 9 Acceptance Mask Register */
#define CAN1_MOAMR10	(*( CAN_MOAMR0_type *) 0xF002914CU)	/* Message Object 10 Acceptance Mask Register */
#define CAN1_MOAMR11	(*( CAN_MOAMR0_type *) 0xF002916CU)	/* Message Object 11 Acceptance Mask Register */
#define CAN1_MOAMR12	(*( CAN_MOAMR0_type *) 0xF002918CU)	/* Message Object 12 Acceptance Mask Register */
#define CAN1_MOAMR13	(*( CAN_MOAMR0_type *) 0xF00291ACU)	/* Message Object 13 Acceptance Mask Register */
#define CAN1_MOAMR14	(*( CAN_MOAMR0_type *) 0xF00291CCU)	/* Message Object 14 Acceptance Mask Register */
#define CAN1_MOAMR15	(*( CAN_MOAMR0_type *) 0xF00291ECU)	/* Message Object 15 Acceptance Mask Register */
#define CAN1_MOAMR16	(*( CAN_MOAMR0_type *) 0xF002920CU)	/* Message Object 16 Acceptance Mask Register */
#define CAN1_MOAMR17	(*( CAN_MOAMR0_type *) 0xF002922CU)	/* Message Object 17 Acceptance Mask Register */
#define CAN1_MOAMR18	(*( CAN_MOAMR0_type *) 0xF002924CU)	/* Message Object 18 Acceptance Mask Register */
#define CAN1_MOAMR19	(*( CAN_MOAMR0_type *) 0xF002926CU)	/* Message Object 19 Acceptance Mask Register */
#define CAN1_MOAMR20	(*( CAN_MOAMR0_type *) 0xF002928CU)	/* Message Object 20 Acceptance Mask Register */
#define CAN1_MOAMR21	(*( CAN_MOAMR0_type *) 0xF00292ACU)	/* Message Object 21 Acceptance Mask Register */
#define CAN1_MOAMR22	(*( CAN_MOAMR0_type *) 0xF00292CCU)	/* Message Object 22 Acceptance Mask Register */
#define CAN1_MOAMR23	(*( CAN_MOAMR0_type *) 0xF00292ECU)	/* Message Object 23 Acceptance Mask Register */
#define CAN1_MOAMR24	(*( CAN_MOAMR0_type *) 0xF002930CU)	/* Message Object 24 Acceptance Mask Register */
#define CAN1_MOAMR25	(*( CAN_MOAMR0_type *) 0xF002932CU)	/* Message Object 25 Acceptance Mask Register */
#define CAN1_MOAMR26	(*( CAN_MOAMR0_type *) 0xF002934CU)	/* Message Object 26 Acceptance Mask Register */
#define CAN1_MOAMR27	(*( CAN_MOAMR0_type *) 0xF002936CU)	/* Message Object 27 Acceptance Mask Register */
#define CAN1_MOAMR28	(*( CAN_MOAMR0_type *) 0xF002938CU)	/* Message Object 28 Acceptance Mask Register */
#define CAN1_MOAMR29	(*( CAN_MOAMR0_type *) 0xF00293ACU)	/* Message Object 29 Acceptance Mask Register */
#define CAN1_MOAMR30	(*( CAN_MOAMR0_type *) 0xF00293CCU)	/* Message Object 30 Acceptance Mask Register */
#define CAN1_MOAMR31	(*( CAN_MOAMR0_type *) 0xF00293ECU)	/* Message Object 31 Acceptance Mask Register */
#define CAN1_MOAMR32	(*( CAN_MOAMR0_type *) 0xF002940CU)	/* Message Object 32 Acceptance Mask Register */
#define CAN1_MOAMR33	(*( CAN_MOAMR0_type *) 0xF002942CU)	/* Message Object 33 Acceptance Mask Register */
#define CAN1_MOAMR34	(*( CAN_MOAMR0_type *) 0xF002944CU)	/* Message Object 34 Acceptance Mask Register */
#define CAN1_MOAMR35	(*( CAN_MOAMR0_type *) 0xF002946CU)	/* Message Object 35 Acceptance Mask Register */
#define CAN1_MOAMR36	(*( CAN_MOAMR0_type *) 0xF002948CU)	/* Message Object 36 Acceptance Mask Register */
#define CAN1_MOAMR37	(*( CAN_MOAMR0_type *) 0xF00294ACU)	/* Message Object 37 Acceptance Mask Register */
#define CAN1_MOAMR38	(*( CAN_MOAMR0_type *) 0xF00294CCU)	/* Message Object 38 Acceptance Mask Register */
#define CAN1_MOAMR39	(*( CAN_MOAMR0_type *) 0xF00294ECU)	/* Message Object 39 Acceptance Mask Register */
#define CAN1_MOAMR40	(*( CAN_MOAMR0_type *) 0xF002950CU)	/* Message Object 40 Acceptance Mask Register */
#define CAN1_MOAMR41	(*( CAN_MOAMR0_type *) 0xF002952CU)	/* Message Object 41 Acceptance Mask Register */
#define CAN1_MOAMR42	(*( CAN_MOAMR0_type *) 0xF002954CU)	/* Message Object 42 Acceptance Mask Register */
#define CAN1_MOAMR43	(*( CAN_MOAMR0_type *) 0xF002956CU)	/* Message Object 43 Acceptance Mask Register */
#define CAN1_MOAMR44	(*( CAN_MOAMR0_type *) 0xF002958CU)	/* Message Object 44 Acceptance Mask Register */
#define CAN1_MOAMR45	(*( CAN_MOAMR0_type *) 0xF00295ACU)	/* Message Object 45 Acceptance Mask Register */
#define CAN1_MOAMR46	(*( CAN_MOAMR0_type *) 0xF00295CCU)	/* Message Object 46 Acceptance Mask Register */
#define CAN1_MOAMR47	(*( CAN_MOAMR0_type *) 0xF00295ECU)	/* Message Object 47 Acceptance Mask Register */
#define CAN1_MOAMR48	(*( CAN_MOAMR0_type *) 0xF002960CU)	/* Message Object 48 Acceptance Mask Register */
#define CAN1_MOAMR49	(*( CAN_MOAMR0_type *) 0xF002962CU)	/* Message Object 49 Acceptance Mask Register */
#define CAN1_MOAMR50	(*( CAN_MOAMR0_type *) 0xF002964CU)	/* Message Object 50 Acceptance Mask Register */
#define CAN1_MOAMR51	(*( CAN_MOAMR0_type *) 0xF002966CU)	/* Message Object 51 Acceptance Mask Register */
#define CAN1_MOAMR52	(*( CAN_MOAMR0_type *) 0xF002968CU)	/* Message Object 52 Acceptance Mask Register */
#define CAN1_MOAMR53	(*( CAN_MOAMR0_type *) 0xF00296ACU)	/* Message Object 53 Acceptance Mask Register */
#define CAN1_MOAMR54	(*( CAN_MOAMR0_type *) 0xF00296CCU)	/* Message Object 54 Acceptance Mask Register */
#define CAN1_MOAMR55	(*( CAN_MOAMR0_type *) 0xF00296ECU)	/* Message Object 55 Acceptance Mask Register */
#define CAN1_MOAMR56	(*( CAN_MOAMR0_type *) 0xF002970CU)	/* Message Object 56 Acceptance Mask Register */
#define CAN1_MOAMR57	(*( CAN_MOAMR0_type *) 0xF002972CU)	/* Message Object 57 Acceptance Mask Register */
#define CAN1_MOAMR58	(*( CAN_MOAMR0_type *) 0xF002974CU)	/* Message Object 58 Acceptance Mask Register */
#define CAN1_MOAMR59	(*( CAN_MOAMR0_type *) 0xF002976CU)	/* Message Object 59 Acceptance Mask Register */
#define CAN1_MOAMR60	(*( CAN_MOAMR0_type *) 0xF002978CU)	/* Message Object 60 Acceptance Mask Register */
#define CAN1_MOAMR61	(*( CAN_MOAMR0_type *) 0xF00297ACU)	/* Message Object 61 Acceptance Mask Register */
#define CAN1_MOAMR62	(*( CAN_MOAMR0_type *) 0xF00297CCU)	/* Message Object 62 Acceptance Mask Register */
#define CAN1_MOAMR63	(*( CAN_MOAMR0_type *) 0xF00297ECU)	/* Message Object 63 Acceptance Mask Register */
#define CAN1_MOAMR64	(*( CAN_MOAMR0_type *) 0xF002980CU)	/* Message Object 64 Acceptance Mask Register */
#define CAN1_MOAMR65	(*( CAN_MOAMR0_type *) 0xF002982CU)	/* Message Object 65 Acceptance Mask Register */
#define CAN1_MOAMR66	(*( CAN_MOAMR0_type *) 0xF002984CU)	/* Message Object 66 Acceptance Mask Register */
#define CAN1_MOAMR67	(*( CAN_MOAMR0_type *) 0xF002986CU)	/* Message Object 67 Acceptance Mask Register */
#define CAN1_MOAMR68	(*( CAN_MOAMR0_type *) 0xF002988CU)	/* Message Object 68 Acceptance Mask Register */
#define CAN1_MOAMR69	(*( CAN_MOAMR0_type *) 0xF00298ACU)	/* Message Object 69 Acceptance Mask Register */
#define CAN1_MOAMR70	(*( CAN_MOAMR0_type *) 0xF00298CCU)	/* Message Object 70 Acceptance Mask Register */
#define CAN1_MOAMR71	(*( CAN_MOAMR0_type *) 0xF00298ECU)	/* Message Object 71 Acceptance Mask Register */
#define CAN1_MOAMR72	(*( CAN_MOAMR0_type *) 0xF002990CU)	/* Message Object 72 Acceptance Mask Register */
#define CAN1_MOAMR73	(*( CAN_MOAMR0_type *) 0xF002992CU)	/* Message Object 73 Acceptance Mask Register */
#define CAN1_MOAMR74	(*( CAN_MOAMR0_type *) 0xF002994CU)	/* Message Object 74 Acceptance Mask Register */
#define CAN1_MOAMR75	(*( CAN_MOAMR0_type *) 0xF002996CU)	/* Message Object 75 Acceptance Mask Register */
#define CAN1_MOAMR76	(*( CAN_MOAMR0_type *) 0xF002998CU)	/* Message Object 76 Acceptance Mask Register */
#define CAN1_MOAMR77	(*( CAN_MOAMR0_type *) 0xF00299ACU)	/* Message Object 77 Acceptance Mask Register */
#define CAN1_MOAMR78	(*( CAN_MOAMR0_type *) 0xF00299CCU)	/* Message Object 78 Acceptance Mask Register */
#define CAN1_MOAMR79	(*( CAN_MOAMR0_type *) 0xF00299ECU)	/* Message Object 79 Acceptance Mask Register */
#define CAN1_MOAMR80	(*( CAN_MOAMR0_type *) 0xF0029A0CU)	/* Message Object 80 Acceptance Mask Register */
#define CAN1_MOAMR81	(*( CAN_MOAMR0_type *) 0xF0029A2CU)	/* Message Object 81 Acceptance Mask Register */
#define CAN1_MOAMR82	(*( CAN_MOAMR0_type *) 0xF0029A4CU)	/* Message Object 82 Acceptance Mask Register */
#define CAN1_MOAMR83	(*( CAN_MOAMR0_type *) 0xF0029A6CU)	/* Message Object 83 Acceptance Mask Register */
#define CAN1_MOAMR84	(*( CAN_MOAMR0_type *) 0xF0029A8CU)	/* Message Object 84 Acceptance Mask Register */
#define CAN1_MOAMR85	(*( CAN_MOAMR0_type *) 0xF0029AACU)	/* Message Object 85 Acceptance Mask Register */
#define CAN1_MOAMR86	(*( CAN_MOAMR0_type *) 0xF0029ACCU)	/* Message Object 86 Acceptance Mask Register */
#define CAN1_MOAMR87	(*( CAN_MOAMR0_type *) 0xF0029AECU)	/* Message Object 87 Acceptance Mask Register */
#define CAN1_MOAMR88	(*( CAN_MOAMR0_type *) 0xF0029B0CU)	/* Message Object 88 Acceptance Mask Register */
#define CAN1_MOAMR89	(*( CAN_MOAMR0_type *) 0xF0029B2CU)	/* Message Object 89 Acceptance Mask Register */
#define CAN1_MOAMR90	(*( CAN_MOAMR0_type *) 0xF0029B4CU)	/* Message Object 90 Acceptance Mask Register */
#define CAN1_MOAMR91	(*( CAN_MOAMR0_type *) 0xF0029B6CU)	/* Message Object 91 Acceptance Mask Register */
#define CAN1_MOAMR92	(*( CAN_MOAMR0_type *) 0xF0029B8CU)	/* Message Object 92 Acceptance Mask Register */
#define CAN1_MOAMR93	(*( CAN_MOAMR0_type *) 0xF0029BACU)	/* Message Object 93 Acceptance Mask Register */
#define CAN1_MOAMR94	(*( CAN_MOAMR0_type *) 0xF0029BCCU)	/* Message Object 94 Acceptance Mask Register */
#define CAN1_MOAMR95	(*( CAN_MOAMR0_type *) 0xF0029BECU)	/* Message Object 95 Acceptance Mask Register */
#define CAN1_MOAMR96	(*( CAN_MOAMR0_type *) 0xF0029C0CU)	/* Message Object 96 Acceptance Mask Register */
#define CAN1_MOAMR97	(*( CAN_MOAMR0_type *) 0xF0029C2CU)	/* Message Object 97 Acceptance Mask Register */
#define CAN1_MOAMR98	(*( CAN_MOAMR0_type *) 0xF0029C4CU)	/* Message Object 98 Acceptance Mask Register */
#define CAN1_MOAMR99	(*( CAN_MOAMR0_type *) 0xF0029C6CU)	/* Message Object 99 Acceptance Mask Register */
#define CAN1_MOAMR100	(*( CAN_MOAMR0_type *) 0xF0029C8CU)	/* Message Object 100 Acceptance Mask Register */
#define CAN1_MOAMR101	(*( CAN_MOAMR0_type *) 0xF0029CACU)	/* Message Object 101 Acceptance Mask Register */
#define CAN1_MOAMR102	(*( CAN_MOAMR0_type *) 0xF0029CCCU)	/* Message Object 102 Acceptance Mask Register */
#define CAN1_MOAMR103	(*( CAN_MOAMR0_type *) 0xF0029CECU)	/* Message Object 103 Acceptance Mask Register */
#define CAN1_MOAMR104	(*( CAN_MOAMR0_type *) 0xF0029D0CU)	/* Message Object 104 Acceptance Mask Register */
#define CAN1_MOAMR105	(*( CAN_MOAMR0_type *) 0xF0029D2CU)	/* Message Object 105 Acceptance Mask Register */
#define CAN1_MOAMR106	(*( CAN_MOAMR0_type *) 0xF0029D4CU)	/* Message Object 106 Acceptance Mask Register */
#define CAN1_MOAMR107	(*( CAN_MOAMR0_type *) 0xF0029D6CU)	/* Message Object 107 Acceptance Mask Register */
#define CAN1_MOAMR108	(*( CAN_MOAMR0_type *) 0xF0029D8CU)	/* Message Object 108 Acceptance Mask Register */
#define CAN1_MOAMR109	(*( CAN_MOAMR0_type *) 0xF0029DACU)	/* Message Object 109 Acceptance Mask Register */
#define CAN1_MOAMR110	(*( CAN_MOAMR0_type *) 0xF0029DCCU)	/* Message Object 110 Acceptance Mask Register */
#define CAN1_MOAMR111	(*( CAN_MOAMR0_type *) 0xF0029DECU)	/* Message Object 111 Acceptance Mask Register */
#define CAN1_MOAMR112	(*( CAN_MOAMR0_type *) 0xF0029E0CU)	/* Message Object 112 Acceptance Mask Register */
#define CAN1_MOAMR113	(*( CAN_MOAMR0_type *) 0xF0029E2CU)	/* Message Object 113 Acceptance Mask Register */
#define CAN1_MOAMR114	(*( CAN_MOAMR0_type *) 0xF0029E4CU)	/* Message Object 114 Acceptance Mask Register */
#define CAN1_MOAMR115	(*( CAN_MOAMR0_type *) 0xF0029E6CU)	/* Message Object 115 Acceptance Mask Register */
#define CAN1_MOAMR116	(*( CAN_MOAMR0_type *) 0xF0029E8CU)	/* Message Object 116 Acceptance Mask Register */
#define CAN1_MOAMR117	(*( CAN_MOAMR0_type *) 0xF0029EACU)	/* Message Object 117 Acceptance Mask Register */
#define CAN1_MOAMR118	(*( CAN_MOAMR0_type *) 0xF0029ECCU)	/* Message Object 118 Acceptance Mask Register */
#define CAN1_MOAMR119	(*( CAN_MOAMR0_type *) 0xF0029EECU)	/* Message Object 119 Acceptance Mask Register */
#define CAN1_MOAMR120	(*( CAN_MOAMR0_type *) 0xF0029F0CU)	/* Message Object 120 Acceptance Mask Register */
#define CAN1_MOAMR121	(*( CAN_MOAMR0_type *) 0xF0029F2CU)	/* Message Object 121 Acceptance Mask Register */
#define CAN1_MOAMR122	(*( CAN_MOAMR0_type *) 0xF0029F4CU)	/* Message Object 122 Acceptance Mask Register */
#define CAN1_MOAMR123	(*( CAN_MOAMR0_type *) 0xF0029F6CU)	/* Message Object 123 Acceptance Mask Register */
#define CAN1_MOAMR124	(*( CAN_MOAMR0_type *) 0xF0029F8CU)	/* Message Object 124 Acceptance Mask Register */
#define CAN1_MOAMR125	(*( CAN_MOAMR0_type *) 0xF0029FACU)	/* Message Object 125 Acceptance Mask Register */
#define CAN1_MOAMR126	(*( CAN_MOAMR0_type *) 0xF0029FCCU)	/* Message Object 126 Acceptance Mask Register */
#define CAN1_MOAMR127	(*( CAN_MOAMR0_type *) 0xF0029FECU)	/* Message Object 127 Acceptance Mask Register */
#define CAN_MOAR0	(*( CAN_MOAR0_type *) 0xF0019018U)	/* Message Object 0 Arbitration Register */
#define CAN_MOAR1	(*( CAN_MOAR0_type *) 0xF0019038U)	/* Message Object 1 Arbitration Register */
#define CAN_MOAR2	(*( CAN_MOAR0_type *) 0xF0019058U)	/* Message Object 2 Arbitration Register */
#define CAN_MOAR3	(*( CAN_MOAR0_type *) 0xF0019078U)	/* Message Object 3 Arbitration Register */
#define CAN_MOAR4	(*( CAN_MOAR0_type *) 0xF0019098U)	/* Message Object 4 Arbitration Register */
#define CAN_MOAR5	(*( CAN_MOAR0_type *) 0xF00190B8U)	/* Message Object 5 Arbitration Register */
#define CAN_MOAR6	(*( CAN_MOAR0_type *) 0xF00190D8U)	/* Message Object 6 Arbitration Register */
#define CAN_MOAR7	(*( CAN_MOAR0_type *) 0xF00190F8U)	/* Message Object 7 Arbitration Register */
#define CAN_MOAR8	(*( CAN_MOAR0_type *) 0xF0019118U)	/* Message Object 8 Arbitration Register */
#define CAN_MOAR9	(*( CAN_MOAR0_type *) 0xF0019138U)	/* Message Object 9 Arbitration Register */
#define CAN_MOAR10	(*( CAN_MOAR0_type *) 0xF0019158U)	/* Message Object 10 Arbitration Register */
#define CAN_MOAR11	(*( CAN_MOAR0_type *) 0xF0019178U)	/* Message Object 11 Arbitration Register */
#define CAN_MOAR12	(*( CAN_MOAR0_type *) 0xF0019198U)	/* Message Object 12 Arbitration Register */
#define CAN_MOAR13	(*( CAN_MOAR0_type *) 0xF00191B8U)	/* Message Object 13 Arbitration Register */
#define CAN_MOAR14	(*( CAN_MOAR0_type *) 0xF00191D8U)	/* Message Object 14 Arbitration Register */
#define CAN_MOAR15	(*( CAN_MOAR0_type *) 0xF00191F8U)	/* Message Object 15 Arbitration Register */
#define CAN_MOAR16	(*( CAN_MOAR0_type *) 0xF0019218U)	/* Message Object 16 Arbitration Register */
#define CAN_MOAR17	(*( CAN_MOAR0_type *) 0xF0019238U)	/* Message Object 17 Arbitration Register */
#define CAN_MOAR18	(*( CAN_MOAR0_type *) 0xF0019258U)	/* Message Object 18 Arbitration Register */
#define CAN_MOAR19	(*( CAN_MOAR0_type *) 0xF0019278U)	/* Message Object 19 Arbitration Register */
#define CAN_MOAR20	(*( CAN_MOAR0_type *) 0xF0019298U)	/* Message Object 20 Arbitration Register */
#define CAN_MOAR21	(*( CAN_MOAR0_type *) 0xF00192B8U)	/* Message Object 21 Arbitration Register */
#define CAN_MOAR22	(*( CAN_MOAR0_type *) 0xF00192D8U)	/* Message Object 22 Arbitration Register */
#define CAN_MOAR23	(*( CAN_MOAR0_type *) 0xF00192F8U)	/* Message Object 23 Arbitration Register */
#define CAN_MOAR24	(*( CAN_MOAR0_type *) 0xF0019318U)	/* Message Object 24 Arbitration Register */
#define CAN_MOAR25	(*( CAN_MOAR0_type *) 0xF0019338U)	/* Message Object 25 Arbitration Register */
#define CAN_MOAR26	(*( CAN_MOAR0_type *) 0xF0019358U)	/* Message Object 26 Arbitration Register */
#define CAN_MOAR27	(*( CAN_MOAR0_type *) 0xF0019378U)	/* Message Object 27 Arbitration Register */
#define CAN_MOAR28	(*( CAN_MOAR0_type *) 0xF0019398U)	/* Message Object 28 Arbitration Register */
#define CAN_MOAR29	(*( CAN_MOAR0_type *) 0xF00193B8U)	/* Message Object 29 Arbitration Register */
#define CAN_MOAR30	(*( CAN_MOAR0_type *) 0xF00193D8U)	/* Message Object 30 Arbitration Register */
#define CAN_MOAR31	(*( CAN_MOAR0_type *) 0xF00193F8U)	/* Message Object 31 Arbitration Register */
#define CAN_MOAR32	(*( CAN_MOAR0_type *) 0xF0019418U)	/* Message Object 32 Arbitration Register */
#define CAN_MOAR33	(*( CAN_MOAR0_type *) 0xF0019438U)	/* Message Object 33 Arbitration Register */
#define CAN_MOAR34	(*( CAN_MOAR0_type *) 0xF0019458U)	/* Message Object 34 Arbitration Register */
#define CAN_MOAR35	(*( CAN_MOAR0_type *) 0xF0019478U)	/* Message Object 35 Arbitration Register */
#define CAN_MOAR36	(*( CAN_MOAR0_type *) 0xF0019498U)	/* Message Object 36 Arbitration Register */
#define CAN_MOAR37	(*( CAN_MOAR0_type *) 0xF00194B8U)	/* Message Object 37 Arbitration Register */
#define CAN_MOAR38	(*( CAN_MOAR0_type *) 0xF00194D8U)	/* Message Object 38 Arbitration Register */
#define CAN_MOAR39	(*( CAN_MOAR0_type *) 0xF00194F8U)	/* Message Object 39 Arbitration Register */
#define CAN_MOAR40	(*( CAN_MOAR0_type *) 0xF0019518U)	/* Message Object 40 Arbitration Register */
#define CAN_MOAR41	(*( CAN_MOAR0_type *) 0xF0019538U)	/* Message Object 41 Arbitration Register */
#define CAN_MOAR42	(*( CAN_MOAR0_type *) 0xF0019558U)	/* Message Object 42 Arbitration Register */
#define CAN_MOAR43	(*( CAN_MOAR0_type *) 0xF0019578U)	/* Message Object 43 Arbitration Register */
#define CAN_MOAR44	(*( CAN_MOAR0_type *) 0xF0019598U)	/* Message Object 44 Arbitration Register */
#define CAN_MOAR45	(*( CAN_MOAR0_type *) 0xF00195B8U)	/* Message Object 45 Arbitration Register */
#define CAN_MOAR46	(*( CAN_MOAR0_type *) 0xF00195D8U)	/* Message Object 46 Arbitration Register */
#define CAN_MOAR47	(*( CAN_MOAR0_type *) 0xF00195F8U)	/* Message Object 47 Arbitration Register */
#define CAN_MOAR48	(*( CAN_MOAR0_type *) 0xF0019618U)	/* Message Object 48 Arbitration Register */
#define CAN_MOAR49	(*( CAN_MOAR0_type *) 0xF0019638U)	/* Message Object 49 Arbitration Register */
#define CAN_MOAR50	(*( CAN_MOAR0_type *) 0xF0019658U)	/* Message Object 50 Arbitration Register */
#define CAN_MOAR51	(*( CAN_MOAR0_type *) 0xF0019678U)	/* Message Object 51 Arbitration Register */
#define CAN_MOAR52	(*( CAN_MOAR0_type *) 0xF0019698U)	/* Message Object 52 Arbitration Register */
#define CAN_MOAR53	(*( CAN_MOAR0_type *) 0xF00196B8U)	/* Message Object 53 Arbitration Register */
#define CAN_MOAR54	(*( CAN_MOAR0_type *) 0xF00196D8U)	/* Message Object 54 Arbitration Register */
#define CAN_MOAR55	(*( CAN_MOAR0_type *) 0xF00196F8U)	/* Message Object 55 Arbitration Register */
#define CAN_MOAR56	(*( CAN_MOAR0_type *) 0xF0019718U)	/* Message Object 56 Arbitration Register */
#define CAN_MOAR57	(*( CAN_MOAR0_type *) 0xF0019738U)	/* Message Object 57 Arbitration Register */
#define CAN_MOAR58	(*( CAN_MOAR0_type *) 0xF0019758U)	/* Message Object 58 Arbitration Register */
#define CAN_MOAR59	(*( CAN_MOAR0_type *) 0xF0019778U)	/* Message Object 59 Arbitration Register */
#define CAN_MOAR60	(*( CAN_MOAR0_type *) 0xF0019798U)	/* Message Object 60 Arbitration Register */
#define CAN_MOAR61	(*( CAN_MOAR0_type *) 0xF00197B8U)	/* Message Object 61 Arbitration Register */
#define CAN_MOAR62	(*( CAN_MOAR0_type *) 0xF00197D8U)	/* Message Object 62 Arbitration Register */
#define CAN_MOAR63	(*( CAN_MOAR0_type *) 0xF00197F8U)	/* Message Object 63 Arbitration Register */
#define CAN_MOAR64	(*( CAN_MOAR0_type *) 0xF0019818U)	/* Message Object 64 Arbitration Register */
#define CAN_MOAR65	(*( CAN_MOAR0_type *) 0xF0019838U)	/* Message Object 65 Arbitration Register */
#define CAN_MOAR66	(*( CAN_MOAR0_type *) 0xF0019858U)	/* Message Object 66 Arbitration Register */
#define CAN_MOAR67	(*( CAN_MOAR0_type *) 0xF0019878U)	/* Message Object 67 Arbitration Register */
#define CAN_MOAR68	(*( CAN_MOAR0_type *) 0xF0019898U)	/* Message Object 68 Arbitration Register */
#define CAN_MOAR69	(*( CAN_MOAR0_type *) 0xF00198B8U)	/* Message Object 69 Arbitration Register */
#define CAN_MOAR70	(*( CAN_MOAR0_type *) 0xF00198D8U)	/* Message Object 70 Arbitration Register */
#define CAN_MOAR71	(*( CAN_MOAR0_type *) 0xF00198F8U)	/* Message Object 71 Arbitration Register */
#define CAN_MOAR72	(*( CAN_MOAR0_type *) 0xF0019918U)	/* Message Object 72 Arbitration Register */
#define CAN_MOAR73	(*( CAN_MOAR0_type *) 0xF0019938U)	/* Message Object 73 Arbitration Register */
#define CAN_MOAR74	(*( CAN_MOAR0_type *) 0xF0019958U)	/* Message Object 74 Arbitration Register */
#define CAN_MOAR75	(*( CAN_MOAR0_type *) 0xF0019978U)	/* Message Object 75 Arbitration Register */
#define CAN_MOAR76	(*( CAN_MOAR0_type *) 0xF0019998U)	/* Message Object 76 Arbitration Register */
#define CAN_MOAR77	(*( CAN_MOAR0_type *) 0xF00199B8U)	/* Message Object 77 Arbitration Register */
#define CAN_MOAR78	(*( CAN_MOAR0_type *) 0xF00199D8U)	/* Message Object 78 Arbitration Register */
#define CAN_MOAR79	(*( CAN_MOAR0_type *) 0xF00199F8U)	/* Message Object 79 Arbitration Register */
#define CAN_MOAR80	(*( CAN_MOAR0_type *) 0xF0019A18U)	/* Message Object 80 Arbitration Register */
#define CAN_MOAR81	(*( CAN_MOAR0_type *) 0xF0019A38U)	/* Message Object 81 Arbitration Register */
#define CAN_MOAR82	(*( CAN_MOAR0_type *) 0xF0019A58U)	/* Message Object 82 Arbitration Register */
#define CAN_MOAR83	(*( CAN_MOAR0_type *) 0xF0019A78U)	/* Message Object 83 Arbitration Register */
#define CAN_MOAR84	(*( CAN_MOAR0_type *) 0xF0019A98U)	/* Message Object 84 Arbitration Register */
#define CAN_MOAR85	(*( CAN_MOAR0_type *) 0xF0019AB8U)	/* Message Object 85 Arbitration Register */
#define CAN_MOAR86	(*( CAN_MOAR0_type *) 0xF0019AD8U)	/* Message Object 86 Arbitration Register */
#define CAN_MOAR87	(*( CAN_MOAR0_type *) 0xF0019AF8U)	/* Message Object 87 Arbitration Register */
#define CAN_MOAR88	(*( CAN_MOAR0_type *) 0xF0019B18U)	/* Message Object 88 Arbitration Register */
#define CAN_MOAR89	(*( CAN_MOAR0_type *) 0xF0019B38U)	/* Message Object 89 Arbitration Register */
#define CAN_MOAR90	(*( CAN_MOAR0_type *) 0xF0019B58U)	/* Message Object 90 Arbitration Register */
#define CAN_MOAR91	(*( CAN_MOAR0_type *) 0xF0019B78U)	/* Message Object 91 Arbitration Register */
#define CAN_MOAR92	(*( CAN_MOAR0_type *) 0xF0019B98U)	/* Message Object 92 Arbitration Register */
#define CAN_MOAR93	(*( CAN_MOAR0_type *) 0xF0019BB8U)	/* Message Object 93 Arbitration Register */
#define CAN_MOAR94	(*( CAN_MOAR0_type *) 0xF0019BD8U)	/* Message Object 94 Arbitration Register */
#define CAN_MOAR95	(*( CAN_MOAR0_type *) 0xF0019BF8U)	/* Message Object 95 Arbitration Register */
#define CAN_MOAR96	(*( CAN_MOAR0_type *) 0xF0019C18U)	/* Message Object 96 Arbitration Register */
#define CAN_MOAR97	(*( CAN_MOAR0_type *) 0xF0019C38U)	/* Message Object 97 Arbitration Register */
#define CAN_MOAR98	(*( CAN_MOAR0_type *) 0xF0019C58U)	/* Message Object 98 Arbitration Register */
#define CAN_MOAR99	(*( CAN_MOAR0_type *) 0xF0019C78U)	/* Message Object 99 Arbitration Register */
#define CAN_MOAR100	(*( CAN_MOAR0_type *) 0xF0019C98U)	/* Message Object 100 Arbitration Register */
#define CAN_MOAR101	(*( CAN_MOAR0_type *) 0xF0019CB8U)	/* Message Object 101 Arbitration Register */
#define CAN_MOAR102	(*( CAN_MOAR0_type *) 0xF0019CD8U)	/* Message Object 102 Arbitration Register */
#define CAN_MOAR103	(*( CAN_MOAR0_type *) 0xF0019CF8U)	/* Message Object 103 Arbitration Register */
#define CAN_MOAR104	(*( CAN_MOAR0_type *) 0xF0019D18U)	/* Message Object 104 Arbitration Register */
#define CAN_MOAR105	(*( CAN_MOAR0_type *) 0xF0019D38U)	/* Message Object 105 Arbitration Register */
#define CAN_MOAR106	(*( CAN_MOAR0_type *) 0xF0019D58U)	/* Message Object 106 Arbitration Register */
#define CAN_MOAR107	(*( CAN_MOAR0_type *) 0xF0019D78U)	/* Message Object 107 Arbitration Register */
#define CAN_MOAR108	(*( CAN_MOAR0_type *) 0xF0019D98U)	/* Message Object 108 Arbitration Register */
#define CAN_MOAR109	(*( CAN_MOAR0_type *) 0xF0019DB8U)	/* Message Object 109 Arbitration Register */
#define CAN_MOAR110	(*( CAN_MOAR0_type *) 0xF0019DD8U)	/* Message Object 110 Arbitration Register */
#define CAN_MOAR111	(*( CAN_MOAR0_type *) 0xF0019DF8U)	/* Message Object 111 Arbitration Register */
#define CAN_MOAR112	(*( CAN_MOAR0_type *) 0xF0019E18U)	/* Message Object 112 Arbitration Register */
#define CAN_MOAR113	(*( CAN_MOAR0_type *) 0xF0019E38U)	/* Message Object 113 Arbitration Register */
#define CAN_MOAR114	(*( CAN_MOAR0_type *) 0xF0019E58U)	/* Message Object 114 Arbitration Register */
#define CAN_MOAR115	(*( CAN_MOAR0_type *) 0xF0019E78U)	/* Message Object 115 Arbitration Register */
#define CAN_MOAR116	(*( CAN_MOAR0_type *) 0xF0019E98U)	/* Message Object 116 Arbitration Register */
#define CAN_MOAR117	(*( CAN_MOAR0_type *) 0xF0019EB8U)	/* Message Object 117 Arbitration Register */
#define CAN_MOAR118	(*( CAN_MOAR0_type *) 0xF0019ED8U)	/* Message Object 118 Arbitration Register */
#define CAN_MOAR119	(*( CAN_MOAR0_type *) 0xF0019EF8U)	/* Message Object 119 Arbitration Register */
#define CAN_MOAR120	(*( CAN_MOAR0_type *) 0xF0019F18U)	/* Message Object 120 Arbitration Register */
#define CAN_MOAR121	(*( CAN_MOAR0_type *) 0xF0019F38U)	/* Message Object 121 Arbitration Register */
#define CAN_MOAR122	(*( CAN_MOAR0_type *) 0xF0019F58U)	/* Message Object 122 Arbitration Register */
#define CAN_MOAR123	(*( CAN_MOAR0_type *) 0xF0019F78U)	/* Message Object 123 Arbitration Register */
#define CAN_MOAR124	(*( CAN_MOAR0_type *) 0xF0019F98U)	/* Message Object 124 Arbitration Register */
#define CAN_MOAR125	(*( CAN_MOAR0_type *) 0xF0019FB8U)	/* Message Object 125 Arbitration Register */
#define CAN_MOAR126	(*( CAN_MOAR0_type *) 0xF0019FD8U)	/* Message Object 126 Arbitration Register */
#define CAN_MOAR127	(*( CAN_MOAR0_type *) 0xF0019FF8U)	/* Message Object 127 Arbitration Register */
#define CAN1_MOAR0	(*( CAN_MOAR0_type *) 0xF0029018U)	/* Message Object 0 Arbitration Register */
#define CAN1_MOAR1	(*( CAN_MOAR0_type *) 0xF0029038U)	/* Message Object 1 Arbitration Register */
#define CAN1_MOAR2	(*( CAN_MOAR0_type *) 0xF0029058U)	/* Message Object 2 Arbitration Register */
#define CAN1_MOAR3	(*( CAN_MOAR0_type *) 0xF0029078U)	/* Message Object 3 Arbitration Register */
#define CAN1_MOAR4	(*( CAN_MOAR0_type *) 0xF0029098U)	/* Message Object 4 Arbitration Register */
#define CAN1_MOAR5	(*( CAN_MOAR0_type *) 0xF00290B8U)	/* Message Object 5 Arbitration Register */
#define CAN1_MOAR6	(*( CAN_MOAR0_type *) 0xF00290D8U)	/* Message Object 6 Arbitration Register */
#define CAN1_MOAR7	(*( CAN_MOAR0_type *) 0xF00290F8U)	/* Message Object 7 Arbitration Register */
#define CAN1_MOAR8	(*( CAN_MOAR0_type *) 0xF0029118U)	/* Message Object 8 Arbitration Register */
#define CAN1_MOAR9	(*( CAN_MOAR0_type *) 0xF0029138U)	/* Message Object 9 Arbitration Register */
#define CAN1_MOAR10	(*( CAN_MOAR0_type *) 0xF0029158U)	/* Message Object 10 Arbitration Register */
#define CAN1_MOAR11	(*( CAN_MOAR0_type *) 0xF0029178U)	/* Message Object 11 Arbitration Register */
#define CAN1_MOAR12	(*( CAN_MOAR0_type *) 0xF0029198U)	/* Message Object 12 Arbitration Register */
#define CAN1_MOAR13	(*( CAN_MOAR0_type *) 0xF00291B8U)	/* Message Object 13 Arbitration Register */
#define CAN1_MOAR14	(*( CAN_MOAR0_type *) 0xF00291D8U)	/* Message Object 14 Arbitration Register */
#define CAN1_MOAR15	(*( CAN_MOAR0_type *) 0xF00291F8U)	/* Message Object 15 Arbitration Register */
#define CAN1_MOAR16	(*( CAN_MOAR0_type *) 0xF0029218U)	/* Message Object 16 Arbitration Register */
#define CAN1_MOAR17	(*( CAN_MOAR0_type *) 0xF0029238U)	/* Message Object 17 Arbitration Register */
#define CAN1_MOAR18	(*( CAN_MOAR0_type *) 0xF0029258U)	/* Message Object 18 Arbitration Register */
#define CAN1_MOAR19	(*( CAN_MOAR0_type *) 0xF0029278U)	/* Message Object 19 Arbitration Register */
#define CAN1_MOAR20	(*( CAN_MOAR0_type *) 0xF0029298U)	/* Message Object 20 Arbitration Register */
#define CAN1_MOAR21	(*( CAN_MOAR0_type *) 0xF00292B8U)	/* Message Object 21 Arbitration Register */
#define CAN1_MOAR22	(*( CAN_MOAR0_type *) 0xF00292D8U)	/* Message Object 22 Arbitration Register */
#define CAN1_MOAR23	(*( CAN_MOAR0_type *) 0xF00292F8U)	/* Message Object 23 Arbitration Register */
#define CAN1_MOAR24	(*( CAN_MOAR0_type *) 0xF0029318U)	/* Message Object 24 Arbitration Register */
#define CAN1_MOAR25	(*( CAN_MOAR0_type *) 0xF0029338U)	/* Message Object 25 Arbitration Register */
#define CAN1_MOAR26	(*( CAN_MOAR0_type *) 0xF0029358U)	/* Message Object 26 Arbitration Register */
#define CAN1_MOAR27	(*( CAN_MOAR0_type *) 0xF0029378U)	/* Message Object 27 Arbitration Register */
#define CAN1_MOAR28	(*( CAN_MOAR0_type *) 0xF0029398U)	/* Message Object 28 Arbitration Register */
#define CAN1_MOAR29	(*( CAN_MOAR0_type *) 0xF00293B8U)	/* Message Object 29 Arbitration Register */
#define CAN1_MOAR30	(*( CAN_MOAR0_type *) 0xF00293D8U)	/* Message Object 30 Arbitration Register */
#define CAN1_MOAR31	(*( CAN_MOAR0_type *) 0xF00293F8U)	/* Message Object 31 Arbitration Register */
#define CAN1_MOAR32	(*( CAN_MOAR0_type *) 0xF0029418U)	/* Message Object 32 Arbitration Register */
#define CAN1_MOAR33	(*( CAN_MOAR0_type *) 0xF0029438U)	/* Message Object 33 Arbitration Register */
#define CAN1_MOAR34	(*( CAN_MOAR0_type *) 0xF0029458U)	/* Message Object 34 Arbitration Register */
#define CAN1_MOAR35	(*( CAN_MOAR0_type *) 0xF0029478U)	/* Message Object 35 Arbitration Register */
#define CAN1_MOAR36	(*( CAN_MOAR0_type *) 0xF0029498U)	/* Message Object 36 Arbitration Register */
#define CAN1_MOAR37	(*( CAN_MOAR0_type *) 0xF00294B8U)	/* Message Object 37 Arbitration Register */
#define CAN1_MOAR38	(*( CAN_MOAR0_type *) 0xF00294D8U)	/* Message Object 38 Arbitration Register */
#define CAN1_MOAR39	(*( CAN_MOAR0_type *) 0xF00294F8U)	/* Message Object 39 Arbitration Register */
#define CAN1_MOAR40	(*( CAN_MOAR0_type *) 0xF0029518U)	/* Message Object 40 Arbitration Register */
#define CAN1_MOAR41	(*( CAN_MOAR0_type *) 0xF0029538U)	/* Message Object 41 Arbitration Register */
#define CAN1_MOAR42	(*( CAN_MOAR0_type *) 0xF0029558U)	/* Message Object 42 Arbitration Register */
#define CAN1_MOAR43	(*( CAN_MOAR0_type *) 0xF0029578U)	/* Message Object 43 Arbitration Register */
#define CAN1_MOAR44	(*( CAN_MOAR0_type *) 0xF0029598U)	/* Message Object 44 Arbitration Register */
#define CAN1_MOAR45	(*( CAN_MOAR0_type *) 0xF00295B8U)	/* Message Object 45 Arbitration Register */
#define CAN1_MOAR46	(*( CAN_MOAR0_type *) 0xF00295D8U)	/* Message Object 46 Arbitration Register */
#define CAN1_MOAR47	(*( CAN_MOAR0_type *) 0xF00295F8U)	/* Message Object 47 Arbitration Register */
#define CAN1_MOAR48	(*( CAN_MOAR0_type *) 0xF0029618U)	/* Message Object 48 Arbitration Register */
#define CAN1_MOAR49	(*( CAN_MOAR0_type *) 0xF0029638U)	/* Message Object 49 Arbitration Register */
#define CAN1_MOAR50	(*( CAN_MOAR0_type *) 0xF0029658U)	/* Message Object 50 Arbitration Register */
#define CAN1_MOAR51	(*( CAN_MOAR0_type *) 0xF0029678U)	/* Message Object 51 Arbitration Register */
#define CAN1_MOAR52	(*( CAN_MOAR0_type *) 0xF0029698U)	/* Message Object 52 Arbitration Register */
#define CAN1_MOAR53	(*( CAN_MOAR0_type *) 0xF00296B8U)	/* Message Object 53 Arbitration Register */
#define CAN1_MOAR54	(*( CAN_MOAR0_type *) 0xF00296D8U)	/* Message Object 54 Arbitration Register */
#define CAN1_MOAR55	(*( CAN_MOAR0_type *) 0xF00296F8U)	/* Message Object 55 Arbitration Register */
#define CAN1_MOAR56	(*( CAN_MOAR0_type *) 0xF0029718U)	/* Message Object 56 Arbitration Register */
#define CAN1_MOAR57	(*( CAN_MOAR0_type *) 0xF0029738U)	/* Message Object 57 Arbitration Register */
#define CAN1_MOAR58	(*( CAN_MOAR0_type *) 0xF0029758U)	/* Message Object 58 Arbitration Register */
#define CAN1_MOAR59	(*( CAN_MOAR0_type *) 0xF0029778U)	/* Message Object 59 Arbitration Register */
#define CAN1_MOAR60	(*( CAN_MOAR0_type *) 0xF0029798U)	/* Message Object 60 Arbitration Register */
#define CAN1_MOAR61	(*( CAN_MOAR0_type *) 0xF00297B8U)	/* Message Object 61 Arbitration Register */
#define CAN1_MOAR62	(*( CAN_MOAR0_type *) 0xF00297D8U)	/* Message Object 62 Arbitration Register */
#define CAN1_MOAR63	(*( CAN_MOAR0_type *) 0xF00297F8U)	/* Message Object 63 Arbitration Register */
#define CAN1_MOAR64	(*( CAN_MOAR0_type *) 0xF0029818U)	/* Message Object 64 Arbitration Register */
#define CAN1_MOAR65	(*( CAN_MOAR0_type *) 0xF0029838U)	/* Message Object 65 Arbitration Register */
#define CAN1_MOAR66	(*( CAN_MOAR0_type *) 0xF0029858U)	/* Message Object 66 Arbitration Register */
#define CAN1_MOAR67	(*( CAN_MOAR0_type *) 0xF0029878U)	/* Message Object 67 Arbitration Register */
#define CAN1_MOAR68	(*( CAN_MOAR0_type *) 0xF0029898U)	/* Message Object 68 Arbitration Register */
#define CAN1_MOAR69	(*( CAN_MOAR0_type *) 0xF00298B8U)	/* Message Object 69 Arbitration Register */
#define CAN1_MOAR70	(*( CAN_MOAR0_type *) 0xF00298D8U)	/* Message Object 70 Arbitration Register */
#define CAN1_MOAR71	(*( CAN_MOAR0_type *) 0xF00298F8U)	/* Message Object 71 Arbitration Register */
#define CAN1_MOAR72	(*( CAN_MOAR0_type *) 0xF0029918U)	/* Message Object 72 Arbitration Register */
#define CAN1_MOAR73	(*( CAN_MOAR0_type *) 0xF0029938U)	/* Message Object 73 Arbitration Register */
#define CAN1_MOAR74	(*( CAN_MOAR0_type *) 0xF0029958U)	/* Message Object 74 Arbitration Register */
#define CAN1_MOAR75	(*( CAN_MOAR0_type *) 0xF0029978U)	/* Message Object 75 Arbitration Register */
#define CAN1_MOAR76	(*( CAN_MOAR0_type *) 0xF0029998U)	/* Message Object 76 Arbitration Register */
#define CAN1_MOAR77	(*( CAN_MOAR0_type *) 0xF00299B8U)	/* Message Object 77 Arbitration Register */
#define CAN1_MOAR78	(*( CAN_MOAR0_type *) 0xF00299D8U)	/* Message Object 78 Arbitration Register */
#define CAN1_MOAR79	(*( CAN_MOAR0_type *) 0xF00299F8U)	/* Message Object 79 Arbitration Register */
#define CAN1_MOAR80	(*( CAN_MOAR0_type *) 0xF0029A18U)	/* Message Object 80 Arbitration Register */
#define CAN1_MOAR81	(*( CAN_MOAR0_type *) 0xF0029A38U)	/* Message Object 81 Arbitration Register */
#define CAN1_MOAR82	(*( CAN_MOAR0_type *) 0xF0029A58U)	/* Message Object 82 Arbitration Register */
#define CAN1_MOAR83	(*( CAN_MOAR0_type *) 0xF0029A78U)	/* Message Object 83 Arbitration Register */
#define CAN1_MOAR84	(*( CAN_MOAR0_type *) 0xF0029A98U)	/* Message Object 84 Arbitration Register */
#define CAN1_MOAR85	(*( CAN_MOAR0_type *) 0xF0029AB8U)	/* Message Object 85 Arbitration Register */
#define CAN1_MOAR86	(*( CAN_MOAR0_type *) 0xF0029AD8U)	/* Message Object 86 Arbitration Register */
#define CAN1_MOAR87	(*( CAN_MOAR0_type *) 0xF0029AF8U)	/* Message Object 87 Arbitration Register */
#define CAN1_MOAR88	(*( CAN_MOAR0_type *) 0xF0029B18U)	/* Message Object 88 Arbitration Register */
#define CAN1_MOAR89	(*( CAN_MOAR0_type *) 0xF0029B38U)	/* Message Object 89 Arbitration Register */
#define CAN1_MOAR90	(*( CAN_MOAR0_type *) 0xF0029B58U)	/* Message Object 90 Arbitration Register */
#define CAN1_MOAR91	(*( CAN_MOAR0_type *) 0xF0029B78U)	/* Message Object 91 Arbitration Register */
#define CAN1_MOAR92	(*( CAN_MOAR0_type *) 0xF0029B98U)	/* Message Object 92 Arbitration Register */
#define CAN1_MOAR93	(*( CAN_MOAR0_type *) 0xF0029BB8U)	/* Message Object 93 Arbitration Register */
#define CAN1_MOAR94	(*( CAN_MOAR0_type *) 0xF0029BD8U)	/* Message Object 94 Arbitration Register */
#define CAN1_MOAR95	(*( CAN_MOAR0_type *) 0xF0029BF8U)	/* Message Object 95 Arbitration Register */
#define CAN1_MOAR96	(*( CAN_MOAR0_type *) 0xF0029C18U)	/* Message Object 96 Arbitration Register */
#define CAN1_MOAR97	(*( CAN_MOAR0_type *) 0xF0029C38U)	/* Message Object 97 Arbitration Register */
#define CAN1_MOAR98	(*( CAN_MOAR0_type *) 0xF0029C58U)	/* Message Object 98 Arbitration Register */
#define CAN1_MOAR99	(*( CAN_MOAR0_type *) 0xF0029C78U)	/* Message Object 99 Arbitration Register */
#define CAN1_MOAR100	(*( CAN_MOAR0_type *) 0xF0029C98U)	/* Message Object 100 Arbitration Register */
#define CAN1_MOAR101	(*( CAN_MOAR0_type *) 0xF0029CB8U)	/* Message Object 101 Arbitration Register */
#define CAN1_MOAR102	(*( CAN_MOAR0_type *) 0xF0029CD8U)	/* Message Object 102 Arbitration Register */
#define CAN1_MOAR103	(*( CAN_MOAR0_type *) 0xF0029CF8U)	/* Message Object 103 Arbitration Register */
#define CAN1_MOAR104	(*( CAN_MOAR0_type *) 0xF0029D18U)	/* Message Object 104 Arbitration Register */
#define CAN1_MOAR105	(*( CAN_MOAR0_type *) 0xF0029D38U)	/* Message Object 105 Arbitration Register */
#define CAN1_MOAR106	(*( CAN_MOAR0_type *) 0xF0029D58U)	/* Message Object 106 Arbitration Register */
#define CAN1_MOAR107	(*( CAN_MOAR0_type *) 0xF0029D78U)	/* Message Object 107 Arbitration Register */
#define CAN1_MOAR108	(*( CAN_MOAR0_type *) 0xF0029D98U)	/* Message Object 108 Arbitration Register */
#define CAN1_MOAR109	(*( CAN_MOAR0_type *) 0xF0029DB8U)	/* Message Object 109 Arbitration Register */
#define CAN1_MOAR110	(*( CAN_MOAR0_type *) 0xF0029DD8U)	/* Message Object 110 Arbitration Register */
#define CAN1_MOAR111	(*( CAN_MOAR0_type *) 0xF0029DF8U)	/* Message Object 111 Arbitration Register */
#define CAN1_MOAR112	(*( CAN_MOAR0_type *) 0xF0029E18U)	/* Message Object 112 Arbitration Register */
#define CAN1_MOAR113	(*( CAN_MOAR0_type *) 0xF0029E38U)	/* Message Object 113 Arbitration Register */
#define CAN1_MOAR114	(*( CAN_MOAR0_type *) 0xF0029E58U)	/* Message Object 114 Arbitration Register */
#define CAN1_MOAR115	(*( CAN_MOAR0_type *) 0xF0029E78U)	/* Message Object 115 Arbitration Register */
#define CAN1_MOAR116	(*( CAN_MOAR0_type *) 0xF0029E98U)	/* Message Object 116 Arbitration Register */
#define CAN1_MOAR117	(*( CAN_MOAR0_type *) 0xF0029EB8U)	/* Message Object 117 Arbitration Register */
#define CAN1_MOAR118	(*( CAN_MOAR0_type *) 0xF0029ED8U)	/* Message Object 118 Arbitration Register */
#define CAN1_MOAR119	(*( CAN_MOAR0_type *) 0xF0029EF8U)	/* Message Object 119 Arbitration Register */
#define CAN1_MOAR120	(*( CAN_MOAR0_type *) 0xF0029F18U)	/* Message Object 120 Arbitration Register */
#define CAN1_MOAR121	(*( CAN_MOAR0_type *) 0xF0029F38U)	/* Message Object 121 Arbitration Register */
#define CAN1_MOAR122	(*( CAN_MOAR0_type *) 0xF0029F58U)	/* Message Object 122 Arbitration Register */
#define CAN1_MOAR123	(*( CAN_MOAR0_type *) 0xF0029F78U)	/* Message Object 123 Arbitration Register */
#define CAN1_MOAR124	(*( CAN_MOAR0_type *) 0xF0029F98U)	/* Message Object 124 Arbitration Register */
#define CAN1_MOAR125	(*( CAN_MOAR0_type *) 0xF0029FB8U)	/* Message Object 125 Arbitration Register */
#define CAN1_MOAR126	(*( CAN_MOAR0_type *) 0xF0029FD8U)	/* Message Object 126 Arbitration Register */
#define CAN1_MOAR127	(*( CAN_MOAR0_type *) 0xF0029FF8U)	/* Message Object 127 Arbitration Register */
#define CAN_MODATAL0	(*( CAN_MODATAL0_type *) 0xF0019010U)	/* Message Object 0 Data Register Low */
#define CAN_MODATAL1	(*( CAN_MODATAL0_type *) 0xF0019030U)	/* Message Object 1 Data Register Low */
#define CAN_MODATAL2	(*( CAN_MODATAL0_type *) 0xF0019050U)	/* Message Object 2 Data Register Low */
#define CAN_MODATAL3	(*( CAN_MODATAL0_type *) 0xF0019070U)	/* Message Object 3 Data Register Low */
#define CAN_MODATAL4	(*( CAN_MODATAL0_type *) 0xF0019090U)	/* Message Object 4 Data Register Low */
#define CAN_MODATAL5	(*( CAN_MODATAL0_type *) 0xF00190B0U)	/* Message Object 5 Data Register Low */
#define CAN_MODATAL6	(*( CAN_MODATAL0_type *) 0xF00190D0U)	/* Message Object 6 Data Register Low */
#define CAN_MODATAL7	(*( CAN_MODATAL0_type *) 0xF00190F0U)	/* Message Object 7 Data Register Low */
#define CAN_MODATAL8	(*( CAN_MODATAL0_type *) 0xF0019110U)	/* Message Object 8 Data Register Low */
#define CAN_MODATAL9	(*( CAN_MODATAL0_type *) 0xF0019130U)	/* Message Object 9 Data Register Low */
#define CAN_MODATAL10	(*( CAN_MODATAL0_type *) 0xF0019150U)	/* Message Object 10 Data Register Low */
#define CAN_MODATAL11	(*( CAN_MODATAL0_type *) 0xF0019170U)	/* Message Object 11 Data Register Low */
#define CAN_MODATAL12	(*( CAN_MODATAL0_type *) 0xF0019190U)	/* Message Object 12 Data Register Low */
#define CAN_MODATAL13	(*( CAN_MODATAL0_type *) 0xF00191B0U)	/* Message Object 13 Data Register Low */
#define CAN_MODATAL14	(*( CAN_MODATAL0_type *) 0xF00191D0U)	/* Message Object 14 Data Register Low */
#define CAN_MODATAL15	(*( CAN_MODATAL0_type *) 0xF00191F0U)	/* Message Object 15 Data Register Low */
#define CAN_MODATAL16	(*( CAN_MODATAL0_type *) 0xF0019210U)	/* Message Object 16 Data Register Low */
#define CAN_MODATAL17	(*( CAN_MODATAL0_type *) 0xF0019230U)	/* Message Object 17 Data Register Low */
#define CAN_MODATAL18	(*( CAN_MODATAL0_type *) 0xF0019250U)	/* Message Object 18 Data Register Low */
#define CAN_MODATAL19	(*( CAN_MODATAL0_type *) 0xF0019270U)	/* Message Object 19 Data Register Low */
#define CAN_MODATAL20	(*( CAN_MODATAL0_type *) 0xF0019290U)	/* Message Object 20 Data Register Low */
#define CAN_MODATAL21	(*( CAN_MODATAL0_type *) 0xF00192B0U)	/* Message Object 21 Data Register Low */
#define CAN_MODATAL22	(*( CAN_MODATAL0_type *) 0xF00192D0U)	/* Message Object 22 Data Register Low */
#define CAN_MODATAL23	(*( CAN_MODATAL0_type *) 0xF00192F0U)	/* Message Object 23 Data Register Low */
#define CAN_MODATAL24	(*( CAN_MODATAL0_type *) 0xF0019310U)	/* Message Object 24 Data Register Low */
#define CAN_MODATAL25	(*( CAN_MODATAL0_type *) 0xF0019330U)	/* Message Object 25 Data Register Low */
#define CAN_MODATAL26	(*( CAN_MODATAL0_type *) 0xF0019350U)	/* Message Object 26 Data Register Low */
#define CAN_MODATAL27	(*( CAN_MODATAL0_type *) 0xF0019370U)	/* Message Object 27 Data Register Low */
#define CAN_MODATAL28	(*( CAN_MODATAL0_type *) 0xF0019390U)	/* Message Object 28 Data Register Low */
#define CAN_MODATAL29	(*( CAN_MODATAL0_type *) 0xF00193B0U)	/* Message Object 29 Data Register Low */
#define CAN_MODATAL30	(*( CAN_MODATAL0_type *) 0xF00193D0U)	/* Message Object 30 Data Register Low */
#define CAN_MODATAL31	(*( CAN_MODATAL0_type *) 0xF00193F0U)	/* Message Object 31 Data Register Low */
#define CAN_MODATAL32	(*( CAN_MODATAL0_type *) 0xF0019410U)	/* Message Object 32 Data Register Low */
#define CAN_MODATAL33	(*( CAN_MODATAL0_type *) 0xF0019430U)	/* Message Object 33 Data Register Low */
#define CAN_MODATAL34	(*( CAN_MODATAL0_type *) 0xF0019450U)	/* Message Object 34 Data Register Low */
#define CAN_MODATAL35	(*( CAN_MODATAL0_type *) 0xF0019470U)	/* Message Object 35 Data Register Low */
#define CAN_MODATAL36	(*( CAN_MODATAL0_type *) 0xF0019490U)	/* Message Object 36 Data Register Low */
#define CAN_MODATAL37	(*( CAN_MODATAL0_type *) 0xF00194B0U)	/* Message Object 37 Data Register Low */
#define CAN_MODATAL38	(*( CAN_MODATAL0_type *) 0xF00194D0U)	/* Message Object 38 Data Register Low */
#define CAN_MODATAL39	(*( CAN_MODATAL0_type *) 0xF00194F0U)	/* Message Object 39 Data Register Low */
#define CAN_MODATAL40	(*( CAN_MODATAL0_type *) 0xF0019510U)	/* Message Object 40 Data Register Low */
#define CAN_MODATAL41	(*( CAN_MODATAL0_type *) 0xF0019530U)	/* Message Object 41 Data Register Low */
#define CAN_MODATAL42	(*( CAN_MODATAL0_type *) 0xF0019550U)	/* Message Object 42 Data Register Low */
#define CAN_MODATAL43	(*( CAN_MODATAL0_type *) 0xF0019570U)	/* Message Object 43 Data Register Low */
#define CAN_MODATAL44	(*( CAN_MODATAL0_type *) 0xF0019590U)	/* Message Object 44 Data Register Low */
#define CAN_MODATAL45	(*( CAN_MODATAL0_type *) 0xF00195B0U)	/* Message Object 45 Data Register Low */
#define CAN_MODATAL46	(*( CAN_MODATAL0_type *) 0xF00195D0U)	/* Message Object 46 Data Register Low */
#define CAN_MODATAL47	(*( CAN_MODATAL0_type *) 0xF00195F0U)	/* Message Object 47 Data Register Low */
#define CAN_MODATAL48	(*( CAN_MODATAL0_type *) 0xF0019610U)	/* Message Object 48 Data Register Low */
#define CAN_MODATAL49	(*( CAN_MODATAL0_type *) 0xF0019630U)	/* Message Object 49 Data Register Low */
#define CAN_MODATAL50	(*( CAN_MODATAL0_type *) 0xF0019650U)	/* Message Object 50 Data Register Low */
#define CAN_MODATAL51	(*( CAN_MODATAL0_type *) 0xF0019670U)	/* Message Object 51 Data Register Low */
#define CAN_MODATAL52	(*( CAN_MODATAL0_type *) 0xF0019690U)	/* Message Object 52 Data Register Low */
#define CAN_MODATAL53	(*( CAN_MODATAL0_type *) 0xF00196B0U)	/* Message Object 53 Data Register Low */
#define CAN_MODATAL54	(*( CAN_MODATAL0_type *) 0xF00196D0U)	/* Message Object 54 Data Register Low */
#define CAN_MODATAL55	(*( CAN_MODATAL0_type *) 0xF00196F0U)	/* Message Object 55 Data Register Low */
#define CAN_MODATAL56	(*( CAN_MODATAL0_type *) 0xF0019710U)	/* Message Object 56 Data Register Low */
#define CAN_MODATAL57	(*( CAN_MODATAL0_type *) 0xF0019730U)	/* Message Object 57 Data Register Low */
#define CAN_MODATAL58	(*( CAN_MODATAL0_type *) 0xF0019750U)	/* Message Object 58 Data Register Low */
#define CAN_MODATAL59	(*( CAN_MODATAL0_type *) 0xF0019770U)	/* Message Object 59 Data Register Low */
#define CAN_MODATAL60	(*( CAN_MODATAL0_type *) 0xF0019790U)	/* Message Object 60 Data Register Low */
#define CAN_MODATAL61	(*( CAN_MODATAL0_type *) 0xF00197B0U)	/* Message Object 61 Data Register Low */
#define CAN_MODATAL62	(*( CAN_MODATAL0_type *) 0xF00197D0U)	/* Message Object 62 Data Register Low */
#define CAN_MODATAL63	(*( CAN_MODATAL0_type *) 0xF00197F0U)	/* Message Object 63 Data Register Low */
#define CAN_MODATAL64	(*( CAN_MODATAL0_type *) 0xF0019810U)	/* Message Object 64 Data Register Low */
#define CAN_MODATAL65	(*( CAN_MODATAL0_type *) 0xF0019830U)	/* Message Object 65 Data Register Low */
#define CAN_MODATAL66	(*( CAN_MODATAL0_type *) 0xF0019850U)	/* Message Object 66 Data Register Low */
#define CAN_MODATAL67	(*( CAN_MODATAL0_type *) 0xF0019870U)	/* Message Object 67 Data Register Low */
#define CAN_MODATAL68	(*( CAN_MODATAL0_type *) 0xF0019890U)	/* Message Object 68 Data Register Low */
#define CAN_MODATAL69	(*( CAN_MODATAL0_type *) 0xF00198B0U)	/* Message Object 69 Data Register Low */
#define CAN_MODATAL70	(*( CAN_MODATAL0_type *) 0xF00198D0U)	/* Message Object 70 Data Register Low */
#define CAN_MODATAL71	(*( CAN_MODATAL0_type *) 0xF00198F0U)	/* Message Object 71 Data Register Low */
#define CAN_MODATAL72	(*( CAN_MODATAL0_type *) 0xF0019910U)	/* Message Object 72 Data Register Low */
#define CAN_MODATAL73	(*( CAN_MODATAL0_type *) 0xF0019930U)	/* Message Object 73 Data Register Low */
#define CAN_MODATAL74	(*( CAN_MODATAL0_type *) 0xF0019950U)	/* Message Object 74 Data Register Low */
#define CAN_MODATAL75	(*( CAN_MODATAL0_type *) 0xF0019970U)	/* Message Object 75 Data Register Low */
#define CAN_MODATAL76	(*( CAN_MODATAL0_type *) 0xF0019990U)	/* Message Object 76 Data Register Low */
#define CAN_MODATAL77	(*( CAN_MODATAL0_type *) 0xF00199B0U)	/* Message Object 77 Data Register Low */
#define CAN_MODATAL78	(*( CAN_MODATAL0_type *) 0xF00199D0U)	/* Message Object 78 Data Register Low */
#define CAN_MODATAL79	(*( CAN_MODATAL0_type *) 0xF00199F0U)	/* Message Object 79 Data Register Low */
#define CAN_MODATAL80	(*( CAN_MODATAL0_type *) 0xF0019A10U)	/* Message Object 80 Data Register Low */
#define CAN_MODATAL81	(*( CAN_MODATAL0_type *) 0xF0019A30U)	/* Message Object 81 Data Register Low */
#define CAN_MODATAL82	(*( CAN_MODATAL0_type *) 0xF0019A50U)	/* Message Object 82 Data Register Low */
#define CAN_MODATAL83	(*( CAN_MODATAL0_type *) 0xF0019A70U)	/* Message Object 83 Data Register Low */
#define CAN_MODATAL84	(*( CAN_MODATAL0_type *) 0xF0019A90U)	/* Message Object 84 Data Register Low */
#define CAN_MODATAL85	(*( CAN_MODATAL0_type *) 0xF0019AB0U)	/* Message Object 85 Data Register Low */
#define CAN_MODATAL86	(*( CAN_MODATAL0_type *) 0xF0019AD0U)	/* Message Object 86 Data Register Low */
#define CAN_MODATAL87	(*( CAN_MODATAL0_type *) 0xF0019AF0U)	/* Message Object 87 Data Register Low */
#define CAN_MODATAL88	(*( CAN_MODATAL0_type *) 0xF0019B10U)	/* Message Object 88 Data Register Low */
#define CAN_MODATAL89	(*( CAN_MODATAL0_type *) 0xF0019B30U)	/* Message Object 89 Data Register Low */
#define CAN_MODATAL90	(*( CAN_MODATAL0_type *) 0xF0019B50U)	/* Message Object 90 Data Register Low */
#define CAN_MODATAL91	(*( CAN_MODATAL0_type *) 0xF0019B70U)	/* Message Object 91 Data Register Low */
#define CAN_MODATAL92	(*( CAN_MODATAL0_type *) 0xF0019B90U)	/* Message Object 92 Data Register Low */
#define CAN_MODATAL93	(*( CAN_MODATAL0_type *) 0xF0019BB0U)	/* Message Object 93 Data Register Low */
#define CAN_MODATAL94	(*( CAN_MODATAL0_type *) 0xF0019BD0U)	/* Message Object 94 Data Register Low */
#define CAN_MODATAL95	(*( CAN_MODATAL0_type *) 0xF0019BF0U)	/* Message Object 95 Data Register Low */
#define CAN_MODATAL96	(*( CAN_MODATAL0_type *) 0xF0019C10U)	/* Message Object 96 Data Register Low */
#define CAN_MODATAL97	(*( CAN_MODATAL0_type *) 0xF0019C30U)	/* Message Object 97 Data Register Low */
#define CAN_MODATAL98	(*( CAN_MODATAL0_type *) 0xF0019C50U)	/* Message Object 98 Data Register Low */
#define CAN_MODATAL99	(*( CAN_MODATAL0_type *) 0xF0019C70U)	/* Message Object 99 Data Register Low */
#define CAN_MODATAL100	(*( CAN_MODATAL0_type *) 0xF0019C90U)	/* Message Object 100 Data Register Low */
#define CAN_MODATAL101	(*( CAN_MODATAL0_type *) 0xF0019CB0U)	/* Message Object 101 Data Register Low */
#define CAN_MODATAL102	(*( CAN_MODATAL0_type *) 0xF0019CD0U)	/* Message Object 102 Data Register Low */
#define CAN_MODATAL103	(*( CAN_MODATAL0_type *) 0xF0019CF0U)	/* Message Object 103 Data Register Low */
#define CAN_MODATAL104	(*( CAN_MODATAL0_type *) 0xF0019D10U)	/* Message Object 104 Data Register Low */
#define CAN_MODATAL105	(*( CAN_MODATAL0_type *) 0xF0019D30U)	/* Message Object 105 Data Register Low */
#define CAN_MODATAL106	(*( CAN_MODATAL0_type *) 0xF0019D50U)	/* Message Object 106 Data Register Low */
#define CAN_MODATAL107	(*( CAN_MODATAL0_type *) 0xF0019D70U)	/* Message Object 107 Data Register Low */
#define CAN_MODATAL108	(*( CAN_MODATAL0_type *) 0xF0019D90U)	/* Message Object 108 Data Register Low */
#define CAN_MODATAL109	(*( CAN_MODATAL0_type *) 0xF0019DB0U)	/* Message Object 109 Data Register Low */
#define CAN_MODATAL110	(*( CAN_MODATAL0_type *) 0xF0019DD0U)	/* Message Object 110 Data Register Low */
#define CAN_MODATAL111	(*( CAN_MODATAL0_type *) 0xF0019DF0U)	/* Message Object 111 Data Register Low */
#define CAN_MODATAL112	(*( CAN_MODATAL0_type *) 0xF0019E10U)	/* Message Object 112 Data Register Low */
#define CAN_MODATAL113	(*( CAN_MODATAL0_type *) 0xF0019E30U)	/* Message Object 113 Data Register Low */
#define CAN_MODATAL114	(*( CAN_MODATAL0_type *) 0xF0019E50U)	/* Message Object 114 Data Register Low */
#define CAN_MODATAL115	(*( CAN_MODATAL0_type *) 0xF0019E70U)	/* Message Object 115 Data Register Low */
#define CAN_MODATAL116	(*( CAN_MODATAL0_type *) 0xF0019E90U)	/* Message Object 116 Data Register Low */
#define CAN_MODATAL117	(*( CAN_MODATAL0_type *) 0xF0019EB0U)	/* Message Object 117 Data Register Low */
#define CAN_MODATAL118	(*( CAN_MODATAL0_type *) 0xF0019ED0U)	/* Message Object 118 Data Register Low */
#define CAN_MODATAL119	(*( CAN_MODATAL0_type *) 0xF0019EF0U)	/* Message Object 119 Data Register Low */
#define CAN_MODATAL120	(*( CAN_MODATAL0_type *) 0xF0019F10U)	/* Message Object 120 Data Register Low */
#define CAN_MODATAL121	(*( CAN_MODATAL0_type *) 0xF0019F30U)	/* Message Object 121 Data Register Low */
#define CAN_MODATAL122	(*( CAN_MODATAL0_type *) 0xF0019F50U)	/* Message Object 122 Data Register Low */
#define CAN_MODATAL123	(*( CAN_MODATAL0_type *) 0xF0019F70U)	/* Message Object 123 Data Register Low */
#define CAN_MODATAL124	(*( CAN_MODATAL0_type *) 0xF0019F90U)	/* Message Object 124 Data Register Low */
#define CAN_MODATAL125	(*( CAN_MODATAL0_type *) 0xF0019FB0U)	/* Message Object 125 Data Register Low */
#define CAN_MODATAL126	(*( CAN_MODATAL0_type *) 0xF0019FD0U)	/* Message Object 126 Data Register Low */
#define CAN_MODATAL127	(*( CAN_MODATAL0_type *) 0xF0019FF0U)	/* Message Object 127 Data Register Low */
#define CAN1_MODATAL0	(*( CAN_MODATAL0_type *) 0xF0029010U)	/* Message Object 0 Data Register Low */
#define CAN1_MODATAL1	(*( CAN_MODATAL0_type *) 0xF0029030U)	/* Message Object 1 Data Register Low */
#define CAN1_MODATAL2	(*( CAN_MODATAL0_type *) 0xF0029050U)	/* Message Object 2 Data Register Low */
#define CAN1_MODATAL3	(*( CAN_MODATAL0_type *) 0xF0029070U)	/* Message Object 3 Data Register Low */
#define CAN1_MODATAL4	(*( CAN_MODATAL0_type *) 0xF0029090U)	/* Message Object 4 Data Register Low */
#define CAN1_MODATAL5	(*( CAN_MODATAL0_type *) 0xF00290B0U)	/* Message Object 5 Data Register Low */
#define CAN1_MODATAL6	(*( CAN_MODATAL0_type *) 0xF00290D0U)	/* Message Object 6 Data Register Low */
#define CAN1_MODATAL7	(*( CAN_MODATAL0_type *) 0xF00290F0U)	/* Message Object 7 Data Register Low */
#define CAN1_MODATAL8	(*( CAN_MODATAL0_type *) 0xF0029110U)	/* Message Object 8 Data Register Low */
#define CAN1_MODATAL9	(*( CAN_MODATAL0_type *) 0xF0029130U)	/* Message Object 9 Data Register Low */
#define CAN1_MODATAL10	(*( CAN_MODATAL0_type *) 0xF0029150U)	/* Message Object 10 Data Register Low */
#define CAN1_MODATAL11	(*( CAN_MODATAL0_type *) 0xF0029170U)	/* Message Object 11 Data Register Low */
#define CAN1_MODATAL12	(*( CAN_MODATAL0_type *) 0xF0029190U)	/* Message Object 12 Data Register Low */
#define CAN1_MODATAL13	(*( CAN_MODATAL0_type *) 0xF00291B0U)	/* Message Object 13 Data Register Low */
#define CAN1_MODATAL14	(*( CAN_MODATAL0_type *) 0xF00291D0U)	/* Message Object 14 Data Register Low */
#define CAN1_MODATAL15	(*( CAN_MODATAL0_type *) 0xF00291F0U)	/* Message Object 15 Data Register Low */
#define CAN1_MODATAL16	(*( CAN_MODATAL0_type *) 0xF0029210U)	/* Message Object 16 Data Register Low */
#define CAN1_MODATAL17	(*( CAN_MODATAL0_type *) 0xF0029230U)	/* Message Object 17 Data Register Low */
#define CAN1_MODATAL18	(*( CAN_MODATAL0_type *) 0xF0029250U)	/* Message Object 18 Data Register Low */
#define CAN1_MODATAL19	(*( CAN_MODATAL0_type *) 0xF0029270U)	/* Message Object 19 Data Register Low */
#define CAN1_MODATAL20	(*( CAN_MODATAL0_type *) 0xF0029290U)	/* Message Object 20 Data Register Low */
#define CAN1_MODATAL21	(*( CAN_MODATAL0_type *) 0xF00292B0U)	/* Message Object 21 Data Register Low */
#define CAN1_MODATAL22	(*( CAN_MODATAL0_type *) 0xF00292D0U)	/* Message Object 22 Data Register Low */
#define CAN1_MODATAL23	(*( CAN_MODATAL0_type *) 0xF00292F0U)	/* Message Object 23 Data Register Low */
#define CAN1_MODATAL24	(*( CAN_MODATAL0_type *) 0xF0029310U)	/* Message Object 24 Data Register Low */
#define CAN1_MODATAL25	(*( CAN_MODATAL0_type *) 0xF0029330U)	/* Message Object 25 Data Register Low */
#define CAN1_MODATAL26	(*( CAN_MODATAL0_type *) 0xF0029350U)	/* Message Object 26 Data Register Low */
#define CAN1_MODATAL27	(*( CAN_MODATAL0_type *) 0xF0029370U)	/* Message Object 27 Data Register Low */
#define CAN1_MODATAL28	(*( CAN_MODATAL0_type *) 0xF0029390U)	/* Message Object 28 Data Register Low */
#define CAN1_MODATAL29	(*( CAN_MODATAL0_type *) 0xF00293B0U)	/* Message Object 29 Data Register Low */
#define CAN1_MODATAL30	(*( CAN_MODATAL0_type *) 0xF00293D0U)	/* Message Object 30 Data Register Low */
#define CAN1_MODATAL31	(*( CAN_MODATAL0_type *) 0xF00293F0U)	/* Message Object 31 Data Register Low */
#define CAN1_MODATAL32	(*( CAN_MODATAL0_type *) 0xF0029410U)	/* Message Object 32 Data Register Low */
#define CAN1_MODATAL33	(*( CAN_MODATAL0_type *) 0xF0029430U)	/* Message Object 33 Data Register Low */
#define CAN1_MODATAL34	(*( CAN_MODATAL0_type *) 0xF0029450U)	/* Message Object 34 Data Register Low */
#define CAN1_MODATAL35	(*( CAN_MODATAL0_type *) 0xF0029470U)	/* Message Object 35 Data Register Low */
#define CAN1_MODATAL36	(*( CAN_MODATAL0_type *) 0xF0029490U)	/* Message Object 36 Data Register Low */
#define CAN1_MODATAL37	(*( CAN_MODATAL0_type *) 0xF00294B0U)	/* Message Object 37 Data Register Low */
#define CAN1_MODATAL38	(*( CAN_MODATAL0_type *) 0xF00294D0U)	/* Message Object 38 Data Register Low */
#define CAN1_MODATAL39	(*( CAN_MODATAL0_type *) 0xF00294F0U)	/* Message Object 39 Data Register Low */
#define CAN1_MODATAL40	(*( CAN_MODATAL0_type *) 0xF0029510U)	/* Message Object 40 Data Register Low */
#define CAN1_MODATAL41	(*( CAN_MODATAL0_type *) 0xF0029530U)	/* Message Object 41 Data Register Low */
#define CAN1_MODATAL42	(*( CAN_MODATAL0_type *) 0xF0029550U)	/* Message Object 42 Data Register Low */
#define CAN1_MODATAL43	(*( CAN_MODATAL0_type *) 0xF0029570U)	/* Message Object 43 Data Register Low */
#define CAN1_MODATAL44	(*( CAN_MODATAL0_type *) 0xF0029590U)	/* Message Object 44 Data Register Low */
#define CAN1_MODATAL45	(*( CAN_MODATAL0_type *) 0xF00295B0U)	/* Message Object 45 Data Register Low */
#define CAN1_MODATAL46	(*( CAN_MODATAL0_type *) 0xF00295D0U)	/* Message Object 46 Data Register Low */
#define CAN1_MODATAL47	(*( CAN_MODATAL0_type *) 0xF00295F0U)	/* Message Object 47 Data Register Low */
#define CAN1_MODATAL48	(*( CAN_MODATAL0_type *) 0xF0029610U)	/* Message Object 48 Data Register Low */
#define CAN1_MODATAL49	(*( CAN_MODATAL0_type *) 0xF0029630U)	/* Message Object 49 Data Register Low */
#define CAN1_MODATAL50	(*( CAN_MODATAL0_type *) 0xF0029650U)	/* Message Object 50 Data Register Low */
#define CAN1_MODATAL51	(*( CAN_MODATAL0_type *) 0xF0029670U)	/* Message Object 51 Data Register Low */
#define CAN1_MODATAL52	(*( CAN_MODATAL0_type *) 0xF0029690U)	/* Message Object 52 Data Register Low */
#define CAN1_MODATAL53	(*( CAN_MODATAL0_type *) 0xF00296B0U)	/* Message Object 53 Data Register Low */
#define CAN1_MODATAL54	(*( CAN_MODATAL0_type *) 0xF00296D0U)	/* Message Object 54 Data Register Low */
#define CAN1_MODATAL55	(*( CAN_MODATAL0_type *) 0xF00296F0U)	/* Message Object 55 Data Register Low */
#define CAN1_MODATAL56	(*( CAN_MODATAL0_type *) 0xF0029710U)	/* Message Object 56 Data Register Low */
#define CAN1_MODATAL57	(*( CAN_MODATAL0_type *) 0xF0029730U)	/* Message Object 57 Data Register Low */
#define CAN1_MODATAL58	(*( CAN_MODATAL0_type *) 0xF0029750U)	/* Message Object 58 Data Register Low */
#define CAN1_MODATAL59	(*( CAN_MODATAL0_type *) 0xF0029770U)	/* Message Object 59 Data Register Low */
#define CAN1_MODATAL60	(*( CAN_MODATAL0_type *) 0xF0029790U)	/* Message Object 60 Data Register Low */
#define CAN1_MODATAL61	(*( CAN_MODATAL0_type *) 0xF00297B0U)	/* Message Object 61 Data Register Low */
#define CAN1_MODATAL62	(*( CAN_MODATAL0_type *) 0xF00297D0U)	/* Message Object 62 Data Register Low */
#define CAN1_MODATAL63	(*( CAN_MODATAL0_type *) 0xF00297F0U)	/* Message Object 63 Data Register Low */
#define CAN1_MODATAL64	(*( CAN_MODATAL0_type *) 0xF0029810U)	/* Message Object 64 Data Register Low */
#define CAN1_MODATAL65	(*( CAN_MODATAL0_type *) 0xF0029830U)	/* Message Object 65 Data Register Low */
#define CAN1_MODATAL66	(*( CAN_MODATAL0_type *) 0xF0029850U)	/* Message Object 66 Data Register Low */
#define CAN1_MODATAL67	(*( CAN_MODATAL0_type *) 0xF0029870U)	/* Message Object 67 Data Register Low */
#define CAN1_MODATAL68	(*( CAN_MODATAL0_type *) 0xF0029890U)	/* Message Object 68 Data Register Low */
#define CAN1_MODATAL69	(*( CAN_MODATAL0_type *) 0xF00298B0U)	/* Message Object 69 Data Register Low */
#define CAN1_MODATAL70	(*( CAN_MODATAL0_type *) 0xF00298D0U)	/* Message Object 70 Data Register Low */
#define CAN1_MODATAL71	(*( CAN_MODATAL0_type *) 0xF00298F0U)	/* Message Object 71 Data Register Low */
#define CAN1_MODATAL72	(*( CAN_MODATAL0_type *) 0xF0029910U)	/* Message Object 72 Data Register Low */
#define CAN1_MODATAL73	(*( CAN_MODATAL0_type *) 0xF0029930U)	/* Message Object 73 Data Register Low */
#define CAN1_MODATAL74	(*( CAN_MODATAL0_type *) 0xF0029950U)	/* Message Object 74 Data Register Low */
#define CAN1_MODATAL75	(*( CAN_MODATAL0_type *) 0xF0029970U)	/* Message Object 75 Data Register Low */
#define CAN1_MODATAL76	(*( CAN_MODATAL0_type *) 0xF0029990U)	/* Message Object 76 Data Register Low */
#define CAN1_MODATAL77	(*( CAN_MODATAL0_type *) 0xF00299B0U)	/* Message Object 77 Data Register Low */
#define CAN1_MODATAL78	(*( CAN_MODATAL0_type *) 0xF00299D0U)	/* Message Object 78 Data Register Low */
#define CAN1_MODATAL79	(*( CAN_MODATAL0_type *) 0xF00299F0U)	/* Message Object 79 Data Register Low */
#define CAN1_MODATAL80	(*( CAN_MODATAL0_type *) 0xF0029A10U)	/* Message Object 80 Data Register Low */
#define CAN1_MODATAL81	(*( CAN_MODATAL0_type *) 0xF0029A30U)	/* Message Object 81 Data Register Low */
#define CAN1_MODATAL82	(*( CAN_MODATAL0_type *) 0xF0029A50U)	/* Message Object 82 Data Register Low */
#define CAN1_MODATAL83	(*( CAN_MODATAL0_type *) 0xF0029A70U)	/* Message Object 83 Data Register Low */
#define CAN1_MODATAL84	(*( CAN_MODATAL0_type *) 0xF0029A90U)	/* Message Object 84 Data Register Low */
#define CAN1_MODATAL85	(*( CAN_MODATAL0_type *) 0xF0029AB0U)	/* Message Object 85 Data Register Low */
#define CAN1_MODATAL86	(*( CAN_MODATAL0_type *) 0xF0029AD0U)	/* Message Object 86 Data Register Low */
#define CAN1_MODATAL87	(*( CAN_MODATAL0_type *) 0xF0029AF0U)	/* Message Object 87 Data Register Low */
#define CAN1_MODATAL88	(*( CAN_MODATAL0_type *) 0xF0029B10U)	/* Message Object 88 Data Register Low */
#define CAN1_MODATAL89	(*( CAN_MODATAL0_type *) 0xF0029B30U)	/* Message Object 89 Data Register Low */
#define CAN1_MODATAL90	(*( CAN_MODATAL0_type *) 0xF0029B50U)	/* Message Object 90 Data Register Low */
#define CAN1_MODATAL91	(*( CAN_MODATAL0_type *) 0xF0029B70U)	/* Message Object 91 Data Register Low */
#define CAN1_MODATAL92	(*( CAN_MODATAL0_type *) 0xF0029B90U)	/* Message Object 92 Data Register Low */
#define CAN1_MODATAL93	(*( CAN_MODATAL0_type *) 0xF0029BB0U)	/* Message Object 93 Data Register Low */
#define CAN1_MODATAL94	(*( CAN_MODATAL0_type *) 0xF0029BD0U)	/* Message Object 94 Data Register Low */
#define CAN1_MODATAL95	(*( CAN_MODATAL0_type *) 0xF0029BF0U)	/* Message Object 95 Data Register Low */
#define CAN1_MODATAL96	(*( CAN_MODATAL0_type *) 0xF0029C10U)	/* Message Object 96 Data Register Low */
#define CAN1_MODATAL97	(*( CAN_MODATAL0_type *) 0xF0029C30U)	/* Message Object 97 Data Register Low */
#define CAN1_MODATAL98	(*( CAN_MODATAL0_type *) 0xF0029C50U)	/* Message Object 98 Data Register Low */
#define CAN1_MODATAL99	(*( CAN_MODATAL0_type *) 0xF0029C70U)	/* Message Object 99 Data Register Low */
#define CAN1_MODATAL100	(*( CAN_MODATAL0_type *) 0xF0029C90U)	/* Message Object 100 Data Register Low */
#define CAN1_MODATAL101	(*( CAN_MODATAL0_type *) 0xF0029CB0U)	/* Message Object 101 Data Register Low */
#define CAN1_MODATAL102	(*( CAN_MODATAL0_type *) 0xF0029CD0U)	/* Message Object 102 Data Register Low */
#define CAN1_MODATAL103	(*( CAN_MODATAL0_type *) 0xF0029CF0U)	/* Message Object 103 Data Register Low */
#define CAN1_MODATAL104	(*( CAN_MODATAL0_type *) 0xF0029D10U)	/* Message Object 104 Data Register Low */
#define CAN1_MODATAL105	(*( CAN_MODATAL0_type *) 0xF0029D30U)	/* Message Object 105 Data Register Low */
#define CAN1_MODATAL106	(*( CAN_MODATAL0_type *) 0xF0029D50U)	/* Message Object 106 Data Register Low */
#define CAN1_MODATAL107	(*( CAN_MODATAL0_type *) 0xF0029D70U)	/* Message Object 107 Data Register Low */
#define CAN1_MODATAL108	(*( CAN_MODATAL0_type *) 0xF0029D90U)	/* Message Object 108 Data Register Low */
#define CAN1_MODATAL109	(*( CAN_MODATAL0_type *) 0xF0029DB0U)	/* Message Object 109 Data Register Low */
#define CAN1_MODATAL110	(*( CAN_MODATAL0_type *) 0xF0029DD0U)	/* Message Object 110 Data Register Low */
#define CAN1_MODATAL111	(*( CAN_MODATAL0_type *) 0xF0029DF0U)	/* Message Object 111 Data Register Low */
#define CAN1_MODATAL112	(*( CAN_MODATAL0_type *) 0xF0029E10U)	/* Message Object 112 Data Register Low */
#define CAN1_MODATAL113	(*( CAN_MODATAL0_type *) 0xF0029E30U)	/* Message Object 113 Data Register Low */
#define CAN1_MODATAL114	(*( CAN_MODATAL0_type *) 0xF0029E50U)	/* Message Object 114 Data Register Low */
#define CAN1_MODATAL115	(*( CAN_MODATAL0_type *) 0xF0029E70U)	/* Message Object 115 Data Register Low */
#define CAN1_MODATAL116	(*( CAN_MODATAL0_type *) 0xF0029E90U)	/* Message Object 116 Data Register Low */
#define CAN1_MODATAL117	(*( CAN_MODATAL0_type *) 0xF0029EB0U)	/* Message Object 117 Data Register Low */
#define CAN1_MODATAL118	(*( CAN_MODATAL0_type *) 0xF0029ED0U)	/* Message Object 118 Data Register Low */
#define CAN1_MODATAL119	(*( CAN_MODATAL0_type *) 0xF0029EF0U)	/* Message Object 119 Data Register Low */
#define CAN1_MODATAL120	(*( CAN_MODATAL0_type *) 0xF0029F10U)	/* Message Object 120 Data Register Low */
#define CAN1_MODATAL121	(*( CAN_MODATAL0_type *) 0xF0029F30U)	/* Message Object 121 Data Register Low */
#define CAN1_MODATAL122	(*( CAN_MODATAL0_type *) 0xF0029F50U)	/* Message Object 122 Data Register Low */
#define CAN1_MODATAL123	(*( CAN_MODATAL0_type *) 0xF0029F70U)	/* Message Object 123 Data Register Low */
#define CAN1_MODATAL124	(*( CAN_MODATAL0_type *) 0xF0029F90U)	/* Message Object 124 Data Register Low */
#define CAN1_MODATAL125	(*( CAN_MODATAL0_type *) 0xF0029FB0U)	/* Message Object 125 Data Register Low */
#define CAN1_MODATAL126	(*( CAN_MODATAL0_type *) 0xF0029FD0U)	/* Message Object 126 Data Register Low */
#define CAN1_MODATAL127	(*( CAN_MODATAL0_type *) 0xF0029FF0U)	/* Message Object 127 Data Register Low */
#define CAN_MODATAH0	(*( CAN_MODATAH0_type *) 0xF0019014U)	/* Message Object 0 Data Register High */
#define CAN_MODATAH1	(*( CAN_MODATAH0_type *) 0xF0019034U)	/* Message Object 1 Data Register High */
#define CAN_MODATAH2	(*( CAN_MODATAH0_type *) 0xF0019054U)	/* Message Object 2 Data Register High */
#define CAN_MODATAH3	(*( CAN_MODATAH0_type *) 0xF0019074U)	/* Message Object 3 Data Register High */
#define CAN_MODATAH4	(*( CAN_MODATAH0_type *) 0xF0019094U)	/* Message Object 4 Data Register High */
#define CAN_MODATAH5	(*( CAN_MODATAH0_type *) 0xF00190B4U)	/* Message Object 5 Data Register High */
#define CAN_MODATAH6	(*( CAN_MODATAH0_type *) 0xF00190D4U)	/* Message Object 6 Data Register High */
#define CAN_MODATAH7	(*( CAN_MODATAH0_type *) 0xF00190F4U)	/* Message Object 7 Data Register High */
#define CAN_MODATAH8	(*( CAN_MODATAH0_type *) 0xF0019114U)	/* Message Object 8 Data Register High */
#define CAN_MODATAH9	(*( CAN_MODATAH0_type *) 0xF0019134U)	/* Message Object 9 Data Register High */
#define CAN_MODATAH10	(*( CAN_MODATAH0_type *) 0xF0019154U)	/* Message Object 10 Data Register High */
#define CAN_MODATAH11	(*( CAN_MODATAH0_type *) 0xF0019174U)	/* Message Object 11 Data Register High */
#define CAN_MODATAH12	(*( CAN_MODATAH0_type *) 0xF0019194U)	/* Message Object 12 Data Register High */
#define CAN_MODATAH13	(*( CAN_MODATAH0_type *) 0xF00191B4U)	/* Message Object 13 Data Register High */
#define CAN_MODATAH14	(*( CAN_MODATAH0_type *) 0xF00191D4U)	/* Message Object 14 Data Register High */
#define CAN_MODATAH15	(*( CAN_MODATAH0_type *) 0xF00191F4U)	/* Message Object 15 Data Register High */
#define CAN_MODATAH16	(*( CAN_MODATAH0_type *) 0xF0019214U)	/* Message Object 16 Data Register High */
#define CAN_MODATAH17	(*( CAN_MODATAH0_type *) 0xF0019234U)	/* Message Object 17 Data Register High */
#define CAN_MODATAH18	(*( CAN_MODATAH0_type *) 0xF0019254U)	/* Message Object 18 Data Register High */
#define CAN_MODATAH19	(*( CAN_MODATAH0_type *) 0xF0019274U)	/* Message Object 19 Data Register High */
#define CAN_MODATAH20	(*( CAN_MODATAH0_type *) 0xF0019294U)	/* Message Object 20 Data Register High */
#define CAN_MODATAH21	(*( CAN_MODATAH0_type *) 0xF00192B4U)	/* Message Object 21 Data Register High */
#define CAN_MODATAH22	(*( CAN_MODATAH0_type *) 0xF00192D4U)	/* Message Object 22 Data Register High */
#define CAN_MODATAH23	(*( CAN_MODATAH0_type *) 0xF00192F4U)	/* Message Object 23 Data Register High */
#define CAN_MODATAH24	(*( CAN_MODATAH0_type *) 0xF0019314U)	/* Message Object 24 Data Register High */
#define CAN_MODATAH25	(*( CAN_MODATAH0_type *) 0xF0019334U)	/* Message Object 25 Data Register High */
#define CAN_MODATAH26	(*( CAN_MODATAH0_type *) 0xF0019354U)	/* Message Object 26 Data Register High */
#define CAN_MODATAH27	(*( CAN_MODATAH0_type *) 0xF0019374U)	/* Message Object 27 Data Register High */
#define CAN_MODATAH28	(*( CAN_MODATAH0_type *) 0xF0019394U)	/* Message Object 28 Data Register High */
#define CAN_MODATAH29	(*( CAN_MODATAH0_type *) 0xF00193B4U)	/* Message Object 29 Data Register High */
#define CAN_MODATAH30	(*( CAN_MODATAH0_type *) 0xF00193D4U)	/* Message Object 30 Data Register High */
#define CAN_MODATAH31	(*( CAN_MODATAH0_type *) 0xF00193F4U)	/* Message Object 31 Data Register High */
#define CAN_MODATAH32	(*( CAN_MODATAH0_type *) 0xF0019414U)	/* Message Object 32 Data Register High */
#define CAN_MODATAH33	(*( CAN_MODATAH0_type *) 0xF0019434U)	/* Message Object 33 Data Register High */
#define CAN_MODATAH34	(*( CAN_MODATAH0_type *) 0xF0019454U)	/* Message Object 34 Data Register High */
#define CAN_MODATAH35	(*( CAN_MODATAH0_type *) 0xF0019474U)	/* Message Object 35 Data Register High */
#define CAN_MODATAH36	(*( CAN_MODATAH0_type *) 0xF0019494U)	/* Message Object 36 Data Register High */
#define CAN_MODATAH37	(*( CAN_MODATAH0_type *) 0xF00194B4U)	/* Message Object 37 Data Register High */
#define CAN_MODATAH38	(*( CAN_MODATAH0_type *) 0xF00194D4U)	/* Message Object 38 Data Register High */
#define CAN_MODATAH39	(*( CAN_MODATAH0_type *) 0xF00194F4U)	/* Message Object 39 Data Register High */
#define CAN_MODATAH40	(*( CAN_MODATAH0_type *) 0xF0019514U)	/* Message Object 40 Data Register High */
#define CAN_MODATAH41	(*( CAN_MODATAH0_type *) 0xF0019534U)	/* Message Object 41 Data Register High */
#define CAN_MODATAH42	(*( CAN_MODATAH0_type *) 0xF0019554U)	/* Message Object 42 Data Register High */
#define CAN_MODATAH43	(*( CAN_MODATAH0_type *) 0xF0019574U)	/* Message Object 43 Data Register High */
#define CAN_MODATAH44	(*( CAN_MODATAH0_type *) 0xF0019594U)	/* Message Object 44 Data Register High */
#define CAN_MODATAH45	(*( CAN_MODATAH0_type *) 0xF00195B4U)	/* Message Object 45 Data Register High */
#define CAN_MODATAH46	(*( CAN_MODATAH0_type *) 0xF00195D4U)	/* Message Object 46 Data Register High */
#define CAN_MODATAH47	(*( CAN_MODATAH0_type *) 0xF00195F4U)	/* Message Object 47 Data Register High */
#define CAN_MODATAH48	(*( CAN_MODATAH0_type *) 0xF0019614U)	/* Message Object 48 Data Register High */
#define CAN_MODATAH49	(*( CAN_MODATAH0_type *) 0xF0019634U)	/* Message Object 49 Data Register High */
#define CAN_MODATAH50	(*( CAN_MODATAH0_type *) 0xF0019654U)	/* Message Object 50 Data Register High */
#define CAN_MODATAH51	(*( CAN_MODATAH0_type *) 0xF0019674U)	/* Message Object 51 Data Register High */
#define CAN_MODATAH52	(*( CAN_MODATAH0_type *) 0xF0019694U)	/* Message Object 52 Data Register High */
#define CAN_MODATAH53	(*( CAN_MODATAH0_type *) 0xF00196B4U)	/* Message Object 53 Data Register High */
#define CAN_MODATAH54	(*( CAN_MODATAH0_type *) 0xF00196D4U)	/* Message Object 54 Data Register High */
#define CAN_MODATAH55	(*( CAN_MODATAH0_type *) 0xF00196F4U)	/* Message Object 55 Data Register High */
#define CAN_MODATAH56	(*( CAN_MODATAH0_type *) 0xF0019714U)	/* Message Object 56 Data Register High */
#define CAN_MODATAH57	(*( CAN_MODATAH0_type *) 0xF0019734U)	/* Message Object 57 Data Register High */
#define CAN_MODATAH58	(*( CAN_MODATAH0_type *) 0xF0019754U)	/* Message Object 58 Data Register High */
#define CAN_MODATAH59	(*( CAN_MODATAH0_type *) 0xF0019774U)	/* Message Object 59 Data Register High */
#define CAN_MODATAH60	(*( CAN_MODATAH0_type *) 0xF0019794U)	/* Message Object 60 Data Register High */
#define CAN_MODATAH61	(*( CAN_MODATAH0_type *) 0xF00197B4U)	/* Message Object 61 Data Register High */
#define CAN_MODATAH62	(*( CAN_MODATAH0_type *) 0xF00197D4U)	/* Message Object 62 Data Register High */
#define CAN_MODATAH63	(*( CAN_MODATAH0_type *) 0xF00197F4U)	/* Message Object 63 Data Register High */
#define CAN_MODATAH64	(*( CAN_MODATAH0_type *) 0xF0019814U)	/* Message Object 64 Data Register High */
#define CAN_MODATAH65	(*( CAN_MODATAH0_type *) 0xF0019834U)	/* Message Object 65 Data Register High */
#define CAN_MODATAH66	(*( CAN_MODATAH0_type *) 0xF0019854U)	/* Message Object 66 Data Register High */
#define CAN_MODATAH67	(*( CAN_MODATAH0_type *) 0xF0019874U)	/* Message Object 67 Data Register High */
#define CAN_MODATAH68	(*( CAN_MODATAH0_type *) 0xF0019894U)	/* Message Object 68 Data Register High */
#define CAN_MODATAH69	(*( CAN_MODATAH0_type *) 0xF00198B4U)	/* Message Object 69 Data Register High */
#define CAN_MODATAH70	(*( CAN_MODATAH0_type *) 0xF00198D4U)	/* Message Object 70 Data Register High */
#define CAN_MODATAH71	(*( CAN_MODATAH0_type *) 0xF00198F4U)	/* Message Object 71 Data Register High */
#define CAN_MODATAH72	(*( CAN_MODATAH0_type *) 0xF0019914U)	/* Message Object 72 Data Register High */
#define CAN_MODATAH73	(*( CAN_MODATAH0_type *) 0xF0019934U)	/* Message Object 73 Data Register High */
#define CAN_MODATAH74	(*( CAN_MODATAH0_type *) 0xF0019954U)	/* Message Object 74 Data Register High */
#define CAN_MODATAH75	(*( CAN_MODATAH0_type *) 0xF0019974U)	/* Message Object 75 Data Register High */
#define CAN_MODATAH76	(*( CAN_MODATAH0_type *) 0xF0019994U)	/* Message Object 76 Data Register High */
#define CAN_MODATAH77	(*( CAN_MODATAH0_type *) 0xF00199B4U)	/* Message Object 77 Data Register High */
#define CAN_MODATAH78	(*( CAN_MODATAH0_type *) 0xF00199D4U)	/* Message Object 78 Data Register High */
#define CAN_MODATAH79	(*( CAN_MODATAH0_type *) 0xF00199F4U)	/* Message Object 79 Data Register High */
#define CAN_MODATAH80	(*( CAN_MODATAH0_type *) 0xF0019A14U)	/* Message Object 80 Data Register High */
#define CAN_MODATAH81	(*( CAN_MODATAH0_type *) 0xF0019A34U)	/* Message Object 81 Data Register High */
#define CAN_MODATAH82	(*( CAN_MODATAH0_type *) 0xF0019A54U)	/* Message Object 82 Data Register High */
#define CAN_MODATAH83	(*( CAN_MODATAH0_type *) 0xF0019A74U)	/* Message Object 83 Data Register High */
#define CAN_MODATAH84	(*( CAN_MODATAH0_type *) 0xF0019A94U)	/* Message Object 84 Data Register High */
#define CAN_MODATAH85	(*( CAN_MODATAH0_type *) 0xF0019AB4U)	/* Message Object 85 Data Register High */
#define CAN_MODATAH86	(*( CAN_MODATAH0_type *) 0xF0019AD4U)	/* Message Object 86 Data Register High */
#define CAN_MODATAH87	(*( CAN_MODATAH0_type *) 0xF0019AF4U)	/* Message Object 87 Data Register High */
#define CAN_MODATAH88	(*( CAN_MODATAH0_type *) 0xF0019B14U)	/* Message Object 88 Data Register High */
#define CAN_MODATAH89	(*( CAN_MODATAH0_type *) 0xF0019B34U)	/* Message Object 89 Data Register High */
#define CAN_MODATAH90	(*( CAN_MODATAH0_type *) 0xF0019B54U)	/* Message Object 90 Data Register High */
#define CAN_MODATAH91	(*( CAN_MODATAH0_type *) 0xF0019B74U)	/* Message Object 91 Data Register High */
#define CAN_MODATAH92	(*( CAN_MODATAH0_type *) 0xF0019B94U)	/* Message Object 92 Data Register High */
#define CAN_MODATAH93	(*( CAN_MODATAH0_type *) 0xF0019BB4U)	/* Message Object 93 Data Register High */
#define CAN_MODATAH94	(*( CAN_MODATAH0_type *) 0xF0019BD4U)	/* Message Object 94 Data Register High */
#define CAN_MODATAH95	(*( CAN_MODATAH0_type *) 0xF0019BF4U)	/* Message Object 95 Data Register High */
#define CAN_MODATAH96	(*( CAN_MODATAH0_type *) 0xF0019C14U)	/* Message Object 96 Data Register High */
#define CAN_MODATAH97	(*( CAN_MODATAH0_type *) 0xF0019C34U)	/* Message Object 97 Data Register High */
#define CAN_MODATAH98	(*( CAN_MODATAH0_type *) 0xF0019C54U)	/* Message Object 98 Data Register High */
#define CAN_MODATAH99	(*( CAN_MODATAH0_type *) 0xF0019C74U)	/* Message Object 99 Data Register High */
#define CAN_MODATAH100	(*( CAN_MODATAH0_type *) 0xF0019C94U)	/* Message Object 100 Data Register High */
#define CAN_MODATAH101	(*( CAN_MODATAH0_type *) 0xF0019CB4U)	/* Message Object 101 Data Register High */
#define CAN_MODATAH102	(*( CAN_MODATAH0_type *) 0xF0019CD4U)	/* Message Object 102 Data Register High */
#define CAN_MODATAH103	(*( CAN_MODATAH0_type *) 0xF0019CF4U)	/* Message Object 103 Data Register High */
#define CAN_MODATAH104	(*( CAN_MODATAH0_type *) 0xF0019D14U)	/* Message Object 104 Data Register High */
#define CAN_MODATAH105	(*( CAN_MODATAH0_type *) 0xF0019D34U)	/* Message Object 105 Data Register High */
#define CAN_MODATAH106	(*( CAN_MODATAH0_type *) 0xF0019D54U)	/* Message Object 106 Data Register High */
#define CAN_MODATAH107	(*( CAN_MODATAH0_type *) 0xF0019D74U)	/* Message Object 107 Data Register High */
#define CAN_MODATAH108	(*( CAN_MODATAH0_type *) 0xF0019D94U)	/* Message Object 108 Data Register High */
#define CAN_MODATAH109	(*( CAN_MODATAH0_type *) 0xF0019DB4U)	/* Message Object 109 Data Register High */
#define CAN_MODATAH110	(*( CAN_MODATAH0_type *) 0xF0019DD4U)	/* Message Object 110 Data Register High */
#define CAN_MODATAH111	(*( CAN_MODATAH0_type *) 0xF0019DF4U)	/* Message Object 111 Data Register High */
#define CAN_MODATAH112	(*( CAN_MODATAH0_type *) 0xF0019E14U)	/* Message Object 112 Data Register High */
#define CAN_MODATAH113	(*( CAN_MODATAH0_type *) 0xF0019E34U)	/* Message Object 113 Data Register High */
#define CAN_MODATAH114	(*( CAN_MODATAH0_type *) 0xF0019E54U)	/* Message Object 114 Data Register High */
#define CAN_MODATAH115	(*( CAN_MODATAH0_type *) 0xF0019E74U)	/* Message Object 115 Data Register High */
#define CAN_MODATAH116	(*( CAN_MODATAH0_type *) 0xF0019E94U)	/* Message Object 116 Data Register High */
#define CAN_MODATAH117	(*( CAN_MODATAH0_type *) 0xF0019EB4U)	/* Message Object 117 Data Register High */
#define CAN_MODATAH118	(*( CAN_MODATAH0_type *) 0xF0019ED4U)	/* Message Object 118 Data Register High */
#define CAN_MODATAH119	(*( CAN_MODATAH0_type *) 0xF0019EF4U)	/* Message Object 119 Data Register High */
#define CAN_MODATAH120	(*( CAN_MODATAH0_type *) 0xF0019F14U)	/* Message Object 120 Data Register High */
#define CAN_MODATAH121	(*( CAN_MODATAH0_type *) 0xF0019F34U)	/* Message Object 121 Data Register High */
#define CAN_MODATAH122	(*( CAN_MODATAH0_type *) 0xF0019F54U)	/* Message Object 122 Data Register High */
#define CAN_MODATAH123	(*( CAN_MODATAH0_type *) 0xF0019F74U)	/* Message Object 123 Data Register High */
#define CAN_MODATAH124	(*( CAN_MODATAH0_type *) 0xF0019F94U)	/* Message Object 124 Data Register High */
#define CAN_MODATAH125	(*( CAN_MODATAH0_type *) 0xF0019FB4U)	/* Message Object 125 Data Register High */
#define CAN_MODATAH126	(*( CAN_MODATAH0_type *) 0xF0019FD4U)	/* Message Object 126 Data Register High */
#define CAN_MODATAH127	(*( CAN_MODATAH0_type *) 0xF0019FF4U)	/* Message Object 127 Data Register High */
#define CAN1_MODATAH0	(*( CAN_MODATAH0_type *) 0xF0029014U)	/* Message Object 0 Data Register High */
#define CAN1_MODATAH1	(*( CAN_MODATAH0_type *) 0xF0029034U)	/* Message Object 1 Data Register High */
#define CAN1_MODATAH2	(*( CAN_MODATAH0_type *) 0xF0029054U)	/* Message Object 2 Data Register High */
#define CAN1_MODATAH3	(*( CAN_MODATAH0_type *) 0xF0029074U)	/* Message Object 3 Data Register High */
#define CAN1_MODATAH4	(*( CAN_MODATAH0_type *) 0xF0029094U)	/* Message Object 4 Data Register High */
#define CAN1_MODATAH5	(*( CAN_MODATAH0_type *) 0xF00290B4U)	/* Message Object 5 Data Register High */
#define CAN1_MODATAH6	(*( CAN_MODATAH0_type *) 0xF00290D4U)	/* Message Object 6 Data Register High */
#define CAN1_MODATAH7	(*( CAN_MODATAH0_type *) 0xF00290F4U)	/* Message Object 7 Data Register High */
#define CAN1_MODATAH8	(*( CAN_MODATAH0_type *) 0xF0029114U)	/* Message Object 8 Data Register High */
#define CAN1_MODATAH9	(*( CAN_MODATAH0_type *) 0xF0029134U)	/* Message Object 9 Data Register High */
#define CAN1_MODATAH10	(*( CAN_MODATAH0_type *) 0xF0029154U)	/* Message Object 10 Data Register High */
#define CAN1_MODATAH11	(*( CAN_MODATAH0_type *) 0xF0029174U)	/* Message Object 11 Data Register High */
#define CAN1_MODATAH12	(*( CAN_MODATAH0_type *) 0xF0029194U)	/* Message Object 12 Data Register High */
#define CAN1_MODATAH13	(*( CAN_MODATAH0_type *) 0xF00291B4U)	/* Message Object 13 Data Register High */
#define CAN1_MODATAH14	(*( CAN_MODATAH0_type *) 0xF00291D4U)	/* Message Object 14 Data Register High */
#define CAN1_MODATAH15	(*( CAN_MODATAH0_type *) 0xF00291F4U)	/* Message Object 15 Data Register High */
#define CAN1_MODATAH16	(*( CAN_MODATAH0_type *) 0xF0029214U)	/* Message Object 16 Data Register High */
#define CAN1_MODATAH17	(*( CAN_MODATAH0_type *) 0xF0029234U)	/* Message Object 17 Data Register High */
#define CAN1_MODATAH18	(*( CAN_MODATAH0_type *) 0xF0029254U)	/* Message Object 18 Data Register High */
#define CAN1_MODATAH19	(*( CAN_MODATAH0_type *) 0xF0029274U)	/* Message Object 19 Data Register High */
#define CAN1_MODATAH20	(*( CAN_MODATAH0_type *) 0xF0029294U)	/* Message Object 20 Data Register High */
#define CAN1_MODATAH21	(*( CAN_MODATAH0_type *) 0xF00292B4U)	/* Message Object 21 Data Register High */
#define CAN1_MODATAH22	(*( CAN_MODATAH0_type *) 0xF00292D4U)	/* Message Object 22 Data Register High */
#define CAN1_MODATAH23	(*( CAN_MODATAH0_type *) 0xF00292F4U)	/* Message Object 23 Data Register High */
#define CAN1_MODATAH24	(*( CAN_MODATAH0_type *) 0xF0029314U)	/* Message Object 24 Data Register High */
#define CAN1_MODATAH25	(*( CAN_MODATAH0_type *) 0xF0029334U)	/* Message Object 25 Data Register High */
#define CAN1_MODATAH26	(*( CAN_MODATAH0_type *) 0xF0029354U)	/* Message Object 26 Data Register High */
#define CAN1_MODATAH27	(*( CAN_MODATAH0_type *) 0xF0029374U)	/* Message Object 27 Data Register High */
#define CAN1_MODATAH28	(*( CAN_MODATAH0_type *) 0xF0029394U)	/* Message Object 28 Data Register High */
#define CAN1_MODATAH29	(*( CAN_MODATAH0_type *) 0xF00293B4U)	/* Message Object 29 Data Register High */
#define CAN1_MODATAH30	(*( CAN_MODATAH0_type *) 0xF00293D4U)	/* Message Object 30 Data Register High */
#define CAN1_MODATAH31	(*( CAN_MODATAH0_type *) 0xF00293F4U)	/* Message Object 31 Data Register High */
#define CAN1_MODATAH32	(*( CAN_MODATAH0_type *) 0xF0029414U)	/* Message Object 32 Data Register High */
#define CAN1_MODATAH33	(*( CAN_MODATAH0_type *) 0xF0029434U)	/* Message Object 33 Data Register High */
#define CAN1_MODATAH34	(*( CAN_MODATAH0_type *) 0xF0029454U)	/* Message Object 34 Data Register High */
#define CAN1_MODATAH35	(*( CAN_MODATAH0_type *) 0xF0029474U)	/* Message Object 35 Data Register High */
#define CAN1_MODATAH36	(*( CAN_MODATAH0_type *) 0xF0029494U)	/* Message Object 36 Data Register High */
#define CAN1_MODATAH37	(*( CAN_MODATAH0_type *) 0xF00294B4U)	/* Message Object 37 Data Register High */
#define CAN1_MODATAH38	(*( CAN_MODATAH0_type *) 0xF00294D4U)	/* Message Object 38 Data Register High */
#define CAN1_MODATAH39	(*( CAN_MODATAH0_type *) 0xF00294F4U)	/* Message Object 39 Data Register High */
#define CAN1_MODATAH40	(*( CAN_MODATAH0_type *) 0xF0029514U)	/* Message Object 40 Data Register High */
#define CAN1_MODATAH41	(*( CAN_MODATAH0_type *) 0xF0029534U)	/* Message Object 41 Data Register High */
#define CAN1_MODATAH42	(*( CAN_MODATAH0_type *) 0xF0029554U)	/* Message Object 42 Data Register High */
#define CAN1_MODATAH43	(*( CAN_MODATAH0_type *) 0xF0029574U)	/* Message Object 43 Data Register High */
#define CAN1_MODATAH44	(*( CAN_MODATAH0_type *) 0xF0029594U)	/* Message Object 44 Data Register High */
#define CAN1_MODATAH45	(*( CAN_MODATAH0_type *) 0xF00295B4U)	/* Message Object 45 Data Register High */
#define CAN1_MODATAH46	(*( CAN_MODATAH0_type *) 0xF00295D4U)	/* Message Object 46 Data Register High */
#define CAN1_MODATAH47	(*( CAN_MODATAH0_type *) 0xF00295F4U)	/* Message Object 47 Data Register High */
#define CAN1_MODATAH48	(*( CAN_MODATAH0_type *) 0xF0029614U)	/* Message Object 48 Data Register High */
#define CAN1_MODATAH49	(*( CAN_MODATAH0_type *) 0xF0029634U)	/* Message Object 49 Data Register High */
#define CAN1_MODATAH50	(*( CAN_MODATAH0_type *) 0xF0029654U)	/* Message Object 50 Data Register High */
#define CAN1_MODATAH51	(*( CAN_MODATAH0_type *) 0xF0029674U)	/* Message Object 51 Data Register High */
#define CAN1_MODATAH52	(*( CAN_MODATAH0_type *) 0xF0029694U)	/* Message Object 52 Data Register High */
#define CAN1_MODATAH53	(*( CAN_MODATAH0_type *) 0xF00296B4U)	/* Message Object 53 Data Register High */
#define CAN1_MODATAH54	(*( CAN_MODATAH0_type *) 0xF00296D4U)	/* Message Object 54 Data Register High */
#define CAN1_MODATAH55	(*( CAN_MODATAH0_type *) 0xF00296F4U)	/* Message Object 55 Data Register High */
#define CAN1_MODATAH56	(*( CAN_MODATAH0_type *) 0xF0029714U)	/* Message Object 56 Data Register High */
#define CAN1_MODATAH57	(*( CAN_MODATAH0_type *) 0xF0029734U)	/* Message Object 57 Data Register High */
#define CAN1_MODATAH58	(*( CAN_MODATAH0_type *) 0xF0029754U)	/* Message Object 58 Data Register High */
#define CAN1_MODATAH59	(*( CAN_MODATAH0_type *) 0xF0029774U)	/* Message Object 59 Data Register High */
#define CAN1_MODATAH60	(*( CAN_MODATAH0_type *) 0xF0029794U)	/* Message Object 60 Data Register High */
#define CAN1_MODATAH61	(*( CAN_MODATAH0_type *) 0xF00297B4U)	/* Message Object 61 Data Register High */
#define CAN1_MODATAH62	(*( CAN_MODATAH0_type *) 0xF00297D4U)	/* Message Object 62 Data Register High */
#define CAN1_MODATAH63	(*( CAN_MODATAH0_type *) 0xF00297F4U)	/* Message Object 63 Data Register High */
#define CAN1_MODATAH64	(*( CAN_MODATAH0_type *) 0xF0029814U)	/* Message Object 64 Data Register High */
#define CAN1_MODATAH65	(*( CAN_MODATAH0_type *) 0xF0029834U)	/* Message Object 65 Data Register High */
#define CAN1_MODATAH66	(*( CAN_MODATAH0_type *) 0xF0029854U)	/* Message Object 66 Data Register High */
#define CAN1_MODATAH67	(*( CAN_MODATAH0_type *) 0xF0029874U)	/* Message Object 67 Data Register High */
#define CAN1_MODATAH68	(*( CAN_MODATAH0_type *) 0xF0029894U)	/* Message Object 68 Data Register High */
#define CAN1_MODATAH69	(*( CAN_MODATAH0_type *) 0xF00298B4U)	/* Message Object 69 Data Register High */
#define CAN1_MODATAH70	(*( CAN_MODATAH0_type *) 0xF00298D4U)	/* Message Object 70 Data Register High */
#define CAN1_MODATAH71	(*( CAN_MODATAH0_type *) 0xF00298F4U)	/* Message Object 71 Data Register High */
#define CAN1_MODATAH72	(*( CAN_MODATAH0_type *) 0xF0029914U)	/* Message Object 72 Data Register High */
#define CAN1_MODATAH73	(*( CAN_MODATAH0_type *) 0xF0029934U)	/* Message Object 73 Data Register High */
#define CAN1_MODATAH74	(*( CAN_MODATAH0_type *) 0xF0029954U)	/* Message Object 74 Data Register High */
#define CAN1_MODATAH75	(*( CAN_MODATAH0_type *) 0xF0029974U)	/* Message Object 75 Data Register High */
#define CAN1_MODATAH76	(*( CAN_MODATAH0_type *) 0xF0029994U)	/* Message Object 76 Data Register High */
#define CAN1_MODATAH77	(*( CAN_MODATAH0_type *) 0xF00299B4U)	/* Message Object 77 Data Register High */
#define CAN1_MODATAH78	(*( CAN_MODATAH0_type *) 0xF00299D4U)	/* Message Object 78 Data Register High */
#define CAN1_MODATAH79	(*( CAN_MODATAH0_type *) 0xF00299F4U)	/* Message Object 79 Data Register High */
#define CAN1_MODATAH80	(*( CAN_MODATAH0_type *) 0xF0029A14U)	/* Message Object 80 Data Register High */
#define CAN1_MODATAH81	(*( CAN_MODATAH0_type *) 0xF0029A34U)	/* Message Object 81 Data Register High */
#define CAN1_MODATAH82	(*( CAN_MODATAH0_type *) 0xF0029A54U)	/* Message Object 82 Data Register High */
#define CAN1_MODATAH83	(*( CAN_MODATAH0_type *) 0xF0029A74U)	/* Message Object 83 Data Register High */
#define CAN1_MODATAH84	(*( CAN_MODATAH0_type *) 0xF0029A94U)	/* Message Object 84 Data Register High */
#define CAN1_MODATAH85	(*( CAN_MODATAH0_type *) 0xF0029AB4U)	/* Message Object 85 Data Register High */
#define CAN1_MODATAH86	(*( CAN_MODATAH0_type *) 0xF0029AD4U)	/* Message Object 86 Data Register High */
#define CAN1_MODATAH87	(*( CAN_MODATAH0_type *) 0xF0029AF4U)	/* Message Object 87 Data Register High */
#define CAN1_MODATAH88	(*( CAN_MODATAH0_type *) 0xF0029B14U)	/* Message Object 88 Data Register High */
#define CAN1_MODATAH89	(*( CAN_MODATAH0_type *) 0xF0029B34U)	/* Message Object 89 Data Register High */
#define CAN1_MODATAH90	(*( CAN_MODATAH0_type *) 0xF0029B54U)	/* Message Object 90 Data Register High */
#define CAN1_MODATAH91	(*( CAN_MODATAH0_type *) 0xF0029B74U)	/* Message Object 91 Data Register High */
#define CAN1_MODATAH92	(*( CAN_MODATAH0_type *) 0xF0029B94U)	/* Message Object 92 Data Register High */
#define CAN1_MODATAH93	(*( CAN_MODATAH0_type *) 0xF0029BB4U)	/* Message Object 93 Data Register High */
#define CAN1_MODATAH94	(*( CAN_MODATAH0_type *) 0xF0029BD4U)	/* Message Object 94 Data Register High */
#define CAN1_MODATAH95	(*( CAN_MODATAH0_type *) 0xF0029BF4U)	/* Message Object 95 Data Register High */
#define CAN1_MODATAH96	(*( CAN_MODATAH0_type *) 0xF0029C14U)	/* Message Object 96 Data Register High */
#define CAN1_MODATAH97	(*( CAN_MODATAH0_type *) 0xF0029C34U)	/* Message Object 97 Data Register High */
#define CAN1_MODATAH98	(*( CAN_MODATAH0_type *) 0xF0029C54U)	/* Message Object 98 Data Register High */
#define CAN1_MODATAH99	(*( CAN_MODATAH0_type *) 0xF0029C74U)	/* Message Object 99 Data Register High */
#define CAN1_MODATAH100	(*( CAN_MODATAH0_type *) 0xF0029C94U)	/* Message Object 100 Data Register High */
#define CAN1_MODATAH101	(*( CAN_MODATAH0_type *) 0xF0029CB4U)	/* Message Object 101 Data Register High */
#define CAN1_MODATAH102	(*( CAN_MODATAH0_type *) 0xF0029CD4U)	/* Message Object 102 Data Register High */
#define CAN1_MODATAH103	(*( CAN_MODATAH0_type *) 0xF0029CF4U)	/* Message Object 103 Data Register High */
#define CAN1_MODATAH104	(*( CAN_MODATAH0_type *) 0xF0029D14U)	/* Message Object 104 Data Register High */
#define CAN1_MODATAH105	(*( CAN_MODATAH0_type *) 0xF0029D34U)	/* Message Object 105 Data Register High */
#define CAN1_MODATAH106	(*( CAN_MODATAH0_type *) 0xF0029D54U)	/* Message Object 106 Data Register High */
#define CAN1_MODATAH107	(*( CAN_MODATAH0_type *) 0xF0029D74U)	/* Message Object 107 Data Register High */
#define CAN1_MODATAH108	(*( CAN_MODATAH0_type *) 0xF0029D94U)	/* Message Object 108 Data Register High */
#define CAN1_MODATAH109	(*( CAN_MODATAH0_type *) 0xF0029DB4U)	/* Message Object 109 Data Register High */
#define CAN1_MODATAH110	(*( CAN_MODATAH0_type *) 0xF0029DD4U)	/* Message Object 110 Data Register High */
#define CAN1_MODATAH111	(*( CAN_MODATAH0_type *) 0xF0029DF4U)	/* Message Object 111 Data Register High */
#define CAN1_MODATAH112	(*( CAN_MODATAH0_type *) 0xF0029E14U)	/* Message Object 112 Data Register High */
#define CAN1_MODATAH113	(*( CAN_MODATAH0_type *) 0xF0029E34U)	/* Message Object 113 Data Register High */
#define CAN1_MODATAH114	(*( CAN_MODATAH0_type *) 0xF0029E54U)	/* Message Object 114 Data Register High */
#define CAN1_MODATAH115	(*( CAN_MODATAH0_type *) 0xF0029E74U)	/* Message Object 115 Data Register High */
#define CAN1_MODATAH116	(*( CAN_MODATAH0_type *) 0xF0029E94U)	/* Message Object 116 Data Register High */
#define CAN1_MODATAH117	(*( CAN_MODATAH0_type *) 0xF0029EB4U)	/* Message Object 117 Data Register High */
#define CAN1_MODATAH118	(*( CAN_MODATAH0_type *) 0xF0029ED4U)	/* Message Object 118 Data Register High */
#define CAN1_MODATAH119	(*( CAN_MODATAH0_type *) 0xF0029EF4U)	/* Message Object 119 Data Register High */
#define CAN1_MODATAH120	(*( CAN_MODATAH0_type *) 0xF0029F14U)	/* Message Object 120 Data Register High */
#define CAN1_MODATAH121	(*( CAN_MODATAH0_type *) 0xF0029F34U)	/* Message Object 121 Data Register High */
#define CAN1_MODATAH122	(*( CAN_MODATAH0_type *) 0xF0029F54U)	/* Message Object 122 Data Register High */
#define CAN1_MODATAH123	(*( CAN_MODATAH0_type *) 0xF0029F74U)	/* Message Object 123 Data Register High */
#define CAN1_MODATAH124	(*( CAN_MODATAH0_type *) 0xF0029F94U)	/* Message Object 124 Data Register High */
#define CAN1_MODATAH125	(*( CAN_MODATAH0_type *) 0xF0029FB4U)	/* Message Object 125 Data Register High */
#define CAN1_MODATAH126	(*( CAN_MODATAH0_type *) 0xF0029FD4U)	/* Message Object 126 Data Register High */
#define CAN1_MODATAH127	(*( CAN_MODATAH0_type *) 0xF0029FF4U)	/* Message Object 127 Data Register High */
#define CAN_EMO0DATA0	(*( CAN_MODATAL0_type *) 0xF0019000U)	/* Extended Message Object 0 Data 0 Register */
#define CAN_EMO1DATA0	(*( CAN_MODATAL0_type *) 0xF0019020U)	/* Extended Message Object 1 Data 0 Register */
#define CAN_EMO2DATA0	(*( CAN_MODATAL0_type *) 0xF0019040U)	/* Extended Message Object 2 Data 0 Register */
#define CAN_EMO3DATA0	(*( CAN_MODATAL0_type *) 0xF0019060U)	/* Extended Message Object 3 Data 0 Register */
#define CAN_EMO4DATA0	(*( CAN_MODATAL0_type *) 0xF0019080U)	/* Extended Message Object 4 Data 0 Register */
#define CAN_EMO5DATA0	(*( CAN_MODATAL0_type *) 0xF00190A0U)	/* Extended Message Object 5 Data 0 Register */
#define CAN_EMO6DATA0	(*( CAN_MODATAL0_type *) 0xF00190C0U)	/* Extended Message Object 6 Data 0 Register */
#define CAN_EMO7DATA0	(*( CAN_MODATAL0_type *) 0xF00190E0U)	/* Extended Message Object 7 Data 0 Register */
#define CAN_EMO8DATA0	(*( CAN_MODATAL0_type *) 0xF0019100U)	/* Extended Message Object 8 Data 0 Register */
#define CAN_EMO9DATA0	(*( CAN_MODATAL0_type *) 0xF0019120U)	/* Extended Message Object 9 Data 0 Register */
#define CAN_EMO10DATA0	(*( CAN_MODATAL0_type *) 0xF0019140U)	/* Extended Message Object 10 Data 0 Register */
#define CAN_EMO11DATA0	(*( CAN_MODATAL0_type *) 0xF0019160U)	/* Extended Message Object 11 Data 0 Register */
#define CAN_EMO12DATA0	(*( CAN_MODATAL0_type *) 0xF0019180U)	/* Extended Message Object 12 Data 0 Register */
#define CAN_EMO13DATA0	(*( CAN_MODATAL0_type *) 0xF00191A0U)	/* Extended Message Object 13 Data 0 Register */
#define CAN_EMO14DATA0	(*( CAN_MODATAL0_type *) 0xF00191C0U)	/* Extended Message Object 14 Data 0 Register */
#define CAN_EMO15DATA0	(*( CAN_MODATAL0_type *) 0xF00191E0U)	/* Extended Message Object 15 Data 0 Register */
#define CAN_EMO16DATA0	(*( CAN_MODATAL0_type *) 0xF0019200U)	/* Extended Message Object 16 Data 0 Register */
#define CAN_EMO17DATA0	(*( CAN_MODATAL0_type *) 0xF0019220U)	/* Extended Message Object 17 Data 0 Register */
#define CAN_EMO18DATA0	(*( CAN_MODATAL0_type *) 0xF0019240U)	/* Extended Message Object 18 Data 0 Register */
#define CAN_EMO19DATA0	(*( CAN_MODATAL0_type *) 0xF0019260U)	/* Extended Message Object 19 Data 0 Register */
#define CAN_EMO20DATA0	(*( CAN_MODATAL0_type *) 0xF0019280U)	/* Extended Message Object 20 Data 0 Register */
#define CAN_EMO21DATA0	(*( CAN_MODATAL0_type *) 0xF00192A0U)	/* Extended Message Object 21 Data 0 Register */
#define CAN_EMO22DATA0	(*( CAN_MODATAL0_type *) 0xF00192C0U)	/* Extended Message Object 22 Data 0 Register */
#define CAN_EMO23DATA0	(*( CAN_MODATAL0_type *) 0xF00192E0U)	/* Extended Message Object 23 Data 0 Register */
#define CAN_EMO24DATA0	(*( CAN_MODATAL0_type *) 0xF0019300U)	/* Extended Message Object 24 Data 0 Register */
#define CAN_EMO25DATA0	(*( CAN_MODATAL0_type *) 0xF0019320U)	/* Extended Message Object 25 Data 0 Register */
#define CAN_EMO26DATA0	(*( CAN_MODATAL0_type *) 0xF0019340U)	/* Extended Message Object 26 Data 0 Register */
#define CAN_EMO27DATA0	(*( CAN_MODATAL0_type *) 0xF0019360U)	/* Extended Message Object 27 Data 0 Register */
#define CAN_EMO28DATA0	(*( CAN_MODATAL0_type *) 0xF0019380U)	/* Extended Message Object 28 Data 0 Register */
#define CAN_EMO29DATA0	(*( CAN_MODATAL0_type *) 0xF00193A0U)	/* Extended Message Object 29 Data 0 Register */
#define CAN_EMO30DATA0	(*( CAN_MODATAL0_type *) 0xF00193C0U)	/* Extended Message Object 30 Data 0 Register */
#define CAN_EMO31DATA0	(*( CAN_MODATAL0_type *) 0xF00193E0U)	/* Extended Message Object 31 Data 0 Register */
#define CAN_EMO32DATA0	(*( CAN_MODATAL0_type *) 0xF0019400U)	/* Extended Message Object 32 Data 0 Register */
#define CAN_EMO33DATA0	(*( CAN_MODATAL0_type *) 0xF0019420U)	/* Extended Message Object 33 Data 0 Register */
#define CAN_EMO34DATA0	(*( CAN_MODATAL0_type *) 0xF0019440U)	/* Extended Message Object 34 Data 0 Register */
#define CAN_EMO35DATA0	(*( CAN_MODATAL0_type *) 0xF0019460U)	/* Extended Message Object 35 Data 0 Register */
#define CAN_EMO36DATA0	(*( CAN_MODATAL0_type *) 0xF0019480U)	/* Extended Message Object 36 Data 0 Register */
#define CAN_EMO37DATA0	(*( CAN_MODATAL0_type *) 0xF00194A0U)	/* Extended Message Object 37 Data 0 Register */
#define CAN_EMO38DATA0	(*( CAN_MODATAL0_type *) 0xF00194C0U)	/* Extended Message Object 38 Data 0 Register */
#define CAN_EMO39DATA0	(*( CAN_MODATAL0_type *) 0xF00194E0U)	/* Extended Message Object 39 Data 0 Register */
#define CAN_EMO40DATA0	(*( CAN_MODATAL0_type *) 0xF0019500U)	/* Extended Message Object 40 Data 0 Register */
#define CAN_EMO41DATA0	(*( CAN_MODATAL0_type *) 0xF0019520U)	/* Extended Message Object 41 Data 0 Register */
#define CAN_EMO42DATA0	(*( CAN_MODATAL0_type *) 0xF0019540U)	/* Extended Message Object 42 Data 0 Register */
#define CAN_EMO43DATA0	(*( CAN_MODATAL0_type *) 0xF0019560U)	/* Extended Message Object 43 Data 0 Register */
#define CAN_EMO44DATA0	(*( CAN_MODATAL0_type *) 0xF0019580U)	/* Extended Message Object 44 Data 0 Register */
#define CAN_EMO45DATA0	(*( CAN_MODATAL0_type *) 0xF00195A0U)	/* Extended Message Object 45 Data 0 Register */
#define CAN_EMO46DATA0	(*( CAN_MODATAL0_type *) 0xF00195C0U)	/* Extended Message Object 46 Data 0 Register */
#define CAN_EMO47DATA0	(*( CAN_MODATAL0_type *) 0xF00195E0U)	/* Extended Message Object 47 Data 0 Register */
#define CAN_EMO48DATA0	(*( CAN_MODATAL0_type *) 0xF0019600U)	/* Extended Message Object 48 Data 0 Register */
#define CAN_EMO49DATA0	(*( CAN_MODATAL0_type *) 0xF0019620U)	/* Extended Message Object 49 Data 0 Register */
#define CAN_EMO50DATA0	(*( CAN_MODATAL0_type *) 0xF0019640U)	/* Extended Message Object 50 Data 0 Register */
#define CAN_EMO51DATA0	(*( CAN_MODATAL0_type *) 0xF0019660U)	/* Extended Message Object 51 Data 0 Register */
#define CAN_EMO52DATA0	(*( CAN_MODATAL0_type *) 0xF0019680U)	/* Extended Message Object 52 Data 0 Register */
#define CAN_EMO53DATA0	(*( CAN_MODATAL0_type *) 0xF00196A0U)	/* Extended Message Object 53 Data 0 Register */
#define CAN_EMO54DATA0	(*( CAN_MODATAL0_type *) 0xF00196C0U)	/* Extended Message Object 54 Data 0 Register */
#define CAN_EMO55DATA0	(*( CAN_MODATAL0_type *) 0xF00196E0U)	/* Extended Message Object 55 Data 0 Register */
#define CAN_EMO56DATA0	(*( CAN_MODATAL0_type *) 0xF0019700U)	/* Extended Message Object 56 Data 0 Register */
#define CAN_EMO57DATA0	(*( CAN_MODATAL0_type *) 0xF0019720U)	/* Extended Message Object 57 Data 0 Register */
#define CAN_EMO58DATA0	(*( CAN_MODATAL0_type *) 0xF0019740U)	/* Extended Message Object 58 Data 0 Register */
#define CAN_EMO59DATA0	(*( CAN_MODATAL0_type *) 0xF0019760U)	/* Extended Message Object 59 Data 0 Register */
#define CAN_EMO60DATA0	(*( CAN_MODATAL0_type *) 0xF0019780U)	/* Extended Message Object 60 Data 0 Register */
#define CAN_EMO61DATA0	(*( CAN_MODATAL0_type *) 0xF00197A0U)	/* Extended Message Object 61 Data 0 Register */
#define CAN_EMO62DATA0	(*( CAN_MODATAL0_type *) 0xF00197C0U)	/* Extended Message Object 62 Data 0 Register */
#define CAN_EMO63DATA0	(*( CAN_MODATAL0_type *) 0xF00197E0U)	/* Extended Message Object 63 Data 0 Register */
#define CAN_EMO64DATA0	(*( CAN_MODATAL0_type *) 0xF0019800U)	/* Extended Message Object 64 Data 0 Register */
#define CAN_EMO65DATA0	(*( CAN_MODATAL0_type *) 0xF0019820U)	/* Extended Message Object 65 Data 0 Register */
#define CAN_EMO66DATA0	(*( CAN_MODATAL0_type *) 0xF0019840U)	/* Extended Message Object 66 Data 0 Register */
#define CAN_EMO67DATA0	(*( CAN_MODATAL0_type *) 0xF0019860U)	/* Extended Message Object 67 Data 0 Register */
#define CAN_EMO68DATA0	(*( CAN_MODATAL0_type *) 0xF0019880U)	/* Extended Message Object 68 Data 0 Register */
#define CAN_EMO69DATA0	(*( CAN_MODATAL0_type *) 0xF00198A0U)	/* Extended Message Object 69 Data 0 Register */
#define CAN_EMO70DATA0	(*( CAN_MODATAL0_type *) 0xF00198C0U)	/* Extended Message Object 70 Data 0 Register */
#define CAN_EMO71DATA0	(*( CAN_MODATAL0_type *) 0xF00198E0U)	/* Extended Message Object 71 Data 0 Register */
#define CAN_EMO72DATA0	(*( CAN_MODATAL0_type *) 0xF0019900U)	/* Extended Message Object 72 Data 0 Register */
#define CAN_EMO73DATA0	(*( CAN_MODATAL0_type *) 0xF0019920U)	/* Extended Message Object 73 Data 0 Register */
#define CAN_EMO74DATA0	(*( CAN_MODATAL0_type *) 0xF0019940U)	/* Extended Message Object 74 Data 0 Register */
#define CAN_EMO75DATA0	(*( CAN_MODATAL0_type *) 0xF0019960U)	/* Extended Message Object 75 Data 0 Register */
#define CAN_EMO76DATA0	(*( CAN_MODATAL0_type *) 0xF0019980U)	/* Extended Message Object 76 Data 0 Register */
#define CAN_EMO77DATA0	(*( CAN_MODATAL0_type *) 0xF00199A0U)	/* Extended Message Object 77 Data 0 Register */
#define CAN_EMO78DATA0	(*( CAN_MODATAL0_type *) 0xF00199C0U)	/* Extended Message Object 78 Data 0 Register */
#define CAN_EMO79DATA0	(*( CAN_MODATAL0_type *) 0xF00199E0U)	/* Extended Message Object 79 Data 0 Register */
#define CAN_EMO80DATA0	(*( CAN_MODATAL0_type *) 0xF0019A00U)	/* Extended Message Object 80 Data 0 Register */
#define CAN_EMO81DATA0	(*( CAN_MODATAL0_type *) 0xF0019A20U)	/* Extended Message Object 81 Data 0 Register */
#define CAN_EMO82DATA0	(*( CAN_MODATAL0_type *) 0xF0019A40U)	/* Extended Message Object 82 Data 0 Register */
#define CAN_EMO83DATA0	(*( CAN_MODATAL0_type *) 0xF0019A60U)	/* Extended Message Object 83 Data 0 Register */
#define CAN_EMO84DATA0	(*( CAN_MODATAL0_type *) 0xF0019A80U)	/* Extended Message Object 84 Data 0 Register */
#define CAN_EMO85DATA0	(*( CAN_MODATAL0_type *) 0xF0019AA0U)	/* Extended Message Object 85 Data 0 Register */
#define CAN_EMO86DATA0	(*( CAN_MODATAL0_type *) 0xF0019AC0U)	/* Extended Message Object 86 Data 0 Register */
#define CAN_EMO87DATA0	(*( CAN_MODATAL0_type *) 0xF0019AE0U)	/* Extended Message Object 87 Data 0 Register */
#define CAN_EMO88DATA0	(*( CAN_MODATAL0_type *) 0xF0019B00U)	/* Extended Message Object 88 Data 0 Register */
#define CAN_EMO89DATA0	(*( CAN_MODATAL0_type *) 0xF0019B20U)	/* Extended Message Object 89 Data 0 Register */
#define CAN_EMO90DATA0	(*( CAN_MODATAL0_type *) 0xF0019B40U)	/* Extended Message Object 90 Data 0 Register */
#define CAN_EMO91DATA0	(*( CAN_MODATAL0_type *) 0xF0019B60U)	/* Extended Message Object 91 Data 0 Register */
#define CAN_EMO92DATA0	(*( CAN_MODATAL0_type *) 0xF0019B80U)	/* Extended Message Object 92 Data 0 Register */
#define CAN_EMO93DATA0	(*( CAN_MODATAL0_type *) 0xF0019BA0U)	/* Extended Message Object 93 Data 0 Register */
#define CAN_EMO94DATA0	(*( CAN_MODATAL0_type *) 0xF0019BC0U)	/* Extended Message Object 94 Data 0 Register */
#define CAN_EMO95DATA0	(*( CAN_MODATAL0_type *) 0xF0019BE0U)	/* Extended Message Object 95 Data 0 Register */
#define CAN_EMO96DATA0	(*( CAN_MODATAL0_type *) 0xF0019C00U)	/* Extended Message Object 96 Data 0 Register */
#define CAN_EMO97DATA0	(*( CAN_MODATAL0_type *) 0xF0019C20U)	/* Extended Message Object 97 Data 0 Register */
#define CAN_EMO98DATA0	(*( CAN_MODATAL0_type *) 0xF0019C40U)	/* Extended Message Object 98 Data 0 Register */
#define CAN_EMO99DATA0	(*( CAN_MODATAL0_type *) 0xF0019C60U)	/* Extended Message Object 99 Data 0 Register */
#define CAN_EMO100DATA0	(*( CAN_MODATAL0_type *) 0xF0019C80U)	/* Extended Message Object 100 Data 0 Register */
#define CAN_EMO101DATA0	(*( CAN_MODATAL0_type *) 0xF0019CA0U)	/* Extended Message Object 101 Data 0 Register */
#define CAN_EMO102DATA0	(*( CAN_MODATAL0_type *) 0xF0019CC0U)	/* Extended Message Object 102 Data 0 Register */
#define CAN_EMO103DATA0	(*( CAN_MODATAL0_type *) 0xF0019CE0U)	/* Extended Message Object 103 Data 0 Register */
#define CAN_EMO104DATA0	(*( CAN_MODATAL0_type *) 0xF0019D00U)	/* Extended Message Object 104 Data 0 Register */
#define CAN_EMO105DATA0	(*( CAN_MODATAL0_type *) 0xF0019D20U)	/* Extended Message Object 105 Data 0 Register */
#define CAN_EMO106DATA0	(*( CAN_MODATAL0_type *) 0xF0019D40U)	/* Extended Message Object 106 Data 0 Register */
#define CAN_EMO107DATA0	(*( CAN_MODATAL0_type *) 0xF0019D60U)	/* Extended Message Object 107 Data 0 Register */
#define CAN_EMO108DATA0	(*( CAN_MODATAL0_type *) 0xF0019D80U)	/* Extended Message Object 108 Data 0 Register */
#define CAN_EMO109DATA0	(*( CAN_MODATAL0_type *) 0xF0019DA0U)	/* Extended Message Object 109 Data 0 Register */
#define CAN_EMO110DATA0	(*( CAN_MODATAL0_type *) 0xF0019DC0U)	/* Extended Message Object 110 Data 0 Register */
#define CAN_EMO111DATA0	(*( CAN_MODATAL0_type *) 0xF0019DE0U)	/* Extended Message Object 111 Data 0 Register */
#define CAN_EMO112DATA0	(*( CAN_MODATAL0_type *) 0xF0019E00U)	/* Extended Message Object 112 Data 0 Register */
#define CAN_EMO113DATA0	(*( CAN_MODATAL0_type *) 0xF0019E20U)	/* Extended Message Object 113 Data 0 Register */
#define CAN_EMO114DATA0	(*( CAN_MODATAL0_type *) 0xF0019E40U)	/* Extended Message Object 114 Data 0 Register */
#define CAN_EMO115DATA0	(*( CAN_MODATAL0_type *) 0xF0019E60U)	/* Extended Message Object 115 Data 0 Register */
#define CAN_EMO116DATA0	(*( CAN_MODATAL0_type *) 0xF0019E80U)	/* Extended Message Object 116 Data 0 Register */
#define CAN_EMO117DATA0	(*( CAN_MODATAL0_type *) 0xF0019EA0U)	/* Extended Message Object 117 Data 0 Register */
#define CAN_EMO118DATA0	(*( CAN_MODATAL0_type *) 0xF0019EC0U)	/* Extended Message Object 118 Data 0 Register */
#define CAN_EMO119DATA0	(*( CAN_MODATAL0_type *) 0xF0019EE0U)	/* Extended Message Object 119 Data 0 Register */
#define CAN_EMO120DATA0	(*( CAN_MODATAL0_type *) 0xF0019F00U)	/* Extended Message Object 120 Data 0 Register */
#define CAN_EMO121DATA0	(*( CAN_MODATAL0_type *) 0xF0019F20U)	/* Extended Message Object 121 Data 0 Register */
#define CAN_EMO122DATA0	(*( CAN_MODATAL0_type *) 0xF0019F40U)	/* Extended Message Object 122 Data 0 Register */
#define CAN_EMO123DATA0	(*( CAN_MODATAL0_type *) 0xF0019F60U)	/* Extended Message Object 123 Data 0 Register */
#define CAN_EMO124DATA0	(*( CAN_MODATAL0_type *) 0xF0019F80U)	/* Extended Message Object 124 Data 0 Register */
#define CAN_EMO125DATA0	(*( CAN_MODATAL0_type *) 0xF0019FA0U)	/* Extended Message Object 125 Data 0 Register */
#define CAN_EMO126DATA0	(*( CAN_MODATAL0_type *) 0xF0019FC0U)	/* Extended Message Object 126 Data 0 Register */
#define CAN_EMO127DATA0	(*( CAN_MODATAL0_type *) 0xF0019FE0U)	/* Extended Message Object 127 Data 0 Register */
#define CAN_EMO0DATA1	(*( CAN_MODATAL0_type *) 0xF0019004U)	/* Extended Message Object 0 Data 1 Register */
#define CAN_EMO1DATA1	(*( CAN_MODATAL0_type *) 0xF0019024U)	/* Extended Message Object 1 Data 1 Register */
#define CAN_EMO2DATA1	(*( CAN_MODATAL0_type *) 0xF0019044U)	/* Extended Message Object 2 Data 1 Register */
#define CAN_EMO3DATA1	(*( CAN_MODATAL0_type *) 0xF0019064U)	/* Extended Message Object 3 Data 1 Register */
#define CAN_EMO4DATA1	(*( CAN_MODATAL0_type *) 0xF0019084U)	/* Extended Message Object 4 Data 1 Register */
#define CAN_EMO5DATA1	(*( CAN_MODATAL0_type *) 0xF00190A4U)	/* Extended Message Object 5 Data 1 Register */
#define CAN_EMO6DATA1	(*( CAN_MODATAL0_type *) 0xF00190C4U)	/* Extended Message Object 6 Data 1 Register */
#define CAN_EMO7DATA1	(*( CAN_MODATAL0_type *) 0xF00190E4U)	/* Extended Message Object 7 Data 1 Register */
#define CAN_EMO8DATA1	(*( CAN_MODATAL0_type *) 0xF0019104U)	/* Extended Message Object 8 Data 1 Register */
#define CAN_EMO9DATA1	(*( CAN_MODATAL0_type *) 0xF0019124U)	/* Extended Message Object 9 Data 1 Register */
#define CAN_EMO10DATA1	(*( CAN_MODATAL0_type *) 0xF0019144U)	/* Extended Message Object 10 Data 1 Register */
#define CAN_EMO11DATA1	(*( CAN_MODATAL0_type *) 0xF0019164U)	/* Extended Message Object 11 Data 1 Register */
#define CAN_EMO12DATA1	(*( CAN_MODATAL0_type *) 0xF0019184U)	/* Extended Message Object 12 Data 1 Register */
#define CAN_EMO13DATA1	(*( CAN_MODATAL0_type *) 0xF00191A4U)	/* Extended Message Object 13 Data 1 Register */
#define CAN_EMO14DATA1	(*( CAN_MODATAL0_type *) 0xF00191C4U)	/* Extended Message Object 14 Data 1 Register */
#define CAN_EMO15DATA1	(*( CAN_MODATAL0_type *) 0xF00191E4U)	/* Extended Message Object 15 Data 1 Register */
#define CAN_EMO16DATA1	(*( CAN_MODATAL0_type *) 0xF0019204U)	/* Extended Message Object 16 Data 1 Register */
#define CAN_EMO17DATA1	(*( CAN_MODATAL0_type *) 0xF0019224U)	/* Extended Message Object 17 Data 1 Register */
#define CAN_EMO18DATA1	(*( CAN_MODATAL0_type *) 0xF0019244U)	/* Extended Message Object 18 Data 1 Register */
#define CAN_EMO19DATA1	(*( CAN_MODATAL0_type *) 0xF0019264U)	/* Extended Message Object 19 Data 1 Register */
#define CAN_EMO20DATA1	(*( CAN_MODATAL0_type *) 0xF0019284U)	/* Extended Message Object 20 Data 1 Register */
#define CAN_EMO21DATA1	(*( CAN_MODATAL0_type *) 0xF00192A4U)	/* Extended Message Object 21 Data 1 Register */
#define CAN_EMO22DATA1	(*( CAN_MODATAL0_type *) 0xF00192C4U)	/* Extended Message Object 22 Data 1 Register */
#define CAN_EMO23DATA1	(*( CAN_MODATAL0_type *) 0xF00192E4U)	/* Extended Message Object 23 Data 1 Register */
#define CAN_EMO24DATA1	(*( CAN_MODATAL0_type *) 0xF0019304U)	/* Extended Message Object 24 Data 1 Register */
#define CAN_EMO25DATA1	(*( CAN_MODATAL0_type *) 0xF0019324U)	/* Extended Message Object 25 Data 1 Register */
#define CAN_EMO26DATA1	(*( CAN_MODATAL0_type *) 0xF0019344U)	/* Extended Message Object 26 Data 1 Register */
#define CAN_EMO27DATA1	(*( CAN_MODATAL0_type *) 0xF0019364U)	/* Extended Message Object 27 Data 1 Register */
#define CAN_EMO28DATA1	(*( CAN_MODATAL0_type *) 0xF0019384U)	/* Extended Message Object 28 Data 1 Register */
#define CAN_EMO29DATA1	(*( CAN_MODATAL0_type *) 0xF00193A4U)	/* Extended Message Object 29 Data 1 Register */
#define CAN_EMO30DATA1	(*( CAN_MODATAL0_type *) 0xF00193C4U)	/* Extended Message Object 30 Data 1 Register */
#define CAN_EMO31DATA1	(*( CAN_MODATAL0_type *) 0xF00193E4U)	/* Extended Message Object 31 Data 1 Register */
#define CAN_EMO32DATA1	(*( CAN_MODATAL0_type *) 0xF0019404U)	/* Extended Message Object 32 Data 1 Register */
#define CAN_EMO33DATA1	(*( CAN_MODATAL0_type *) 0xF0019424U)	/* Extended Message Object 33 Data 1 Register */
#define CAN_EMO34DATA1	(*( CAN_MODATAL0_type *) 0xF0019444U)	/* Extended Message Object 34 Data 1 Register */
#define CAN_EMO35DATA1	(*( CAN_MODATAL0_type *) 0xF0019464U)	/* Extended Message Object 35 Data 1 Register */
#define CAN_EMO36DATA1	(*( CAN_MODATAL0_type *) 0xF0019484U)	/* Extended Message Object 36 Data 1 Register */
#define CAN_EMO37DATA1	(*( CAN_MODATAL0_type *) 0xF00194A4U)	/* Extended Message Object 37 Data 1 Register */
#define CAN_EMO38DATA1	(*( CAN_MODATAL0_type *) 0xF00194C4U)	/* Extended Message Object 38 Data 1 Register */
#define CAN_EMO39DATA1	(*( CAN_MODATAL0_type *) 0xF00194E4U)	/* Extended Message Object 39 Data 1 Register */
#define CAN_EMO40DATA1	(*( CAN_MODATAL0_type *) 0xF0019504U)	/* Extended Message Object 40 Data 1 Register */
#define CAN_EMO41DATA1	(*( CAN_MODATAL0_type *) 0xF0019524U)	/* Extended Message Object 41 Data 1 Register */
#define CAN_EMO42DATA1	(*( CAN_MODATAL0_type *) 0xF0019544U)	/* Extended Message Object 42 Data 1 Register */
#define CAN_EMO43DATA1	(*( CAN_MODATAL0_type *) 0xF0019564U)	/* Extended Message Object 43 Data 1 Register */
#define CAN_EMO44DATA1	(*( CAN_MODATAL0_type *) 0xF0019584U)	/* Extended Message Object 44 Data 1 Register */
#define CAN_EMO45DATA1	(*( CAN_MODATAL0_type *) 0xF00195A4U)	/* Extended Message Object 45 Data 1 Register */
#define CAN_EMO46DATA1	(*( CAN_MODATAL0_type *) 0xF00195C4U)	/* Extended Message Object 46 Data 1 Register */
#define CAN_EMO47DATA1	(*( CAN_MODATAL0_type *) 0xF00195E4U)	/* Extended Message Object 47 Data 1 Register */
#define CAN_EMO48DATA1	(*( CAN_MODATAL0_type *) 0xF0019604U)	/* Extended Message Object 48 Data 1 Register */
#define CAN_EMO49DATA1	(*( CAN_MODATAL0_type *) 0xF0019624U)	/* Extended Message Object 49 Data 1 Register */
#define CAN_EMO50DATA1	(*( CAN_MODATAL0_type *) 0xF0019644U)	/* Extended Message Object 50 Data 1 Register */
#define CAN_EMO51DATA1	(*( CAN_MODATAL0_type *) 0xF0019664U)	/* Extended Message Object 51 Data 1 Register */
#define CAN_EMO52DATA1	(*( CAN_MODATAL0_type *) 0xF0019684U)	/* Extended Message Object 52 Data 1 Register */
#define CAN_EMO53DATA1	(*( CAN_MODATAL0_type *) 0xF00196A4U)	/* Extended Message Object 53 Data 1 Register */
#define CAN_EMO54DATA1	(*( CAN_MODATAL0_type *) 0xF00196C4U)	/* Extended Message Object 54 Data 1 Register */
#define CAN_EMO55DATA1	(*( CAN_MODATAL0_type *) 0xF00196E4U)	/* Extended Message Object 55 Data 1 Register */
#define CAN_EMO56DATA1	(*( CAN_MODATAL0_type *) 0xF0019704U)	/* Extended Message Object 56 Data 1 Register */
#define CAN_EMO57DATA1	(*( CAN_MODATAL0_type *) 0xF0019724U)	/* Extended Message Object 57 Data 1 Register */
#define CAN_EMO58DATA1	(*( CAN_MODATAL0_type *) 0xF0019744U)	/* Extended Message Object 58 Data 1 Register */
#define CAN_EMO59DATA1	(*( CAN_MODATAL0_type *) 0xF0019764U)	/* Extended Message Object 59 Data 1 Register */
#define CAN_EMO60DATA1	(*( CAN_MODATAL0_type *) 0xF0019784U)	/* Extended Message Object 60 Data 1 Register */
#define CAN_EMO61DATA1	(*( CAN_MODATAL0_type *) 0xF00197A4U)	/* Extended Message Object 61 Data 1 Register */
#define CAN_EMO62DATA1	(*( CAN_MODATAL0_type *) 0xF00197C4U)	/* Extended Message Object 62 Data 1 Register */
#define CAN_EMO63DATA1	(*( CAN_MODATAL0_type *) 0xF00197E4U)	/* Extended Message Object 63 Data 1 Register */
#define CAN_EMO64DATA1	(*( CAN_MODATAL0_type *) 0xF0019804U)	/* Extended Message Object 64 Data 1 Register */
#define CAN_EMO65DATA1	(*( CAN_MODATAL0_type *) 0xF0019824U)	/* Extended Message Object 65 Data 1 Register */
#define CAN_EMO66DATA1	(*( CAN_MODATAL0_type *) 0xF0019844U)	/* Extended Message Object 66 Data 1 Register */
#define CAN_EMO67DATA1	(*( CAN_MODATAL0_type *) 0xF0019864U)	/* Extended Message Object 67 Data 1 Register */
#define CAN_EMO68DATA1	(*( CAN_MODATAL0_type *) 0xF0019884U)	/* Extended Message Object 68 Data 1 Register */
#define CAN_EMO69DATA1	(*( CAN_MODATAL0_type *) 0xF00198A4U)	/* Extended Message Object 69 Data 1 Register */
#define CAN_EMO70DATA1	(*( CAN_MODATAL0_type *) 0xF00198C4U)	/* Extended Message Object 70 Data 1 Register */
#define CAN_EMO71DATA1	(*( CAN_MODATAL0_type *) 0xF00198E4U)	/* Extended Message Object 71 Data 1 Register */
#define CAN_EMO72DATA1	(*( CAN_MODATAL0_type *) 0xF0019904U)	/* Extended Message Object 72 Data 1 Register */
#define CAN_EMO73DATA1	(*( CAN_MODATAL0_type *) 0xF0019924U)	/* Extended Message Object 73 Data 1 Register */
#define CAN_EMO74DATA1	(*( CAN_MODATAL0_type *) 0xF0019944U)	/* Extended Message Object 74 Data 1 Register */
#define CAN_EMO75DATA1	(*( CAN_MODATAL0_type *) 0xF0019964U)	/* Extended Message Object 75 Data 1 Register */
#define CAN_EMO76DATA1	(*( CAN_MODATAL0_type *) 0xF0019984U)	/* Extended Message Object 76 Data 1 Register */
#define CAN_EMO77DATA1	(*( CAN_MODATAL0_type *) 0xF00199A4U)	/* Extended Message Object 77 Data 1 Register */
#define CAN_EMO78DATA1	(*( CAN_MODATAL0_type *) 0xF00199C4U)	/* Extended Message Object 78 Data 1 Register */
#define CAN_EMO79DATA1	(*( CAN_MODATAL0_type *) 0xF00199E4U)	/* Extended Message Object 79 Data 1 Register */
#define CAN_EMO80DATA1	(*( CAN_MODATAL0_type *) 0xF0019A04U)	/* Extended Message Object 80 Data 1 Register */
#define CAN_EMO81DATA1	(*( CAN_MODATAL0_type *) 0xF0019A24U)	/* Extended Message Object 81 Data 1 Register */
#define CAN_EMO82DATA1	(*( CAN_MODATAL0_type *) 0xF0019A44U)	/* Extended Message Object 82 Data 1 Register */
#define CAN_EMO83DATA1	(*( CAN_MODATAL0_type *) 0xF0019A64U)	/* Extended Message Object 83 Data 1 Register */
#define CAN_EMO84DATA1	(*( CAN_MODATAL0_type *) 0xF0019A84U)	/* Extended Message Object 84 Data 1 Register */
#define CAN_EMO85DATA1	(*( CAN_MODATAL0_type *) 0xF0019AA4U)	/* Extended Message Object 85 Data 1 Register */
#define CAN_EMO86DATA1	(*( CAN_MODATAL0_type *) 0xF0019AC4U)	/* Extended Message Object 86 Data 1 Register */
#define CAN_EMO87DATA1	(*( CAN_MODATAL0_type *) 0xF0019AE4U)	/* Extended Message Object 87 Data 1 Register */
#define CAN_EMO88DATA1	(*( CAN_MODATAL0_type *) 0xF0019B04U)	/* Extended Message Object 88 Data 1 Register */
#define CAN_EMO89DATA1	(*( CAN_MODATAL0_type *) 0xF0019B24U)	/* Extended Message Object 89 Data 1 Register */
#define CAN_EMO90DATA1	(*( CAN_MODATAL0_type *) 0xF0019B44U)	/* Extended Message Object 90 Data 1 Register */
#define CAN_EMO91DATA1	(*( CAN_MODATAL0_type *) 0xF0019B64U)	/* Extended Message Object 91 Data 1 Register */
#define CAN_EMO92DATA1	(*( CAN_MODATAL0_type *) 0xF0019B84U)	/* Extended Message Object 92 Data 1 Register */
#define CAN_EMO93DATA1	(*( CAN_MODATAL0_type *) 0xF0019BA4U)	/* Extended Message Object 93 Data 1 Register */
#define CAN_EMO94DATA1	(*( CAN_MODATAL0_type *) 0xF0019BC4U)	/* Extended Message Object 94 Data 1 Register */
#define CAN_EMO95DATA1	(*( CAN_MODATAL0_type *) 0xF0019BE4U)	/* Extended Message Object 95 Data 1 Register */
#define CAN_EMO96DATA1	(*( CAN_MODATAL0_type *) 0xF0019C04U)	/* Extended Message Object 96 Data 1 Register */
#define CAN_EMO97DATA1	(*( CAN_MODATAL0_type *) 0xF0019C24U)	/* Extended Message Object 97 Data 1 Register */
#define CAN_EMO98DATA1	(*( CAN_MODATAL0_type *) 0xF0019C44U)	/* Extended Message Object 98 Data 1 Register */
#define CAN_EMO99DATA1	(*( CAN_MODATAL0_type *) 0xF0019C64U)	/* Extended Message Object 99 Data 1 Register */
#define CAN_EMO100DATA1	(*( CAN_MODATAL0_type *) 0xF0019C84U)	/* Extended Message Object 100 Data 1 Register */
#define CAN_EMO101DATA1	(*( CAN_MODATAL0_type *) 0xF0019CA4U)	/* Extended Message Object 101 Data 1 Register */
#define CAN_EMO102DATA1	(*( CAN_MODATAL0_type *) 0xF0019CC4U)	/* Extended Message Object 102 Data 1 Register */
#define CAN_EMO103DATA1	(*( CAN_MODATAL0_type *) 0xF0019CE4U)	/* Extended Message Object 103 Data 1 Register */
#define CAN_EMO104DATA1	(*( CAN_MODATAL0_type *) 0xF0019D04U)	/* Extended Message Object 104 Data 1 Register */
#define CAN_EMO105DATA1	(*( CAN_MODATAL0_type *) 0xF0019D24U)	/* Extended Message Object 105 Data 1 Register */
#define CAN_EMO106DATA1	(*( CAN_MODATAL0_type *) 0xF0019D44U)	/* Extended Message Object 106 Data 1 Register */
#define CAN_EMO107DATA1	(*( CAN_MODATAL0_type *) 0xF0019D64U)	/* Extended Message Object 107 Data 1 Register */
#define CAN_EMO108DATA1	(*( CAN_MODATAL0_type *) 0xF0019D84U)	/* Extended Message Object 108 Data 1 Register */
#define CAN_EMO109DATA1	(*( CAN_MODATAL0_type *) 0xF0019DA4U)	/* Extended Message Object 109 Data 1 Register */
#define CAN_EMO110DATA1	(*( CAN_MODATAL0_type *) 0xF0019DC4U)	/* Extended Message Object 110 Data 1 Register */
#define CAN_EMO111DATA1	(*( CAN_MODATAL0_type *) 0xF0019DE4U)	/* Extended Message Object 111 Data 1 Register */
#define CAN_EMO112DATA1	(*( CAN_MODATAL0_type *) 0xF0019E04U)	/* Extended Message Object 112 Data 1 Register */
#define CAN_EMO113DATA1	(*( CAN_MODATAL0_type *) 0xF0019E24U)	/* Extended Message Object 113 Data 1 Register */
#define CAN_EMO114DATA1	(*( CAN_MODATAL0_type *) 0xF0019E44U)	/* Extended Message Object 114 Data 1 Register */
#define CAN_EMO115DATA1	(*( CAN_MODATAL0_type *) 0xF0019E64U)	/* Extended Message Object 115 Data 1 Register */
#define CAN_EMO116DATA1	(*( CAN_MODATAL0_type *) 0xF0019E84U)	/* Extended Message Object 116 Data 1 Register */
#define CAN_EMO117DATA1	(*( CAN_MODATAL0_type *) 0xF0019EA4U)	/* Extended Message Object 117 Data 1 Register */
#define CAN_EMO118DATA1	(*( CAN_MODATAL0_type *) 0xF0019EC4U)	/* Extended Message Object 118 Data 1 Register */
#define CAN_EMO119DATA1	(*( CAN_MODATAL0_type *) 0xF0019EE4U)	/* Extended Message Object 119 Data 1 Register */
#define CAN_EMO120DATA1	(*( CAN_MODATAL0_type *) 0xF0019F04U)	/* Extended Message Object 120 Data 1 Register */
#define CAN_EMO121DATA1	(*( CAN_MODATAL0_type *) 0xF0019F24U)	/* Extended Message Object 121 Data 1 Register */
#define CAN_EMO122DATA1	(*( CAN_MODATAL0_type *) 0xF0019F44U)	/* Extended Message Object 122 Data 1 Register */
#define CAN_EMO123DATA1	(*( CAN_MODATAL0_type *) 0xF0019F64U)	/* Extended Message Object 123 Data 1 Register */
#define CAN_EMO124DATA1	(*( CAN_MODATAL0_type *) 0xF0019F84U)	/* Extended Message Object 124 Data 1 Register */
#define CAN_EMO125DATA1	(*( CAN_MODATAL0_type *) 0xF0019FA4U)	/* Extended Message Object 125 Data 1 Register */
#define CAN_EMO126DATA1	(*( CAN_MODATAL0_type *) 0xF0019FC4U)	/* Extended Message Object 126 Data 1 Register */
#define CAN_EMO127DATA1	(*( CAN_MODATAL0_type *) 0xF0019FE4U)	/* Extended Message Object 127 Data 1 Register */
#define CAN_EMO0DATA2	(*( CAN_MODATAL0_type *) 0xF0019008U)	/* Extended Message Object 0 Data 2 Register */
#define CAN_EMO1DATA2	(*( CAN_MODATAL0_type *) 0xF0019028U)	/* Extended Message Object 1 Data 2 Register */
#define CAN_EMO2DATA2	(*( CAN_MODATAL0_type *) 0xF0019048U)	/* Extended Message Object 2 Data 2 Register */
#define CAN_EMO3DATA2	(*( CAN_MODATAL0_type *) 0xF0019068U)	/* Extended Message Object 3 Data 2 Register */
#define CAN_EMO4DATA2	(*( CAN_MODATAL0_type *) 0xF0019088U)	/* Extended Message Object 4 Data 2 Register */
#define CAN_EMO5DATA2	(*( CAN_MODATAL0_type *) 0xF00190A8U)	/* Extended Message Object 5 Data 2 Register */
#define CAN_EMO6DATA2	(*( CAN_MODATAL0_type *) 0xF00190C8U)	/* Extended Message Object 6 Data 2 Register */
#define CAN_EMO7DATA2	(*( CAN_MODATAL0_type *) 0xF00190E8U)	/* Extended Message Object 7 Data 2 Register */
#define CAN_EMO8DATA2	(*( CAN_MODATAL0_type *) 0xF0019108U)	/* Extended Message Object 8 Data 2 Register */
#define CAN_EMO9DATA2	(*( CAN_MODATAL0_type *) 0xF0019128U)	/* Extended Message Object 9 Data 2 Register */
#define CAN_EMO10DATA2	(*( CAN_MODATAL0_type *) 0xF0019148U)	/* Extended Message Object 10 Data 2 Register */
#define CAN_EMO11DATA2	(*( CAN_MODATAL0_type *) 0xF0019168U)	/* Extended Message Object 11 Data 2 Register */
#define CAN_EMO12DATA2	(*( CAN_MODATAL0_type *) 0xF0019188U)	/* Extended Message Object 12 Data 2 Register */
#define CAN_EMO13DATA2	(*( CAN_MODATAL0_type *) 0xF00191A8U)	/* Extended Message Object 13 Data 2 Register */
#define CAN_EMO14DATA2	(*( CAN_MODATAL0_type *) 0xF00191C8U)	/* Extended Message Object 14 Data 2 Register */
#define CAN_EMO15DATA2	(*( CAN_MODATAL0_type *) 0xF00191E8U)	/* Extended Message Object 15 Data 2 Register */
#define CAN_EMO16DATA2	(*( CAN_MODATAL0_type *) 0xF0019208U)	/* Extended Message Object 16 Data 2 Register */
#define CAN_EMO17DATA2	(*( CAN_MODATAL0_type *) 0xF0019228U)	/* Extended Message Object 17 Data 2 Register */
#define CAN_EMO18DATA2	(*( CAN_MODATAL0_type *) 0xF0019248U)	/* Extended Message Object 18 Data 2 Register */
#define CAN_EMO19DATA2	(*( CAN_MODATAL0_type *) 0xF0019268U)	/* Extended Message Object 19 Data 2 Register */
#define CAN_EMO20DATA2	(*( CAN_MODATAL0_type *) 0xF0019288U)	/* Extended Message Object 20 Data 2 Register */
#define CAN_EMO21DATA2	(*( CAN_MODATAL0_type *) 0xF00192A8U)	/* Extended Message Object 21 Data 2 Register */
#define CAN_EMO22DATA2	(*( CAN_MODATAL0_type *) 0xF00192C8U)	/* Extended Message Object 22 Data 2 Register */
#define CAN_EMO23DATA2	(*( CAN_MODATAL0_type *) 0xF00192E8U)	/* Extended Message Object 23 Data 2 Register */
#define CAN_EMO24DATA2	(*( CAN_MODATAL0_type *) 0xF0019308U)	/* Extended Message Object 24 Data 2 Register */
#define CAN_EMO25DATA2	(*( CAN_MODATAL0_type *) 0xF0019328U)	/* Extended Message Object 25 Data 2 Register */
#define CAN_EMO26DATA2	(*( CAN_MODATAL0_type *) 0xF0019348U)	/* Extended Message Object 26 Data 2 Register */
#define CAN_EMO27DATA2	(*( CAN_MODATAL0_type *) 0xF0019368U)	/* Extended Message Object 27 Data 2 Register */
#define CAN_EMO28DATA2	(*( CAN_MODATAL0_type *) 0xF0019388U)	/* Extended Message Object 28 Data 2 Register */
#define CAN_EMO29DATA2	(*( CAN_MODATAL0_type *) 0xF00193A8U)	/* Extended Message Object 29 Data 2 Register */
#define CAN_EMO30DATA2	(*( CAN_MODATAL0_type *) 0xF00193C8U)	/* Extended Message Object 30 Data 2 Register */
#define CAN_EMO31DATA2	(*( CAN_MODATAL0_type *) 0xF00193E8U)	/* Extended Message Object 31 Data 2 Register */
#define CAN_EMO32DATA2	(*( CAN_MODATAL0_type *) 0xF0019408U)	/* Extended Message Object 32 Data 2 Register */
#define CAN_EMO33DATA2	(*( CAN_MODATAL0_type *) 0xF0019428U)	/* Extended Message Object 33 Data 2 Register */
#define CAN_EMO34DATA2	(*( CAN_MODATAL0_type *) 0xF0019448U)	/* Extended Message Object 34 Data 2 Register */
#define CAN_EMO35DATA2	(*( CAN_MODATAL0_type *) 0xF0019468U)	/* Extended Message Object 35 Data 2 Register */
#define CAN_EMO36DATA2	(*( CAN_MODATAL0_type *) 0xF0019488U)	/* Extended Message Object 36 Data 2 Register */
#define CAN_EMO37DATA2	(*( CAN_MODATAL0_type *) 0xF00194A8U)	/* Extended Message Object 37 Data 2 Register */
#define CAN_EMO38DATA2	(*( CAN_MODATAL0_type *) 0xF00194C8U)	/* Extended Message Object 38 Data 2 Register */
#define CAN_EMO39DATA2	(*( CAN_MODATAL0_type *) 0xF00194E8U)	/* Extended Message Object 39 Data 2 Register */
#define CAN_EMO40DATA2	(*( CAN_MODATAL0_type *) 0xF0019508U)	/* Extended Message Object 40 Data 2 Register */
#define CAN_EMO41DATA2	(*( CAN_MODATAL0_type *) 0xF0019528U)	/* Extended Message Object 41 Data 2 Register */
#define CAN_EMO42DATA2	(*( CAN_MODATAL0_type *) 0xF0019548U)	/* Extended Message Object 42 Data 2 Register */
#define CAN_EMO43DATA2	(*( CAN_MODATAL0_type *) 0xF0019568U)	/* Extended Message Object 43 Data 2 Register */
#define CAN_EMO44DATA2	(*( CAN_MODATAL0_type *) 0xF0019588U)	/* Extended Message Object 44 Data 2 Register */
#define CAN_EMO45DATA2	(*( CAN_MODATAL0_type *) 0xF00195A8U)	/* Extended Message Object 45 Data 2 Register */
#define CAN_EMO46DATA2	(*( CAN_MODATAL0_type *) 0xF00195C8U)	/* Extended Message Object 46 Data 2 Register */
#define CAN_EMO47DATA2	(*( CAN_MODATAL0_type *) 0xF00195E8U)	/* Extended Message Object 47 Data 2 Register */
#define CAN_EMO48DATA2	(*( CAN_MODATAL0_type *) 0xF0019608U)	/* Extended Message Object 48 Data 2 Register */
#define CAN_EMO49DATA2	(*( CAN_MODATAL0_type *) 0xF0019628U)	/* Extended Message Object 49 Data 2 Register */
#define CAN_EMO50DATA2	(*( CAN_MODATAL0_type *) 0xF0019648U)	/* Extended Message Object 50 Data 2 Register */
#define CAN_EMO51DATA2	(*( CAN_MODATAL0_type *) 0xF0019668U)	/* Extended Message Object 51 Data 2 Register */
#define CAN_EMO52DATA2	(*( CAN_MODATAL0_type *) 0xF0019688U)	/* Extended Message Object 52 Data 2 Register */
#define CAN_EMO53DATA2	(*( CAN_MODATAL0_type *) 0xF00196A8U)	/* Extended Message Object 53 Data 2 Register */
#define CAN_EMO54DATA2	(*( CAN_MODATAL0_type *) 0xF00196C8U)	/* Extended Message Object 54 Data 2 Register */
#define CAN_EMO55DATA2	(*( CAN_MODATAL0_type *) 0xF00196E8U)	/* Extended Message Object 55 Data 2 Register */
#define CAN_EMO56DATA2	(*( CAN_MODATAL0_type *) 0xF0019708U)	/* Extended Message Object 56 Data 2 Register */
#define CAN_EMO57DATA2	(*( CAN_MODATAL0_type *) 0xF0019728U)	/* Extended Message Object 57 Data 2 Register */
#define CAN_EMO58DATA2	(*( CAN_MODATAL0_type *) 0xF0019748U)	/* Extended Message Object 58 Data 2 Register */
#define CAN_EMO59DATA2	(*( CAN_MODATAL0_type *) 0xF0019768U)	/* Extended Message Object 59 Data 2 Register */
#define CAN_EMO60DATA2	(*( CAN_MODATAL0_type *) 0xF0019788U)	/* Extended Message Object 60 Data 2 Register */
#define CAN_EMO61DATA2	(*( CAN_MODATAL0_type *) 0xF00197A8U)	/* Extended Message Object 61 Data 2 Register */
#define CAN_EMO62DATA2	(*( CAN_MODATAL0_type *) 0xF00197C8U)	/* Extended Message Object 62 Data 2 Register */
#define CAN_EMO63DATA2	(*( CAN_MODATAL0_type *) 0xF00197E8U)	/* Extended Message Object 63 Data 2 Register */
#define CAN_EMO64DATA2	(*( CAN_MODATAL0_type *) 0xF0019808U)	/* Extended Message Object 64 Data 2 Register */
#define CAN_EMO65DATA2	(*( CAN_MODATAL0_type *) 0xF0019828U)	/* Extended Message Object 65 Data 2 Register */
#define CAN_EMO66DATA2	(*( CAN_MODATAL0_type *) 0xF0019848U)	/* Extended Message Object 66 Data 2 Register */
#define CAN_EMO67DATA2	(*( CAN_MODATAL0_type *) 0xF0019868U)	/* Extended Message Object 67 Data 2 Register */
#define CAN_EMO68DATA2	(*( CAN_MODATAL0_type *) 0xF0019888U)	/* Extended Message Object 68 Data 2 Register */
#define CAN_EMO69DATA2	(*( CAN_MODATAL0_type *) 0xF00198A8U)	/* Extended Message Object 69 Data 2 Register */
#define CAN_EMO70DATA2	(*( CAN_MODATAL0_type *) 0xF00198C8U)	/* Extended Message Object 70 Data 2 Register */
#define CAN_EMO71DATA2	(*( CAN_MODATAL0_type *) 0xF00198E8U)	/* Extended Message Object 71 Data 2 Register */
#define CAN_EMO72DATA2	(*( CAN_MODATAL0_type *) 0xF0019908U)	/* Extended Message Object 72 Data 2 Register */
#define CAN_EMO73DATA2	(*( CAN_MODATAL0_type *) 0xF0019928U)	/* Extended Message Object 73 Data 2 Register */
#define CAN_EMO74DATA2	(*( CAN_MODATAL0_type *) 0xF0019948U)	/* Extended Message Object 74 Data 2 Register */
#define CAN_EMO75DATA2	(*( CAN_MODATAL0_type *) 0xF0019968U)	/* Extended Message Object 75 Data 2 Register */
#define CAN_EMO76DATA2	(*( CAN_MODATAL0_type *) 0xF0019988U)	/* Extended Message Object 76 Data 2 Register */
#define CAN_EMO77DATA2	(*( CAN_MODATAL0_type *) 0xF00199A8U)	/* Extended Message Object 77 Data 2 Register */
#define CAN_EMO78DATA2	(*( CAN_MODATAL0_type *) 0xF00199C8U)	/* Extended Message Object 78 Data 2 Register */
#define CAN_EMO79DATA2	(*( CAN_MODATAL0_type *) 0xF00199E8U)	/* Extended Message Object 79 Data 2 Register */
#define CAN_EMO80DATA2	(*( CAN_MODATAL0_type *) 0xF0019A08U)	/* Extended Message Object 80 Data 2 Register */
#define CAN_EMO81DATA2	(*( CAN_MODATAL0_type *) 0xF0019A28U)	/* Extended Message Object 81 Data 2 Register */
#define CAN_EMO82DATA2	(*( CAN_MODATAL0_type *) 0xF0019A48U)	/* Extended Message Object 82 Data 2 Register */
#define CAN_EMO83DATA2	(*( CAN_MODATAL0_type *) 0xF0019A68U)	/* Extended Message Object 83 Data 2 Register */
#define CAN_EMO84DATA2	(*( CAN_MODATAL0_type *) 0xF0019A88U)	/* Extended Message Object 84 Data 2 Register */
#define CAN_EMO85DATA2	(*( CAN_MODATAL0_type *) 0xF0019AA8U)	/* Extended Message Object 85 Data 2 Register */
#define CAN_EMO86DATA2	(*( CAN_MODATAL0_type *) 0xF0019AC8U)	/* Extended Message Object 86 Data 2 Register */
#define CAN_EMO87DATA2	(*( CAN_MODATAL0_type *) 0xF0019AE8U)	/* Extended Message Object 87 Data 2 Register */
#define CAN_EMO88DATA2	(*( CAN_MODATAL0_type *) 0xF0019B08U)	/* Extended Message Object 88 Data 2 Register */
#define CAN_EMO89DATA2	(*( CAN_MODATAL0_type *) 0xF0019B28U)	/* Extended Message Object 89 Data 2 Register */
#define CAN_EMO90DATA2	(*( CAN_MODATAL0_type *) 0xF0019B48U)	/* Extended Message Object 90 Data 2 Register */
#define CAN_EMO91DATA2	(*( CAN_MODATAL0_type *) 0xF0019B68U)	/* Extended Message Object 91 Data 2 Register */
#define CAN_EMO92DATA2	(*( CAN_MODATAL0_type *) 0xF0019B88U)	/* Extended Message Object 92 Data 2 Register */
#define CAN_EMO93DATA2	(*( CAN_MODATAL0_type *) 0xF0019BA8U)	/* Extended Message Object 93 Data 2 Register */
#define CAN_EMO94DATA2	(*( CAN_MODATAL0_type *) 0xF0019BC8U)	/* Extended Message Object 94 Data 2 Register */
#define CAN_EMO95DATA2	(*( CAN_MODATAL0_type *) 0xF0019BE8U)	/* Extended Message Object 95 Data 2 Register */
#define CAN_EMO96DATA2	(*( CAN_MODATAL0_type *) 0xF0019C08U)	/* Extended Message Object 96 Data 2 Register */
#define CAN_EMO97DATA2	(*( CAN_MODATAL0_type *) 0xF0019C28U)	/* Extended Message Object 97 Data 2 Register */
#define CAN_EMO98DATA2	(*( CAN_MODATAL0_type *) 0xF0019C48U)	/* Extended Message Object 98 Data 2 Register */
#define CAN_EMO99DATA2	(*( CAN_MODATAL0_type *) 0xF0019C68U)	/* Extended Message Object 99 Data 2 Register */
#define CAN_EMO100DATA2	(*( CAN_MODATAL0_type *) 0xF0019C88U)	/* Extended Message Object 100 Data 2 Register */
#define CAN_EMO101DATA2	(*( CAN_MODATAL0_type *) 0xF0019CA8U)	/* Extended Message Object 101 Data 2 Register */
#define CAN_EMO102DATA2	(*( CAN_MODATAL0_type *) 0xF0019CC8U)	/* Extended Message Object 102 Data 2 Register */
#define CAN_EMO103DATA2	(*( CAN_MODATAL0_type *) 0xF0019CE8U)	/* Extended Message Object 103 Data 2 Register */
#define CAN_EMO104DATA2	(*( CAN_MODATAL0_type *) 0xF0019D08U)	/* Extended Message Object 104 Data 2 Register */
#define CAN_EMO105DATA2	(*( CAN_MODATAL0_type *) 0xF0019D28U)	/* Extended Message Object 105 Data 2 Register */
#define CAN_EMO106DATA2	(*( CAN_MODATAL0_type *) 0xF0019D48U)	/* Extended Message Object 106 Data 2 Register */
#define CAN_EMO107DATA2	(*( CAN_MODATAL0_type *) 0xF0019D68U)	/* Extended Message Object 107 Data 2 Register */
#define CAN_EMO108DATA2	(*( CAN_MODATAL0_type *) 0xF0019D88U)	/* Extended Message Object 108 Data 2 Register */
#define CAN_EMO109DATA2	(*( CAN_MODATAL0_type *) 0xF0019DA8U)	/* Extended Message Object 109 Data 2 Register */
#define CAN_EMO110DATA2	(*( CAN_MODATAL0_type *) 0xF0019DC8U)	/* Extended Message Object 110 Data 2 Register */
#define CAN_EMO111DATA2	(*( CAN_MODATAL0_type *) 0xF0019DE8U)	/* Extended Message Object 111 Data 2 Register */
#define CAN_EMO112DATA2	(*( CAN_MODATAL0_type *) 0xF0019E08U)	/* Extended Message Object 112 Data 2 Register */
#define CAN_EMO113DATA2	(*( CAN_MODATAL0_type *) 0xF0019E28U)	/* Extended Message Object 113 Data 2 Register */
#define CAN_EMO114DATA2	(*( CAN_MODATAL0_type *) 0xF0019E48U)	/* Extended Message Object 114 Data 2 Register */
#define CAN_EMO115DATA2	(*( CAN_MODATAL0_type *) 0xF0019E68U)	/* Extended Message Object 115 Data 2 Register */
#define CAN_EMO116DATA2	(*( CAN_MODATAL0_type *) 0xF0019E88U)	/* Extended Message Object 116 Data 2 Register */
#define CAN_EMO117DATA2	(*( CAN_MODATAL0_type *) 0xF0019EA8U)	/* Extended Message Object 117 Data 2 Register */
#define CAN_EMO118DATA2	(*( CAN_MODATAL0_type *) 0xF0019EC8U)	/* Extended Message Object 118 Data 2 Register */
#define CAN_EMO119DATA2	(*( CAN_MODATAL0_type *) 0xF0019EE8U)	/* Extended Message Object 119 Data 2 Register */
#define CAN_EMO120DATA2	(*( CAN_MODATAL0_type *) 0xF0019F08U)	/* Extended Message Object 120 Data 2 Register */
#define CAN_EMO121DATA2	(*( CAN_MODATAL0_type *) 0xF0019F28U)	/* Extended Message Object 121 Data 2 Register */
#define CAN_EMO122DATA2	(*( CAN_MODATAL0_type *) 0xF0019F48U)	/* Extended Message Object 122 Data 2 Register */
#define CAN_EMO123DATA2	(*( CAN_MODATAL0_type *) 0xF0019F68U)	/* Extended Message Object 123 Data 2 Register */
#define CAN_EMO124DATA2	(*( CAN_MODATAL0_type *) 0xF0019F88U)	/* Extended Message Object 124 Data 2 Register */
#define CAN_EMO125DATA2	(*( CAN_MODATAL0_type *) 0xF0019FA8U)	/* Extended Message Object 125 Data 2 Register */
#define CAN_EMO126DATA2	(*( CAN_MODATAL0_type *) 0xF0019FC8U)	/* Extended Message Object 126 Data 2 Register */
#define CAN_EMO127DATA2	(*( CAN_MODATAL0_type *) 0xF0019FE8U)	/* Extended Message Object 127 Data 2 Register */
#define CAN_EMO0DATA3	(*( CAN_MODATAL0_type *) 0xF001900CU)	/* Extended Message Object 0 Data 3 Register */
#define CAN_EMO1DATA3	(*( CAN_MODATAL0_type *) 0xF001902CU)	/* Extended Message Object 1 Data 3 Register */
#define CAN_EMO2DATA3	(*( CAN_MODATAL0_type *) 0xF001904CU)	/* Extended Message Object 2 Data 3 Register */
#define CAN_EMO3DATA3	(*( CAN_MODATAL0_type *) 0xF001906CU)	/* Extended Message Object 3 Data 3 Register */
#define CAN_EMO4DATA3	(*( CAN_MODATAL0_type *) 0xF001908CU)	/* Extended Message Object 4 Data 3 Register */
#define CAN_EMO5DATA3	(*( CAN_MODATAL0_type *) 0xF00190ACU)	/* Extended Message Object 5 Data 3 Register */
#define CAN_EMO6DATA3	(*( CAN_MODATAL0_type *) 0xF00190CCU)	/* Extended Message Object 6 Data 3 Register */
#define CAN_EMO7DATA3	(*( CAN_MODATAL0_type *) 0xF00190ECU)	/* Extended Message Object 7 Data 3 Register */
#define CAN_EMO8DATA3	(*( CAN_MODATAL0_type *) 0xF001910CU)	/* Extended Message Object 8 Data 3 Register */
#define CAN_EMO9DATA3	(*( CAN_MODATAL0_type *) 0xF001912CU)	/* Extended Message Object 9 Data 3 Register */
#define CAN_EMO10DATA3	(*( CAN_MODATAL0_type *) 0xF001914CU)	/* Extended Message Object 10 Data 3 Register */
#define CAN_EMO11DATA3	(*( CAN_MODATAL0_type *) 0xF001916CU)	/* Extended Message Object 11 Data 3 Register */
#define CAN_EMO12DATA3	(*( CAN_MODATAL0_type *) 0xF001918CU)	/* Extended Message Object 12 Data 3 Register */
#define CAN_EMO13DATA3	(*( CAN_MODATAL0_type *) 0xF00191ACU)	/* Extended Message Object 13 Data 3 Register */
#define CAN_EMO14DATA3	(*( CAN_MODATAL0_type *) 0xF00191CCU)	/* Extended Message Object 14 Data 3 Register */
#define CAN_EMO15DATA3	(*( CAN_MODATAL0_type *) 0xF00191ECU)	/* Extended Message Object 15 Data 3 Register */
#define CAN_EMO16DATA3	(*( CAN_MODATAL0_type *) 0xF001920CU)	/* Extended Message Object 16 Data 3 Register */
#define CAN_EMO17DATA3	(*( CAN_MODATAL0_type *) 0xF001922CU)	/* Extended Message Object 17 Data 3 Register */
#define CAN_EMO18DATA3	(*( CAN_MODATAL0_type *) 0xF001924CU)	/* Extended Message Object 18 Data 3 Register */
#define CAN_EMO19DATA3	(*( CAN_MODATAL0_type *) 0xF001926CU)	/* Extended Message Object 19 Data 3 Register */
#define CAN_EMO20DATA3	(*( CAN_MODATAL0_type *) 0xF001928CU)	/* Extended Message Object 20 Data 3 Register */
#define CAN_EMO21DATA3	(*( CAN_MODATAL0_type *) 0xF00192ACU)	/* Extended Message Object 21 Data 3 Register */
#define CAN_EMO22DATA3	(*( CAN_MODATAL0_type *) 0xF00192CCU)	/* Extended Message Object 22 Data 3 Register */
#define CAN_EMO23DATA3	(*( CAN_MODATAL0_type *) 0xF00192ECU)	/* Extended Message Object 23 Data 3 Register */
#define CAN_EMO24DATA3	(*( CAN_MODATAL0_type *) 0xF001930CU)	/* Extended Message Object 24 Data 3 Register */
#define CAN_EMO25DATA3	(*( CAN_MODATAL0_type *) 0xF001932CU)	/* Extended Message Object 25 Data 3 Register */
#define CAN_EMO26DATA3	(*( CAN_MODATAL0_type *) 0xF001934CU)	/* Extended Message Object 26 Data 3 Register */
#define CAN_EMO27DATA3	(*( CAN_MODATAL0_type *) 0xF001936CU)	/* Extended Message Object 27 Data 3 Register */
#define CAN_EMO28DATA3	(*( CAN_MODATAL0_type *) 0xF001938CU)	/* Extended Message Object 28 Data 3 Register */
#define CAN_EMO29DATA3	(*( CAN_MODATAL0_type *) 0xF00193ACU)	/* Extended Message Object 29 Data 3 Register */
#define CAN_EMO30DATA3	(*( CAN_MODATAL0_type *) 0xF00193CCU)	/* Extended Message Object 30 Data 3 Register */
#define CAN_EMO31DATA3	(*( CAN_MODATAL0_type *) 0xF00193ECU)	/* Extended Message Object 31 Data 3 Register */
#define CAN_EMO32DATA3	(*( CAN_MODATAL0_type *) 0xF001940CU)	/* Extended Message Object 32 Data 3 Register */
#define CAN_EMO33DATA3	(*( CAN_MODATAL0_type *) 0xF001942CU)	/* Extended Message Object 33 Data 3 Register */
#define CAN_EMO34DATA3	(*( CAN_MODATAL0_type *) 0xF001944CU)	/* Extended Message Object 34 Data 3 Register */
#define CAN_EMO35DATA3	(*( CAN_MODATAL0_type *) 0xF001946CU)	/* Extended Message Object 35 Data 3 Register */
#define CAN_EMO36DATA3	(*( CAN_MODATAL0_type *) 0xF001948CU)	/* Extended Message Object 36 Data 3 Register */
#define CAN_EMO37DATA3	(*( CAN_MODATAL0_type *) 0xF00194ACU)	/* Extended Message Object 37 Data 3 Register */
#define CAN_EMO38DATA3	(*( CAN_MODATAL0_type *) 0xF00194CCU)	/* Extended Message Object 38 Data 3 Register */
#define CAN_EMO39DATA3	(*( CAN_MODATAL0_type *) 0xF00194ECU)	/* Extended Message Object 39 Data 3 Register */
#define CAN_EMO40DATA3	(*( CAN_MODATAL0_type *) 0xF001950CU)	/* Extended Message Object 40 Data 3 Register */
#define CAN_EMO41DATA3	(*( CAN_MODATAL0_type *) 0xF001952CU)	/* Extended Message Object 41 Data 3 Register */
#define CAN_EMO42DATA3	(*( CAN_MODATAL0_type *) 0xF001954CU)	/* Extended Message Object 42 Data 3 Register */
#define CAN_EMO43DATA3	(*( CAN_MODATAL0_type *) 0xF001956CU)	/* Extended Message Object 43 Data 3 Register */
#define CAN_EMO44DATA3	(*( CAN_MODATAL0_type *) 0xF001958CU)	/* Extended Message Object 44 Data 3 Register */
#define CAN_EMO45DATA3	(*( CAN_MODATAL0_type *) 0xF00195ACU)	/* Extended Message Object 45 Data 3 Register */
#define CAN_EMO46DATA3	(*( CAN_MODATAL0_type *) 0xF00195CCU)	/* Extended Message Object 46 Data 3 Register */
#define CAN_EMO47DATA3	(*( CAN_MODATAL0_type *) 0xF00195ECU)	/* Extended Message Object 47 Data 3 Register */
#define CAN_EMO48DATA3	(*( CAN_MODATAL0_type *) 0xF001960CU)	/* Extended Message Object 48 Data 3 Register */
#define CAN_EMO49DATA3	(*( CAN_MODATAL0_type *) 0xF001962CU)	/* Extended Message Object 49 Data 3 Register */
#define CAN_EMO50DATA3	(*( CAN_MODATAL0_type *) 0xF001964CU)	/* Extended Message Object 50 Data 3 Register */
#define CAN_EMO51DATA3	(*( CAN_MODATAL0_type *) 0xF001966CU)	/* Extended Message Object 51 Data 3 Register */
#define CAN_EMO52DATA3	(*( CAN_MODATAL0_type *) 0xF001968CU)	/* Extended Message Object 52 Data 3 Register */
#define CAN_EMO53DATA3	(*( CAN_MODATAL0_type *) 0xF00196ACU)	/* Extended Message Object 53 Data 3 Register */
#define CAN_EMO54DATA3	(*( CAN_MODATAL0_type *) 0xF00196CCU)	/* Extended Message Object 54 Data 3 Register */
#define CAN_EMO55DATA3	(*( CAN_MODATAL0_type *) 0xF00196ECU)	/* Extended Message Object 55 Data 3 Register */
#define CAN_EMO56DATA3	(*( CAN_MODATAL0_type *) 0xF001970CU)	/* Extended Message Object 56 Data 3 Register */
#define CAN_EMO57DATA3	(*( CAN_MODATAL0_type *) 0xF001972CU)	/* Extended Message Object 57 Data 3 Register */
#define CAN_EMO58DATA3	(*( CAN_MODATAL0_type *) 0xF001974CU)	/* Extended Message Object 58 Data 3 Register */
#define CAN_EMO59DATA3	(*( CAN_MODATAL0_type *) 0xF001976CU)	/* Extended Message Object 59 Data 3 Register */
#define CAN_EMO60DATA3	(*( CAN_MODATAL0_type *) 0xF001978CU)	/* Extended Message Object 60 Data 3 Register */
#define CAN_EMO61DATA3	(*( CAN_MODATAL0_type *) 0xF00197ACU)	/* Extended Message Object 61 Data 3 Register */
#define CAN_EMO62DATA3	(*( CAN_MODATAL0_type *) 0xF00197CCU)	/* Extended Message Object 62 Data 3 Register */
#define CAN_EMO63DATA3	(*( CAN_MODATAL0_type *) 0xF00197ECU)	/* Extended Message Object 63 Data 3 Register */
#define CAN_EMO64DATA3	(*( CAN_MODATAL0_type *) 0xF001980CU)	/* Extended Message Object 64 Data 3 Register */
#define CAN_EMO65DATA3	(*( CAN_MODATAL0_type *) 0xF001982CU)	/* Extended Message Object 65 Data 3 Register */
#define CAN_EMO66DATA3	(*( CAN_MODATAL0_type *) 0xF001984CU)	/* Extended Message Object 66 Data 3 Register */
#define CAN_EMO67DATA3	(*( CAN_MODATAL0_type *) 0xF001986CU)	/* Extended Message Object 67 Data 3 Register */
#define CAN_EMO68DATA3	(*( CAN_MODATAL0_type *) 0xF001988CU)	/* Extended Message Object 68 Data 3 Register */
#define CAN_EMO69DATA3	(*( CAN_MODATAL0_type *) 0xF00198ACU)	/* Extended Message Object 69 Data 3 Register */
#define CAN_EMO70DATA3	(*( CAN_MODATAL0_type *) 0xF00198CCU)	/* Extended Message Object 70 Data 3 Register */
#define CAN_EMO71DATA3	(*( CAN_MODATAL0_type *) 0xF00198ECU)	/* Extended Message Object 71 Data 3 Register */
#define CAN_EMO72DATA3	(*( CAN_MODATAL0_type *) 0xF001990CU)	/* Extended Message Object 72 Data 3 Register */
#define CAN_EMO73DATA3	(*( CAN_MODATAL0_type *) 0xF001992CU)	/* Extended Message Object 73 Data 3 Register */
#define CAN_EMO74DATA3	(*( CAN_MODATAL0_type *) 0xF001994CU)	/* Extended Message Object 74 Data 3 Register */
#define CAN_EMO75DATA3	(*( CAN_MODATAL0_type *) 0xF001996CU)	/* Extended Message Object 75 Data 3 Register */
#define CAN_EMO76DATA3	(*( CAN_MODATAL0_type *) 0xF001998CU)	/* Extended Message Object 76 Data 3 Register */
#define CAN_EMO77DATA3	(*( CAN_MODATAL0_type *) 0xF00199ACU)	/* Extended Message Object 77 Data 3 Register */
#define CAN_EMO78DATA3	(*( CAN_MODATAL0_type *) 0xF00199CCU)	/* Extended Message Object 78 Data 3 Register */
#define CAN_EMO79DATA3	(*( CAN_MODATAL0_type *) 0xF00199ECU)	/* Extended Message Object 79 Data 3 Register */
#define CAN_EMO80DATA3	(*( CAN_MODATAL0_type *) 0xF0019A0CU)	/* Extended Message Object 80 Data 3 Register */
#define CAN_EMO81DATA3	(*( CAN_MODATAL0_type *) 0xF0019A2CU)	/* Extended Message Object 81 Data 3 Register */
#define CAN_EMO82DATA3	(*( CAN_MODATAL0_type *) 0xF0019A4CU)	/* Extended Message Object 82 Data 3 Register */
#define CAN_EMO83DATA3	(*( CAN_MODATAL0_type *) 0xF0019A6CU)	/* Extended Message Object 83 Data 3 Register */
#define CAN_EMO84DATA3	(*( CAN_MODATAL0_type *) 0xF0019A8CU)	/* Extended Message Object 84 Data 3 Register */
#define CAN_EMO85DATA3	(*( CAN_MODATAL0_type *) 0xF0019AACU)	/* Extended Message Object 85 Data 3 Register */
#define CAN_EMO86DATA3	(*( CAN_MODATAL0_type *) 0xF0019ACCU)	/* Extended Message Object 86 Data 3 Register */
#define CAN_EMO87DATA3	(*( CAN_MODATAL0_type *) 0xF0019AECU)	/* Extended Message Object 87 Data 3 Register */
#define CAN_EMO88DATA3	(*( CAN_MODATAL0_type *) 0xF0019B0CU)	/* Extended Message Object 88 Data 3 Register */
#define CAN_EMO89DATA3	(*( CAN_MODATAL0_type *) 0xF0019B2CU)	/* Extended Message Object 89 Data 3 Register */
#define CAN_EMO90DATA3	(*( CAN_MODATAL0_type *) 0xF0019B4CU)	/* Extended Message Object 90 Data 3 Register */
#define CAN_EMO91DATA3	(*( CAN_MODATAL0_type *) 0xF0019B6CU)	/* Extended Message Object 91 Data 3 Register */
#define CAN_EMO92DATA3	(*( CAN_MODATAL0_type *) 0xF0019B8CU)	/* Extended Message Object 92 Data 3 Register */
#define CAN_EMO93DATA3	(*( CAN_MODATAL0_type *) 0xF0019BACU)	/* Extended Message Object 93 Data 3 Register */
#define CAN_EMO94DATA3	(*( CAN_MODATAL0_type *) 0xF0019BCCU)	/* Extended Message Object 94 Data 3 Register */
#define CAN_EMO95DATA3	(*( CAN_MODATAL0_type *) 0xF0019BECU)	/* Extended Message Object 95 Data 3 Register */
#define CAN_EMO96DATA3	(*( CAN_MODATAL0_type *) 0xF0019C0CU)	/* Extended Message Object 96 Data 3 Register */
#define CAN_EMO97DATA3	(*( CAN_MODATAL0_type *) 0xF0019C2CU)	/* Extended Message Object 97 Data 3 Register */
#define CAN_EMO98DATA3	(*( CAN_MODATAL0_type *) 0xF0019C4CU)	/* Extended Message Object 98 Data 3 Register */
#define CAN_EMO99DATA3	(*( CAN_MODATAL0_type *) 0xF0019C6CU)	/* Extended Message Object 99 Data 3 Register */
#define CAN_EMO100DATA3	(*( CAN_MODATAL0_type *) 0xF0019C8CU)	/* Extended Message Object 100 Data 3 Register */
#define CAN_EMO101DATA3	(*( CAN_MODATAL0_type *) 0xF0019CACU)	/* Extended Message Object 101 Data 3 Register */
#define CAN_EMO102DATA3	(*( CAN_MODATAL0_type *) 0xF0019CCCU)	/* Extended Message Object 102 Data 3 Register */
#define CAN_EMO103DATA3	(*( CAN_MODATAL0_type *) 0xF0019CECU)	/* Extended Message Object 103 Data 3 Register */
#define CAN_EMO104DATA3	(*( CAN_MODATAL0_type *) 0xF0019D0CU)	/* Extended Message Object 104 Data 3 Register */
#define CAN_EMO105DATA3	(*( CAN_MODATAL0_type *) 0xF0019D2CU)	/* Extended Message Object 105 Data 3 Register */
#define CAN_EMO106DATA3	(*( CAN_MODATAL0_type *) 0xF0019D4CU)	/* Extended Message Object 106 Data 3 Register */
#define CAN_EMO107DATA3	(*( CAN_MODATAL0_type *) 0xF0019D6CU)	/* Extended Message Object 107 Data 3 Register */
#define CAN_EMO108DATA3	(*( CAN_MODATAL0_type *) 0xF0019D8CU)	/* Extended Message Object 108 Data 3 Register */
#define CAN_EMO109DATA3	(*( CAN_MODATAL0_type *) 0xF0019DACU)	/* Extended Message Object 109 Data 3 Register */
#define CAN_EMO110DATA3	(*( CAN_MODATAL0_type *) 0xF0019DCCU)	/* Extended Message Object 110 Data 3 Register */
#define CAN_EMO111DATA3	(*( CAN_MODATAL0_type *) 0xF0019DECU)	/* Extended Message Object 111 Data 3 Register */
#define CAN_EMO112DATA3	(*( CAN_MODATAL0_type *) 0xF0019E0CU)	/* Extended Message Object 112 Data 3 Register */
#define CAN_EMO113DATA3	(*( CAN_MODATAL0_type *) 0xF0019E2CU)	/* Extended Message Object 113 Data 3 Register */
#define CAN_EMO114DATA3	(*( CAN_MODATAL0_type *) 0xF0019E4CU)	/* Extended Message Object 114 Data 3 Register */
#define CAN_EMO115DATA3	(*( CAN_MODATAL0_type *) 0xF0019E6CU)	/* Extended Message Object 115 Data 3 Register */
#define CAN_EMO116DATA3	(*( CAN_MODATAL0_type *) 0xF0019E8CU)	/* Extended Message Object 116 Data 3 Register */
#define CAN_EMO117DATA3	(*( CAN_MODATAL0_type *) 0xF0019EACU)	/* Extended Message Object 117 Data 3 Register */
#define CAN_EMO118DATA3	(*( CAN_MODATAL0_type *) 0xF0019ECCU)	/* Extended Message Object 118 Data 3 Register */
#define CAN_EMO119DATA3	(*( CAN_MODATAL0_type *) 0xF0019EECU)	/* Extended Message Object 119 Data 3 Register */
#define CAN_EMO120DATA3	(*( CAN_MODATAL0_type *) 0xF0019F0CU)	/* Extended Message Object 120 Data 3 Register */
#define CAN_EMO121DATA3	(*( CAN_MODATAL0_type *) 0xF0019F2CU)	/* Extended Message Object 121 Data 3 Register */
#define CAN_EMO122DATA3	(*( CAN_MODATAL0_type *) 0xF0019F4CU)	/* Extended Message Object 122 Data 3 Register */
#define CAN_EMO123DATA3	(*( CAN_MODATAL0_type *) 0xF0019F6CU)	/* Extended Message Object 123 Data 3 Register */
#define CAN_EMO124DATA3	(*( CAN_MODATAL0_type *) 0xF0019F8CU)	/* Extended Message Object 124 Data 3 Register */
#define CAN_EMO125DATA3	(*( CAN_MODATAL0_type *) 0xF0019FACU)	/* Extended Message Object 125 Data 3 Register */
#define CAN_EMO126DATA3	(*( CAN_MODATAL0_type *) 0xF0019FCCU)	/* Extended Message Object 126 Data 3 Register */
#define CAN_EMO127DATA3	(*( CAN_MODATAL0_type *) 0xF0019FECU)	/* Extended Message Object 127 Data 3 Register */
#define CAN_EMO0DATA4	(*( CAN_MODATAL0_type *) 0xF0019010U)	/* Extended Message Object 0 Data 4 Register */
#define CAN_EMO1DATA4	(*( CAN_MODATAL0_type *) 0xF0019030U)	/* Extended Message Object 1 Data 4 Register */
#define CAN_EMO2DATA4	(*( CAN_MODATAL0_type *) 0xF0019050U)	/* Extended Message Object 2 Data 4 Register */
#define CAN_EMO3DATA4	(*( CAN_MODATAL0_type *) 0xF0019070U)	/* Extended Message Object 3 Data 4 Register */
#define CAN_EMO4DATA4	(*( CAN_MODATAL0_type *) 0xF0019090U)	/* Extended Message Object 4 Data 4 Register */
#define CAN_EMO5DATA4	(*( CAN_MODATAL0_type *) 0xF00190B0U)	/* Extended Message Object 5 Data 4 Register */
#define CAN_EMO6DATA4	(*( CAN_MODATAL0_type *) 0xF00190D0U)	/* Extended Message Object 6 Data 4 Register */
#define CAN_EMO7DATA4	(*( CAN_MODATAL0_type *) 0xF00190F0U)	/* Extended Message Object 7 Data 4 Register */
#define CAN_EMO8DATA4	(*( CAN_MODATAL0_type *) 0xF0019110U)	/* Extended Message Object 8 Data 4 Register */
#define CAN_EMO9DATA4	(*( CAN_MODATAL0_type *) 0xF0019130U)	/* Extended Message Object 9 Data 4 Register */
#define CAN_EMO10DATA4	(*( CAN_MODATAL0_type *) 0xF0019150U)	/* Extended Message Object 10 Data 4 Register */
#define CAN_EMO11DATA4	(*( CAN_MODATAL0_type *) 0xF0019170U)	/* Extended Message Object 11 Data 4 Register */
#define CAN_EMO12DATA4	(*( CAN_MODATAL0_type *) 0xF0019190U)	/* Extended Message Object 12 Data 4 Register */
#define CAN_EMO13DATA4	(*( CAN_MODATAL0_type *) 0xF00191B0U)	/* Extended Message Object 13 Data 4 Register */
#define CAN_EMO14DATA4	(*( CAN_MODATAL0_type *) 0xF00191D0U)	/* Extended Message Object 14 Data 4 Register */
#define CAN_EMO15DATA4	(*( CAN_MODATAL0_type *) 0xF00191F0U)	/* Extended Message Object 15 Data 4 Register */
#define CAN_EMO16DATA4	(*( CAN_MODATAL0_type *) 0xF0019210U)	/* Extended Message Object 16 Data 4 Register */
#define CAN_EMO17DATA4	(*( CAN_MODATAL0_type *) 0xF0019230U)	/* Extended Message Object 17 Data 4 Register */
#define CAN_EMO18DATA4	(*( CAN_MODATAL0_type *) 0xF0019250U)	/* Extended Message Object 18 Data 4 Register */
#define CAN_EMO19DATA4	(*( CAN_MODATAL0_type *) 0xF0019270U)	/* Extended Message Object 19 Data 4 Register */
#define CAN_EMO20DATA4	(*( CAN_MODATAL0_type *) 0xF0019290U)	/* Extended Message Object 20 Data 4 Register */
#define CAN_EMO21DATA4	(*( CAN_MODATAL0_type *) 0xF00192B0U)	/* Extended Message Object 21 Data 4 Register */
#define CAN_EMO22DATA4	(*( CAN_MODATAL0_type *) 0xF00192D0U)	/* Extended Message Object 22 Data 4 Register */
#define CAN_EMO23DATA4	(*( CAN_MODATAL0_type *) 0xF00192F0U)	/* Extended Message Object 23 Data 4 Register */
#define CAN_EMO24DATA4	(*( CAN_MODATAL0_type *) 0xF0019310U)	/* Extended Message Object 24 Data 4 Register */
#define CAN_EMO25DATA4	(*( CAN_MODATAL0_type *) 0xF0019330U)	/* Extended Message Object 25 Data 4 Register */
#define CAN_EMO26DATA4	(*( CAN_MODATAL0_type *) 0xF0019350U)	/* Extended Message Object 26 Data 4 Register */
#define CAN_EMO27DATA4	(*( CAN_MODATAL0_type *) 0xF0019370U)	/* Extended Message Object 27 Data 4 Register */
#define CAN_EMO28DATA4	(*( CAN_MODATAL0_type *) 0xF0019390U)	/* Extended Message Object 28 Data 4 Register */
#define CAN_EMO29DATA4	(*( CAN_MODATAL0_type *) 0xF00193B0U)	/* Extended Message Object 29 Data 4 Register */
#define CAN_EMO30DATA4	(*( CAN_MODATAL0_type *) 0xF00193D0U)	/* Extended Message Object 30 Data 4 Register */
#define CAN_EMO31DATA4	(*( CAN_MODATAL0_type *) 0xF00193F0U)	/* Extended Message Object 31 Data 4 Register */
#define CAN_EMO32DATA4	(*( CAN_MODATAL0_type *) 0xF0019410U)	/* Extended Message Object 32 Data 4 Register */
#define CAN_EMO33DATA4	(*( CAN_MODATAL0_type *) 0xF0019430U)	/* Extended Message Object 33 Data 4 Register */
#define CAN_EMO34DATA4	(*( CAN_MODATAL0_type *) 0xF0019450U)	/* Extended Message Object 34 Data 4 Register */
#define CAN_EMO35DATA4	(*( CAN_MODATAL0_type *) 0xF0019470U)	/* Extended Message Object 35 Data 4 Register */
#define CAN_EMO36DATA4	(*( CAN_MODATAL0_type *) 0xF0019490U)	/* Extended Message Object 36 Data 4 Register */
#define CAN_EMO37DATA4	(*( CAN_MODATAL0_type *) 0xF00194B0U)	/* Extended Message Object 37 Data 4 Register */
#define CAN_EMO38DATA4	(*( CAN_MODATAL0_type *) 0xF00194D0U)	/* Extended Message Object 38 Data 4 Register */
#define CAN_EMO39DATA4	(*( CAN_MODATAL0_type *) 0xF00194F0U)	/* Extended Message Object 39 Data 4 Register */
#define CAN_EMO40DATA4	(*( CAN_MODATAL0_type *) 0xF0019510U)	/* Extended Message Object 40 Data 4 Register */
#define CAN_EMO41DATA4	(*( CAN_MODATAL0_type *) 0xF0019530U)	/* Extended Message Object 41 Data 4 Register */
#define CAN_EMO42DATA4	(*( CAN_MODATAL0_type *) 0xF0019550U)	/* Extended Message Object 42 Data 4 Register */
#define CAN_EMO43DATA4	(*( CAN_MODATAL0_type *) 0xF0019570U)	/* Extended Message Object 43 Data 4 Register */
#define CAN_EMO44DATA4	(*( CAN_MODATAL0_type *) 0xF0019590U)	/* Extended Message Object 44 Data 4 Register */
#define CAN_EMO45DATA4	(*( CAN_MODATAL0_type *) 0xF00195B0U)	/* Extended Message Object 45 Data 4 Register */
#define CAN_EMO46DATA4	(*( CAN_MODATAL0_type *) 0xF00195D0U)	/* Extended Message Object 46 Data 4 Register */
#define CAN_EMO47DATA4	(*( CAN_MODATAL0_type *) 0xF00195F0U)	/* Extended Message Object 47 Data 4 Register */
#define CAN_EMO48DATA4	(*( CAN_MODATAL0_type *) 0xF0019610U)	/* Extended Message Object 48 Data 4 Register */
#define CAN_EMO49DATA4	(*( CAN_MODATAL0_type *) 0xF0019630U)	/* Extended Message Object 49 Data 4 Register */
#define CAN_EMO50DATA4	(*( CAN_MODATAL0_type *) 0xF0019650U)	/* Extended Message Object 50 Data 4 Register */
#define CAN_EMO51DATA4	(*( CAN_MODATAL0_type *) 0xF0019670U)	/* Extended Message Object 51 Data 4 Register */
#define CAN_EMO52DATA4	(*( CAN_MODATAL0_type *) 0xF0019690U)	/* Extended Message Object 52 Data 4 Register */
#define CAN_EMO53DATA4	(*( CAN_MODATAL0_type *) 0xF00196B0U)	/* Extended Message Object 53 Data 4 Register */
#define CAN_EMO54DATA4	(*( CAN_MODATAL0_type *) 0xF00196D0U)	/* Extended Message Object 54 Data 4 Register */
#define CAN_EMO55DATA4	(*( CAN_MODATAL0_type *) 0xF00196F0U)	/* Extended Message Object 55 Data 4 Register */
#define CAN_EMO56DATA4	(*( CAN_MODATAL0_type *) 0xF0019710U)	/* Extended Message Object 56 Data 4 Register */
#define CAN_EMO57DATA4	(*( CAN_MODATAL0_type *) 0xF0019730U)	/* Extended Message Object 57 Data 4 Register */
#define CAN_EMO58DATA4	(*( CAN_MODATAL0_type *) 0xF0019750U)	/* Extended Message Object 58 Data 4 Register */
#define CAN_EMO59DATA4	(*( CAN_MODATAL0_type *) 0xF0019770U)	/* Extended Message Object 59 Data 4 Register */
#define CAN_EMO60DATA4	(*( CAN_MODATAL0_type *) 0xF0019790U)	/* Extended Message Object 60 Data 4 Register */
#define CAN_EMO61DATA4	(*( CAN_MODATAL0_type *) 0xF00197B0U)	/* Extended Message Object 61 Data 4 Register */
#define CAN_EMO62DATA4	(*( CAN_MODATAL0_type *) 0xF00197D0U)	/* Extended Message Object 62 Data 4 Register */
#define CAN_EMO63DATA4	(*( CAN_MODATAL0_type *) 0xF00197F0U)	/* Extended Message Object 63 Data 4 Register */
#define CAN_EMO64DATA4	(*( CAN_MODATAL0_type *) 0xF0019810U)	/* Extended Message Object 64 Data 4 Register */
#define CAN_EMO65DATA4	(*( CAN_MODATAL0_type *) 0xF0019830U)	/* Extended Message Object 65 Data 4 Register */
#define CAN_EMO66DATA4	(*( CAN_MODATAL0_type *) 0xF0019850U)	/* Extended Message Object 66 Data 4 Register */
#define CAN_EMO67DATA4	(*( CAN_MODATAL0_type *) 0xF0019870U)	/* Extended Message Object 67 Data 4 Register */
#define CAN_EMO68DATA4	(*( CAN_MODATAL0_type *) 0xF0019890U)	/* Extended Message Object 68 Data 4 Register */
#define CAN_EMO69DATA4	(*( CAN_MODATAL0_type *) 0xF00198B0U)	/* Extended Message Object 69 Data 4 Register */
#define CAN_EMO70DATA4	(*( CAN_MODATAL0_type *) 0xF00198D0U)	/* Extended Message Object 70 Data 4 Register */
#define CAN_EMO71DATA4	(*( CAN_MODATAL0_type *) 0xF00198F0U)	/* Extended Message Object 71 Data 4 Register */
#define CAN_EMO72DATA4	(*( CAN_MODATAL0_type *) 0xF0019910U)	/* Extended Message Object 72 Data 4 Register */
#define CAN_EMO73DATA4	(*( CAN_MODATAL0_type *) 0xF0019930U)	/* Extended Message Object 73 Data 4 Register */
#define CAN_EMO74DATA4	(*( CAN_MODATAL0_type *) 0xF0019950U)	/* Extended Message Object 74 Data 4 Register */
#define CAN_EMO75DATA4	(*( CAN_MODATAL0_type *) 0xF0019970U)	/* Extended Message Object 75 Data 4 Register */
#define CAN_EMO76DATA4	(*( CAN_MODATAL0_type *) 0xF0019990U)	/* Extended Message Object 76 Data 4 Register */
#define CAN_EMO77DATA4	(*( CAN_MODATAL0_type *) 0xF00199B0U)	/* Extended Message Object 77 Data 4 Register */
#define CAN_EMO78DATA4	(*( CAN_MODATAL0_type *) 0xF00199D0U)	/* Extended Message Object 78 Data 4 Register */
#define CAN_EMO79DATA4	(*( CAN_MODATAL0_type *) 0xF00199F0U)	/* Extended Message Object 79 Data 4 Register */
#define CAN_EMO80DATA4	(*( CAN_MODATAL0_type *) 0xF0019A10U)	/* Extended Message Object 80 Data 4 Register */
#define CAN_EMO81DATA4	(*( CAN_MODATAL0_type *) 0xF0019A30U)	/* Extended Message Object 81 Data 4 Register */
#define CAN_EMO82DATA4	(*( CAN_MODATAL0_type *) 0xF0019A50U)	/* Extended Message Object 82 Data 4 Register */
#define CAN_EMO83DATA4	(*( CAN_MODATAL0_type *) 0xF0019A70U)	/* Extended Message Object 83 Data 4 Register */
#define CAN_EMO84DATA4	(*( CAN_MODATAL0_type *) 0xF0019A90U)	/* Extended Message Object 84 Data 4 Register */
#define CAN_EMO85DATA4	(*( CAN_MODATAL0_type *) 0xF0019AB0U)	/* Extended Message Object 85 Data 4 Register */
#define CAN_EMO86DATA4	(*( CAN_MODATAL0_type *) 0xF0019AD0U)	/* Extended Message Object 86 Data 4 Register */
#define CAN_EMO87DATA4	(*( CAN_MODATAL0_type *) 0xF0019AF0U)	/* Extended Message Object 87 Data 4 Register */
#define CAN_EMO88DATA4	(*( CAN_MODATAL0_type *) 0xF0019B10U)	/* Extended Message Object 88 Data 4 Register */
#define CAN_EMO89DATA4	(*( CAN_MODATAL0_type *) 0xF0019B30U)	/* Extended Message Object 89 Data 4 Register */
#define CAN_EMO90DATA4	(*( CAN_MODATAL0_type *) 0xF0019B50U)	/* Extended Message Object 90 Data 4 Register */
#define CAN_EMO91DATA4	(*( CAN_MODATAL0_type *) 0xF0019B70U)	/* Extended Message Object 91 Data 4 Register */
#define CAN_EMO92DATA4	(*( CAN_MODATAL0_type *) 0xF0019B90U)	/* Extended Message Object 92 Data 4 Register */
#define CAN_EMO93DATA4	(*( CAN_MODATAL0_type *) 0xF0019BB0U)	/* Extended Message Object 93 Data 4 Register */
#define CAN_EMO94DATA4	(*( CAN_MODATAL0_type *) 0xF0019BD0U)	/* Extended Message Object 94 Data 4 Register */
#define CAN_EMO95DATA4	(*( CAN_MODATAL0_type *) 0xF0019BF0U)	/* Extended Message Object 95 Data 4 Register */
#define CAN_EMO96DATA4	(*( CAN_MODATAL0_type *) 0xF0019C10U)	/* Extended Message Object 96 Data 4 Register */
#define CAN_EMO97DATA4	(*( CAN_MODATAL0_type *) 0xF0019C30U)	/* Extended Message Object 97 Data 4 Register */
#define CAN_EMO98DATA4	(*( CAN_MODATAL0_type *) 0xF0019C50U)	/* Extended Message Object 98 Data 4 Register */
#define CAN_EMO99DATA4	(*( CAN_MODATAL0_type *) 0xF0019C70U)	/* Extended Message Object 99 Data 4 Register */
#define CAN_EMO100DATA4	(*( CAN_MODATAL0_type *) 0xF0019C90U)	/* Extended Message Object 100 Data 4 Register */
#define CAN_EMO101DATA4	(*( CAN_MODATAL0_type *) 0xF0019CB0U)	/* Extended Message Object 101 Data 4 Register */
#define CAN_EMO102DATA4	(*( CAN_MODATAL0_type *) 0xF0019CD0U)	/* Extended Message Object 102 Data 4 Register */
#define CAN_EMO103DATA4	(*( CAN_MODATAL0_type *) 0xF0019CF0U)	/* Extended Message Object 103 Data 4 Register */
#define CAN_EMO104DATA4	(*( CAN_MODATAL0_type *) 0xF0019D10U)	/* Extended Message Object 104 Data 4 Register */
#define CAN_EMO105DATA4	(*( CAN_MODATAL0_type *) 0xF0019D30U)	/* Extended Message Object 105 Data 4 Register */
#define CAN_EMO106DATA4	(*( CAN_MODATAL0_type *) 0xF0019D50U)	/* Extended Message Object 106 Data 4 Register */
#define CAN_EMO107DATA4	(*( CAN_MODATAL0_type *) 0xF0019D70U)	/* Extended Message Object 107 Data 4 Register */
#define CAN_EMO108DATA4	(*( CAN_MODATAL0_type *) 0xF0019D90U)	/* Extended Message Object 108 Data 4 Register */
#define CAN_EMO109DATA4	(*( CAN_MODATAL0_type *) 0xF0019DB0U)	/* Extended Message Object 109 Data 4 Register */
#define CAN_EMO110DATA4	(*( CAN_MODATAL0_type *) 0xF0019DD0U)	/* Extended Message Object 110 Data 4 Register */
#define CAN_EMO111DATA4	(*( CAN_MODATAL0_type *) 0xF0019DF0U)	/* Extended Message Object 111 Data 4 Register */
#define CAN_EMO112DATA4	(*( CAN_MODATAL0_type *) 0xF0019E10U)	/* Extended Message Object 112 Data 4 Register */
#define CAN_EMO113DATA4	(*( CAN_MODATAL0_type *) 0xF0019E30U)	/* Extended Message Object 113 Data 4 Register */
#define CAN_EMO114DATA4	(*( CAN_MODATAL0_type *) 0xF0019E50U)	/* Extended Message Object 114 Data 4 Register */
#define CAN_EMO115DATA4	(*( CAN_MODATAL0_type *) 0xF0019E70U)	/* Extended Message Object 115 Data 4 Register */
#define CAN_EMO116DATA4	(*( CAN_MODATAL0_type *) 0xF0019E90U)	/* Extended Message Object 116 Data 4 Register */
#define CAN_EMO117DATA4	(*( CAN_MODATAL0_type *) 0xF0019EB0U)	/* Extended Message Object 117 Data 4 Register */
#define CAN_EMO118DATA4	(*( CAN_MODATAL0_type *) 0xF0019ED0U)	/* Extended Message Object 118 Data 4 Register */
#define CAN_EMO119DATA4	(*( CAN_MODATAL0_type *) 0xF0019EF0U)	/* Extended Message Object 119 Data 4 Register */
#define CAN_EMO120DATA4	(*( CAN_MODATAL0_type *) 0xF0019F10U)	/* Extended Message Object 120 Data 4 Register */
#define CAN_EMO121DATA4	(*( CAN_MODATAL0_type *) 0xF0019F30U)	/* Extended Message Object 121 Data 4 Register */
#define CAN_EMO122DATA4	(*( CAN_MODATAL0_type *) 0xF0019F50U)	/* Extended Message Object 122 Data 4 Register */
#define CAN_EMO123DATA4	(*( CAN_MODATAL0_type *) 0xF0019F70U)	/* Extended Message Object 123 Data 4 Register */
#define CAN_EMO124DATA4	(*( CAN_MODATAL0_type *) 0xF0019F90U)	/* Extended Message Object 124 Data 4 Register */
#define CAN_EMO125DATA4	(*( CAN_MODATAL0_type *) 0xF0019FB0U)	/* Extended Message Object 125 Data 4 Register */
#define CAN_EMO126DATA4	(*( CAN_MODATAL0_type *) 0xF0019FD0U)	/* Extended Message Object 126 Data 4 Register */
#define CAN_EMO127DATA4	(*( CAN_MODATAL0_type *) 0xF0019FF0U)	/* Extended Message Object 127 Data 4 Register */
#define CAN_EMO0DATA5	(*( CAN_MODATAL0_type *) 0xF0019014U)	/* Extended Message Object 0 Data 5 Register */
#define CAN_EMO1DATA5	(*( CAN_MODATAL0_type *) 0xF0019034U)	/* Extended Message Object 1 Data 5 Register */
#define CAN_EMO2DATA5	(*( CAN_MODATAL0_type *) 0xF0019054U)	/* Extended Message Object 2 Data 5 Register */
#define CAN_EMO3DATA5	(*( CAN_MODATAL0_type *) 0xF0019074U)	/* Extended Message Object 3 Data 5 Register */
#define CAN_EMO4DATA5	(*( CAN_MODATAL0_type *) 0xF0019094U)	/* Extended Message Object 4 Data 5 Register */
#define CAN_EMO5DATA5	(*( CAN_MODATAL0_type *) 0xF00190B4U)	/* Extended Message Object 5 Data 5 Register */
#define CAN_EMO6DATA5	(*( CAN_MODATAL0_type *) 0xF00190D4U)	/* Extended Message Object 6 Data 5 Register */
#define CAN_EMO7DATA5	(*( CAN_MODATAL0_type *) 0xF00190F4U)	/* Extended Message Object 7 Data 5 Register */
#define CAN_EMO8DATA5	(*( CAN_MODATAL0_type *) 0xF0019114U)	/* Extended Message Object 8 Data 5 Register */
#define CAN_EMO9DATA5	(*( CAN_MODATAL0_type *) 0xF0019134U)	/* Extended Message Object 9 Data 5 Register */
#define CAN_EMO10DATA5	(*( CAN_MODATAL0_type *) 0xF0019154U)	/* Extended Message Object 10 Data 5 Register */
#define CAN_EMO11DATA5	(*( CAN_MODATAL0_type *) 0xF0019174U)	/* Extended Message Object 11 Data 5 Register */
#define CAN_EMO12DATA5	(*( CAN_MODATAL0_type *) 0xF0019194U)	/* Extended Message Object 12 Data 5 Register */
#define CAN_EMO13DATA5	(*( CAN_MODATAL0_type *) 0xF00191B4U)	/* Extended Message Object 13 Data 5 Register */
#define CAN_EMO14DATA5	(*( CAN_MODATAL0_type *) 0xF00191D4U)	/* Extended Message Object 14 Data 5 Register */
#define CAN_EMO15DATA5	(*( CAN_MODATAL0_type *) 0xF00191F4U)	/* Extended Message Object 15 Data 5 Register */
#define CAN_EMO16DATA5	(*( CAN_MODATAL0_type *) 0xF0019214U)	/* Extended Message Object 16 Data 5 Register */
#define CAN_EMO17DATA5	(*( CAN_MODATAL0_type *) 0xF0019234U)	/* Extended Message Object 17 Data 5 Register */
#define CAN_EMO18DATA5	(*( CAN_MODATAL0_type *) 0xF0019254U)	/* Extended Message Object 18 Data 5 Register */
#define CAN_EMO19DATA5	(*( CAN_MODATAL0_type *) 0xF0019274U)	/* Extended Message Object 19 Data 5 Register */
#define CAN_EMO20DATA5	(*( CAN_MODATAL0_type *) 0xF0019294U)	/* Extended Message Object 20 Data 5 Register */
#define CAN_EMO21DATA5	(*( CAN_MODATAL0_type *) 0xF00192B4U)	/* Extended Message Object 21 Data 5 Register */
#define CAN_EMO22DATA5	(*( CAN_MODATAL0_type *) 0xF00192D4U)	/* Extended Message Object 22 Data 5 Register */
#define CAN_EMO23DATA5	(*( CAN_MODATAL0_type *) 0xF00192F4U)	/* Extended Message Object 23 Data 5 Register */
#define CAN_EMO24DATA5	(*( CAN_MODATAL0_type *) 0xF0019314U)	/* Extended Message Object 24 Data 5 Register */
#define CAN_EMO25DATA5	(*( CAN_MODATAL0_type *) 0xF0019334U)	/* Extended Message Object 25 Data 5 Register */
#define CAN_EMO26DATA5	(*( CAN_MODATAL0_type *) 0xF0019354U)	/* Extended Message Object 26 Data 5 Register */
#define CAN_EMO27DATA5	(*( CAN_MODATAL0_type *) 0xF0019374U)	/* Extended Message Object 27 Data 5 Register */
#define CAN_EMO28DATA5	(*( CAN_MODATAL0_type *) 0xF0019394U)	/* Extended Message Object 28 Data 5 Register */
#define CAN_EMO29DATA5	(*( CAN_MODATAL0_type *) 0xF00193B4U)	/* Extended Message Object 29 Data 5 Register */
#define CAN_EMO30DATA5	(*( CAN_MODATAL0_type *) 0xF00193D4U)	/* Extended Message Object 30 Data 5 Register */
#define CAN_EMO31DATA5	(*( CAN_MODATAL0_type *) 0xF00193F4U)	/* Extended Message Object 31 Data 5 Register */
#define CAN_EMO32DATA5	(*( CAN_MODATAL0_type *) 0xF0019414U)	/* Extended Message Object 32 Data 5 Register */
#define CAN_EMO33DATA5	(*( CAN_MODATAL0_type *) 0xF0019434U)	/* Extended Message Object 33 Data 5 Register */
#define CAN_EMO34DATA5	(*( CAN_MODATAL0_type *) 0xF0019454U)	/* Extended Message Object 34 Data 5 Register */
#define CAN_EMO35DATA5	(*( CAN_MODATAL0_type *) 0xF0019474U)	/* Extended Message Object 35 Data 5 Register */
#define CAN_EMO36DATA5	(*( CAN_MODATAL0_type *) 0xF0019494U)	/* Extended Message Object 36 Data 5 Register */
#define CAN_EMO37DATA5	(*( CAN_MODATAL0_type *) 0xF00194B4U)	/* Extended Message Object 37 Data 5 Register */
#define CAN_EMO38DATA5	(*( CAN_MODATAL0_type *) 0xF00194D4U)	/* Extended Message Object 38 Data 5 Register */
#define CAN_EMO39DATA5	(*( CAN_MODATAL0_type *) 0xF00194F4U)	/* Extended Message Object 39 Data 5 Register */
#define CAN_EMO40DATA5	(*( CAN_MODATAL0_type *) 0xF0019514U)	/* Extended Message Object 40 Data 5 Register */
#define CAN_EMO41DATA5	(*( CAN_MODATAL0_type *) 0xF0019534U)	/* Extended Message Object 41 Data 5 Register */
#define CAN_EMO42DATA5	(*( CAN_MODATAL0_type *) 0xF0019554U)	/* Extended Message Object 42 Data 5 Register */
#define CAN_EMO43DATA5	(*( CAN_MODATAL0_type *) 0xF0019574U)	/* Extended Message Object 43 Data 5 Register */
#define CAN_EMO44DATA5	(*( CAN_MODATAL0_type *) 0xF0019594U)	/* Extended Message Object 44 Data 5 Register */
#define CAN_EMO45DATA5	(*( CAN_MODATAL0_type *) 0xF00195B4U)	/* Extended Message Object 45 Data 5 Register */
#define CAN_EMO46DATA5	(*( CAN_MODATAL0_type *) 0xF00195D4U)	/* Extended Message Object 46 Data 5 Register */
#define CAN_EMO47DATA5	(*( CAN_MODATAL0_type *) 0xF00195F4U)	/* Extended Message Object 47 Data 5 Register */
#define CAN_EMO48DATA5	(*( CAN_MODATAL0_type *) 0xF0019614U)	/* Extended Message Object 48 Data 5 Register */
#define CAN_EMO49DATA5	(*( CAN_MODATAL0_type *) 0xF0019634U)	/* Extended Message Object 49 Data 5 Register */
#define CAN_EMO50DATA5	(*( CAN_MODATAL0_type *) 0xF0019654U)	/* Extended Message Object 50 Data 5 Register */
#define CAN_EMO51DATA5	(*( CAN_MODATAL0_type *) 0xF0019674U)	/* Extended Message Object 51 Data 5 Register */
#define CAN_EMO52DATA5	(*( CAN_MODATAL0_type *) 0xF0019694U)	/* Extended Message Object 52 Data 5 Register */
#define CAN_EMO53DATA5	(*( CAN_MODATAL0_type *) 0xF00196B4U)	/* Extended Message Object 53 Data 5 Register */
#define CAN_EMO54DATA5	(*( CAN_MODATAL0_type *) 0xF00196D4U)	/* Extended Message Object 54 Data 5 Register */
#define CAN_EMO55DATA5	(*( CAN_MODATAL0_type *) 0xF00196F4U)	/* Extended Message Object 55 Data 5 Register */
#define CAN_EMO56DATA5	(*( CAN_MODATAL0_type *) 0xF0019714U)	/* Extended Message Object 56 Data 5 Register */
#define CAN_EMO57DATA5	(*( CAN_MODATAL0_type *) 0xF0019734U)	/* Extended Message Object 57 Data 5 Register */
#define CAN_EMO58DATA5	(*( CAN_MODATAL0_type *) 0xF0019754U)	/* Extended Message Object 58 Data 5 Register */
#define CAN_EMO59DATA5	(*( CAN_MODATAL0_type *) 0xF0019774U)	/* Extended Message Object 59 Data 5 Register */
#define CAN_EMO60DATA5	(*( CAN_MODATAL0_type *) 0xF0019794U)	/* Extended Message Object 60 Data 5 Register */
#define CAN_EMO61DATA5	(*( CAN_MODATAL0_type *) 0xF00197B4U)	/* Extended Message Object 61 Data 5 Register */
#define CAN_EMO62DATA5	(*( CAN_MODATAL0_type *) 0xF00197D4U)	/* Extended Message Object 62 Data 5 Register */
#define CAN_EMO63DATA5	(*( CAN_MODATAL0_type *) 0xF00197F4U)	/* Extended Message Object 63 Data 5 Register */
#define CAN_EMO64DATA5	(*( CAN_MODATAL0_type *) 0xF0019814U)	/* Extended Message Object 64 Data 5 Register */
#define CAN_EMO65DATA5	(*( CAN_MODATAL0_type *) 0xF0019834U)	/* Extended Message Object 65 Data 5 Register */
#define CAN_EMO66DATA5	(*( CAN_MODATAL0_type *) 0xF0019854U)	/* Extended Message Object 66 Data 5 Register */
#define CAN_EMO67DATA5	(*( CAN_MODATAL0_type *) 0xF0019874U)	/* Extended Message Object 67 Data 5 Register */
#define CAN_EMO68DATA5	(*( CAN_MODATAL0_type *) 0xF0019894U)	/* Extended Message Object 68 Data 5 Register */
#define CAN_EMO69DATA5	(*( CAN_MODATAL0_type *) 0xF00198B4U)	/* Extended Message Object 69 Data 5 Register */
#define CAN_EMO70DATA5	(*( CAN_MODATAL0_type *) 0xF00198D4U)	/* Extended Message Object 70 Data 5 Register */
#define CAN_EMO71DATA5	(*( CAN_MODATAL0_type *) 0xF00198F4U)	/* Extended Message Object 71 Data 5 Register */
#define CAN_EMO72DATA5	(*( CAN_MODATAL0_type *) 0xF0019914U)	/* Extended Message Object 72 Data 5 Register */
#define CAN_EMO73DATA5	(*( CAN_MODATAL0_type *) 0xF0019934U)	/* Extended Message Object 73 Data 5 Register */
#define CAN_EMO74DATA5	(*( CAN_MODATAL0_type *) 0xF0019954U)	/* Extended Message Object 74 Data 5 Register */
#define CAN_EMO75DATA5	(*( CAN_MODATAL0_type *) 0xF0019974U)	/* Extended Message Object 75 Data 5 Register */
#define CAN_EMO76DATA5	(*( CAN_MODATAL0_type *) 0xF0019994U)	/* Extended Message Object 76 Data 5 Register */
#define CAN_EMO77DATA5	(*( CAN_MODATAL0_type *) 0xF00199B4U)	/* Extended Message Object 77 Data 5 Register */
#define CAN_EMO78DATA5	(*( CAN_MODATAL0_type *) 0xF00199D4U)	/* Extended Message Object 78 Data 5 Register */
#define CAN_EMO79DATA5	(*( CAN_MODATAL0_type *) 0xF00199F4U)	/* Extended Message Object 79 Data 5 Register */
#define CAN_EMO80DATA5	(*( CAN_MODATAL0_type *) 0xF0019A14U)	/* Extended Message Object 80 Data 5 Register */
#define CAN_EMO81DATA5	(*( CAN_MODATAL0_type *) 0xF0019A34U)	/* Extended Message Object 81 Data 5 Register */
#define CAN_EMO82DATA5	(*( CAN_MODATAL0_type *) 0xF0019A54U)	/* Extended Message Object 82 Data 5 Register */
#define CAN_EMO83DATA5	(*( CAN_MODATAL0_type *) 0xF0019A74U)	/* Extended Message Object 83 Data 5 Register */
#define CAN_EMO84DATA5	(*( CAN_MODATAL0_type *) 0xF0019A94U)	/* Extended Message Object 84 Data 5 Register */
#define CAN_EMO85DATA5	(*( CAN_MODATAL0_type *) 0xF0019AB4U)	/* Extended Message Object 85 Data 5 Register */
#define CAN_EMO86DATA5	(*( CAN_MODATAL0_type *) 0xF0019AD4U)	/* Extended Message Object 86 Data 5 Register */
#define CAN_EMO87DATA5	(*( CAN_MODATAL0_type *) 0xF0019AF4U)	/* Extended Message Object 87 Data 5 Register */
#define CAN_EMO88DATA5	(*( CAN_MODATAL0_type *) 0xF0019B14U)	/* Extended Message Object 88 Data 5 Register */
#define CAN_EMO89DATA5	(*( CAN_MODATAL0_type *) 0xF0019B34U)	/* Extended Message Object 89 Data 5 Register */
#define CAN_EMO90DATA5	(*( CAN_MODATAL0_type *) 0xF0019B54U)	/* Extended Message Object 90 Data 5 Register */
#define CAN_EMO91DATA5	(*( CAN_MODATAL0_type *) 0xF0019B74U)	/* Extended Message Object 91 Data 5 Register */
#define CAN_EMO92DATA5	(*( CAN_MODATAL0_type *) 0xF0019B94U)	/* Extended Message Object 92 Data 5 Register */
#define CAN_EMO93DATA5	(*( CAN_MODATAL0_type *) 0xF0019BB4U)	/* Extended Message Object 93 Data 5 Register */
#define CAN_EMO94DATA5	(*( CAN_MODATAL0_type *) 0xF0019BD4U)	/* Extended Message Object 94 Data 5 Register */
#define CAN_EMO95DATA5	(*( CAN_MODATAL0_type *) 0xF0019BF4U)	/* Extended Message Object 95 Data 5 Register */
#define CAN_EMO96DATA5	(*( CAN_MODATAL0_type *) 0xF0019C14U)	/* Extended Message Object 96 Data 5 Register */
#define CAN_EMO97DATA5	(*( CAN_MODATAL0_type *) 0xF0019C34U)	/* Extended Message Object 97 Data 5 Register */
#define CAN_EMO98DATA5	(*( CAN_MODATAL0_type *) 0xF0019C54U)	/* Extended Message Object 98 Data 5 Register */
#define CAN_EMO99DATA5	(*( CAN_MODATAL0_type *) 0xF0019C74U)	/* Extended Message Object 99 Data 5 Register */
#define CAN_EMO100DATA5	(*( CAN_MODATAL0_type *) 0xF0019C94U)	/* Extended Message Object 100 Data 5 Register */
#define CAN_EMO101DATA5	(*( CAN_MODATAL0_type *) 0xF0019CB4U)	/* Extended Message Object 101 Data 5 Register */
#define CAN_EMO102DATA5	(*( CAN_MODATAL0_type *) 0xF0019CD4U)	/* Extended Message Object 102 Data 5 Register */
#define CAN_EMO103DATA5	(*( CAN_MODATAL0_type *) 0xF0019CF4U)	/* Extended Message Object 103 Data 5 Register */
#define CAN_EMO104DATA5	(*( CAN_MODATAL0_type *) 0xF0019D14U)	/* Extended Message Object 104 Data 5 Register */
#define CAN_EMO105DATA5	(*( CAN_MODATAL0_type *) 0xF0019D34U)	/* Extended Message Object 105 Data 5 Register */
#define CAN_EMO106DATA5	(*( CAN_MODATAL0_type *) 0xF0019D54U)	/* Extended Message Object 106 Data 5 Register */
#define CAN_EMO107DATA5	(*( CAN_MODATAL0_type *) 0xF0019D74U)	/* Extended Message Object 107 Data 5 Register */
#define CAN_EMO108DATA5	(*( CAN_MODATAL0_type *) 0xF0019D94U)	/* Extended Message Object 108 Data 5 Register */
#define CAN_EMO109DATA5	(*( CAN_MODATAL0_type *) 0xF0019DB4U)	/* Extended Message Object 109 Data 5 Register */
#define CAN_EMO110DATA5	(*( CAN_MODATAL0_type *) 0xF0019DD4U)	/* Extended Message Object 110 Data 5 Register */
#define CAN_EMO111DATA5	(*( CAN_MODATAL0_type *) 0xF0019DF4U)	/* Extended Message Object 111 Data 5 Register */
#define CAN_EMO112DATA5	(*( CAN_MODATAL0_type *) 0xF0019E14U)	/* Extended Message Object 112 Data 5 Register */
#define CAN_EMO113DATA5	(*( CAN_MODATAL0_type *) 0xF0019E34U)	/* Extended Message Object 113 Data 5 Register */
#define CAN_EMO114DATA5	(*( CAN_MODATAL0_type *) 0xF0019E54U)	/* Extended Message Object 114 Data 5 Register */
#define CAN_EMO115DATA5	(*( CAN_MODATAL0_type *) 0xF0019E74U)	/* Extended Message Object 115 Data 5 Register */
#define CAN_EMO116DATA5	(*( CAN_MODATAL0_type *) 0xF0019E94U)	/* Extended Message Object 116 Data 5 Register */
#define CAN_EMO117DATA5	(*( CAN_MODATAL0_type *) 0xF0019EB4U)	/* Extended Message Object 117 Data 5 Register */
#define CAN_EMO118DATA5	(*( CAN_MODATAL0_type *) 0xF0019ED4U)	/* Extended Message Object 118 Data 5 Register */
#define CAN_EMO119DATA5	(*( CAN_MODATAL0_type *) 0xF0019EF4U)	/* Extended Message Object 119 Data 5 Register */
#define CAN_EMO120DATA5	(*( CAN_MODATAL0_type *) 0xF0019F14U)	/* Extended Message Object 120 Data 5 Register */
#define CAN_EMO121DATA5	(*( CAN_MODATAL0_type *) 0xF0019F34U)	/* Extended Message Object 121 Data 5 Register */
#define CAN_EMO122DATA5	(*( CAN_MODATAL0_type *) 0xF0019F54U)	/* Extended Message Object 122 Data 5 Register */
#define CAN_EMO123DATA5	(*( CAN_MODATAL0_type *) 0xF0019F74U)	/* Extended Message Object 123 Data 5 Register */
#define CAN_EMO124DATA5	(*( CAN_MODATAL0_type *) 0xF0019F94U)	/* Extended Message Object 124 Data 5 Register */
#define CAN_EMO125DATA5	(*( CAN_MODATAL0_type *) 0xF0019FB4U)	/* Extended Message Object 125 Data 5 Register */
#define CAN_EMO126DATA5	(*( CAN_MODATAL0_type *) 0xF0019FD4U)	/* Extended Message Object 126 Data 5 Register */
#define CAN_EMO127DATA5	(*( CAN_MODATAL0_type *) 0xF0019FF4U)	/* Extended Message Object 127 Data 5 Register */
#define CAN_EMO0DATA6	(*( CAN_MODATAL0_type *) 0xF0019018U)	/* Extended Message Object 0 Data 6 Register */
#define CAN_EMO1DATA6	(*( CAN_MODATAL0_type *) 0xF0019038U)	/* Extended Message Object 1 Data 6 Register */
#define CAN_EMO2DATA6	(*( CAN_MODATAL0_type *) 0xF0019058U)	/* Extended Message Object 2 Data 6 Register */
#define CAN_EMO3DATA6	(*( CAN_MODATAL0_type *) 0xF0019078U)	/* Extended Message Object 3 Data 6 Register */
#define CAN_EMO4DATA6	(*( CAN_MODATAL0_type *) 0xF0019098U)	/* Extended Message Object 4 Data 6 Register */
#define CAN_EMO5DATA6	(*( CAN_MODATAL0_type *) 0xF00190B8U)	/* Extended Message Object 5 Data 6 Register */
#define CAN_EMO6DATA6	(*( CAN_MODATAL0_type *) 0xF00190D8U)	/* Extended Message Object 6 Data 6 Register */
#define CAN_EMO7DATA6	(*( CAN_MODATAL0_type *) 0xF00190F8U)	/* Extended Message Object 7 Data 6 Register */
#define CAN_EMO8DATA6	(*( CAN_MODATAL0_type *) 0xF0019118U)	/* Extended Message Object 8 Data 6 Register */
#define CAN_EMO9DATA6	(*( CAN_MODATAL0_type *) 0xF0019138U)	/* Extended Message Object 9 Data 6 Register */
#define CAN_EMO10DATA6	(*( CAN_MODATAL0_type *) 0xF0019158U)	/* Extended Message Object 10 Data 6 Register */
#define CAN_EMO11DATA6	(*( CAN_MODATAL0_type *) 0xF0019178U)	/* Extended Message Object 11 Data 6 Register */
#define CAN_EMO12DATA6	(*( CAN_MODATAL0_type *) 0xF0019198U)	/* Extended Message Object 12 Data 6 Register */
#define CAN_EMO13DATA6	(*( CAN_MODATAL0_type *) 0xF00191B8U)	/* Extended Message Object 13 Data 6 Register */
#define CAN_EMO14DATA6	(*( CAN_MODATAL0_type *) 0xF00191D8U)	/* Extended Message Object 14 Data 6 Register */
#define CAN_EMO15DATA6	(*( CAN_MODATAL0_type *) 0xF00191F8U)	/* Extended Message Object 15 Data 6 Register */
#define CAN_EMO16DATA6	(*( CAN_MODATAL0_type *) 0xF0019218U)	/* Extended Message Object 16 Data 6 Register */
#define CAN_EMO17DATA6	(*( CAN_MODATAL0_type *) 0xF0019238U)	/* Extended Message Object 17 Data 6 Register */
#define CAN_EMO18DATA6	(*( CAN_MODATAL0_type *) 0xF0019258U)	/* Extended Message Object 18 Data 6 Register */
#define CAN_EMO19DATA6	(*( CAN_MODATAL0_type *) 0xF0019278U)	/* Extended Message Object 19 Data 6 Register */
#define CAN_EMO20DATA6	(*( CAN_MODATAL0_type *) 0xF0019298U)	/* Extended Message Object 20 Data 6 Register */
#define CAN_EMO21DATA6	(*( CAN_MODATAL0_type *) 0xF00192B8U)	/* Extended Message Object 21 Data 6 Register */
#define CAN_EMO22DATA6	(*( CAN_MODATAL0_type *) 0xF00192D8U)	/* Extended Message Object 22 Data 6 Register */
#define CAN_EMO23DATA6	(*( CAN_MODATAL0_type *) 0xF00192F8U)	/* Extended Message Object 23 Data 6 Register */
#define CAN_EMO24DATA6	(*( CAN_MODATAL0_type *) 0xF0019318U)	/* Extended Message Object 24 Data 6 Register */
#define CAN_EMO25DATA6	(*( CAN_MODATAL0_type *) 0xF0019338U)	/* Extended Message Object 25 Data 6 Register */
#define CAN_EMO26DATA6	(*( CAN_MODATAL0_type *) 0xF0019358U)	/* Extended Message Object 26 Data 6 Register */
#define CAN_EMO27DATA6	(*( CAN_MODATAL0_type *) 0xF0019378U)	/* Extended Message Object 27 Data 6 Register */
#define CAN_EMO28DATA6	(*( CAN_MODATAL0_type *) 0xF0019398U)	/* Extended Message Object 28 Data 6 Register */
#define CAN_EMO29DATA6	(*( CAN_MODATAL0_type *) 0xF00193B8U)	/* Extended Message Object 29 Data 6 Register */
#define CAN_EMO30DATA6	(*( CAN_MODATAL0_type *) 0xF00193D8U)	/* Extended Message Object 30 Data 6 Register */
#define CAN_EMO31DATA6	(*( CAN_MODATAL0_type *) 0xF00193F8U)	/* Extended Message Object 31 Data 6 Register */
#define CAN_EMO32DATA6	(*( CAN_MODATAL0_type *) 0xF0019418U)	/* Extended Message Object 32 Data 6 Register */
#define CAN_EMO33DATA6	(*( CAN_MODATAL0_type *) 0xF0019438U)	/* Extended Message Object 33 Data 6 Register */
#define CAN_EMO34DATA6	(*( CAN_MODATAL0_type *) 0xF0019458U)	/* Extended Message Object 34 Data 6 Register */
#define CAN_EMO35DATA6	(*( CAN_MODATAL0_type *) 0xF0019478U)	/* Extended Message Object 35 Data 6 Register */
#define CAN_EMO36DATA6	(*( CAN_MODATAL0_type *) 0xF0019498U)	/* Extended Message Object 36 Data 6 Register */
#define CAN_EMO37DATA6	(*( CAN_MODATAL0_type *) 0xF00194B8U)	/* Extended Message Object 37 Data 6 Register */
#define CAN_EMO38DATA6	(*( CAN_MODATAL0_type *) 0xF00194D8U)	/* Extended Message Object 38 Data 6 Register */
#define CAN_EMO39DATA6	(*( CAN_MODATAL0_type *) 0xF00194F8U)	/* Extended Message Object 39 Data 6 Register */
#define CAN_EMO40DATA6	(*( CAN_MODATAL0_type *) 0xF0019518U)	/* Extended Message Object 40 Data 6 Register */
#define CAN_EMO41DATA6	(*( CAN_MODATAL0_type *) 0xF0019538U)	/* Extended Message Object 41 Data 6 Register */
#define CAN_EMO42DATA6	(*( CAN_MODATAL0_type *) 0xF0019558U)	/* Extended Message Object 42 Data 6 Register */
#define CAN_EMO43DATA6	(*( CAN_MODATAL0_type *) 0xF0019578U)	/* Extended Message Object 43 Data 6 Register */
#define CAN_EMO44DATA6	(*( CAN_MODATAL0_type *) 0xF0019598U)	/* Extended Message Object 44 Data 6 Register */
#define CAN_EMO45DATA6	(*( CAN_MODATAL0_type *) 0xF00195B8U)	/* Extended Message Object 45 Data 6 Register */
#define CAN_EMO46DATA6	(*( CAN_MODATAL0_type *) 0xF00195D8U)	/* Extended Message Object 46 Data 6 Register */
#define CAN_EMO47DATA6	(*( CAN_MODATAL0_type *) 0xF00195F8U)	/* Extended Message Object 47 Data 6 Register */
#define CAN_EMO48DATA6	(*( CAN_MODATAL0_type *) 0xF0019618U)	/* Extended Message Object 48 Data 6 Register */
#define CAN_EMO49DATA6	(*( CAN_MODATAL0_type *) 0xF0019638U)	/* Extended Message Object 49 Data 6 Register */
#define CAN_EMO50DATA6	(*( CAN_MODATAL0_type *) 0xF0019658U)	/* Extended Message Object 50 Data 6 Register */
#define CAN_EMO51DATA6	(*( CAN_MODATAL0_type *) 0xF0019678U)	/* Extended Message Object 51 Data 6 Register */
#define CAN_EMO52DATA6	(*( CAN_MODATAL0_type *) 0xF0019698U)	/* Extended Message Object 52 Data 6 Register */
#define CAN_EMO53DATA6	(*( CAN_MODATAL0_type *) 0xF00196B8U)	/* Extended Message Object 53 Data 6 Register */
#define CAN_EMO54DATA6	(*( CAN_MODATAL0_type *) 0xF00196D8U)	/* Extended Message Object 54 Data 6 Register */
#define CAN_EMO55DATA6	(*( CAN_MODATAL0_type *) 0xF00196F8U)	/* Extended Message Object 55 Data 6 Register */
#define CAN_EMO56DATA6	(*( CAN_MODATAL0_type *) 0xF0019718U)	/* Extended Message Object 56 Data 6 Register */
#define CAN_EMO57DATA6	(*( CAN_MODATAL0_type *) 0xF0019738U)	/* Extended Message Object 57 Data 6 Register */
#define CAN_EMO58DATA6	(*( CAN_MODATAL0_type *) 0xF0019758U)	/* Extended Message Object 58 Data 6 Register */
#define CAN_EMO59DATA6	(*( CAN_MODATAL0_type *) 0xF0019778U)	/* Extended Message Object 59 Data 6 Register */
#define CAN_EMO60DATA6	(*( CAN_MODATAL0_type *) 0xF0019798U)	/* Extended Message Object 60 Data 6 Register */
#define CAN_EMO61DATA6	(*( CAN_MODATAL0_type *) 0xF00197B8U)	/* Extended Message Object 61 Data 6 Register */
#define CAN_EMO62DATA6	(*( CAN_MODATAL0_type *) 0xF00197D8U)	/* Extended Message Object 62 Data 6 Register */
#define CAN_EMO63DATA6	(*( CAN_MODATAL0_type *) 0xF00197F8U)	/* Extended Message Object 63 Data 6 Register */
#define CAN_EMO64DATA6	(*( CAN_MODATAL0_type *) 0xF0019818U)	/* Extended Message Object 64 Data 6 Register */
#define CAN_EMO65DATA6	(*( CAN_MODATAL0_type *) 0xF0019838U)	/* Extended Message Object 65 Data 6 Register */
#define CAN_EMO66DATA6	(*( CAN_MODATAL0_type *) 0xF0019858U)	/* Extended Message Object 66 Data 6 Register */
#define CAN_EMO67DATA6	(*( CAN_MODATAL0_type *) 0xF0019878U)	/* Extended Message Object 67 Data 6 Register */
#define CAN_EMO68DATA6	(*( CAN_MODATAL0_type *) 0xF0019898U)	/* Extended Message Object 68 Data 6 Register */
#define CAN_EMO69DATA6	(*( CAN_MODATAL0_type *) 0xF00198B8U)	/* Extended Message Object 69 Data 6 Register */
#define CAN_EMO70DATA6	(*( CAN_MODATAL0_type *) 0xF00198D8U)	/* Extended Message Object 70 Data 6 Register */
#define CAN_EMO71DATA6	(*( CAN_MODATAL0_type *) 0xF00198F8U)	/* Extended Message Object 71 Data 6 Register */
#define CAN_EMO72DATA6	(*( CAN_MODATAL0_type *) 0xF0019918U)	/* Extended Message Object 72 Data 6 Register */
#define CAN_EMO73DATA6	(*( CAN_MODATAL0_type *) 0xF0019938U)	/* Extended Message Object 73 Data 6 Register */
#define CAN_EMO74DATA6	(*( CAN_MODATAL0_type *) 0xF0019958U)	/* Extended Message Object 74 Data 6 Register */
#define CAN_EMO75DATA6	(*( CAN_MODATAL0_type *) 0xF0019978U)	/* Extended Message Object 75 Data 6 Register */
#define CAN_EMO76DATA6	(*( CAN_MODATAL0_type *) 0xF0019998U)	/* Extended Message Object 76 Data 6 Register */
#define CAN_EMO77DATA6	(*( CAN_MODATAL0_type *) 0xF00199B8U)	/* Extended Message Object 77 Data 6 Register */
#define CAN_EMO78DATA6	(*( CAN_MODATAL0_type *) 0xF00199D8U)	/* Extended Message Object 78 Data 6 Register */
#define CAN_EMO79DATA6	(*( CAN_MODATAL0_type *) 0xF00199F8U)	/* Extended Message Object 79 Data 6 Register */
#define CAN_EMO80DATA6	(*( CAN_MODATAL0_type *) 0xF0019A18U)	/* Extended Message Object 80 Data 6 Register */
#define CAN_EMO81DATA6	(*( CAN_MODATAL0_type *) 0xF0019A38U)	/* Extended Message Object 81 Data 6 Register */
#define CAN_EMO82DATA6	(*( CAN_MODATAL0_type *) 0xF0019A58U)	/* Extended Message Object 82 Data 6 Register */
#define CAN_EMO83DATA6	(*( CAN_MODATAL0_type *) 0xF0019A78U)	/* Extended Message Object 83 Data 6 Register */
#define CAN_EMO84DATA6	(*( CAN_MODATAL0_type *) 0xF0019A98U)	/* Extended Message Object 84 Data 6 Register */
#define CAN_EMO85DATA6	(*( CAN_MODATAL0_type *) 0xF0019AB8U)	/* Extended Message Object 85 Data 6 Register */
#define CAN_EMO86DATA6	(*( CAN_MODATAL0_type *) 0xF0019AD8U)	/* Extended Message Object 86 Data 6 Register */
#define CAN_EMO87DATA6	(*( CAN_MODATAL0_type *) 0xF0019AF8U)	/* Extended Message Object 87 Data 6 Register */
#define CAN_EMO88DATA6	(*( CAN_MODATAL0_type *) 0xF0019B18U)	/* Extended Message Object 88 Data 6 Register */
#define CAN_EMO89DATA6	(*( CAN_MODATAL0_type *) 0xF0019B38U)	/* Extended Message Object 89 Data 6 Register */
#define CAN_EMO90DATA6	(*( CAN_MODATAL0_type *) 0xF0019B58U)	/* Extended Message Object 90 Data 6 Register */
#define CAN_EMO91DATA6	(*( CAN_MODATAL0_type *) 0xF0019B78U)	/* Extended Message Object 91 Data 6 Register */
#define CAN_EMO92DATA6	(*( CAN_MODATAL0_type *) 0xF0019B98U)	/* Extended Message Object 92 Data 6 Register */
#define CAN_EMO93DATA6	(*( CAN_MODATAL0_type *) 0xF0019BB8U)	/* Extended Message Object 93 Data 6 Register */
#define CAN_EMO94DATA6	(*( CAN_MODATAL0_type *) 0xF0019BD8U)	/* Extended Message Object 94 Data 6 Register */
#define CAN_EMO95DATA6	(*( CAN_MODATAL0_type *) 0xF0019BF8U)	/* Extended Message Object 95 Data 6 Register */
#define CAN_EMO96DATA6	(*( CAN_MODATAL0_type *) 0xF0019C18U)	/* Extended Message Object 96 Data 6 Register */
#define CAN_EMO97DATA6	(*( CAN_MODATAL0_type *) 0xF0019C38U)	/* Extended Message Object 97 Data 6 Register */
#define CAN_EMO98DATA6	(*( CAN_MODATAL0_type *) 0xF0019C58U)	/* Extended Message Object 98 Data 6 Register */
#define CAN_EMO99DATA6	(*( CAN_MODATAL0_type *) 0xF0019C78U)	/* Extended Message Object 99 Data 6 Register */
#define CAN_EMO100DATA6	(*( CAN_MODATAL0_type *) 0xF0019C98U)	/* Extended Message Object 100 Data 6 Register */
#define CAN_EMO101DATA6	(*( CAN_MODATAL0_type *) 0xF0019CB8U)	/* Extended Message Object 101 Data 6 Register */
#define CAN_EMO102DATA6	(*( CAN_MODATAL0_type *) 0xF0019CD8U)	/* Extended Message Object 102 Data 6 Register */
#define CAN_EMO103DATA6	(*( CAN_MODATAL0_type *) 0xF0019CF8U)	/* Extended Message Object 103 Data 6 Register */
#define CAN_EMO104DATA6	(*( CAN_MODATAL0_type *) 0xF0019D18U)	/* Extended Message Object 104 Data 6 Register */
#define CAN_EMO105DATA6	(*( CAN_MODATAL0_type *) 0xF0019D38U)	/* Extended Message Object 105 Data 6 Register */
#define CAN_EMO106DATA6	(*( CAN_MODATAL0_type *) 0xF0019D58U)	/* Extended Message Object 106 Data 6 Register */
#define CAN_EMO107DATA6	(*( CAN_MODATAL0_type *) 0xF0019D78U)	/* Extended Message Object 107 Data 6 Register */
#define CAN_EMO108DATA6	(*( CAN_MODATAL0_type *) 0xF0019D98U)	/* Extended Message Object 108 Data 6 Register */
#define CAN_EMO109DATA6	(*( CAN_MODATAL0_type *) 0xF0019DB8U)	/* Extended Message Object 109 Data 6 Register */
#define CAN_EMO110DATA6	(*( CAN_MODATAL0_type *) 0xF0019DD8U)	/* Extended Message Object 110 Data 6 Register */
#define CAN_EMO111DATA6	(*( CAN_MODATAL0_type *) 0xF0019DF8U)	/* Extended Message Object 111 Data 6 Register */
#define CAN_EMO112DATA6	(*( CAN_MODATAL0_type *) 0xF0019E18U)	/* Extended Message Object 112 Data 6 Register */
#define CAN_EMO113DATA6	(*( CAN_MODATAL0_type *) 0xF0019E38U)	/* Extended Message Object 113 Data 6 Register */
#define CAN_EMO114DATA6	(*( CAN_MODATAL0_type *) 0xF0019E58U)	/* Extended Message Object 114 Data 6 Register */
#define CAN_EMO115DATA6	(*( CAN_MODATAL0_type *) 0xF0019E78U)	/* Extended Message Object 115 Data 6 Register */
#define CAN_EMO116DATA6	(*( CAN_MODATAL0_type *) 0xF0019E98U)	/* Extended Message Object 116 Data 6 Register */
#define CAN_EMO117DATA6	(*( CAN_MODATAL0_type *) 0xF0019EB8U)	/* Extended Message Object 117 Data 6 Register */
#define CAN_EMO118DATA6	(*( CAN_MODATAL0_type *) 0xF0019ED8U)	/* Extended Message Object 118 Data 6 Register */
#define CAN_EMO119DATA6	(*( CAN_MODATAL0_type *) 0xF0019EF8U)	/* Extended Message Object 119 Data 6 Register */
#define CAN_EMO120DATA6	(*( CAN_MODATAL0_type *) 0xF0019F18U)	/* Extended Message Object 120 Data 6 Register */
#define CAN_EMO121DATA6	(*( CAN_MODATAL0_type *) 0xF0019F38U)	/* Extended Message Object 121 Data 6 Register */
#define CAN_EMO122DATA6	(*( CAN_MODATAL0_type *) 0xF0019F58U)	/* Extended Message Object 122 Data 6 Register */
#define CAN_EMO123DATA6	(*( CAN_MODATAL0_type *) 0xF0019F78U)	/* Extended Message Object 123 Data 6 Register */
#define CAN_EMO124DATA6	(*( CAN_MODATAL0_type *) 0xF0019F98U)	/* Extended Message Object 124 Data 6 Register */
#define CAN_EMO125DATA6	(*( CAN_MODATAL0_type *) 0xF0019FB8U)	/* Extended Message Object 125 Data 6 Register */
#define CAN_EMO126DATA6	(*( CAN_MODATAL0_type *) 0xF0019FD8U)	/* Extended Message Object 126 Data 6 Register */
#define CAN_EMO127DATA6	(*( CAN_MODATAL0_type *) 0xF0019FF8U)	/* Extended Message Object 127 Data 6 Register */
#define CAN1_EMO0DATA0	(*( CAN_MODATAL0_type *) 0xF0029000U)	/* Extended Message Object 0 Data 0 Register */
#define CAN1_EMO1DATA0	(*( CAN_MODATAL0_type *) 0xF0029020U)	/* Extended Message Object 1 Data 0 Register */
#define CAN1_EMO2DATA0	(*( CAN_MODATAL0_type *) 0xF0029040U)	/* Extended Message Object 2 Data 0 Register */
#define CAN1_EMO3DATA0	(*( CAN_MODATAL0_type *) 0xF0029060U)	/* Extended Message Object 3 Data 0 Register */
#define CAN1_EMO4DATA0	(*( CAN_MODATAL0_type *) 0xF0029080U)	/* Extended Message Object 4 Data 0 Register */
#define CAN1_EMO5DATA0	(*( CAN_MODATAL0_type *) 0xF00290A0U)	/* Extended Message Object 5 Data 0 Register */
#define CAN1_EMO6DATA0	(*( CAN_MODATAL0_type *) 0xF00290C0U)	/* Extended Message Object 6 Data 0 Register */
#define CAN1_EMO7DATA0	(*( CAN_MODATAL0_type *) 0xF00290E0U)	/* Extended Message Object 7 Data 0 Register */
#define CAN1_EMO8DATA0	(*( CAN_MODATAL0_type *) 0xF0029100U)	/* Extended Message Object 8 Data 0 Register */
#define CAN1_EMO9DATA0	(*( CAN_MODATAL0_type *) 0xF0029120U)	/* Extended Message Object 9 Data 0 Register */
#define CAN1_EMO10DATA0	(*( CAN_MODATAL0_type *) 0xF0029140U)	/* Extended Message Object 10 Data 0 Register */
#define CAN1_EMO11DATA0	(*( CAN_MODATAL0_type *) 0xF0029160U)	/* Extended Message Object 11 Data 0 Register */
#define CAN1_EMO12DATA0	(*( CAN_MODATAL0_type *) 0xF0029180U)	/* Extended Message Object 12 Data 0 Register */
#define CAN1_EMO13DATA0	(*( CAN_MODATAL0_type *) 0xF00291A0U)	/* Extended Message Object 13 Data 0 Register */
#define CAN1_EMO14DATA0	(*( CAN_MODATAL0_type *) 0xF00291C0U)	/* Extended Message Object 14 Data 0 Register */
#define CAN1_EMO15DATA0	(*( CAN_MODATAL0_type *) 0xF00291E0U)	/* Extended Message Object 15 Data 0 Register */
#define CAN1_EMO16DATA0	(*( CAN_MODATAL0_type *) 0xF0029200U)	/* Extended Message Object 16 Data 0 Register */
#define CAN1_EMO17DATA0	(*( CAN_MODATAL0_type *) 0xF0029220U)	/* Extended Message Object 17 Data 0 Register */
#define CAN1_EMO18DATA0	(*( CAN_MODATAL0_type *) 0xF0029240U)	/* Extended Message Object 18 Data 0 Register */
#define CAN1_EMO19DATA0	(*( CAN_MODATAL0_type *) 0xF0029260U)	/* Extended Message Object 19 Data 0 Register */
#define CAN1_EMO20DATA0	(*( CAN_MODATAL0_type *) 0xF0029280U)	/* Extended Message Object 20 Data 0 Register */
#define CAN1_EMO21DATA0	(*( CAN_MODATAL0_type *) 0xF00292A0U)	/* Extended Message Object 21 Data 0 Register */
#define CAN1_EMO22DATA0	(*( CAN_MODATAL0_type *) 0xF00292C0U)	/* Extended Message Object 22 Data 0 Register */
#define CAN1_EMO23DATA0	(*( CAN_MODATAL0_type *) 0xF00292E0U)	/* Extended Message Object 23 Data 0 Register */
#define CAN1_EMO24DATA0	(*( CAN_MODATAL0_type *) 0xF0029300U)	/* Extended Message Object 24 Data 0 Register */
#define CAN1_EMO25DATA0	(*( CAN_MODATAL0_type *) 0xF0029320U)	/* Extended Message Object 25 Data 0 Register */
#define CAN1_EMO26DATA0	(*( CAN_MODATAL0_type *) 0xF0029340U)	/* Extended Message Object 26 Data 0 Register */
#define CAN1_EMO27DATA0	(*( CAN_MODATAL0_type *) 0xF0029360U)	/* Extended Message Object 27 Data 0 Register */
#define CAN1_EMO28DATA0	(*( CAN_MODATAL0_type *) 0xF0029380U)	/* Extended Message Object 28 Data 0 Register */
#define CAN1_EMO29DATA0	(*( CAN_MODATAL0_type *) 0xF00293A0U)	/* Extended Message Object 29 Data 0 Register */
#define CAN1_EMO30DATA0	(*( CAN_MODATAL0_type *) 0xF00293C0U)	/* Extended Message Object 30 Data 0 Register */
#define CAN1_EMO31DATA0	(*( CAN_MODATAL0_type *) 0xF00293E0U)	/* Extended Message Object 31 Data 0 Register */
#define CAN1_EMO32DATA0	(*( CAN_MODATAL0_type *) 0xF0029400U)	/* Extended Message Object 32 Data 0 Register */
#define CAN1_EMO33DATA0	(*( CAN_MODATAL0_type *) 0xF0029420U)	/* Extended Message Object 33 Data 0 Register */
#define CAN1_EMO34DATA0	(*( CAN_MODATAL0_type *) 0xF0029440U)	/* Extended Message Object 34 Data 0 Register */
#define CAN1_EMO35DATA0	(*( CAN_MODATAL0_type *) 0xF0029460U)	/* Extended Message Object 35 Data 0 Register */
#define CAN1_EMO36DATA0	(*( CAN_MODATAL0_type *) 0xF0029480U)	/* Extended Message Object 36 Data 0 Register */
#define CAN1_EMO37DATA0	(*( CAN_MODATAL0_type *) 0xF00294A0U)	/* Extended Message Object 37 Data 0 Register */
#define CAN1_EMO38DATA0	(*( CAN_MODATAL0_type *) 0xF00294C0U)	/* Extended Message Object 38 Data 0 Register */
#define CAN1_EMO39DATA0	(*( CAN_MODATAL0_type *) 0xF00294E0U)	/* Extended Message Object 39 Data 0 Register */
#define CAN1_EMO40DATA0	(*( CAN_MODATAL0_type *) 0xF0029500U)	/* Extended Message Object 40 Data 0 Register */
#define CAN1_EMO41DATA0	(*( CAN_MODATAL0_type *) 0xF0029520U)	/* Extended Message Object 41 Data 0 Register */
#define CAN1_EMO42DATA0	(*( CAN_MODATAL0_type *) 0xF0029540U)	/* Extended Message Object 42 Data 0 Register */
#define CAN1_EMO43DATA0	(*( CAN_MODATAL0_type *) 0xF0029560U)	/* Extended Message Object 43 Data 0 Register */
#define CAN1_EMO44DATA0	(*( CAN_MODATAL0_type *) 0xF0029580U)	/* Extended Message Object 44 Data 0 Register */
#define CAN1_EMO45DATA0	(*( CAN_MODATAL0_type *) 0xF00295A0U)	/* Extended Message Object 45 Data 0 Register */
#define CAN1_EMO46DATA0	(*( CAN_MODATAL0_type *) 0xF00295C0U)	/* Extended Message Object 46 Data 0 Register */
#define CAN1_EMO47DATA0	(*( CAN_MODATAL0_type *) 0xF00295E0U)	/* Extended Message Object 47 Data 0 Register */
#define CAN1_EMO48DATA0	(*( CAN_MODATAL0_type *) 0xF0029600U)	/* Extended Message Object 48 Data 0 Register */
#define CAN1_EMO49DATA0	(*( CAN_MODATAL0_type *) 0xF0029620U)	/* Extended Message Object 49 Data 0 Register */
#define CAN1_EMO50DATA0	(*( CAN_MODATAL0_type *) 0xF0029640U)	/* Extended Message Object 50 Data 0 Register */
#define CAN1_EMO51DATA0	(*( CAN_MODATAL0_type *) 0xF0029660U)	/* Extended Message Object 51 Data 0 Register */
#define CAN1_EMO52DATA0	(*( CAN_MODATAL0_type *) 0xF0029680U)	/* Extended Message Object 52 Data 0 Register */
#define CAN1_EMO53DATA0	(*( CAN_MODATAL0_type *) 0xF00296A0U)	/* Extended Message Object 53 Data 0 Register */
#define CAN1_EMO54DATA0	(*( CAN_MODATAL0_type *) 0xF00296C0U)	/* Extended Message Object 54 Data 0 Register */
#define CAN1_EMO55DATA0	(*( CAN_MODATAL0_type *) 0xF00296E0U)	/* Extended Message Object 55 Data 0 Register */
#define CAN1_EMO56DATA0	(*( CAN_MODATAL0_type *) 0xF0029700U)	/* Extended Message Object 56 Data 0 Register */
#define CAN1_EMO57DATA0	(*( CAN_MODATAL0_type *) 0xF0029720U)	/* Extended Message Object 57 Data 0 Register */
#define CAN1_EMO58DATA0	(*( CAN_MODATAL0_type *) 0xF0029740U)	/* Extended Message Object 58 Data 0 Register */
#define CAN1_EMO59DATA0	(*( CAN_MODATAL0_type *) 0xF0029760U)	/* Extended Message Object 59 Data 0 Register */
#define CAN1_EMO60DATA0	(*( CAN_MODATAL0_type *) 0xF0029780U)	/* Extended Message Object 60 Data 0 Register */
#define CAN1_EMO61DATA0	(*( CAN_MODATAL0_type *) 0xF00297A0U)	/* Extended Message Object 61 Data 0 Register */
#define CAN1_EMO62DATA0	(*( CAN_MODATAL0_type *) 0xF00297C0U)	/* Extended Message Object 62 Data 0 Register */
#define CAN1_EMO63DATA0	(*( CAN_MODATAL0_type *) 0xF00297E0U)	/* Extended Message Object 63 Data 0 Register */
#define CAN1_EMO64DATA0	(*( CAN_MODATAL0_type *) 0xF0029800U)	/* Extended Message Object 64 Data 0 Register */
#define CAN1_EMO65DATA0	(*( CAN_MODATAL0_type *) 0xF0029820U)	/* Extended Message Object 65 Data 0 Register */
#define CAN1_EMO66DATA0	(*( CAN_MODATAL0_type *) 0xF0029840U)	/* Extended Message Object 66 Data 0 Register */
#define CAN1_EMO67DATA0	(*( CAN_MODATAL0_type *) 0xF0029860U)	/* Extended Message Object 67 Data 0 Register */
#define CAN1_EMO68DATA0	(*( CAN_MODATAL0_type *) 0xF0029880U)	/* Extended Message Object 68 Data 0 Register */
#define CAN1_EMO69DATA0	(*( CAN_MODATAL0_type *) 0xF00298A0U)	/* Extended Message Object 69 Data 0 Register */
#define CAN1_EMO70DATA0	(*( CAN_MODATAL0_type *) 0xF00298C0U)	/* Extended Message Object 70 Data 0 Register */
#define CAN1_EMO71DATA0	(*( CAN_MODATAL0_type *) 0xF00298E0U)	/* Extended Message Object 71 Data 0 Register */
#define CAN1_EMO72DATA0	(*( CAN_MODATAL0_type *) 0xF0029900U)	/* Extended Message Object 72 Data 0 Register */
#define CAN1_EMO73DATA0	(*( CAN_MODATAL0_type *) 0xF0029920U)	/* Extended Message Object 73 Data 0 Register */
#define CAN1_EMO74DATA0	(*( CAN_MODATAL0_type *) 0xF0029940U)	/* Extended Message Object 74 Data 0 Register */
#define CAN1_EMO75DATA0	(*( CAN_MODATAL0_type *) 0xF0029960U)	/* Extended Message Object 75 Data 0 Register */
#define CAN1_EMO76DATA0	(*( CAN_MODATAL0_type *) 0xF0029980U)	/* Extended Message Object 76 Data 0 Register */
#define CAN1_EMO77DATA0	(*( CAN_MODATAL0_type *) 0xF00299A0U)	/* Extended Message Object 77 Data 0 Register */
#define CAN1_EMO78DATA0	(*( CAN_MODATAL0_type *) 0xF00299C0U)	/* Extended Message Object 78 Data 0 Register */
#define CAN1_EMO79DATA0	(*( CAN_MODATAL0_type *) 0xF00299E0U)	/* Extended Message Object 79 Data 0 Register */
#define CAN1_EMO80DATA0	(*( CAN_MODATAL0_type *) 0xF0029A00U)	/* Extended Message Object 80 Data 0 Register */
#define CAN1_EMO81DATA0	(*( CAN_MODATAL0_type *) 0xF0029A20U)	/* Extended Message Object 81 Data 0 Register */
#define CAN1_EMO82DATA0	(*( CAN_MODATAL0_type *) 0xF0029A40U)	/* Extended Message Object 82 Data 0 Register */
#define CAN1_EMO83DATA0	(*( CAN_MODATAL0_type *) 0xF0029A60U)	/* Extended Message Object 83 Data 0 Register */
#define CAN1_EMO84DATA0	(*( CAN_MODATAL0_type *) 0xF0029A80U)	/* Extended Message Object 84 Data 0 Register */
#define CAN1_EMO85DATA0	(*( CAN_MODATAL0_type *) 0xF0029AA0U)	/* Extended Message Object 85 Data 0 Register */
#define CAN1_EMO86DATA0	(*( CAN_MODATAL0_type *) 0xF0029AC0U)	/* Extended Message Object 86 Data 0 Register */
#define CAN1_EMO87DATA0	(*( CAN_MODATAL0_type *) 0xF0029AE0U)	/* Extended Message Object 87 Data 0 Register */
#define CAN1_EMO88DATA0	(*( CAN_MODATAL0_type *) 0xF0029B00U)	/* Extended Message Object 88 Data 0 Register */
#define CAN1_EMO89DATA0	(*( CAN_MODATAL0_type *) 0xF0029B20U)	/* Extended Message Object 89 Data 0 Register */
#define CAN1_EMO90DATA0	(*( CAN_MODATAL0_type *) 0xF0029B40U)	/* Extended Message Object 90 Data 0 Register */
#define CAN1_EMO91DATA0	(*( CAN_MODATAL0_type *) 0xF0029B60U)	/* Extended Message Object 91 Data 0 Register */
#define CAN1_EMO92DATA0	(*( CAN_MODATAL0_type *) 0xF0029B80U)	/* Extended Message Object 92 Data 0 Register */
#define CAN1_EMO93DATA0	(*( CAN_MODATAL0_type *) 0xF0029BA0U)	/* Extended Message Object 93 Data 0 Register */
#define CAN1_EMO94DATA0	(*( CAN_MODATAL0_type *) 0xF0029BC0U)	/* Extended Message Object 94 Data 0 Register */
#define CAN1_EMO95DATA0	(*( CAN_MODATAL0_type *) 0xF0029BE0U)	/* Extended Message Object 95 Data 0 Register */
#define CAN1_EMO96DATA0	(*( CAN_MODATAL0_type *) 0xF0029C00U)	/* Extended Message Object 96 Data 0 Register */
#define CAN1_EMO97DATA0	(*( CAN_MODATAL0_type *) 0xF0029C20U)	/* Extended Message Object 97 Data 0 Register */
#define CAN1_EMO98DATA0	(*( CAN_MODATAL0_type *) 0xF0029C40U)	/* Extended Message Object 98 Data 0 Register */
#define CAN1_EMO99DATA0	(*( CAN_MODATAL0_type *) 0xF0029C60U)	/* Extended Message Object 99 Data 0 Register */
#define CAN1_EMO100DATA0	(*( CAN_MODATAL0_type *) 0xF0029C80U)	/* Extended Message Object 100 Data 0 Register */
#define CAN1_EMO101DATA0	(*( CAN_MODATAL0_type *) 0xF0029CA0U)	/* Extended Message Object 101 Data 0 Register */
#define CAN1_EMO102DATA0	(*( CAN_MODATAL0_type *) 0xF0029CC0U)	/* Extended Message Object 102 Data 0 Register */
#define CAN1_EMO103DATA0	(*( CAN_MODATAL0_type *) 0xF0029CE0U)	/* Extended Message Object 103 Data 0 Register */
#define CAN1_EMO104DATA0	(*( CAN_MODATAL0_type *) 0xF0029D00U)	/* Extended Message Object 104 Data 0 Register */
#define CAN1_EMO105DATA0	(*( CAN_MODATAL0_type *) 0xF0029D20U)	/* Extended Message Object 105 Data 0 Register */
#define CAN1_EMO106DATA0	(*( CAN_MODATAL0_type *) 0xF0029D40U)	/* Extended Message Object 106 Data 0 Register */
#define CAN1_EMO107DATA0	(*( CAN_MODATAL0_type *) 0xF0029D60U)	/* Extended Message Object 107 Data 0 Register */
#define CAN1_EMO108DATA0	(*( CAN_MODATAL0_type *) 0xF0029D80U)	/* Extended Message Object 108 Data 0 Register */
#define CAN1_EMO109DATA0	(*( CAN_MODATAL0_type *) 0xF0029DA0U)	/* Extended Message Object 109 Data 0 Register */
#define CAN1_EMO110DATA0	(*( CAN_MODATAL0_type *) 0xF0029DC0U)	/* Extended Message Object 110 Data 0 Register */
#define CAN1_EMO111DATA0	(*( CAN_MODATAL0_type *) 0xF0029DE0U)	/* Extended Message Object 111 Data 0 Register */
#define CAN1_EMO112DATA0	(*( CAN_MODATAL0_type *) 0xF0029E00U)	/* Extended Message Object 112 Data 0 Register */
#define CAN1_EMO113DATA0	(*( CAN_MODATAL0_type *) 0xF0029E20U)	/* Extended Message Object 113 Data 0 Register */
#define CAN1_EMO114DATA0	(*( CAN_MODATAL0_type *) 0xF0029E40U)	/* Extended Message Object 114 Data 0 Register */
#define CAN1_EMO115DATA0	(*( CAN_MODATAL0_type *) 0xF0029E60U)	/* Extended Message Object 115 Data 0 Register */
#define CAN1_EMO116DATA0	(*( CAN_MODATAL0_type *) 0xF0029E80U)	/* Extended Message Object 116 Data 0 Register */
#define CAN1_EMO117DATA0	(*( CAN_MODATAL0_type *) 0xF0029EA0U)	/* Extended Message Object 117 Data 0 Register */
#define CAN1_EMO118DATA0	(*( CAN_MODATAL0_type *) 0xF0029EC0U)	/* Extended Message Object 118 Data 0 Register */
#define CAN1_EMO119DATA0	(*( CAN_MODATAL0_type *) 0xF0029EE0U)	/* Extended Message Object 119 Data 0 Register */
#define CAN1_EMO120DATA0	(*( CAN_MODATAL0_type *) 0xF0029F00U)	/* Extended Message Object 120 Data 0 Register */
#define CAN1_EMO121DATA0	(*( CAN_MODATAL0_type *) 0xF0029F20U)	/* Extended Message Object 121 Data 0 Register */
#define CAN1_EMO122DATA0	(*( CAN_MODATAL0_type *) 0xF0029F40U)	/* Extended Message Object 122 Data 0 Register */
#define CAN1_EMO123DATA0	(*( CAN_MODATAL0_type *) 0xF0029F60U)	/* Extended Message Object 123 Data 0 Register */
#define CAN1_EMO124DATA0	(*( CAN_MODATAL0_type *) 0xF0029F80U)	/* Extended Message Object 124 Data 0 Register */
#define CAN1_EMO125DATA0	(*( CAN_MODATAL0_type *) 0xF0029FA0U)	/* Extended Message Object 125 Data 0 Register */
#define CAN1_EMO126DATA0	(*( CAN_MODATAL0_type *) 0xF0029FC0U)	/* Extended Message Object 126 Data 0 Register */
#define CAN1_EMO127DATA0	(*( CAN_MODATAL0_type *) 0xF0029FE0U)	/* Extended Message Object 127 Data 0 Register */
#define CAN1_EMO0DATA1	(*( CAN_MODATAL0_type *) 0xF0029004U)	/* Extended Message Object 0 Data 1 Register */
#define CAN1_EMO1DATA1	(*( CAN_MODATAL0_type *) 0xF0029024U)	/* Extended Message Object 1 Data 1 Register */
#define CAN1_EMO2DATA1	(*( CAN_MODATAL0_type *) 0xF0029044U)	/* Extended Message Object 2 Data 1 Register */
#define CAN1_EMO3DATA1	(*( CAN_MODATAL0_type *) 0xF0029064U)	/* Extended Message Object 3 Data 1 Register */
#define CAN1_EMO4DATA1	(*( CAN_MODATAL0_type *) 0xF0029084U)	/* Extended Message Object 4 Data 1 Register */
#define CAN1_EMO5DATA1	(*( CAN_MODATAL0_type *) 0xF00290A4U)	/* Extended Message Object 5 Data 1 Register */
#define CAN1_EMO6DATA1	(*( CAN_MODATAL0_type *) 0xF00290C4U)	/* Extended Message Object 6 Data 1 Register */
#define CAN1_EMO7DATA1	(*( CAN_MODATAL0_type *) 0xF00290E4U)	/* Extended Message Object 7 Data 1 Register */
#define CAN1_EMO8DATA1	(*( CAN_MODATAL0_type *) 0xF0029104U)	/* Extended Message Object 8 Data 1 Register */
#define CAN1_EMO9DATA1	(*( CAN_MODATAL0_type *) 0xF0029124U)	/* Extended Message Object 9 Data 1 Register */
#define CAN1_EMO10DATA1	(*( CAN_MODATAL0_type *) 0xF0029144U)	/* Extended Message Object 10 Data 1 Register */
#define CAN1_EMO11DATA1	(*( CAN_MODATAL0_type *) 0xF0029164U)	/* Extended Message Object 11 Data 1 Register */
#define CAN1_EMO12DATA1	(*( CAN_MODATAL0_type *) 0xF0029184U)	/* Extended Message Object 12 Data 1 Register */
#define CAN1_EMO13DATA1	(*( CAN_MODATAL0_type *) 0xF00291A4U)	/* Extended Message Object 13 Data 1 Register */
#define CAN1_EMO14DATA1	(*( CAN_MODATAL0_type *) 0xF00291C4U)	/* Extended Message Object 14 Data 1 Register */
#define CAN1_EMO15DATA1	(*( CAN_MODATAL0_type *) 0xF00291E4U)	/* Extended Message Object 15 Data 1 Register */
#define CAN1_EMO16DATA1	(*( CAN_MODATAL0_type *) 0xF0029204U)	/* Extended Message Object 16 Data 1 Register */
#define CAN1_EMO17DATA1	(*( CAN_MODATAL0_type *) 0xF0029224U)	/* Extended Message Object 17 Data 1 Register */
#define CAN1_EMO18DATA1	(*( CAN_MODATAL0_type *) 0xF0029244U)	/* Extended Message Object 18 Data 1 Register */
#define CAN1_EMO19DATA1	(*( CAN_MODATAL0_type *) 0xF0029264U)	/* Extended Message Object 19 Data 1 Register */
#define CAN1_EMO20DATA1	(*( CAN_MODATAL0_type *) 0xF0029284U)	/* Extended Message Object 20 Data 1 Register */
#define CAN1_EMO21DATA1	(*( CAN_MODATAL0_type *) 0xF00292A4U)	/* Extended Message Object 21 Data 1 Register */
#define CAN1_EMO22DATA1	(*( CAN_MODATAL0_type *) 0xF00292C4U)	/* Extended Message Object 22 Data 1 Register */
#define CAN1_EMO23DATA1	(*( CAN_MODATAL0_type *) 0xF00292E4U)	/* Extended Message Object 23 Data 1 Register */
#define CAN1_EMO24DATA1	(*( CAN_MODATAL0_type *) 0xF0029304U)	/* Extended Message Object 24 Data 1 Register */
#define CAN1_EMO25DATA1	(*( CAN_MODATAL0_type *) 0xF0029324U)	/* Extended Message Object 25 Data 1 Register */
#define CAN1_EMO26DATA1	(*( CAN_MODATAL0_type *) 0xF0029344U)	/* Extended Message Object 26 Data 1 Register */
#define CAN1_EMO27DATA1	(*( CAN_MODATAL0_type *) 0xF0029364U)	/* Extended Message Object 27 Data 1 Register */
#define CAN1_EMO28DATA1	(*( CAN_MODATAL0_type *) 0xF0029384U)	/* Extended Message Object 28 Data 1 Register */
#define CAN1_EMO29DATA1	(*( CAN_MODATAL0_type *) 0xF00293A4U)	/* Extended Message Object 29 Data 1 Register */
#define CAN1_EMO30DATA1	(*( CAN_MODATAL0_type *) 0xF00293C4U)	/* Extended Message Object 30 Data 1 Register */
#define CAN1_EMO31DATA1	(*( CAN_MODATAL0_type *) 0xF00293E4U)	/* Extended Message Object 31 Data 1 Register */
#define CAN1_EMO32DATA1	(*( CAN_MODATAL0_type *) 0xF0029404U)	/* Extended Message Object 32 Data 1 Register */
#define CAN1_EMO33DATA1	(*( CAN_MODATAL0_type *) 0xF0029424U)	/* Extended Message Object 33 Data 1 Register */
#define CAN1_EMO34DATA1	(*( CAN_MODATAL0_type *) 0xF0029444U)	/* Extended Message Object 34 Data 1 Register */
#define CAN1_EMO35DATA1	(*( CAN_MODATAL0_type *) 0xF0029464U)	/* Extended Message Object 35 Data 1 Register */
#define CAN1_EMO36DATA1	(*( CAN_MODATAL0_type *) 0xF0029484U)	/* Extended Message Object 36 Data 1 Register */
#define CAN1_EMO37DATA1	(*( CAN_MODATAL0_type *) 0xF00294A4U)	/* Extended Message Object 37 Data 1 Register */
#define CAN1_EMO38DATA1	(*( CAN_MODATAL0_type *) 0xF00294C4U)	/* Extended Message Object 38 Data 1 Register */
#define CAN1_EMO39DATA1	(*( CAN_MODATAL0_type *) 0xF00294E4U)	/* Extended Message Object 39 Data 1 Register */
#define CAN1_EMO40DATA1	(*( CAN_MODATAL0_type *) 0xF0029504U)	/* Extended Message Object 40 Data 1 Register */
#define CAN1_EMO41DATA1	(*( CAN_MODATAL0_type *) 0xF0029524U)	/* Extended Message Object 41 Data 1 Register */
#define CAN1_EMO42DATA1	(*( CAN_MODATAL0_type *) 0xF0029544U)	/* Extended Message Object 42 Data 1 Register */
#define CAN1_EMO43DATA1	(*( CAN_MODATAL0_type *) 0xF0029564U)	/* Extended Message Object 43 Data 1 Register */
#define CAN1_EMO44DATA1	(*( CAN_MODATAL0_type *) 0xF0029584U)	/* Extended Message Object 44 Data 1 Register */
#define CAN1_EMO45DATA1	(*( CAN_MODATAL0_type *) 0xF00295A4U)	/* Extended Message Object 45 Data 1 Register */
#define CAN1_EMO46DATA1	(*( CAN_MODATAL0_type *) 0xF00295C4U)	/* Extended Message Object 46 Data 1 Register */
#define CAN1_EMO47DATA1	(*( CAN_MODATAL0_type *) 0xF00295E4U)	/* Extended Message Object 47 Data 1 Register */
#define CAN1_EMO48DATA1	(*( CAN_MODATAL0_type *) 0xF0029604U)	/* Extended Message Object 48 Data 1 Register */
#define CAN1_EMO49DATA1	(*( CAN_MODATAL0_type *) 0xF0029624U)	/* Extended Message Object 49 Data 1 Register */
#define CAN1_EMO50DATA1	(*( CAN_MODATAL0_type *) 0xF0029644U)	/* Extended Message Object 50 Data 1 Register */
#define CAN1_EMO51DATA1	(*( CAN_MODATAL0_type *) 0xF0029664U)	/* Extended Message Object 51 Data 1 Register */
#define CAN1_EMO52DATA1	(*( CAN_MODATAL0_type *) 0xF0029684U)	/* Extended Message Object 52 Data 1 Register */
#define CAN1_EMO53DATA1	(*( CAN_MODATAL0_type *) 0xF00296A4U)	/* Extended Message Object 53 Data 1 Register */
#define CAN1_EMO54DATA1	(*( CAN_MODATAL0_type *) 0xF00296C4U)	/* Extended Message Object 54 Data 1 Register */
#define CAN1_EMO55DATA1	(*( CAN_MODATAL0_type *) 0xF00296E4U)	/* Extended Message Object 55 Data 1 Register */
#define CAN1_EMO56DATA1	(*( CAN_MODATAL0_type *) 0xF0029704U)	/* Extended Message Object 56 Data 1 Register */
#define CAN1_EMO57DATA1	(*( CAN_MODATAL0_type *) 0xF0029724U)	/* Extended Message Object 57 Data 1 Register */
#define CAN1_EMO58DATA1	(*( CAN_MODATAL0_type *) 0xF0029744U)	/* Extended Message Object 58 Data 1 Register */
#define CAN1_EMO59DATA1	(*( CAN_MODATAL0_type *) 0xF0029764U)	/* Extended Message Object 59 Data 1 Register */
#define CAN1_EMO60DATA1	(*( CAN_MODATAL0_type *) 0xF0029784U)	/* Extended Message Object 60 Data 1 Register */
#define CAN1_EMO61DATA1	(*( CAN_MODATAL0_type *) 0xF00297A4U)	/* Extended Message Object 61 Data 1 Register */
#define CAN1_EMO62DATA1	(*( CAN_MODATAL0_type *) 0xF00297C4U)	/* Extended Message Object 62 Data 1 Register */
#define CAN1_EMO63DATA1	(*( CAN_MODATAL0_type *) 0xF00297E4U)	/* Extended Message Object 63 Data 1 Register */
#define CAN1_EMO64DATA1	(*( CAN_MODATAL0_type *) 0xF0029804U)	/* Extended Message Object 64 Data 1 Register */
#define CAN1_EMO65DATA1	(*( CAN_MODATAL0_type *) 0xF0029824U)	/* Extended Message Object 65 Data 1 Register */
#define CAN1_EMO66DATA1	(*( CAN_MODATAL0_type *) 0xF0029844U)	/* Extended Message Object 66 Data 1 Register */
#define CAN1_EMO67DATA1	(*( CAN_MODATAL0_type *) 0xF0029864U)	/* Extended Message Object 67 Data 1 Register */
#define CAN1_EMO68DATA1	(*( CAN_MODATAL0_type *) 0xF0029884U)	/* Extended Message Object 68 Data 1 Register */
#define CAN1_EMO69DATA1	(*( CAN_MODATAL0_type *) 0xF00298A4U)	/* Extended Message Object 69 Data 1 Register */
#define CAN1_EMO70DATA1	(*( CAN_MODATAL0_type *) 0xF00298C4U)	/* Extended Message Object 70 Data 1 Register */
#define CAN1_EMO71DATA1	(*( CAN_MODATAL0_type *) 0xF00298E4U)	/* Extended Message Object 71 Data 1 Register */
#define CAN1_EMO72DATA1	(*( CAN_MODATAL0_type *) 0xF0029904U)	/* Extended Message Object 72 Data 1 Register */
#define CAN1_EMO73DATA1	(*( CAN_MODATAL0_type *) 0xF0029924U)	/* Extended Message Object 73 Data 1 Register */
#define CAN1_EMO74DATA1	(*( CAN_MODATAL0_type *) 0xF0029944U)	/* Extended Message Object 74 Data 1 Register */
#define CAN1_EMO75DATA1	(*( CAN_MODATAL0_type *) 0xF0029964U)	/* Extended Message Object 75 Data 1 Register */
#define CAN1_EMO76DATA1	(*( CAN_MODATAL0_type *) 0xF0029984U)	/* Extended Message Object 76 Data 1 Register */
#define CAN1_EMO77DATA1	(*( CAN_MODATAL0_type *) 0xF00299A4U)	/* Extended Message Object 77 Data 1 Register */
#define CAN1_EMO78DATA1	(*( CAN_MODATAL0_type *) 0xF00299C4U)	/* Extended Message Object 78 Data 1 Register */
#define CAN1_EMO79DATA1	(*( CAN_MODATAL0_type *) 0xF00299E4U)	/* Extended Message Object 79 Data 1 Register */
#define CAN1_EMO80DATA1	(*( CAN_MODATAL0_type *) 0xF0029A04U)	/* Extended Message Object 80 Data 1 Register */
#define CAN1_EMO81DATA1	(*( CAN_MODATAL0_type *) 0xF0029A24U)	/* Extended Message Object 81 Data 1 Register */
#define CAN1_EMO82DATA1	(*( CAN_MODATAL0_type *) 0xF0029A44U)	/* Extended Message Object 82 Data 1 Register */
#define CAN1_EMO83DATA1	(*( CAN_MODATAL0_type *) 0xF0029A64U)	/* Extended Message Object 83 Data 1 Register */
#define CAN1_EMO84DATA1	(*( CAN_MODATAL0_type *) 0xF0029A84U)	/* Extended Message Object 84 Data 1 Register */
#define CAN1_EMO85DATA1	(*( CAN_MODATAL0_type *) 0xF0029AA4U)	/* Extended Message Object 85 Data 1 Register */
#define CAN1_EMO86DATA1	(*( CAN_MODATAL0_type *) 0xF0029AC4U)	/* Extended Message Object 86 Data 1 Register */
#define CAN1_EMO87DATA1	(*( CAN_MODATAL0_type *) 0xF0029AE4U)	/* Extended Message Object 87 Data 1 Register */
#define CAN1_EMO88DATA1	(*( CAN_MODATAL0_type *) 0xF0029B04U)	/* Extended Message Object 88 Data 1 Register */
#define CAN1_EMO89DATA1	(*( CAN_MODATAL0_type *) 0xF0029B24U)	/* Extended Message Object 89 Data 1 Register */
#define CAN1_EMO90DATA1	(*( CAN_MODATAL0_type *) 0xF0029B44U)	/* Extended Message Object 90 Data 1 Register */
#define CAN1_EMO91DATA1	(*( CAN_MODATAL0_type *) 0xF0029B64U)	/* Extended Message Object 91 Data 1 Register */
#define CAN1_EMO92DATA1	(*( CAN_MODATAL0_type *) 0xF0029B84U)	/* Extended Message Object 92 Data 1 Register */
#define CAN1_EMO93DATA1	(*( CAN_MODATAL0_type *) 0xF0029BA4U)	/* Extended Message Object 93 Data 1 Register */
#define CAN1_EMO94DATA1	(*( CAN_MODATAL0_type *) 0xF0029BC4U)	/* Extended Message Object 94 Data 1 Register */
#define CAN1_EMO95DATA1	(*( CAN_MODATAL0_type *) 0xF0029BE4U)	/* Extended Message Object 95 Data 1 Register */
#define CAN1_EMO96DATA1	(*( CAN_MODATAL0_type *) 0xF0029C04U)	/* Extended Message Object 96 Data 1 Register */
#define CAN1_EMO97DATA1	(*( CAN_MODATAL0_type *) 0xF0029C24U)	/* Extended Message Object 97 Data 1 Register */
#define CAN1_EMO98DATA1	(*( CAN_MODATAL0_type *) 0xF0029C44U)	/* Extended Message Object 98 Data 1 Register */
#define CAN1_EMO99DATA1	(*( CAN_MODATAL0_type *) 0xF0029C64U)	/* Extended Message Object 99 Data 1 Register */
#define CAN1_EMO100DATA1	(*( CAN_MODATAL0_type *) 0xF0029C84U)	/* Extended Message Object 100 Data 1 Register */
#define CAN1_EMO101DATA1	(*( CAN_MODATAL0_type *) 0xF0029CA4U)	/* Extended Message Object 101 Data 1 Register */
#define CAN1_EMO102DATA1	(*( CAN_MODATAL0_type *) 0xF0029CC4U)	/* Extended Message Object 102 Data 1 Register */
#define CAN1_EMO103DATA1	(*( CAN_MODATAL0_type *) 0xF0029CE4U)	/* Extended Message Object 103 Data 1 Register */
#define CAN1_EMO104DATA1	(*( CAN_MODATAL0_type *) 0xF0029D04U)	/* Extended Message Object 104 Data 1 Register */
#define CAN1_EMO105DATA1	(*( CAN_MODATAL0_type *) 0xF0029D24U)	/* Extended Message Object 105 Data 1 Register */
#define CAN1_EMO106DATA1	(*( CAN_MODATAL0_type *) 0xF0029D44U)	/* Extended Message Object 106 Data 1 Register */
#define CAN1_EMO107DATA1	(*( CAN_MODATAL0_type *) 0xF0029D64U)	/* Extended Message Object 107 Data 1 Register */
#define CAN1_EMO108DATA1	(*( CAN_MODATAL0_type *) 0xF0029D84U)	/* Extended Message Object 108 Data 1 Register */
#define CAN1_EMO109DATA1	(*( CAN_MODATAL0_type *) 0xF0029DA4U)	/* Extended Message Object 109 Data 1 Register */
#define CAN1_EMO110DATA1	(*( CAN_MODATAL0_type *) 0xF0029DC4U)	/* Extended Message Object 110 Data 1 Register */
#define CAN1_EMO111DATA1	(*( CAN_MODATAL0_type *) 0xF0029DE4U)	/* Extended Message Object 111 Data 1 Register */
#define CAN1_EMO112DATA1	(*( CAN_MODATAL0_type *) 0xF0029E04U)	/* Extended Message Object 112 Data 1 Register */
#define CAN1_EMO113DATA1	(*( CAN_MODATAL0_type *) 0xF0029E24U)	/* Extended Message Object 113 Data 1 Register */
#define CAN1_EMO114DATA1	(*( CAN_MODATAL0_type *) 0xF0029E44U)	/* Extended Message Object 114 Data 1 Register */
#define CAN1_EMO115DATA1	(*( CAN_MODATAL0_type *) 0xF0029E64U)	/* Extended Message Object 115 Data 1 Register */
#define CAN1_EMO116DATA1	(*( CAN_MODATAL0_type *) 0xF0029E84U)	/* Extended Message Object 116 Data 1 Register */
#define CAN1_EMO117DATA1	(*( CAN_MODATAL0_type *) 0xF0029EA4U)	/* Extended Message Object 117 Data 1 Register */
#define CAN1_EMO118DATA1	(*( CAN_MODATAL0_type *) 0xF0029EC4U)	/* Extended Message Object 118 Data 1 Register */
#define CAN1_EMO119DATA1	(*( CAN_MODATAL0_type *) 0xF0029EE4U)	/* Extended Message Object 119 Data 1 Register */
#define CAN1_EMO120DATA1	(*( CAN_MODATAL0_type *) 0xF0029F04U)	/* Extended Message Object 120 Data 1 Register */
#define CAN1_EMO121DATA1	(*( CAN_MODATAL0_type *) 0xF0029F24U)	/* Extended Message Object 121 Data 1 Register */
#define CAN1_EMO122DATA1	(*( CAN_MODATAL0_type *) 0xF0029F44U)	/* Extended Message Object 122 Data 1 Register */
#define CAN1_EMO123DATA1	(*( CAN_MODATAL0_type *) 0xF0029F64U)	/* Extended Message Object 123 Data 1 Register */
#define CAN1_EMO124DATA1	(*( CAN_MODATAL0_type *) 0xF0029F84U)	/* Extended Message Object 124 Data 1 Register */
#define CAN1_EMO125DATA1	(*( CAN_MODATAL0_type *) 0xF0029FA4U)	/* Extended Message Object 125 Data 1 Register */
#define CAN1_EMO126DATA1	(*( CAN_MODATAL0_type *) 0xF0029FC4U)	/* Extended Message Object 126 Data 1 Register */
#define CAN1_EMO127DATA1	(*( CAN_MODATAL0_type *) 0xF0029FE4U)	/* Extended Message Object 127 Data 1 Register */
#define CAN1_EMO0DATA2	(*( CAN_MODATAL0_type *) 0xF0029008U)	/* Extended Message Object 0 Data 2 Register */
#define CAN1_EMO1DATA2	(*( CAN_MODATAL0_type *) 0xF0029028U)	/* Extended Message Object 1 Data 2 Register */
#define CAN1_EMO2DATA2	(*( CAN_MODATAL0_type *) 0xF0029048U)	/* Extended Message Object 2 Data 2 Register */
#define CAN1_EMO3DATA2	(*( CAN_MODATAL0_type *) 0xF0029068U)	/* Extended Message Object 3 Data 2 Register */
#define CAN1_EMO4DATA2	(*( CAN_MODATAL0_type *) 0xF0029088U)	/* Extended Message Object 4 Data 2 Register */
#define CAN1_EMO5DATA2	(*( CAN_MODATAL0_type *) 0xF00290A8U)	/* Extended Message Object 5 Data 2 Register */
#define CAN1_EMO6DATA2	(*( CAN_MODATAL0_type *) 0xF00290C8U)	/* Extended Message Object 6 Data 2 Register */
#define CAN1_EMO7DATA2	(*( CAN_MODATAL0_type *) 0xF00290E8U)	/* Extended Message Object 7 Data 2 Register */
#define CAN1_EMO8DATA2	(*( CAN_MODATAL0_type *) 0xF0029108U)	/* Extended Message Object 8 Data 2 Register */
#define CAN1_EMO9DATA2	(*( CAN_MODATAL0_type *) 0xF0029128U)	/* Extended Message Object 9 Data 2 Register */
#define CAN1_EMO10DATA2	(*( CAN_MODATAL0_type *) 0xF0029148U)	/* Extended Message Object 10 Data 2 Register */
#define CAN1_EMO11DATA2	(*( CAN_MODATAL0_type *) 0xF0029168U)	/* Extended Message Object 11 Data 2 Register */
#define CAN1_EMO12DATA2	(*( CAN_MODATAL0_type *) 0xF0029188U)	/* Extended Message Object 12 Data 2 Register */
#define CAN1_EMO13DATA2	(*( CAN_MODATAL0_type *) 0xF00291A8U)	/* Extended Message Object 13 Data 2 Register */
#define CAN1_EMO14DATA2	(*( CAN_MODATAL0_type *) 0xF00291C8U)	/* Extended Message Object 14 Data 2 Register */
#define CAN1_EMO15DATA2	(*( CAN_MODATAL0_type *) 0xF00291E8U)	/* Extended Message Object 15 Data 2 Register */
#define CAN1_EMO16DATA2	(*( CAN_MODATAL0_type *) 0xF0029208U)	/* Extended Message Object 16 Data 2 Register */
#define CAN1_EMO17DATA2	(*( CAN_MODATAL0_type *) 0xF0029228U)	/* Extended Message Object 17 Data 2 Register */
#define CAN1_EMO18DATA2	(*( CAN_MODATAL0_type *) 0xF0029248U)	/* Extended Message Object 18 Data 2 Register */
#define CAN1_EMO19DATA2	(*( CAN_MODATAL0_type *) 0xF0029268U)	/* Extended Message Object 19 Data 2 Register */
#define CAN1_EMO20DATA2	(*( CAN_MODATAL0_type *) 0xF0029288U)	/* Extended Message Object 20 Data 2 Register */
#define CAN1_EMO21DATA2	(*( CAN_MODATAL0_type *) 0xF00292A8U)	/* Extended Message Object 21 Data 2 Register */
#define CAN1_EMO22DATA2	(*( CAN_MODATAL0_type *) 0xF00292C8U)	/* Extended Message Object 22 Data 2 Register */
#define CAN1_EMO23DATA2	(*( CAN_MODATAL0_type *) 0xF00292E8U)	/* Extended Message Object 23 Data 2 Register */
#define CAN1_EMO24DATA2	(*( CAN_MODATAL0_type *) 0xF0029308U)	/* Extended Message Object 24 Data 2 Register */
#define CAN1_EMO25DATA2	(*( CAN_MODATAL0_type *) 0xF0029328U)	/* Extended Message Object 25 Data 2 Register */
#define CAN1_EMO26DATA2	(*( CAN_MODATAL0_type *) 0xF0029348U)	/* Extended Message Object 26 Data 2 Register */
#define CAN1_EMO27DATA2	(*( CAN_MODATAL0_type *) 0xF0029368U)	/* Extended Message Object 27 Data 2 Register */
#define CAN1_EMO28DATA2	(*( CAN_MODATAL0_type *) 0xF0029388U)	/* Extended Message Object 28 Data 2 Register */
#define CAN1_EMO29DATA2	(*( CAN_MODATAL0_type *) 0xF00293A8U)	/* Extended Message Object 29 Data 2 Register */
#define CAN1_EMO30DATA2	(*( CAN_MODATAL0_type *) 0xF00293C8U)	/* Extended Message Object 30 Data 2 Register */
#define CAN1_EMO31DATA2	(*( CAN_MODATAL0_type *) 0xF00293E8U)	/* Extended Message Object 31 Data 2 Register */
#define CAN1_EMO32DATA2	(*( CAN_MODATAL0_type *) 0xF0029408U)	/* Extended Message Object 32 Data 2 Register */
#define CAN1_EMO33DATA2	(*( CAN_MODATAL0_type *) 0xF0029428U)	/* Extended Message Object 33 Data 2 Register */
#define CAN1_EMO34DATA2	(*( CAN_MODATAL0_type *) 0xF0029448U)	/* Extended Message Object 34 Data 2 Register */
#define CAN1_EMO35DATA2	(*( CAN_MODATAL0_type *) 0xF0029468U)	/* Extended Message Object 35 Data 2 Register */
#define CAN1_EMO36DATA2	(*( CAN_MODATAL0_type *) 0xF0029488U)	/* Extended Message Object 36 Data 2 Register */
#define CAN1_EMO37DATA2	(*( CAN_MODATAL0_type *) 0xF00294A8U)	/* Extended Message Object 37 Data 2 Register */
#define CAN1_EMO38DATA2	(*( CAN_MODATAL0_type *) 0xF00294C8U)	/* Extended Message Object 38 Data 2 Register */
#define CAN1_EMO39DATA2	(*( CAN_MODATAL0_type *) 0xF00294E8U)	/* Extended Message Object 39 Data 2 Register */
#define CAN1_EMO40DATA2	(*( CAN_MODATAL0_type *) 0xF0029508U)	/* Extended Message Object 40 Data 2 Register */
#define CAN1_EMO41DATA2	(*( CAN_MODATAL0_type *) 0xF0029528U)	/* Extended Message Object 41 Data 2 Register */
#define CAN1_EMO42DATA2	(*( CAN_MODATAL0_type *) 0xF0029548U)	/* Extended Message Object 42 Data 2 Register */
#define CAN1_EMO43DATA2	(*( CAN_MODATAL0_type *) 0xF0029568U)	/* Extended Message Object 43 Data 2 Register */
#define CAN1_EMO44DATA2	(*( CAN_MODATAL0_type *) 0xF0029588U)	/* Extended Message Object 44 Data 2 Register */
#define CAN1_EMO45DATA2	(*( CAN_MODATAL0_type *) 0xF00295A8U)	/* Extended Message Object 45 Data 2 Register */
#define CAN1_EMO46DATA2	(*( CAN_MODATAL0_type *) 0xF00295C8U)	/* Extended Message Object 46 Data 2 Register */
#define CAN1_EMO47DATA2	(*( CAN_MODATAL0_type *) 0xF00295E8U)	/* Extended Message Object 47 Data 2 Register */
#define CAN1_EMO48DATA2	(*( CAN_MODATAL0_type *) 0xF0029608U)	/* Extended Message Object 48 Data 2 Register */
#define CAN1_EMO49DATA2	(*( CAN_MODATAL0_type *) 0xF0029628U)	/* Extended Message Object 49 Data 2 Register */
#define CAN1_EMO50DATA2	(*( CAN_MODATAL0_type *) 0xF0029648U)	/* Extended Message Object 50 Data 2 Register */
#define CAN1_EMO51DATA2	(*( CAN_MODATAL0_type *) 0xF0029668U)	/* Extended Message Object 51 Data 2 Register */
#define CAN1_EMO52DATA2	(*( CAN_MODATAL0_type *) 0xF0029688U)	/* Extended Message Object 52 Data 2 Register */
#define CAN1_EMO53DATA2	(*( CAN_MODATAL0_type *) 0xF00296A8U)	/* Extended Message Object 53 Data 2 Register */
#define CAN1_EMO54DATA2	(*( CAN_MODATAL0_type *) 0xF00296C8U)	/* Extended Message Object 54 Data 2 Register */
#define CAN1_EMO55DATA2	(*( CAN_MODATAL0_type *) 0xF00296E8U)	/* Extended Message Object 55 Data 2 Register */
#define CAN1_EMO56DATA2	(*( CAN_MODATAL0_type *) 0xF0029708U)	/* Extended Message Object 56 Data 2 Register */
#define CAN1_EMO57DATA2	(*( CAN_MODATAL0_type *) 0xF0029728U)	/* Extended Message Object 57 Data 2 Register */
#define CAN1_EMO58DATA2	(*( CAN_MODATAL0_type *) 0xF0029748U)	/* Extended Message Object 58 Data 2 Register */
#define CAN1_EMO59DATA2	(*( CAN_MODATAL0_type *) 0xF0029768U)	/* Extended Message Object 59 Data 2 Register */
#define CAN1_EMO60DATA2	(*( CAN_MODATAL0_type *) 0xF0029788U)	/* Extended Message Object 60 Data 2 Register */
#define CAN1_EMO61DATA2	(*( CAN_MODATAL0_type *) 0xF00297A8U)	/* Extended Message Object 61 Data 2 Register */
#define CAN1_EMO62DATA2	(*( CAN_MODATAL0_type *) 0xF00297C8U)	/* Extended Message Object 62 Data 2 Register */
#define CAN1_EMO63DATA2	(*( CAN_MODATAL0_type *) 0xF00297E8U)	/* Extended Message Object 63 Data 2 Register */
#define CAN1_EMO64DATA2	(*( CAN_MODATAL0_type *) 0xF0029808U)	/* Extended Message Object 64 Data 2 Register */
#define CAN1_EMO65DATA2	(*( CAN_MODATAL0_type *) 0xF0029828U)	/* Extended Message Object 65 Data 2 Register */
#define CAN1_EMO66DATA2	(*( CAN_MODATAL0_type *) 0xF0029848U)	/* Extended Message Object 66 Data 2 Register */
#define CAN1_EMO67DATA2	(*( CAN_MODATAL0_type *) 0xF0029868U)	/* Extended Message Object 67 Data 2 Register */
#define CAN1_EMO68DATA2	(*( CAN_MODATAL0_type *) 0xF0029888U)	/* Extended Message Object 68 Data 2 Register */
#define CAN1_EMO69DATA2	(*( CAN_MODATAL0_type *) 0xF00298A8U)	/* Extended Message Object 69 Data 2 Register */
#define CAN1_EMO70DATA2	(*( CAN_MODATAL0_type *) 0xF00298C8U)	/* Extended Message Object 70 Data 2 Register */
#define CAN1_EMO71DATA2	(*( CAN_MODATAL0_type *) 0xF00298E8U)	/* Extended Message Object 71 Data 2 Register */
#define CAN1_EMO72DATA2	(*( CAN_MODATAL0_type *) 0xF0029908U)	/* Extended Message Object 72 Data 2 Register */
#define CAN1_EMO73DATA2	(*( CAN_MODATAL0_type *) 0xF0029928U)	/* Extended Message Object 73 Data 2 Register */
#define CAN1_EMO74DATA2	(*( CAN_MODATAL0_type *) 0xF0029948U)	/* Extended Message Object 74 Data 2 Register */
#define CAN1_EMO75DATA2	(*( CAN_MODATAL0_type *) 0xF0029968U)	/* Extended Message Object 75 Data 2 Register */
#define CAN1_EMO76DATA2	(*( CAN_MODATAL0_type *) 0xF0029988U)	/* Extended Message Object 76 Data 2 Register */
#define CAN1_EMO77DATA2	(*( CAN_MODATAL0_type *) 0xF00299A8U)	/* Extended Message Object 77 Data 2 Register */
#define CAN1_EMO78DATA2	(*( CAN_MODATAL0_type *) 0xF00299C8U)	/* Extended Message Object 78 Data 2 Register */
#define CAN1_EMO79DATA2	(*( CAN_MODATAL0_type *) 0xF00299E8U)	/* Extended Message Object 79 Data 2 Register */
#define CAN1_EMO80DATA2	(*( CAN_MODATAL0_type *) 0xF0029A08U)	/* Extended Message Object 80 Data 2 Register */
#define CAN1_EMO81DATA2	(*( CAN_MODATAL0_type *) 0xF0029A28U)	/* Extended Message Object 81 Data 2 Register */
#define CAN1_EMO82DATA2	(*( CAN_MODATAL0_type *) 0xF0029A48U)	/* Extended Message Object 82 Data 2 Register */
#define CAN1_EMO83DATA2	(*( CAN_MODATAL0_type *) 0xF0029A68U)	/* Extended Message Object 83 Data 2 Register */
#define CAN1_EMO84DATA2	(*( CAN_MODATAL0_type *) 0xF0029A88U)	/* Extended Message Object 84 Data 2 Register */
#define CAN1_EMO85DATA2	(*( CAN_MODATAL0_type *) 0xF0029AA8U)	/* Extended Message Object 85 Data 2 Register */
#define CAN1_EMO86DATA2	(*( CAN_MODATAL0_type *) 0xF0029AC8U)	/* Extended Message Object 86 Data 2 Register */
#define CAN1_EMO87DATA2	(*( CAN_MODATAL0_type *) 0xF0029AE8U)	/* Extended Message Object 87 Data 2 Register */
#define CAN1_EMO88DATA2	(*( CAN_MODATAL0_type *) 0xF0029B08U)	/* Extended Message Object 88 Data 2 Register */
#define CAN1_EMO89DATA2	(*( CAN_MODATAL0_type *) 0xF0029B28U)	/* Extended Message Object 89 Data 2 Register */
#define CAN1_EMO90DATA2	(*( CAN_MODATAL0_type *) 0xF0029B48U)	/* Extended Message Object 90 Data 2 Register */
#define CAN1_EMO91DATA2	(*( CAN_MODATAL0_type *) 0xF0029B68U)	/* Extended Message Object 91 Data 2 Register */
#define CAN1_EMO92DATA2	(*( CAN_MODATAL0_type *) 0xF0029B88U)	/* Extended Message Object 92 Data 2 Register */
#define CAN1_EMO93DATA2	(*( CAN_MODATAL0_type *) 0xF0029BA8U)	/* Extended Message Object 93 Data 2 Register */
#define CAN1_EMO94DATA2	(*( CAN_MODATAL0_type *) 0xF0029BC8U)	/* Extended Message Object 94 Data 2 Register */
#define CAN1_EMO95DATA2	(*( CAN_MODATAL0_type *) 0xF0029BE8U)	/* Extended Message Object 95 Data 2 Register */
#define CAN1_EMO96DATA2	(*( CAN_MODATAL0_type *) 0xF0029C08U)	/* Extended Message Object 96 Data 2 Register */
#define CAN1_EMO97DATA2	(*( CAN_MODATAL0_type *) 0xF0029C28U)	/* Extended Message Object 97 Data 2 Register */
#define CAN1_EMO98DATA2	(*( CAN_MODATAL0_type *) 0xF0029C48U)	/* Extended Message Object 98 Data 2 Register */
#define CAN1_EMO99DATA2	(*( CAN_MODATAL0_type *) 0xF0029C68U)	/* Extended Message Object 99 Data 2 Register */
#define CAN1_EMO100DATA2	(*( CAN_MODATAL0_type *) 0xF0029C88U)	/* Extended Message Object 100 Data 2 Register */
#define CAN1_EMO101DATA2	(*( CAN_MODATAL0_type *) 0xF0029CA8U)	/* Extended Message Object 101 Data 2 Register */
#define CAN1_EMO102DATA2	(*( CAN_MODATAL0_type *) 0xF0029CC8U)	/* Extended Message Object 102 Data 2 Register */
#define CAN1_EMO103DATA2	(*( CAN_MODATAL0_type *) 0xF0029CE8U)	/* Extended Message Object 103 Data 2 Register */
#define CAN1_EMO104DATA2	(*( CAN_MODATAL0_type *) 0xF0029D08U)	/* Extended Message Object 104 Data 2 Register */
#define CAN1_EMO105DATA2	(*( CAN_MODATAL0_type *) 0xF0029D28U)	/* Extended Message Object 105 Data 2 Register */
#define CAN1_EMO106DATA2	(*( CAN_MODATAL0_type *) 0xF0029D48U)	/* Extended Message Object 106 Data 2 Register */
#define CAN1_EMO107DATA2	(*( CAN_MODATAL0_type *) 0xF0029D68U)	/* Extended Message Object 107 Data 2 Register */
#define CAN1_EMO108DATA2	(*( CAN_MODATAL0_type *) 0xF0029D88U)	/* Extended Message Object 108 Data 2 Register */
#define CAN1_EMO109DATA2	(*( CAN_MODATAL0_type *) 0xF0029DA8U)	/* Extended Message Object 109 Data 2 Register */
#define CAN1_EMO110DATA2	(*( CAN_MODATAL0_type *) 0xF0029DC8U)	/* Extended Message Object 110 Data 2 Register */
#define CAN1_EMO111DATA2	(*( CAN_MODATAL0_type *) 0xF0029DE8U)	/* Extended Message Object 111 Data 2 Register */
#define CAN1_EMO112DATA2	(*( CAN_MODATAL0_type *) 0xF0029E08U)	/* Extended Message Object 112 Data 2 Register */
#define CAN1_EMO113DATA2	(*( CAN_MODATAL0_type *) 0xF0029E28U)	/* Extended Message Object 113 Data 2 Register */
#define CAN1_EMO114DATA2	(*( CAN_MODATAL0_type *) 0xF0029E48U)	/* Extended Message Object 114 Data 2 Register */
#define CAN1_EMO115DATA2	(*( CAN_MODATAL0_type *) 0xF0029E68U)	/* Extended Message Object 115 Data 2 Register */
#define CAN1_EMO116DATA2	(*( CAN_MODATAL0_type *) 0xF0029E88U)	/* Extended Message Object 116 Data 2 Register */
#define CAN1_EMO117DATA2	(*( CAN_MODATAL0_type *) 0xF0029EA8U)	/* Extended Message Object 117 Data 2 Register */
#define CAN1_EMO118DATA2	(*( CAN_MODATAL0_type *) 0xF0029EC8U)	/* Extended Message Object 118 Data 2 Register */
#define CAN1_EMO119DATA2	(*( CAN_MODATAL0_type *) 0xF0029EE8U)	/* Extended Message Object 119 Data 2 Register */
#define CAN1_EMO120DATA2	(*( CAN_MODATAL0_type *) 0xF0029F08U)	/* Extended Message Object 120 Data 2 Register */
#define CAN1_EMO121DATA2	(*( CAN_MODATAL0_type *) 0xF0029F28U)	/* Extended Message Object 121 Data 2 Register */
#define CAN1_EMO122DATA2	(*( CAN_MODATAL0_type *) 0xF0029F48U)	/* Extended Message Object 122 Data 2 Register */
#define CAN1_EMO123DATA2	(*( CAN_MODATAL0_type *) 0xF0029F68U)	/* Extended Message Object 123 Data 2 Register */
#define CAN1_EMO124DATA2	(*( CAN_MODATAL0_type *) 0xF0029F88U)	/* Extended Message Object 124 Data 2 Register */
#define CAN1_EMO125DATA2	(*( CAN_MODATAL0_type *) 0xF0029FA8U)	/* Extended Message Object 125 Data 2 Register */
#define CAN1_EMO126DATA2	(*( CAN_MODATAL0_type *) 0xF0029FC8U)	/* Extended Message Object 126 Data 2 Register */
#define CAN1_EMO127DATA2	(*( CAN_MODATAL0_type *) 0xF0029FE8U)	/* Extended Message Object 127 Data 2 Register */
#define CAN1_EMO0DATA3	(*( CAN_MODATAL0_type *) 0xF002900CU)	/* Extended Message Object 0 Data 3 Register */
#define CAN1_EMO1DATA3	(*( CAN_MODATAL0_type *) 0xF002902CU)	/* Extended Message Object 1 Data 3 Register */
#define CAN1_EMO2DATA3	(*( CAN_MODATAL0_type *) 0xF002904CU)	/* Extended Message Object 2 Data 3 Register */
#define CAN1_EMO3DATA3	(*( CAN_MODATAL0_type *) 0xF002906CU)	/* Extended Message Object 3 Data 3 Register */
#define CAN1_EMO4DATA3	(*( CAN_MODATAL0_type *) 0xF002908CU)	/* Extended Message Object 4 Data 3 Register */
#define CAN1_EMO5DATA3	(*( CAN_MODATAL0_type *) 0xF00290ACU)	/* Extended Message Object 5 Data 3 Register */
#define CAN1_EMO6DATA3	(*( CAN_MODATAL0_type *) 0xF00290CCU)	/* Extended Message Object 6 Data 3 Register */
#define CAN1_EMO7DATA3	(*( CAN_MODATAL0_type *) 0xF00290ECU)	/* Extended Message Object 7 Data 3 Register */
#define CAN1_EMO8DATA3	(*( CAN_MODATAL0_type *) 0xF002910CU)	/* Extended Message Object 8 Data 3 Register */
#define CAN1_EMO9DATA3	(*( CAN_MODATAL0_type *) 0xF002912CU)	/* Extended Message Object 9 Data 3 Register */
#define CAN1_EMO10DATA3	(*( CAN_MODATAL0_type *) 0xF002914CU)	/* Extended Message Object 10 Data 3 Register */
#define CAN1_EMO11DATA3	(*( CAN_MODATAL0_type *) 0xF002916CU)	/* Extended Message Object 11 Data 3 Register */
#define CAN1_EMO12DATA3	(*( CAN_MODATAL0_type *) 0xF002918CU)	/* Extended Message Object 12 Data 3 Register */
#define CAN1_EMO13DATA3	(*( CAN_MODATAL0_type *) 0xF00291ACU)	/* Extended Message Object 13 Data 3 Register */
#define CAN1_EMO14DATA3	(*( CAN_MODATAL0_type *) 0xF00291CCU)	/* Extended Message Object 14 Data 3 Register */
#define CAN1_EMO15DATA3	(*( CAN_MODATAL0_type *) 0xF00291ECU)	/* Extended Message Object 15 Data 3 Register */
#define CAN1_EMO16DATA3	(*( CAN_MODATAL0_type *) 0xF002920CU)	/* Extended Message Object 16 Data 3 Register */
#define CAN1_EMO17DATA3	(*( CAN_MODATAL0_type *) 0xF002922CU)	/* Extended Message Object 17 Data 3 Register */
#define CAN1_EMO18DATA3	(*( CAN_MODATAL0_type *) 0xF002924CU)	/* Extended Message Object 18 Data 3 Register */
#define CAN1_EMO19DATA3	(*( CAN_MODATAL0_type *) 0xF002926CU)	/* Extended Message Object 19 Data 3 Register */
#define CAN1_EMO20DATA3	(*( CAN_MODATAL0_type *) 0xF002928CU)	/* Extended Message Object 20 Data 3 Register */
#define CAN1_EMO21DATA3	(*( CAN_MODATAL0_type *) 0xF00292ACU)	/* Extended Message Object 21 Data 3 Register */
#define CAN1_EMO22DATA3	(*( CAN_MODATAL0_type *) 0xF00292CCU)	/* Extended Message Object 22 Data 3 Register */
#define CAN1_EMO23DATA3	(*( CAN_MODATAL0_type *) 0xF00292ECU)	/* Extended Message Object 23 Data 3 Register */
#define CAN1_EMO24DATA3	(*( CAN_MODATAL0_type *) 0xF002930CU)	/* Extended Message Object 24 Data 3 Register */
#define CAN1_EMO25DATA3	(*( CAN_MODATAL0_type *) 0xF002932CU)	/* Extended Message Object 25 Data 3 Register */
#define CAN1_EMO26DATA3	(*( CAN_MODATAL0_type *) 0xF002934CU)	/* Extended Message Object 26 Data 3 Register */
#define CAN1_EMO27DATA3	(*( CAN_MODATAL0_type *) 0xF002936CU)	/* Extended Message Object 27 Data 3 Register */
#define CAN1_EMO28DATA3	(*( CAN_MODATAL0_type *) 0xF002938CU)	/* Extended Message Object 28 Data 3 Register */
#define CAN1_EMO29DATA3	(*( CAN_MODATAL0_type *) 0xF00293ACU)	/* Extended Message Object 29 Data 3 Register */
#define CAN1_EMO30DATA3	(*( CAN_MODATAL0_type *) 0xF00293CCU)	/* Extended Message Object 30 Data 3 Register */
#define CAN1_EMO31DATA3	(*( CAN_MODATAL0_type *) 0xF00293ECU)	/* Extended Message Object 31 Data 3 Register */
#define CAN1_EMO32DATA3	(*( CAN_MODATAL0_type *) 0xF002940CU)	/* Extended Message Object 32 Data 3 Register */
#define CAN1_EMO33DATA3	(*( CAN_MODATAL0_type *) 0xF002942CU)	/* Extended Message Object 33 Data 3 Register */
#define CAN1_EMO34DATA3	(*( CAN_MODATAL0_type *) 0xF002944CU)	/* Extended Message Object 34 Data 3 Register */
#define CAN1_EMO35DATA3	(*( CAN_MODATAL0_type *) 0xF002946CU)	/* Extended Message Object 35 Data 3 Register */
#define CAN1_EMO36DATA3	(*( CAN_MODATAL0_type *) 0xF002948CU)	/* Extended Message Object 36 Data 3 Register */
#define CAN1_EMO37DATA3	(*( CAN_MODATAL0_type *) 0xF00294ACU)	/* Extended Message Object 37 Data 3 Register */
#define CAN1_EMO38DATA3	(*( CAN_MODATAL0_type *) 0xF00294CCU)	/* Extended Message Object 38 Data 3 Register */
#define CAN1_EMO39DATA3	(*( CAN_MODATAL0_type *) 0xF00294ECU)	/* Extended Message Object 39 Data 3 Register */
#define CAN1_EMO40DATA3	(*( CAN_MODATAL0_type *) 0xF002950CU)	/* Extended Message Object 40 Data 3 Register */
#define CAN1_EMO41DATA3	(*( CAN_MODATAL0_type *) 0xF002952CU)	/* Extended Message Object 41 Data 3 Register */
#define CAN1_EMO42DATA3	(*( CAN_MODATAL0_type *) 0xF002954CU)	/* Extended Message Object 42 Data 3 Register */
#define CAN1_EMO43DATA3	(*( CAN_MODATAL0_type *) 0xF002956CU)	/* Extended Message Object 43 Data 3 Register */
#define CAN1_EMO44DATA3	(*( CAN_MODATAL0_type *) 0xF002958CU)	/* Extended Message Object 44 Data 3 Register */
#define CAN1_EMO45DATA3	(*( CAN_MODATAL0_type *) 0xF00295ACU)	/* Extended Message Object 45 Data 3 Register */
#define CAN1_EMO46DATA3	(*( CAN_MODATAL0_type *) 0xF00295CCU)	/* Extended Message Object 46 Data 3 Register */
#define CAN1_EMO47DATA3	(*( CAN_MODATAL0_type *) 0xF00295ECU)	/* Extended Message Object 47 Data 3 Register */
#define CAN1_EMO48DATA3	(*( CAN_MODATAL0_type *) 0xF002960CU)	/* Extended Message Object 48 Data 3 Register */
#define CAN1_EMO49DATA3	(*( CAN_MODATAL0_type *) 0xF002962CU)	/* Extended Message Object 49 Data 3 Register */
#define CAN1_EMO50DATA3	(*( CAN_MODATAL0_type *) 0xF002964CU)	/* Extended Message Object 50 Data 3 Register */
#define CAN1_EMO51DATA3	(*( CAN_MODATAL0_type *) 0xF002966CU)	/* Extended Message Object 51 Data 3 Register */
#define CAN1_EMO52DATA3	(*( CAN_MODATAL0_type *) 0xF002968CU)	/* Extended Message Object 52 Data 3 Register */
#define CAN1_EMO53DATA3	(*( CAN_MODATAL0_type *) 0xF00296ACU)	/* Extended Message Object 53 Data 3 Register */
#define CAN1_EMO54DATA3	(*( CAN_MODATAL0_type *) 0xF00296CCU)	/* Extended Message Object 54 Data 3 Register */
#define CAN1_EMO55DATA3	(*( CAN_MODATAL0_type *) 0xF00296ECU)	/* Extended Message Object 55 Data 3 Register */
#define CAN1_EMO56DATA3	(*( CAN_MODATAL0_type *) 0xF002970CU)	/* Extended Message Object 56 Data 3 Register */
#define CAN1_EMO57DATA3	(*( CAN_MODATAL0_type *) 0xF002972CU)	/* Extended Message Object 57 Data 3 Register */
#define CAN1_EMO58DATA3	(*( CAN_MODATAL0_type *) 0xF002974CU)	/* Extended Message Object 58 Data 3 Register */
#define CAN1_EMO59DATA3	(*( CAN_MODATAL0_type *) 0xF002976CU)	/* Extended Message Object 59 Data 3 Register */
#define CAN1_EMO60DATA3	(*( CAN_MODATAL0_type *) 0xF002978CU)	/* Extended Message Object 60 Data 3 Register */
#define CAN1_EMO61DATA3	(*( CAN_MODATAL0_type *) 0xF00297ACU)	/* Extended Message Object 61 Data 3 Register */
#define CAN1_EMO62DATA3	(*( CAN_MODATAL0_type *) 0xF00297CCU)	/* Extended Message Object 62 Data 3 Register */
#define CAN1_EMO63DATA3	(*( CAN_MODATAL0_type *) 0xF00297ECU)	/* Extended Message Object 63 Data 3 Register */
#define CAN1_EMO64DATA3	(*( CAN_MODATAL0_type *) 0xF002980CU)	/* Extended Message Object 64 Data 3 Register */
#define CAN1_EMO65DATA3	(*( CAN_MODATAL0_type *) 0xF002982CU)	/* Extended Message Object 65 Data 3 Register */
#define CAN1_EMO66DATA3	(*( CAN_MODATAL0_type *) 0xF002984CU)	/* Extended Message Object 66 Data 3 Register */
#define CAN1_EMO67DATA3	(*( CAN_MODATAL0_type *) 0xF002986CU)	/* Extended Message Object 67 Data 3 Register */
#define CAN1_EMO68DATA3	(*( CAN_MODATAL0_type *) 0xF002988CU)	/* Extended Message Object 68 Data 3 Register */
#define CAN1_EMO69DATA3	(*( CAN_MODATAL0_type *) 0xF00298ACU)	/* Extended Message Object 69 Data 3 Register */
#define CAN1_EMO70DATA3	(*( CAN_MODATAL0_type *) 0xF00298CCU)	/* Extended Message Object 70 Data 3 Register */
#define CAN1_EMO71DATA3	(*( CAN_MODATAL0_type *) 0xF00298ECU)	/* Extended Message Object 71 Data 3 Register */
#define CAN1_EMO72DATA3	(*( CAN_MODATAL0_type *) 0xF002990CU)	/* Extended Message Object 72 Data 3 Register */
#define CAN1_EMO73DATA3	(*( CAN_MODATAL0_type *) 0xF002992CU)	/* Extended Message Object 73 Data 3 Register */
#define CAN1_EMO74DATA3	(*( CAN_MODATAL0_type *) 0xF002994CU)	/* Extended Message Object 74 Data 3 Register */
#define CAN1_EMO75DATA3	(*( CAN_MODATAL0_type *) 0xF002996CU)	/* Extended Message Object 75 Data 3 Register */
#define CAN1_EMO76DATA3	(*( CAN_MODATAL0_type *) 0xF002998CU)	/* Extended Message Object 76 Data 3 Register */
#define CAN1_EMO77DATA3	(*( CAN_MODATAL0_type *) 0xF00299ACU)	/* Extended Message Object 77 Data 3 Register */
#define CAN1_EMO78DATA3	(*( CAN_MODATAL0_type *) 0xF00299CCU)	/* Extended Message Object 78 Data 3 Register */
#define CAN1_EMO79DATA3	(*( CAN_MODATAL0_type *) 0xF00299ECU)	/* Extended Message Object 79 Data 3 Register */
#define CAN1_EMO80DATA3	(*( CAN_MODATAL0_type *) 0xF0029A0CU)	/* Extended Message Object 80 Data 3 Register */
#define CAN1_EMO81DATA3	(*( CAN_MODATAL0_type *) 0xF0029A2CU)	/* Extended Message Object 81 Data 3 Register */
#define CAN1_EMO82DATA3	(*( CAN_MODATAL0_type *) 0xF0029A4CU)	/* Extended Message Object 82 Data 3 Register */
#define CAN1_EMO83DATA3	(*( CAN_MODATAL0_type *) 0xF0029A6CU)	/* Extended Message Object 83 Data 3 Register */
#define CAN1_EMO84DATA3	(*( CAN_MODATAL0_type *) 0xF0029A8CU)	/* Extended Message Object 84 Data 3 Register */
#define CAN1_EMO85DATA3	(*( CAN_MODATAL0_type *) 0xF0029AACU)	/* Extended Message Object 85 Data 3 Register */
#define CAN1_EMO86DATA3	(*( CAN_MODATAL0_type *) 0xF0029ACCU)	/* Extended Message Object 86 Data 3 Register */
#define CAN1_EMO87DATA3	(*( CAN_MODATAL0_type *) 0xF0029AECU)	/* Extended Message Object 87 Data 3 Register */
#define CAN1_EMO88DATA3	(*( CAN_MODATAL0_type *) 0xF0029B0CU)	/* Extended Message Object 88 Data 3 Register */
#define CAN1_EMO89DATA3	(*( CAN_MODATAL0_type *) 0xF0029B2CU)	/* Extended Message Object 89 Data 3 Register */
#define CAN1_EMO90DATA3	(*( CAN_MODATAL0_type *) 0xF0029B4CU)	/* Extended Message Object 90 Data 3 Register */
#define CAN1_EMO91DATA3	(*( CAN_MODATAL0_type *) 0xF0029B6CU)	/* Extended Message Object 91 Data 3 Register */
#define CAN1_EMO92DATA3	(*( CAN_MODATAL0_type *) 0xF0029B8CU)	/* Extended Message Object 92 Data 3 Register */
#define CAN1_EMO93DATA3	(*( CAN_MODATAL0_type *) 0xF0029BACU)	/* Extended Message Object 93 Data 3 Register */
#define CAN1_EMO94DATA3	(*( CAN_MODATAL0_type *) 0xF0029BCCU)	/* Extended Message Object 94 Data 3 Register */
#define CAN1_EMO95DATA3	(*( CAN_MODATAL0_type *) 0xF0029BECU)	/* Extended Message Object 95 Data 3 Register */
#define CAN1_EMO96DATA3	(*( CAN_MODATAL0_type *) 0xF0029C0CU)	/* Extended Message Object 96 Data 3 Register */
#define CAN1_EMO97DATA3	(*( CAN_MODATAL0_type *) 0xF0029C2CU)	/* Extended Message Object 97 Data 3 Register */
#define CAN1_EMO98DATA3	(*( CAN_MODATAL0_type *) 0xF0029C4CU)	/* Extended Message Object 98 Data 3 Register */
#define CAN1_EMO99DATA3	(*( CAN_MODATAL0_type *) 0xF0029C6CU)	/* Extended Message Object 99 Data 3 Register */
#define CAN1_EMO100DATA3	(*( CAN_MODATAL0_type *) 0xF0029C8CU)	/* Extended Message Object 100 Data 3 Register */
#define CAN1_EMO101DATA3	(*( CAN_MODATAL0_type *) 0xF0029CACU)	/* Extended Message Object 101 Data 3 Register */
#define CAN1_EMO102DATA3	(*( CAN_MODATAL0_type *) 0xF0029CCCU)	/* Extended Message Object 102 Data 3 Register */
#define CAN1_EMO103DATA3	(*( CAN_MODATAL0_type *) 0xF0029CECU)	/* Extended Message Object 103 Data 3 Register */
#define CAN1_EMO104DATA3	(*( CAN_MODATAL0_type *) 0xF0029D0CU)	/* Extended Message Object 104 Data 3 Register */
#define CAN1_EMO105DATA3	(*( CAN_MODATAL0_type *) 0xF0029D2CU)	/* Extended Message Object 105 Data 3 Register */
#define CAN1_EMO106DATA3	(*( CAN_MODATAL0_type *) 0xF0029D4CU)	/* Extended Message Object 106 Data 3 Register */
#define CAN1_EMO107DATA3	(*( CAN_MODATAL0_type *) 0xF0029D6CU)	/* Extended Message Object 107 Data 3 Register */
#define CAN1_EMO108DATA3	(*( CAN_MODATAL0_type *) 0xF0029D8CU)	/* Extended Message Object 108 Data 3 Register */
#define CAN1_EMO109DATA3	(*( CAN_MODATAL0_type *) 0xF0029DACU)	/* Extended Message Object 109 Data 3 Register */
#define CAN1_EMO110DATA3	(*( CAN_MODATAL0_type *) 0xF0029DCCU)	/* Extended Message Object 110 Data 3 Register */
#define CAN1_EMO111DATA3	(*( CAN_MODATAL0_type *) 0xF0029DECU)	/* Extended Message Object 111 Data 3 Register */
#define CAN1_EMO112DATA3	(*( CAN_MODATAL0_type *) 0xF0029E0CU)	/* Extended Message Object 112 Data 3 Register */
#define CAN1_EMO113DATA3	(*( CAN_MODATAL0_type *) 0xF0029E2CU)	/* Extended Message Object 113 Data 3 Register */
#define CAN1_EMO114DATA3	(*( CAN_MODATAL0_type *) 0xF0029E4CU)	/* Extended Message Object 114 Data 3 Register */
#define CAN1_EMO115DATA3	(*( CAN_MODATAL0_type *) 0xF0029E6CU)	/* Extended Message Object 115 Data 3 Register */
#define CAN1_EMO116DATA3	(*( CAN_MODATAL0_type *) 0xF0029E8CU)	/* Extended Message Object 116 Data 3 Register */
#define CAN1_EMO117DATA3	(*( CAN_MODATAL0_type *) 0xF0029EACU)	/* Extended Message Object 117 Data 3 Register */
#define CAN1_EMO118DATA3	(*( CAN_MODATAL0_type *) 0xF0029ECCU)	/* Extended Message Object 118 Data 3 Register */
#define CAN1_EMO119DATA3	(*( CAN_MODATAL0_type *) 0xF0029EECU)	/* Extended Message Object 119 Data 3 Register */
#define CAN1_EMO120DATA3	(*( CAN_MODATAL0_type *) 0xF0029F0CU)	/* Extended Message Object 120 Data 3 Register */
#define CAN1_EMO121DATA3	(*( CAN_MODATAL0_type *) 0xF0029F2CU)	/* Extended Message Object 121 Data 3 Register */
#define CAN1_EMO122DATA3	(*( CAN_MODATAL0_type *) 0xF0029F4CU)	/* Extended Message Object 122 Data 3 Register */
#define CAN1_EMO123DATA3	(*( CAN_MODATAL0_type *) 0xF0029F6CU)	/* Extended Message Object 123 Data 3 Register */
#define CAN1_EMO124DATA3	(*( CAN_MODATAL0_type *) 0xF0029F8CU)	/* Extended Message Object 124 Data 3 Register */
#define CAN1_EMO125DATA3	(*( CAN_MODATAL0_type *) 0xF0029FACU)	/* Extended Message Object 125 Data 3 Register */
#define CAN1_EMO126DATA3	(*( CAN_MODATAL0_type *) 0xF0029FCCU)	/* Extended Message Object 126 Data 3 Register */
#define CAN1_EMO127DATA3	(*( CAN_MODATAL0_type *) 0xF0029FECU)	/* Extended Message Object 127 Data 3 Register */
#define CAN1_EMO0DATA4	(*( CAN_MODATAL0_type *) 0xF0029010U)	/* Extended Message Object 0 Data 4 Register */
#define CAN1_EMO1DATA4	(*( CAN_MODATAL0_type *) 0xF0029030U)	/* Extended Message Object 1 Data 4 Register */
#define CAN1_EMO2DATA4	(*( CAN_MODATAL0_type *) 0xF0029050U)	/* Extended Message Object 2 Data 4 Register */
#define CAN1_EMO3DATA4	(*( CAN_MODATAL0_type *) 0xF0029070U)	/* Extended Message Object 3 Data 4 Register */
#define CAN1_EMO4DATA4	(*( CAN_MODATAL0_type *) 0xF0029090U)	/* Extended Message Object 4 Data 4 Register */
#define CAN1_EMO5DATA4	(*( CAN_MODATAL0_type *) 0xF00290B0U)	/* Extended Message Object 5 Data 4 Register */
#define CAN1_EMO6DATA4	(*( CAN_MODATAL0_type *) 0xF00290D0U)	/* Extended Message Object 6 Data 4 Register */
#define CAN1_EMO7DATA4	(*( CAN_MODATAL0_type *) 0xF00290F0U)	/* Extended Message Object 7 Data 4 Register */
#define CAN1_EMO8DATA4	(*( CAN_MODATAL0_type *) 0xF0029110U)	/* Extended Message Object 8 Data 4 Register */
#define CAN1_EMO9DATA4	(*( CAN_MODATAL0_type *) 0xF0029130U)	/* Extended Message Object 9 Data 4 Register */
#define CAN1_EMO10DATA4	(*( CAN_MODATAL0_type *) 0xF0029150U)	/* Extended Message Object 10 Data 4 Register */
#define CAN1_EMO11DATA4	(*( CAN_MODATAL0_type *) 0xF0029170U)	/* Extended Message Object 11 Data 4 Register */
#define CAN1_EMO12DATA4	(*( CAN_MODATAL0_type *) 0xF0029190U)	/* Extended Message Object 12 Data 4 Register */
#define CAN1_EMO13DATA4	(*( CAN_MODATAL0_type *) 0xF00291B0U)	/* Extended Message Object 13 Data 4 Register */
#define CAN1_EMO14DATA4	(*( CAN_MODATAL0_type *) 0xF00291D0U)	/* Extended Message Object 14 Data 4 Register */
#define CAN1_EMO15DATA4	(*( CAN_MODATAL0_type *) 0xF00291F0U)	/* Extended Message Object 15 Data 4 Register */
#define CAN1_EMO16DATA4	(*( CAN_MODATAL0_type *) 0xF0029210U)	/* Extended Message Object 16 Data 4 Register */
#define CAN1_EMO17DATA4	(*( CAN_MODATAL0_type *) 0xF0029230U)	/* Extended Message Object 17 Data 4 Register */
#define CAN1_EMO18DATA4	(*( CAN_MODATAL0_type *) 0xF0029250U)	/* Extended Message Object 18 Data 4 Register */
#define CAN1_EMO19DATA4	(*( CAN_MODATAL0_type *) 0xF0029270U)	/* Extended Message Object 19 Data 4 Register */
#define CAN1_EMO20DATA4	(*( CAN_MODATAL0_type *) 0xF0029290U)	/* Extended Message Object 20 Data 4 Register */
#define CAN1_EMO21DATA4	(*( CAN_MODATAL0_type *) 0xF00292B0U)	/* Extended Message Object 21 Data 4 Register */
#define CAN1_EMO22DATA4	(*( CAN_MODATAL0_type *) 0xF00292D0U)	/* Extended Message Object 22 Data 4 Register */
#define CAN1_EMO23DATA4	(*( CAN_MODATAL0_type *) 0xF00292F0U)	/* Extended Message Object 23 Data 4 Register */
#define CAN1_EMO24DATA4	(*( CAN_MODATAL0_type *) 0xF0029310U)	/* Extended Message Object 24 Data 4 Register */
#define CAN1_EMO25DATA4	(*( CAN_MODATAL0_type *) 0xF0029330U)	/* Extended Message Object 25 Data 4 Register */
#define CAN1_EMO26DATA4	(*( CAN_MODATAL0_type *) 0xF0029350U)	/* Extended Message Object 26 Data 4 Register */
#define CAN1_EMO27DATA4	(*( CAN_MODATAL0_type *) 0xF0029370U)	/* Extended Message Object 27 Data 4 Register */
#define CAN1_EMO28DATA4	(*( CAN_MODATAL0_type *) 0xF0029390U)	/* Extended Message Object 28 Data 4 Register */
#define CAN1_EMO29DATA4	(*( CAN_MODATAL0_type *) 0xF00293B0U)	/* Extended Message Object 29 Data 4 Register */
#define CAN1_EMO30DATA4	(*( CAN_MODATAL0_type *) 0xF00293D0U)	/* Extended Message Object 30 Data 4 Register */
#define CAN1_EMO31DATA4	(*( CAN_MODATAL0_type *) 0xF00293F0U)	/* Extended Message Object 31 Data 4 Register */
#define CAN1_EMO32DATA4	(*( CAN_MODATAL0_type *) 0xF0029410U)	/* Extended Message Object 32 Data 4 Register */
#define CAN1_EMO33DATA4	(*( CAN_MODATAL0_type *) 0xF0029430U)	/* Extended Message Object 33 Data 4 Register */
#define CAN1_EMO34DATA4	(*( CAN_MODATAL0_type *) 0xF0029450U)	/* Extended Message Object 34 Data 4 Register */
#define CAN1_EMO35DATA4	(*( CAN_MODATAL0_type *) 0xF0029470U)	/* Extended Message Object 35 Data 4 Register */
#define CAN1_EMO36DATA4	(*( CAN_MODATAL0_type *) 0xF0029490U)	/* Extended Message Object 36 Data 4 Register */
#define CAN1_EMO37DATA4	(*( CAN_MODATAL0_type *) 0xF00294B0U)	/* Extended Message Object 37 Data 4 Register */
#define CAN1_EMO38DATA4	(*( CAN_MODATAL0_type *) 0xF00294D0U)	/* Extended Message Object 38 Data 4 Register */
#define CAN1_EMO39DATA4	(*( CAN_MODATAL0_type *) 0xF00294F0U)	/* Extended Message Object 39 Data 4 Register */
#define CAN1_EMO40DATA4	(*( CAN_MODATAL0_type *) 0xF0029510U)	/* Extended Message Object 40 Data 4 Register */
#define CAN1_EMO41DATA4	(*( CAN_MODATAL0_type *) 0xF0029530U)	/* Extended Message Object 41 Data 4 Register */
#define CAN1_EMO42DATA4	(*( CAN_MODATAL0_type *) 0xF0029550U)	/* Extended Message Object 42 Data 4 Register */
#define CAN1_EMO43DATA4	(*( CAN_MODATAL0_type *) 0xF0029570U)	/* Extended Message Object 43 Data 4 Register */
#define CAN1_EMO44DATA4	(*( CAN_MODATAL0_type *) 0xF0029590U)	/* Extended Message Object 44 Data 4 Register */
#define CAN1_EMO45DATA4	(*( CAN_MODATAL0_type *) 0xF00295B0U)	/* Extended Message Object 45 Data 4 Register */
#define CAN1_EMO46DATA4	(*( CAN_MODATAL0_type *) 0xF00295D0U)	/* Extended Message Object 46 Data 4 Register */
#define CAN1_EMO47DATA4	(*( CAN_MODATAL0_type *) 0xF00295F0U)	/* Extended Message Object 47 Data 4 Register */
#define CAN1_EMO48DATA4	(*( CAN_MODATAL0_type *) 0xF0029610U)	/* Extended Message Object 48 Data 4 Register */
#define CAN1_EMO49DATA4	(*( CAN_MODATAL0_type *) 0xF0029630U)	/* Extended Message Object 49 Data 4 Register */
#define CAN1_EMO50DATA4	(*( CAN_MODATAL0_type *) 0xF0029650U)	/* Extended Message Object 50 Data 4 Register */
#define CAN1_EMO51DATA4	(*( CAN_MODATAL0_type *) 0xF0029670U)	/* Extended Message Object 51 Data 4 Register */
#define CAN1_EMO52DATA4	(*( CAN_MODATAL0_type *) 0xF0029690U)	/* Extended Message Object 52 Data 4 Register */
#define CAN1_EMO53DATA4	(*( CAN_MODATAL0_type *) 0xF00296B0U)	/* Extended Message Object 53 Data 4 Register */
#define CAN1_EMO54DATA4	(*( CAN_MODATAL0_type *) 0xF00296D0U)	/* Extended Message Object 54 Data 4 Register */
#define CAN1_EMO55DATA4	(*( CAN_MODATAL0_type *) 0xF00296F0U)	/* Extended Message Object 55 Data 4 Register */
#define CAN1_EMO56DATA4	(*( CAN_MODATAL0_type *) 0xF0029710U)	/* Extended Message Object 56 Data 4 Register */
#define CAN1_EMO57DATA4	(*( CAN_MODATAL0_type *) 0xF0029730U)	/* Extended Message Object 57 Data 4 Register */
#define CAN1_EMO58DATA4	(*( CAN_MODATAL0_type *) 0xF0029750U)	/* Extended Message Object 58 Data 4 Register */
#define CAN1_EMO59DATA4	(*( CAN_MODATAL0_type *) 0xF0029770U)	/* Extended Message Object 59 Data 4 Register */
#define CAN1_EMO60DATA4	(*( CAN_MODATAL0_type *) 0xF0029790U)	/* Extended Message Object 60 Data 4 Register */
#define CAN1_EMO61DATA4	(*( CAN_MODATAL0_type *) 0xF00297B0U)	/* Extended Message Object 61 Data 4 Register */
#define CAN1_EMO62DATA4	(*( CAN_MODATAL0_type *) 0xF00297D0U)	/* Extended Message Object 62 Data 4 Register */
#define CAN1_EMO63DATA4	(*( CAN_MODATAL0_type *) 0xF00297F0U)	/* Extended Message Object 63 Data 4 Register */
#define CAN1_EMO64DATA4	(*( CAN_MODATAL0_type *) 0xF0029810U)	/* Extended Message Object 64 Data 4 Register */
#define CAN1_EMO65DATA4	(*( CAN_MODATAL0_type *) 0xF0029830U)	/* Extended Message Object 65 Data 4 Register */
#define CAN1_EMO66DATA4	(*( CAN_MODATAL0_type *) 0xF0029850U)	/* Extended Message Object 66 Data 4 Register */
#define CAN1_EMO67DATA4	(*( CAN_MODATAL0_type *) 0xF0029870U)	/* Extended Message Object 67 Data 4 Register */
#define CAN1_EMO68DATA4	(*( CAN_MODATAL0_type *) 0xF0029890U)	/* Extended Message Object 68 Data 4 Register */
#define CAN1_EMO69DATA4	(*( CAN_MODATAL0_type *) 0xF00298B0U)	/* Extended Message Object 69 Data 4 Register */
#define CAN1_EMO70DATA4	(*( CAN_MODATAL0_type *) 0xF00298D0U)	/* Extended Message Object 70 Data 4 Register */
#define CAN1_EMO71DATA4	(*( CAN_MODATAL0_type *) 0xF00298F0U)	/* Extended Message Object 71 Data 4 Register */
#define CAN1_EMO72DATA4	(*( CAN_MODATAL0_type *) 0xF0029910U)	/* Extended Message Object 72 Data 4 Register */
#define CAN1_EMO73DATA4	(*( CAN_MODATAL0_type *) 0xF0029930U)	/* Extended Message Object 73 Data 4 Register */
#define CAN1_EMO74DATA4	(*( CAN_MODATAL0_type *) 0xF0029950U)	/* Extended Message Object 74 Data 4 Register */
#define CAN1_EMO75DATA4	(*( CAN_MODATAL0_type *) 0xF0029970U)	/* Extended Message Object 75 Data 4 Register */
#define CAN1_EMO76DATA4	(*( CAN_MODATAL0_type *) 0xF0029990U)	/* Extended Message Object 76 Data 4 Register */
#define CAN1_EMO77DATA4	(*( CAN_MODATAL0_type *) 0xF00299B0U)	/* Extended Message Object 77 Data 4 Register */
#define CAN1_EMO78DATA4	(*( CAN_MODATAL0_type *) 0xF00299D0U)	/* Extended Message Object 78 Data 4 Register */
#define CAN1_EMO79DATA4	(*( CAN_MODATAL0_type *) 0xF00299F0U)	/* Extended Message Object 79 Data 4 Register */
#define CAN1_EMO80DATA4	(*( CAN_MODATAL0_type *) 0xF0029A10U)	/* Extended Message Object 80 Data 4 Register */
#define CAN1_EMO81DATA4	(*( CAN_MODATAL0_type *) 0xF0029A30U)	/* Extended Message Object 81 Data 4 Register */
#define CAN1_EMO82DATA4	(*( CAN_MODATAL0_type *) 0xF0029A50U)	/* Extended Message Object 82 Data 4 Register */
#define CAN1_EMO83DATA4	(*( CAN_MODATAL0_type *) 0xF0029A70U)	/* Extended Message Object 83 Data 4 Register */
#define CAN1_EMO84DATA4	(*( CAN_MODATAL0_type *) 0xF0029A90U)	/* Extended Message Object 84 Data 4 Register */
#define CAN1_EMO85DATA4	(*( CAN_MODATAL0_type *) 0xF0029AB0U)	/* Extended Message Object 85 Data 4 Register */
#define CAN1_EMO86DATA4	(*( CAN_MODATAL0_type *) 0xF0029AD0U)	/* Extended Message Object 86 Data 4 Register */
#define CAN1_EMO87DATA4	(*( CAN_MODATAL0_type *) 0xF0029AF0U)	/* Extended Message Object 87 Data 4 Register */
#define CAN1_EMO88DATA4	(*( CAN_MODATAL0_type *) 0xF0029B10U)	/* Extended Message Object 88 Data 4 Register */
#define CAN1_EMO89DATA4	(*( CAN_MODATAL0_type *) 0xF0029B30U)	/* Extended Message Object 89 Data 4 Register */
#define CAN1_EMO90DATA4	(*( CAN_MODATAL0_type *) 0xF0029B50U)	/* Extended Message Object 90 Data 4 Register */
#define CAN1_EMO91DATA4	(*( CAN_MODATAL0_type *) 0xF0029B70U)	/* Extended Message Object 91 Data 4 Register */
#define CAN1_EMO92DATA4	(*( CAN_MODATAL0_type *) 0xF0029B90U)	/* Extended Message Object 92 Data 4 Register */
#define CAN1_EMO93DATA4	(*( CAN_MODATAL0_type *) 0xF0029BB0U)	/* Extended Message Object 93 Data 4 Register */
#define CAN1_EMO94DATA4	(*( CAN_MODATAL0_type *) 0xF0029BD0U)	/* Extended Message Object 94 Data 4 Register */
#define CAN1_EMO95DATA4	(*( CAN_MODATAL0_type *) 0xF0029BF0U)	/* Extended Message Object 95 Data 4 Register */
#define CAN1_EMO96DATA4	(*( CAN_MODATAL0_type *) 0xF0029C10U)	/* Extended Message Object 96 Data 4 Register */
#define CAN1_EMO97DATA4	(*( CAN_MODATAL0_type *) 0xF0029C30U)	/* Extended Message Object 97 Data 4 Register */
#define CAN1_EMO98DATA4	(*( CAN_MODATAL0_type *) 0xF0029C50U)	/* Extended Message Object 98 Data 4 Register */
#define CAN1_EMO99DATA4	(*( CAN_MODATAL0_type *) 0xF0029C70U)	/* Extended Message Object 99 Data 4 Register */
#define CAN1_EMO100DATA4	(*( CAN_MODATAL0_type *) 0xF0029C90U)	/* Extended Message Object 100 Data 4 Register */
#define CAN1_EMO101DATA4	(*( CAN_MODATAL0_type *) 0xF0029CB0U)	/* Extended Message Object 101 Data 4 Register */
#define CAN1_EMO102DATA4	(*( CAN_MODATAL0_type *) 0xF0029CD0U)	/* Extended Message Object 102 Data 4 Register */
#define CAN1_EMO103DATA4	(*( CAN_MODATAL0_type *) 0xF0029CF0U)	/* Extended Message Object 103 Data 4 Register */
#define CAN1_EMO104DATA4	(*( CAN_MODATAL0_type *) 0xF0029D10U)	/* Extended Message Object 104 Data 4 Register */
#define CAN1_EMO105DATA4	(*( CAN_MODATAL0_type *) 0xF0029D30U)	/* Extended Message Object 105 Data 4 Register */
#define CAN1_EMO106DATA4	(*( CAN_MODATAL0_type *) 0xF0029D50U)	/* Extended Message Object 106 Data 4 Register */
#define CAN1_EMO107DATA4	(*( CAN_MODATAL0_type *) 0xF0029D70U)	/* Extended Message Object 107 Data 4 Register */
#define CAN1_EMO108DATA4	(*( CAN_MODATAL0_type *) 0xF0029D90U)	/* Extended Message Object 108 Data 4 Register */
#define CAN1_EMO109DATA4	(*( CAN_MODATAL0_type *) 0xF0029DB0U)	/* Extended Message Object 109 Data 4 Register */
#define CAN1_EMO110DATA4	(*( CAN_MODATAL0_type *) 0xF0029DD0U)	/* Extended Message Object 110 Data 4 Register */
#define CAN1_EMO111DATA4	(*( CAN_MODATAL0_type *) 0xF0029DF0U)	/* Extended Message Object 111 Data 4 Register */
#define CAN1_EMO112DATA4	(*( CAN_MODATAL0_type *) 0xF0029E10U)	/* Extended Message Object 112 Data 4 Register */
#define CAN1_EMO113DATA4	(*( CAN_MODATAL0_type *) 0xF0029E30U)	/* Extended Message Object 113 Data 4 Register */
#define CAN1_EMO114DATA4	(*( CAN_MODATAL0_type *) 0xF0029E50U)	/* Extended Message Object 114 Data 4 Register */
#define CAN1_EMO115DATA4	(*( CAN_MODATAL0_type *) 0xF0029E70U)	/* Extended Message Object 115 Data 4 Register */
#define CAN1_EMO116DATA4	(*( CAN_MODATAL0_type *) 0xF0029E90U)	/* Extended Message Object 116 Data 4 Register */
#define CAN1_EMO117DATA4	(*( CAN_MODATAL0_type *) 0xF0029EB0U)	/* Extended Message Object 117 Data 4 Register */
#define CAN1_EMO118DATA4	(*( CAN_MODATAL0_type *) 0xF0029ED0U)	/* Extended Message Object 118 Data 4 Register */
#define CAN1_EMO119DATA4	(*( CAN_MODATAL0_type *) 0xF0029EF0U)	/* Extended Message Object 119 Data 4 Register */
#define CAN1_EMO120DATA4	(*( CAN_MODATAL0_type *) 0xF0029F10U)	/* Extended Message Object 120 Data 4 Register */
#define CAN1_EMO121DATA4	(*( CAN_MODATAL0_type *) 0xF0029F30U)	/* Extended Message Object 121 Data 4 Register */
#define CAN1_EMO122DATA4	(*( CAN_MODATAL0_type *) 0xF0029F50U)	/* Extended Message Object 122 Data 4 Register */
#define CAN1_EMO123DATA4	(*( CAN_MODATAL0_type *) 0xF0029F70U)	/* Extended Message Object 123 Data 4 Register */
#define CAN1_EMO124DATA4	(*( CAN_MODATAL0_type *) 0xF0029F90U)	/* Extended Message Object 124 Data 4 Register */
#define CAN1_EMO125DATA4	(*( CAN_MODATAL0_type *) 0xF0029FB0U)	/* Extended Message Object 125 Data 4 Register */
#define CAN1_EMO126DATA4	(*( CAN_MODATAL0_type *) 0xF0029FD0U)	/* Extended Message Object 126 Data 4 Register */
#define CAN1_EMO127DATA4	(*( CAN_MODATAL0_type *) 0xF0029FF0U)	/* Extended Message Object 127 Data 4 Register */
#define CAN1_EMO0DATA5	(*( CAN_MODATAL0_type *) 0xF0029014U)	/* Extended Message Object 0 Data 5 Register */
#define CAN1_EMO1DATA5	(*( CAN_MODATAL0_type *) 0xF0029034U)	/* Extended Message Object 1 Data 5 Register */
#define CAN1_EMO2DATA5	(*( CAN_MODATAL0_type *) 0xF0029054U)	/* Extended Message Object 2 Data 5 Register */
#define CAN1_EMO3DATA5	(*( CAN_MODATAL0_type *) 0xF0029074U)	/* Extended Message Object 3 Data 5 Register */
#define CAN1_EMO4DATA5	(*( CAN_MODATAL0_type *) 0xF0029094U)	/* Extended Message Object 4 Data 5 Register */
#define CAN1_EMO5DATA5	(*( CAN_MODATAL0_type *) 0xF00290B4U)	/* Extended Message Object 5 Data 5 Register */
#define CAN1_EMO6DATA5	(*( CAN_MODATAL0_type *) 0xF00290D4U)	/* Extended Message Object 6 Data 5 Register */
#define CAN1_EMO7DATA5	(*( CAN_MODATAL0_type *) 0xF00290F4U)	/* Extended Message Object 7 Data 5 Register */
#define CAN1_EMO8DATA5	(*( CAN_MODATAL0_type *) 0xF0029114U)	/* Extended Message Object 8 Data 5 Register */
#define CAN1_EMO9DATA5	(*( CAN_MODATAL0_type *) 0xF0029134U)	/* Extended Message Object 9 Data 5 Register */
#define CAN1_EMO10DATA5	(*( CAN_MODATAL0_type *) 0xF0029154U)	/* Extended Message Object 10 Data 5 Register */
#define CAN1_EMO11DATA5	(*( CAN_MODATAL0_type *) 0xF0029174U)	/* Extended Message Object 11 Data 5 Register */
#define CAN1_EMO12DATA5	(*( CAN_MODATAL0_type *) 0xF0029194U)	/* Extended Message Object 12 Data 5 Register */
#define CAN1_EMO13DATA5	(*( CAN_MODATAL0_type *) 0xF00291B4U)	/* Extended Message Object 13 Data 5 Register */
#define CAN1_EMO14DATA5	(*( CAN_MODATAL0_type *) 0xF00291D4U)	/* Extended Message Object 14 Data 5 Register */
#define CAN1_EMO15DATA5	(*( CAN_MODATAL0_type *) 0xF00291F4U)	/* Extended Message Object 15 Data 5 Register */
#define CAN1_EMO16DATA5	(*( CAN_MODATAL0_type *) 0xF0029214U)	/* Extended Message Object 16 Data 5 Register */
#define CAN1_EMO17DATA5	(*( CAN_MODATAL0_type *) 0xF0029234U)	/* Extended Message Object 17 Data 5 Register */
#define CAN1_EMO18DATA5	(*( CAN_MODATAL0_type *) 0xF0029254U)	/* Extended Message Object 18 Data 5 Register */
#define CAN1_EMO19DATA5	(*( CAN_MODATAL0_type *) 0xF0029274U)	/* Extended Message Object 19 Data 5 Register */
#define CAN1_EMO20DATA5	(*( CAN_MODATAL0_type *) 0xF0029294U)	/* Extended Message Object 20 Data 5 Register */
#define CAN1_EMO21DATA5	(*( CAN_MODATAL0_type *) 0xF00292B4U)	/* Extended Message Object 21 Data 5 Register */
#define CAN1_EMO22DATA5	(*( CAN_MODATAL0_type *) 0xF00292D4U)	/* Extended Message Object 22 Data 5 Register */
#define CAN1_EMO23DATA5	(*( CAN_MODATAL0_type *) 0xF00292F4U)	/* Extended Message Object 23 Data 5 Register */
#define CAN1_EMO24DATA5	(*( CAN_MODATAL0_type *) 0xF0029314U)	/* Extended Message Object 24 Data 5 Register */
#define CAN1_EMO25DATA5	(*( CAN_MODATAL0_type *) 0xF0029334U)	/* Extended Message Object 25 Data 5 Register */
#define CAN1_EMO26DATA5	(*( CAN_MODATAL0_type *) 0xF0029354U)	/* Extended Message Object 26 Data 5 Register */
#define CAN1_EMO27DATA5	(*( CAN_MODATAL0_type *) 0xF0029374U)	/* Extended Message Object 27 Data 5 Register */
#define CAN1_EMO28DATA5	(*( CAN_MODATAL0_type *) 0xF0029394U)	/* Extended Message Object 28 Data 5 Register */
#define CAN1_EMO29DATA5	(*( CAN_MODATAL0_type *) 0xF00293B4U)	/* Extended Message Object 29 Data 5 Register */
#define CAN1_EMO30DATA5	(*( CAN_MODATAL0_type *) 0xF00293D4U)	/* Extended Message Object 30 Data 5 Register */
#define CAN1_EMO31DATA5	(*( CAN_MODATAL0_type *) 0xF00293F4U)	/* Extended Message Object 31 Data 5 Register */
#define CAN1_EMO32DATA5	(*( CAN_MODATAL0_type *) 0xF0029414U)	/* Extended Message Object 32 Data 5 Register */
#define CAN1_EMO33DATA5	(*( CAN_MODATAL0_type *) 0xF0029434U)	/* Extended Message Object 33 Data 5 Register */
#define CAN1_EMO34DATA5	(*( CAN_MODATAL0_type *) 0xF0029454U)	/* Extended Message Object 34 Data 5 Register */
#define CAN1_EMO35DATA5	(*( CAN_MODATAL0_type *) 0xF0029474U)	/* Extended Message Object 35 Data 5 Register */
#define CAN1_EMO36DATA5	(*( CAN_MODATAL0_type *) 0xF0029494U)	/* Extended Message Object 36 Data 5 Register */
#define CAN1_EMO37DATA5	(*( CAN_MODATAL0_type *) 0xF00294B4U)	/* Extended Message Object 37 Data 5 Register */
#define CAN1_EMO38DATA5	(*( CAN_MODATAL0_type *) 0xF00294D4U)	/* Extended Message Object 38 Data 5 Register */
#define CAN1_EMO39DATA5	(*( CAN_MODATAL0_type *) 0xF00294F4U)	/* Extended Message Object 39 Data 5 Register */
#define CAN1_EMO40DATA5	(*( CAN_MODATAL0_type *) 0xF0029514U)	/* Extended Message Object 40 Data 5 Register */
#define CAN1_EMO41DATA5	(*( CAN_MODATAL0_type *) 0xF0029534U)	/* Extended Message Object 41 Data 5 Register */
#define CAN1_EMO42DATA5	(*( CAN_MODATAL0_type *) 0xF0029554U)	/* Extended Message Object 42 Data 5 Register */
#define CAN1_EMO43DATA5	(*( CAN_MODATAL0_type *) 0xF0029574U)	/* Extended Message Object 43 Data 5 Register */
#define CAN1_EMO44DATA5	(*( CAN_MODATAL0_type *) 0xF0029594U)	/* Extended Message Object 44 Data 5 Register */
#define CAN1_EMO45DATA5	(*( CAN_MODATAL0_type *) 0xF00295B4U)	/* Extended Message Object 45 Data 5 Register */
#define CAN1_EMO46DATA5	(*( CAN_MODATAL0_type *) 0xF00295D4U)	/* Extended Message Object 46 Data 5 Register */
#define CAN1_EMO47DATA5	(*( CAN_MODATAL0_type *) 0xF00295F4U)	/* Extended Message Object 47 Data 5 Register */
#define CAN1_EMO48DATA5	(*( CAN_MODATAL0_type *) 0xF0029614U)	/* Extended Message Object 48 Data 5 Register */
#define CAN1_EMO49DATA5	(*( CAN_MODATAL0_type *) 0xF0029634U)	/* Extended Message Object 49 Data 5 Register */
#define CAN1_EMO50DATA5	(*( CAN_MODATAL0_type *) 0xF0029654U)	/* Extended Message Object 50 Data 5 Register */
#define CAN1_EMO51DATA5	(*( CAN_MODATAL0_type *) 0xF0029674U)	/* Extended Message Object 51 Data 5 Register */
#define CAN1_EMO52DATA5	(*( CAN_MODATAL0_type *) 0xF0029694U)	/* Extended Message Object 52 Data 5 Register */
#define CAN1_EMO53DATA5	(*( CAN_MODATAL0_type *) 0xF00296B4U)	/* Extended Message Object 53 Data 5 Register */
#define CAN1_EMO54DATA5	(*( CAN_MODATAL0_type *) 0xF00296D4U)	/* Extended Message Object 54 Data 5 Register */
#define CAN1_EMO55DATA5	(*( CAN_MODATAL0_type *) 0xF00296F4U)	/* Extended Message Object 55 Data 5 Register */
#define CAN1_EMO56DATA5	(*( CAN_MODATAL0_type *) 0xF0029714U)	/* Extended Message Object 56 Data 5 Register */
#define CAN1_EMO57DATA5	(*( CAN_MODATAL0_type *) 0xF0029734U)	/* Extended Message Object 57 Data 5 Register */
#define CAN1_EMO58DATA5	(*( CAN_MODATAL0_type *) 0xF0029754U)	/* Extended Message Object 58 Data 5 Register */
#define CAN1_EMO59DATA5	(*( CAN_MODATAL0_type *) 0xF0029774U)	/* Extended Message Object 59 Data 5 Register */
#define CAN1_EMO60DATA5	(*( CAN_MODATAL0_type *) 0xF0029794U)	/* Extended Message Object 60 Data 5 Register */
#define CAN1_EMO61DATA5	(*( CAN_MODATAL0_type *) 0xF00297B4U)	/* Extended Message Object 61 Data 5 Register */
#define CAN1_EMO62DATA5	(*( CAN_MODATAL0_type *) 0xF00297D4U)	/* Extended Message Object 62 Data 5 Register */
#define CAN1_EMO63DATA5	(*( CAN_MODATAL0_type *) 0xF00297F4U)	/* Extended Message Object 63 Data 5 Register */
#define CAN1_EMO64DATA5	(*( CAN_MODATAL0_type *) 0xF0029814U)	/* Extended Message Object 64 Data 5 Register */
#define CAN1_EMO65DATA5	(*( CAN_MODATAL0_type *) 0xF0029834U)	/* Extended Message Object 65 Data 5 Register */
#define CAN1_EMO66DATA5	(*( CAN_MODATAL0_type *) 0xF0029854U)	/* Extended Message Object 66 Data 5 Register */
#define CAN1_EMO67DATA5	(*( CAN_MODATAL0_type *) 0xF0029874U)	/* Extended Message Object 67 Data 5 Register */
#define CAN1_EMO68DATA5	(*( CAN_MODATAL0_type *) 0xF0029894U)	/* Extended Message Object 68 Data 5 Register */
#define CAN1_EMO69DATA5	(*( CAN_MODATAL0_type *) 0xF00298B4U)	/* Extended Message Object 69 Data 5 Register */
#define CAN1_EMO70DATA5	(*( CAN_MODATAL0_type *) 0xF00298D4U)	/* Extended Message Object 70 Data 5 Register */
#define CAN1_EMO71DATA5	(*( CAN_MODATAL0_type *) 0xF00298F4U)	/* Extended Message Object 71 Data 5 Register */
#define CAN1_EMO72DATA5	(*( CAN_MODATAL0_type *) 0xF0029914U)	/* Extended Message Object 72 Data 5 Register */
#define CAN1_EMO73DATA5	(*( CAN_MODATAL0_type *) 0xF0029934U)	/* Extended Message Object 73 Data 5 Register */
#define CAN1_EMO74DATA5	(*( CAN_MODATAL0_type *) 0xF0029954U)	/* Extended Message Object 74 Data 5 Register */
#define CAN1_EMO75DATA5	(*( CAN_MODATAL0_type *) 0xF0029974U)	/* Extended Message Object 75 Data 5 Register */
#define CAN1_EMO76DATA5	(*( CAN_MODATAL0_type *) 0xF0029994U)	/* Extended Message Object 76 Data 5 Register */
#define CAN1_EMO77DATA5	(*( CAN_MODATAL0_type *) 0xF00299B4U)	/* Extended Message Object 77 Data 5 Register */
#define CAN1_EMO78DATA5	(*( CAN_MODATAL0_type *) 0xF00299D4U)	/* Extended Message Object 78 Data 5 Register */
#define CAN1_EMO79DATA5	(*( CAN_MODATAL0_type *) 0xF00299F4U)	/* Extended Message Object 79 Data 5 Register */
#define CAN1_EMO80DATA5	(*( CAN_MODATAL0_type *) 0xF0029A14U)	/* Extended Message Object 80 Data 5 Register */
#define CAN1_EMO81DATA5	(*( CAN_MODATAL0_type *) 0xF0029A34U)	/* Extended Message Object 81 Data 5 Register */
#define CAN1_EMO82DATA5	(*( CAN_MODATAL0_type *) 0xF0029A54U)	/* Extended Message Object 82 Data 5 Register */
#define CAN1_EMO83DATA5	(*( CAN_MODATAL0_type *) 0xF0029A74U)	/* Extended Message Object 83 Data 5 Register */
#define CAN1_EMO84DATA5	(*( CAN_MODATAL0_type *) 0xF0029A94U)	/* Extended Message Object 84 Data 5 Register */
#define CAN1_EMO85DATA5	(*( CAN_MODATAL0_type *) 0xF0029AB4U)	/* Extended Message Object 85 Data 5 Register */
#define CAN1_EMO86DATA5	(*( CAN_MODATAL0_type *) 0xF0029AD4U)	/* Extended Message Object 86 Data 5 Register */
#define CAN1_EMO87DATA5	(*( CAN_MODATAL0_type *) 0xF0029AF4U)	/* Extended Message Object 87 Data 5 Register */
#define CAN1_EMO88DATA5	(*( CAN_MODATAL0_type *) 0xF0029B14U)	/* Extended Message Object 88 Data 5 Register */
#define CAN1_EMO89DATA5	(*( CAN_MODATAL0_type *) 0xF0029B34U)	/* Extended Message Object 89 Data 5 Register */
#define CAN1_EMO90DATA5	(*( CAN_MODATAL0_type *) 0xF0029B54U)	/* Extended Message Object 90 Data 5 Register */
#define CAN1_EMO91DATA5	(*( CAN_MODATAL0_type *) 0xF0029B74U)	/* Extended Message Object 91 Data 5 Register */
#define CAN1_EMO92DATA5	(*( CAN_MODATAL0_type *) 0xF0029B94U)	/* Extended Message Object 92 Data 5 Register */
#define CAN1_EMO93DATA5	(*( CAN_MODATAL0_type *) 0xF0029BB4U)	/* Extended Message Object 93 Data 5 Register */
#define CAN1_EMO94DATA5	(*( CAN_MODATAL0_type *) 0xF0029BD4U)	/* Extended Message Object 94 Data 5 Register */
#define CAN1_EMO95DATA5	(*( CAN_MODATAL0_type *) 0xF0029BF4U)	/* Extended Message Object 95 Data 5 Register */
#define CAN1_EMO96DATA5	(*( CAN_MODATAL0_type *) 0xF0029C14U)	/* Extended Message Object 96 Data 5 Register */
#define CAN1_EMO97DATA5	(*( CAN_MODATAL0_type *) 0xF0029C34U)	/* Extended Message Object 97 Data 5 Register */
#define CAN1_EMO98DATA5	(*( CAN_MODATAL0_type *) 0xF0029C54U)	/* Extended Message Object 98 Data 5 Register */
#define CAN1_EMO99DATA5	(*( CAN_MODATAL0_type *) 0xF0029C74U)	/* Extended Message Object 99 Data 5 Register */
#define CAN1_EMO100DATA5	(*( CAN_MODATAL0_type *) 0xF0029C94U)	/* Extended Message Object 100 Data 5 Register */
#define CAN1_EMO101DATA5	(*( CAN_MODATAL0_type *) 0xF0029CB4U)	/* Extended Message Object 101 Data 5 Register */
#define CAN1_EMO102DATA5	(*( CAN_MODATAL0_type *) 0xF0029CD4U)	/* Extended Message Object 102 Data 5 Register */
#define CAN1_EMO103DATA5	(*( CAN_MODATAL0_type *) 0xF0029CF4U)	/* Extended Message Object 103 Data 5 Register */
#define CAN1_EMO104DATA5	(*( CAN_MODATAL0_type *) 0xF0029D14U)	/* Extended Message Object 104 Data 5 Register */
#define CAN1_EMO105DATA5	(*( CAN_MODATAL0_type *) 0xF0029D34U)	/* Extended Message Object 105 Data 5 Register */
#define CAN1_EMO106DATA5	(*( CAN_MODATAL0_type *) 0xF0029D54U)	/* Extended Message Object 106 Data 5 Register */
#define CAN1_EMO107DATA5	(*( CAN_MODATAL0_type *) 0xF0029D74U)	/* Extended Message Object 107 Data 5 Register */
#define CAN1_EMO108DATA5	(*( CAN_MODATAL0_type *) 0xF0029D94U)	/* Extended Message Object 108 Data 5 Register */
#define CAN1_EMO109DATA5	(*( CAN_MODATAL0_type *) 0xF0029DB4U)	/* Extended Message Object 109 Data 5 Register */
#define CAN1_EMO110DATA5	(*( CAN_MODATAL0_type *) 0xF0029DD4U)	/* Extended Message Object 110 Data 5 Register */
#define CAN1_EMO111DATA5	(*( CAN_MODATAL0_type *) 0xF0029DF4U)	/* Extended Message Object 111 Data 5 Register */
#define CAN1_EMO112DATA5	(*( CAN_MODATAL0_type *) 0xF0029E14U)	/* Extended Message Object 112 Data 5 Register */
#define CAN1_EMO113DATA5	(*( CAN_MODATAL0_type *) 0xF0029E34U)	/* Extended Message Object 113 Data 5 Register */
#define CAN1_EMO114DATA5	(*( CAN_MODATAL0_type *) 0xF0029E54U)	/* Extended Message Object 114 Data 5 Register */
#define CAN1_EMO115DATA5	(*( CAN_MODATAL0_type *) 0xF0029E74U)	/* Extended Message Object 115 Data 5 Register */
#define CAN1_EMO116DATA5	(*( CAN_MODATAL0_type *) 0xF0029E94U)	/* Extended Message Object 116 Data 5 Register */
#define CAN1_EMO117DATA5	(*( CAN_MODATAL0_type *) 0xF0029EB4U)	/* Extended Message Object 117 Data 5 Register */
#define CAN1_EMO118DATA5	(*( CAN_MODATAL0_type *) 0xF0029ED4U)	/* Extended Message Object 118 Data 5 Register */
#define CAN1_EMO119DATA5	(*( CAN_MODATAL0_type *) 0xF0029EF4U)	/* Extended Message Object 119 Data 5 Register */
#define CAN1_EMO120DATA5	(*( CAN_MODATAL0_type *) 0xF0029F14U)	/* Extended Message Object 120 Data 5 Register */
#define CAN1_EMO121DATA5	(*( CAN_MODATAL0_type *) 0xF0029F34U)	/* Extended Message Object 121 Data 5 Register */
#define CAN1_EMO122DATA5	(*( CAN_MODATAL0_type *) 0xF0029F54U)	/* Extended Message Object 122 Data 5 Register */
#define CAN1_EMO123DATA5	(*( CAN_MODATAL0_type *) 0xF0029F74U)	/* Extended Message Object 123 Data 5 Register */
#define CAN1_EMO124DATA5	(*( CAN_MODATAL0_type *) 0xF0029F94U)	/* Extended Message Object 124 Data 5 Register */
#define CAN1_EMO125DATA5	(*( CAN_MODATAL0_type *) 0xF0029FB4U)	/* Extended Message Object 125 Data 5 Register */
#define CAN1_EMO126DATA5	(*( CAN_MODATAL0_type *) 0xF0029FD4U)	/* Extended Message Object 126 Data 5 Register */
#define CAN1_EMO127DATA5	(*( CAN_MODATAL0_type *) 0xF0029FF4U)	/* Extended Message Object 127 Data 5 Register */
#define CAN1_EMO0DATA6	(*( CAN_MODATAL0_type *) 0xF0029018U)	/* Extended Message Object 0 Data 6 Register */
#define CAN1_EMO1DATA6	(*( CAN_MODATAL0_type *) 0xF0029038U)	/* Extended Message Object 1 Data 6 Register */
#define CAN1_EMO2DATA6	(*( CAN_MODATAL0_type *) 0xF0029058U)	/* Extended Message Object 2 Data 6 Register */
#define CAN1_EMO3DATA6	(*( CAN_MODATAL0_type *) 0xF0029078U)	/* Extended Message Object 3 Data 6 Register */
#define CAN1_EMO4DATA6	(*( CAN_MODATAL0_type *) 0xF0029098U)	/* Extended Message Object 4 Data 6 Register */
#define CAN1_EMO5DATA6	(*( CAN_MODATAL0_type *) 0xF00290B8U)	/* Extended Message Object 5 Data 6 Register */
#define CAN1_EMO6DATA6	(*( CAN_MODATAL0_type *) 0xF00290D8U)	/* Extended Message Object 6 Data 6 Register */
#define CAN1_EMO7DATA6	(*( CAN_MODATAL0_type *) 0xF00290F8U)	/* Extended Message Object 7 Data 6 Register */
#define CAN1_EMO8DATA6	(*( CAN_MODATAL0_type *) 0xF0029118U)	/* Extended Message Object 8 Data 6 Register */
#define CAN1_EMO9DATA6	(*( CAN_MODATAL0_type *) 0xF0029138U)	/* Extended Message Object 9 Data 6 Register */
#define CAN1_EMO10DATA6	(*( CAN_MODATAL0_type *) 0xF0029158U)	/* Extended Message Object 10 Data 6 Register */
#define CAN1_EMO11DATA6	(*( CAN_MODATAL0_type *) 0xF0029178U)	/* Extended Message Object 11 Data 6 Register */
#define CAN1_EMO12DATA6	(*( CAN_MODATAL0_type *) 0xF0029198U)	/* Extended Message Object 12 Data 6 Register */
#define CAN1_EMO13DATA6	(*( CAN_MODATAL0_type *) 0xF00291B8U)	/* Extended Message Object 13 Data 6 Register */
#define CAN1_EMO14DATA6	(*( CAN_MODATAL0_type *) 0xF00291D8U)	/* Extended Message Object 14 Data 6 Register */
#define CAN1_EMO15DATA6	(*( CAN_MODATAL0_type *) 0xF00291F8U)	/* Extended Message Object 15 Data 6 Register */
#define CAN1_EMO16DATA6	(*( CAN_MODATAL0_type *) 0xF0029218U)	/* Extended Message Object 16 Data 6 Register */
#define CAN1_EMO17DATA6	(*( CAN_MODATAL0_type *) 0xF0029238U)	/* Extended Message Object 17 Data 6 Register */
#define CAN1_EMO18DATA6	(*( CAN_MODATAL0_type *) 0xF0029258U)	/* Extended Message Object 18 Data 6 Register */
#define CAN1_EMO19DATA6	(*( CAN_MODATAL0_type *) 0xF0029278U)	/* Extended Message Object 19 Data 6 Register */
#define CAN1_EMO20DATA6	(*( CAN_MODATAL0_type *) 0xF0029298U)	/* Extended Message Object 20 Data 6 Register */
#define CAN1_EMO21DATA6	(*( CAN_MODATAL0_type *) 0xF00292B8U)	/* Extended Message Object 21 Data 6 Register */
#define CAN1_EMO22DATA6	(*( CAN_MODATAL0_type *) 0xF00292D8U)	/* Extended Message Object 22 Data 6 Register */
#define CAN1_EMO23DATA6	(*( CAN_MODATAL0_type *) 0xF00292F8U)	/* Extended Message Object 23 Data 6 Register */
#define CAN1_EMO24DATA6	(*( CAN_MODATAL0_type *) 0xF0029318U)	/* Extended Message Object 24 Data 6 Register */
#define CAN1_EMO25DATA6	(*( CAN_MODATAL0_type *) 0xF0029338U)	/* Extended Message Object 25 Data 6 Register */
#define CAN1_EMO26DATA6	(*( CAN_MODATAL0_type *) 0xF0029358U)	/* Extended Message Object 26 Data 6 Register */
#define CAN1_EMO27DATA6	(*( CAN_MODATAL0_type *) 0xF0029378U)	/* Extended Message Object 27 Data 6 Register */
#define CAN1_EMO28DATA6	(*( CAN_MODATAL0_type *) 0xF0029398U)	/* Extended Message Object 28 Data 6 Register */
#define CAN1_EMO29DATA6	(*( CAN_MODATAL0_type *) 0xF00293B8U)	/* Extended Message Object 29 Data 6 Register */
#define CAN1_EMO30DATA6	(*( CAN_MODATAL0_type *) 0xF00293D8U)	/* Extended Message Object 30 Data 6 Register */
#define CAN1_EMO31DATA6	(*( CAN_MODATAL0_type *) 0xF00293F8U)	/* Extended Message Object 31 Data 6 Register */
#define CAN1_EMO32DATA6	(*( CAN_MODATAL0_type *) 0xF0029418U)	/* Extended Message Object 32 Data 6 Register */
#define CAN1_EMO33DATA6	(*( CAN_MODATAL0_type *) 0xF0029438U)	/* Extended Message Object 33 Data 6 Register */
#define CAN1_EMO34DATA6	(*( CAN_MODATAL0_type *) 0xF0029458U)	/* Extended Message Object 34 Data 6 Register */
#define CAN1_EMO35DATA6	(*( CAN_MODATAL0_type *) 0xF0029478U)	/* Extended Message Object 35 Data 6 Register */
#define CAN1_EMO36DATA6	(*( CAN_MODATAL0_type *) 0xF0029498U)	/* Extended Message Object 36 Data 6 Register */
#define CAN1_EMO37DATA6	(*( CAN_MODATAL0_type *) 0xF00294B8U)	/* Extended Message Object 37 Data 6 Register */
#define CAN1_EMO38DATA6	(*( CAN_MODATAL0_type *) 0xF00294D8U)	/* Extended Message Object 38 Data 6 Register */
#define CAN1_EMO39DATA6	(*( CAN_MODATAL0_type *) 0xF00294F8U)	/* Extended Message Object 39 Data 6 Register */
#define CAN1_EMO40DATA6	(*( CAN_MODATAL0_type *) 0xF0029518U)	/* Extended Message Object 40 Data 6 Register */
#define CAN1_EMO41DATA6	(*( CAN_MODATAL0_type *) 0xF0029538U)	/* Extended Message Object 41 Data 6 Register */
#define CAN1_EMO42DATA6	(*( CAN_MODATAL0_type *) 0xF0029558U)	/* Extended Message Object 42 Data 6 Register */
#define CAN1_EMO43DATA6	(*( CAN_MODATAL0_type *) 0xF0029578U)	/* Extended Message Object 43 Data 6 Register */
#define CAN1_EMO44DATA6	(*( CAN_MODATAL0_type *) 0xF0029598U)	/* Extended Message Object 44 Data 6 Register */
#define CAN1_EMO45DATA6	(*( CAN_MODATAL0_type *) 0xF00295B8U)	/* Extended Message Object 45 Data 6 Register */
#define CAN1_EMO46DATA6	(*( CAN_MODATAL0_type *) 0xF00295D8U)	/* Extended Message Object 46 Data 6 Register */
#define CAN1_EMO47DATA6	(*( CAN_MODATAL0_type *) 0xF00295F8U)	/* Extended Message Object 47 Data 6 Register */
#define CAN1_EMO48DATA6	(*( CAN_MODATAL0_type *) 0xF0029618U)	/* Extended Message Object 48 Data 6 Register */
#define CAN1_EMO49DATA6	(*( CAN_MODATAL0_type *) 0xF0029638U)	/* Extended Message Object 49 Data 6 Register */
#define CAN1_EMO50DATA6	(*( CAN_MODATAL0_type *) 0xF0029658U)	/* Extended Message Object 50 Data 6 Register */
#define CAN1_EMO51DATA6	(*( CAN_MODATAL0_type *) 0xF0029678U)	/* Extended Message Object 51 Data 6 Register */
#define CAN1_EMO52DATA6	(*( CAN_MODATAL0_type *) 0xF0029698U)	/* Extended Message Object 52 Data 6 Register */
#define CAN1_EMO53DATA6	(*( CAN_MODATAL0_type *) 0xF00296B8U)	/* Extended Message Object 53 Data 6 Register */
#define CAN1_EMO54DATA6	(*( CAN_MODATAL0_type *) 0xF00296D8U)	/* Extended Message Object 54 Data 6 Register */
#define CAN1_EMO55DATA6	(*( CAN_MODATAL0_type *) 0xF00296F8U)	/* Extended Message Object 55 Data 6 Register */
#define CAN1_EMO56DATA6	(*( CAN_MODATAL0_type *) 0xF0029718U)	/* Extended Message Object 56 Data 6 Register */
#define CAN1_EMO57DATA6	(*( CAN_MODATAL0_type *) 0xF0029738U)	/* Extended Message Object 57 Data 6 Register */
#define CAN1_EMO58DATA6	(*( CAN_MODATAL0_type *) 0xF0029758U)	/* Extended Message Object 58 Data 6 Register */
#define CAN1_EMO59DATA6	(*( CAN_MODATAL0_type *) 0xF0029778U)	/* Extended Message Object 59 Data 6 Register */
#define CAN1_EMO60DATA6	(*( CAN_MODATAL0_type *) 0xF0029798U)	/* Extended Message Object 60 Data 6 Register */
#define CAN1_EMO61DATA6	(*( CAN_MODATAL0_type *) 0xF00297B8U)	/* Extended Message Object 61 Data 6 Register */
#define CAN1_EMO62DATA6	(*( CAN_MODATAL0_type *) 0xF00297D8U)	/* Extended Message Object 62 Data 6 Register */
#define CAN1_EMO63DATA6	(*( CAN_MODATAL0_type *) 0xF00297F8U)	/* Extended Message Object 63 Data 6 Register */
#define CAN1_EMO64DATA6	(*( CAN_MODATAL0_type *) 0xF0029818U)	/* Extended Message Object 64 Data 6 Register */
#define CAN1_EMO65DATA6	(*( CAN_MODATAL0_type *) 0xF0029838U)	/* Extended Message Object 65 Data 6 Register */
#define CAN1_EMO66DATA6	(*( CAN_MODATAL0_type *) 0xF0029858U)	/* Extended Message Object 66 Data 6 Register */
#define CAN1_EMO67DATA6	(*( CAN_MODATAL0_type *) 0xF0029878U)	/* Extended Message Object 67 Data 6 Register */
#define CAN1_EMO68DATA6	(*( CAN_MODATAL0_type *) 0xF0029898U)	/* Extended Message Object 68 Data 6 Register */
#define CAN1_EMO69DATA6	(*( CAN_MODATAL0_type *) 0xF00298B8U)	/* Extended Message Object 69 Data 6 Register */
#define CAN1_EMO70DATA6	(*( CAN_MODATAL0_type *) 0xF00298D8U)	/* Extended Message Object 70 Data 6 Register */
#define CAN1_EMO71DATA6	(*( CAN_MODATAL0_type *) 0xF00298F8U)	/* Extended Message Object 71 Data 6 Register */
#define CAN1_EMO72DATA6	(*( CAN_MODATAL0_type *) 0xF0029918U)	/* Extended Message Object 72 Data 6 Register */
#define CAN1_EMO73DATA6	(*( CAN_MODATAL0_type *) 0xF0029938U)	/* Extended Message Object 73 Data 6 Register */
#define CAN1_EMO74DATA6	(*( CAN_MODATAL0_type *) 0xF0029958U)	/* Extended Message Object 74 Data 6 Register */
#define CAN1_EMO75DATA6	(*( CAN_MODATAL0_type *) 0xF0029978U)	/* Extended Message Object 75 Data 6 Register */
#define CAN1_EMO76DATA6	(*( CAN_MODATAL0_type *) 0xF0029998U)	/* Extended Message Object 76 Data 6 Register */
#define CAN1_EMO77DATA6	(*( CAN_MODATAL0_type *) 0xF00299B8U)	/* Extended Message Object 77 Data 6 Register */
#define CAN1_EMO78DATA6	(*( CAN_MODATAL0_type *) 0xF00299D8U)	/* Extended Message Object 78 Data 6 Register */
#define CAN1_EMO79DATA6	(*( CAN_MODATAL0_type *) 0xF00299F8U)	/* Extended Message Object 79 Data 6 Register */
#define CAN1_EMO80DATA6	(*( CAN_MODATAL0_type *) 0xF0029A18U)	/* Extended Message Object 80 Data 6 Register */
#define CAN1_EMO81DATA6	(*( CAN_MODATAL0_type *) 0xF0029A38U)	/* Extended Message Object 81 Data 6 Register */
#define CAN1_EMO82DATA6	(*( CAN_MODATAL0_type *) 0xF0029A58U)	/* Extended Message Object 82 Data 6 Register */
#define CAN1_EMO83DATA6	(*( CAN_MODATAL0_type *) 0xF0029A78U)	/* Extended Message Object 83 Data 6 Register */
#define CAN1_EMO84DATA6	(*( CAN_MODATAL0_type *) 0xF0029A98U)	/* Extended Message Object 84 Data 6 Register */
#define CAN1_EMO85DATA6	(*( CAN_MODATAL0_type *) 0xF0029AB8U)	/* Extended Message Object 85 Data 6 Register */
#define CAN1_EMO86DATA6	(*( CAN_MODATAL0_type *) 0xF0029AD8U)	/* Extended Message Object 86 Data 6 Register */
#define CAN1_EMO87DATA6	(*( CAN_MODATAL0_type *) 0xF0029AF8U)	/* Extended Message Object 87 Data 6 Register */
#define CAN1_EMO88DATA6	(*( CAN_MODATAL0_type *) 0xF0029B18U)	/* Extended Message Object 88 Data 6 Register */
#define CAN1_EMO89DATA6	(*( CAN_MODATAL0_type *) 0xF0029B38U)	/* Extended Message Object 89 Data 6 Register */
#define CAN1_EMO90DATA6	(*( CAN_MODATAL0_type *) 0xF0029B58U)	/* Extended Message Object 90 Data 6 Register */
#define CAN1_EMO91DATA6	(*( CAN_MODATAL0_type *) 0xF0029B78U)	/* Extended Message Object 91 Data 6 Register */
#define CAN1_EMO92DATA6	(*( CAN_MODATAL0_type *) 0xF0029B98U)	/* Extended Message Object 92 Data 6 Register */
#define CAN1_EMO93DATA6	(*( CAN_MODATAL0_type *) 0xF0029BB8U)	/* Extended Message Object 93 Data 6 Register */
#define CAN1_EMO94DATA6	(*( CAN_MODATAL0_type *) 0xF0029BD8U)	/* Extended Message Object 94 Data 6 Register */
#define CAN1_EMO95DATA6	(*( CAN_MODATAL0_type *) 0xF0029BF8U)	/* Extended Message Object 95 Data 6 Register */
#define CAN1_EMO96DATA6	(*( CAN_MODATAL0_type *) 0xF0029C18U)	/* Extended Message Object 96 Data 6 Register */
#define CAN1_EMO97DATA6	(*( CAN_MODATAL0_type *) 0xF0029C38U)	/* Extended Message Object 97 Data 6 Register */
#define CAN1_EMO98DATA6	(*( CAN_MODATAL0_type *) 0xF0029C58U)	/* Extended Message Object 98 Data 6 Register */
#define CAN1_EMO99DATA6	(*( CAN_MODATAL0_type *) 0xF0029C78U)	/* Extended Message Object 99 Data 6 Register */
#define CAN1_EMO100DATA6	(*( CAN_MODATAL0_type *) 0xF0029C98U)	/* Extended Message Object 100 Data 6 Register */
#define CAN1_EMO101DATA6	(*( CAN_MODATAL0_type *) 0xF0029CB8U)	/* Extended Message Object 101 Data 6 Register */
#define CAN1_EMO102DATA6	(*( CAN_MODATAL0_type *) 0xF0029CD8U)	/* Extended Message Object 102 Data 6 Register */
#define CAN1_EMO103DATA6	(*( CAN_MODATAL0_type *) 0xF0029CF8U)	/* Extended Message Object 103 Data 6 Register */
#define CAN1_EMO104DATA6	(*( CAN_MODATAL0_type *) 0xF0029D18U)	/* Extended Message Object 104 Data 6 Register */
#define CAN1_EMO105DATA6	(*( CAN_MODATAL0_type *) 0xF0029D38U)	/* Extended Message Object 105 Data 6 Register */
#define CAN1_EMO106DATA6	(*( CAN_MODATAL0_type *) 0xF0029D58U)	/* Extended Message Object 106 Data 6 Register */
#define CAN1_EMO107DATA6	(*( CAN_MODATAL0_type *) 0xF0029D78U)	/* Extended Message Object 107 Data 6 Register */
#define CAN1_EMO108DATA6	(*( CAN_MODATAL0_type *) 0xF0029D98U)	/* Extended Message Object 108 Data 6 Register */
#define CAN1_EMO109DATA6	(*( CAN_MODATAL0_type *) 0xF0029DB8U)	/* Extended Message Object 109 Data 6 Register */
#define CAN1_EMO110DATA6	(*( CAN_MODATAL0_type *) 0xF0029DD8U)	/* Extended Message Object 110 Data 6 Register */
#define CAN1_EMO111DATA6	(*( CAN_MODATAL0_type *) 0xF0029DF8U)	/* Extended Message Object 111 Data 6 Register */
#define CAN1_EMO112DATA6	(*( CAN_MODATAL0_type *) 0xF0029E18U)	/* Extended Message Object 112 Data 6 Register */
#define CAN1_EMO113DATA6	(*( CAN_MODATAL0_type *) 0xF0029E38U)	/* Extended Message Object 113 Data 6 Register */
#define CAN1_EMO114DATA6	(*( CAN_MODATAL0_type *) 0xF0029E58U)	/* Extended Message Object 114 Data 6 Register */
#define CAN1_EMO115DATA6	(*( CAN_MODATAL0_type *) 0xF0029E78U)	/* Extended Message Object 115 Data 6 Register */
#define CAN1_EMO116DATA6	(*( CAN_MODATAL0_type *) 0xF0029E98U)	/* Extended Message Object 116 Data 6 Register */
#define CAN1_EMO117DATA6	(*( CAN_MODATAL0_type *) 0xF0029EB8U)	/* Extended Message Object 117 Data 6 Register */
#define CAN1_EMO118DATA6	(*( CAN_MODATAL0_type *) 0xF0029ED8U)	/* Extended Message Object 118 Data 6 Register */
#define CAN1_EMO119DATA6	(*( CAN_MODATAL0_type *) 0xF0029EF8U)	/* Extended Message Object 119 Data 6 Register */
#define CAN1_EMO120DATA6	(*( CAN_MODATAL0_type *) 0xF0029F18U)	/* Extended Message Object 120 Data 6 Register */
#define CAN1_EMO121DATA6	(*( CAN_MODATAL0_type *) 0xF0029F38U)	/* Extended Message Object 121 Data 6 Register */
#define CAN1_EMO122DATA6	(*( CAN_MODATAL0_type *) 0xF0029F58U)	/* Extended Message Object 122 Data 6 Register */
#define CAN1_EMO123DATA6	(*( CAN_MODATAL0_type *) 0xF0029F78U)	/* Extended Message Object 123 Data 6 Register */
#define CAN1_EMO124DATA6	(*( CAN_MODATAL0_type *) 0xF0029F98U)	/* Extended Message Object 124 Data 6 Register */
#define CAN1_EMO125DATA6	(*( CAN_MODATAL0_type *) 0xF0029FB8U)	/* Extended Message Object 125 Data 6 Register */
#define CAN1_EMO126DATA6	(*( CAN_MODATAL0_type *) 0xF0029FD8U)	/* Extended Message Object 126 Data 6 Register */
#define CAN1_EMO127DATA6	(*( CAN_MODATAL0_type *) 0xF0029FF8U)	/* Extended Message Object 127 Data 6 Register */
#define CAN_OCS	(*( SMU_OCS_type *) 0xF00180E8U)	/* OCDS Control and Status */
#define CAN1_OCS	(*( SMU_OCS_type *) 0xF00280E8U)	/* OCDS Control and Status */
#define CAN_ACCEN0	(*( XBAR_ACCEN0_type *) 0xF00180FCU)	/* Access Enable Register 0 */
#define CAN1_ACCEN0	(*( XBAR_ACCEN0_type *) 0xF00280FCU)	/* Access Enable Register 0 */
#define CAN_ACCEN1	(*( XBAR_PRIOH0_type *) 0xF00180F8U)	/* Access Enable Register 1 */
#define CAN1_ACCEN1	(*( XBAR_PRIOH0_type *) 0xF00280F8U)	/* Access Enable Register 1 */
#define CAN_KRST0	(*( SMU_KRST0_type *) 0xF00180F4U)	/* Kernel Reset Register 0 */
#define CAN1_KRST0	(*( SMU_KRST0_type *) 0xF00280F4U)	/* Kernel Reset Register 0 */
#define CAN_KRST1	(*( SMU_KRST1_type *) 0xF00180F0U)	/* Kernel Reset Register 1 */
#define CAN1_KRST1	(*( SMU_KRST1_type *) 0xF00280F0U)	/* Kernel Reset Register 1 */
#define CAN_KRSTCLR	(*( SMU_KRSTCLR_type *) 0xF00180ECU)	/* Kernel Reset Status Clear Register */
#define CAN1_KRSTCLR	(*( SMU_KRSTCLR_type *) 0xF00280ECU)	/* Kernel Reset Status Clear Register */
#define CAN_CLC	(*( ASCLIN0_CLC_type *) 0xF0018000U)	/* CAN Clock Control Register */
#define CAN1_CLC	(*( ASCLIN0_CLC_type *) 0xF0028000U)	/* CAN Clock Control Register */
#define CAN_FDR	(*( CAN_FDR_type *) 0xF001800CU)	/* CAN Fractional Divider Register */
#define CAN1_FDR	(*( CAN_FDR_type *) 0xF002800CU)	/* CAN Fractional Divider Register */
#define SENT_ID	(*( SENT_ID_type *) 0xF0003008U)	/* Module Identification Register */
#define SENT_FDR	(*( SENT_FDR_type *) 0xF000300CU)	/* SENT Fractional Divider Register */
#define SENT_TSR	(*( SENT_TSR_type *) 0xF0003018U)	/* Time Stamp Register */
#define SENT_TPD	(*( SENT_TPD_type *) 0xF000301CU)	/* Time Stamp Predivider Register */
#define SENT_CPDR0	(*( SENT_CPDR0_type *) 0xF0003100U)	/* Channel Pre Divider Register 0 */
#define SENT_CPDR1	(*( SENT_CPDR0_type *) 0xF0003140U)	/* Channel Pre Divider Register 1 */
#define SENT_CPDR2	(*( SENT_CPDR0_type *) 0xF0003180U)	/* Channel Pre Divider Register 2 */
#define SENT_CPDR3	(*( SENT_CPDR0_type *) 0xF00031C0U)	/* Channel Pre Divider Register 3 */
#define SENT_CFDR0	(*( SENT_CFDR0_type *) 0xF0003104U)	/* Channel Fractional Divider Register 0 */
#define SENT_CFDR1	(*( SENT_CFDR0_type *) 0xF0003144U)	/* Channel Fractional Divider Register 1 */
#define SENT_CFDR2	(*( SENT_CFDR0_type *) 0xF0003184U)	/* Channel Fractional Divider Register 2 */
#define SENT_CFDR3	(*( SENT_CFDR0_type *) 0xF00031C4U)	/* Channel Fractional Divider Register 3 */
#define SENT_RCR0	(*( SENT_RCR0_type *) 0xF0003108U)	/* Receiver Control Register 0 */
#define SENT_RCR1	(*( SENT_RCR0_type *) 0xF0003148U)	/* Receiver Control Register 1 */
#define SENT_RCR2	(*( SENT_RCR0_type *) 0xF0003188U)	/* Receiver Control Register 2 */
#define SENT_RCR3	(*( SENT_RCR0_type *) 0xF00031C8U)	/* Receiver Control Register 3 */
#define SENT_WDT0	(*( SENT_WDT0_type *) 0xF0003134U)	/* Watch Dog Timer Register 0 */
#define SENT_WDT1	(*( SENT_WDT0_type *) 0xF0003174U)	/* Watch Dog Timer Register 1 */
#define SENT_WDT2	(*( SENT_WDT0_type *) 0xF00031B4U)	/* Watch Dog Timer Register 2 */
#define SENT_WDT3	(*( SENT_WDT0_type *) 0xF00031F4U)	/* Watch Dog Timer Register 3 */
#define SENT_RSR0	(*( SENT_RSR0_type *) 0xF000310CU)	/* Receive Status Register 0 */
#define SENT_RSR1	(*( SENT_RSR0_type *) 0xF000314CU)	/* Receive Status Register 1 */
#define SENT_RSR2	(*( SENT_RSR0_type *) 0xF000318CU)	/* Receive Status Register 2 */
#define SENT_RSR3	(*( SENT_RSR0_type *) 0xF00031CCU)	/* Receive Status Register 3 */
#define SENT_SDS0	(*( SENT_SDS0_type *) 0xF0003110U)	/* Serial Data and Status Register 0 */
#define SENT_SDS1	(*( SENT_SDS0_type *) 0xF0003150U)	/* Serial Data and Status Register 1 */
#define SENT_SDS2	(*( SENT_SDS0_type *) 0xF0003190U)	/* Serial Data and Status Register 2 */
#define SENT_SDS3	(*( SENT_SDS0_type *) 0xF00031D0U)	/* Serial Data and Status Register 3 */
#define SENT_IOCR0	(*( SENT_IOCR0_type *) 0xF0003114U)	/* Input and Output Control Register 0 */
#define SENT_IOCR1	(*( SENT_IOCR0_type *) 0xF0003154U)	/* Input and Output Control Register 1 */
#define SENT_IOCR2	(*( SENT_IOCR0_type *) 0xF0003194U)	/* Input and Output Control Register 2 */
#define SENT_IOCR3	(*( SENT_IOCR0_type *) 0xF00031D4U)	/* Input and Output Control Register 3 */
#define SENT_RDR0	(*( SENT_RDR0_type *) 0xF0003080U)	/* Receive Data Register 0 */
#define SENT_RDR1	(*( SENT_RDR0_type *) 0xF0003084U)	/* Receive Data Register 1 */
#define SENT_RDR2	(*( SENT_RDR0_type *) 0xF0003088U)	/* Receive Data Register 2 */
#define SENT_RDR3	(*( SENT_RDR0_type *) 0xF000308CU)	/* Receive Data Register 3 */
#define SENT_RTS0	(*( SENT_RTS0_type *) 0xF0003A80U)	/* Receive Time Stamp Register 0 */
#define SENT_RTS1	(*( SENT_RTS0_type *) 0xF0003A84U)	/* Receive Time Stamp Register 1 */
#define SENT_RTS2	(*( SENT_RTS0_type *) 0xF0003A88U)	/* Receive Time Stamp Register 2 */
#define SENT_RTS3	(*( SENT_RTS0_type *) 0xF0003A8CU)	/* Receive Time Stamp Register 3 */
#define SENT_VIEW0	(*( SENT_VIEW0_type *) 0xF000311CU)	/* Receive Data View Register 0 */
#define SENT_VIEW1	(*( SENT_VIEW0_type *) 0xF000315CU)	/* Receive Data View Register 1 */
#define SENT_VIEW2	(*( SENT_VIEW0_type *) 0xF000319CU)	/* Receive Data View Register 2 */
#define SENT_VIEW3	(*( SENT_VIEW0_type *) 0xF00031DCU)	/* Receive Data View Register 3 */
#define SENT_SCR0	(*( SENT_SCR0_type *) 0xF0003118U)	/* SPC Control Register 0 */
#define SENT_SCR1	(*( SENT_SCR0_type *) 0xF0003158U)	/* SPC Control Register 1 */
#define SENT_SCR2	(*( SENT_SCR0_type *) 0xF0003198U)	/* SPC Control Register 2 */
#define SENT_SCR3	(*( SENT_SCR0_type *) 0xF00031D8U)	/* SPC Control Register 3 */
#define SENT_INTOV	(*( SENT_INTOV_type *) 0xF0003014U)	/* Interrupt Overview Register */
#define SENT_INTSTAT0	(*( SENT_INTSTAT0_type *) 0xF0003120U)	/* Interrupt Status Register 0 */
#define SENT_INTSTAT1	(*( SENT_INTSTAT0_type *) 0xF0003160U)	/* Interrupt Status Register 1 */
#define SENT_INTSTAT2	(*( SENT_INTSTAT0_type *) 0xF00031A0U)	/* Interrupt Status Register 2 */
#define SENT_INTSTAT3	(*( SENT_INTSTAT0_type *) 0xF00031E0U)	/* Interrupt Status Register 3 */
#define SENT_INTSET0	(*( SENT_INTSET0_type *) 0xF0003124U)	/* Interrupt Set Register 0 */
#define SENT_INTSET1	(*( SENT_INTSET0_type *) 0xF0003164U)	/* Interrupt Set Register 1 */
#define SENT_INTSET2	(*( SENT_INTSET0_type *) 0xF00031A4U)	/* Interrupt Set Register 2 */
#define SENT_INTSET3	(*( SENT_INTSET0_type *) 0xF00031E4U)	/* Interrupt Set Register 3 */
#define SENT_INTCLR0	(*( SENT_INTCLR0_type *) 0xF0003128U)	/* Interrupt Clear Register 0 */
#define SENT_INTCLR1	(*( SENT_INTCLR0_type *) 0xF0003168U)	/* Interrupt Clear Register 1 */
#define SENT_INTCLR2	(*( SENT_INTCLR0_type *) 0xF00031A8U)	/* Interrupt Clear Register 2 */
#define SENT_INTCLR3	(*( SENT_INTCLR0_type *) 0xF00031E8U)	/* Interrupt Clear Register 3 */
#define SENT_INTEN0	(*( SENT_INTEN0_type *) 0xF000312CU)	/* Interrupt Enable Register 0 */
#define SENT_INTEN1	(*( SENT_INTEN0_type *) 0xF000316CU)	/* Interrupt Enable Register 1 */
#define SENT_INTEN2	(*( SENT_INTEN0_type *) 0xF00031ACU)	/* Interrupt Enable Register 2 */
#define SENT_INTEN3	(*( SENT_INTEN0_type *) 0xF00031ECU)	/* Interrupt Enable Register 3 */
#define SENT_INP0	(*( SENT_INP0_type *) 0xF0003130U)	/* Interrupt Node Pointer Register 0 */
#define SENT_INP1	(*( SENT_INP0_type *) 0xF0003170U)	/* Interrupt Node Pointer Register 1 */
#define SENT_INP2	(*( SENT_INP0_type *) 0xF00031B0U)	/* Interrupt Node Pointer Register 2 */
#define SENT_INP3	(*( SENT_INP0_type *) 0xF00031F0U)	/* Interrupt Node Pointer Register 3 */
#define SENT_CLC	(*( IOM_CLC_type *) 0xF0003000U)	/* Clock Control Register */
#define SENT_OCS	(*( ASCLIN0_OCS_type *) 0xF00030E8U)	/* OCDS Control and Status */
#define SENT_ACCEN0	(*( XBAR_ACCEN0_type *) 0xF00030FCU)	/* Access Enable Register 0 */
#define SENT_ACCEN1	(*( XBAR_PRIOH0_type *) 0xF00030F8U)	/* Access Enable Register 1 */
#define SENT_KRST0	(*( SMU_KRST0_type *) 0xF00030F4U)	/* Kernel Reset Register 0 */
#define SENT_KRST1	(*( SMU_KRST1_type *) 0xF00030F0U)	/* Kernel Reset Register 1 */
#define SENT_KRSTCLR	(*( SMU_KRSTCLR_type *) 0xF00030ECU)	/* Kernel Reset Status Clear Register */
#define ERAY_ID	(*( XBAR_ID_type *) 0xF001C008U)	/* Module Identification Register */
#define ERAY_CUST1	(*( ERAY_CUST1_type *) 0xF001C004U)	/* Busy and Input Buffer Control Register */
#define ERAY_CUST3	(*( ERAY_CUST3_type *) 0xF001C00CU)	/* Customer Interface Timeout Counter */
#define ERAY_TEST1	(*( ERAY_TEST1_type *) 0xF001C010U)	/* Test Register 1 */
#define ERAY_TEST2	(*( ERAY_TEST2_type *) 0xF001C014U)	/* Test Register 2 */
#define ERAY_LCK	(*( ERAY_LCK_type *) 0xF001C01CU)	/* Lock Register */
#define ERAY_EIR	(*( ERAY_EIR_type *) 0xF001C020U)	/* Error Service Request Register */
#define ERAY_SIR	(*( ERAY_SIR_type *) 0xF001C024U)	/* Status Service Request Register */
#define ERAY_EILS	(*( ERAY_EILS_type *) 0xF001C028U)	/* Error Service Request Line Select */
#define ERAY_SILS	(*( ERAY_SILS_type *) 0xF001C02CU)	/* Status Service Request Line Select */
#define ERAY_EIES	(*( ERAY_EIES_type *) 0xF001C030U)	/* Error Service Request Enable Set */
#define ERAY_EIER	(*( ERAY_EIES_type *) 0xF001C034U)	/* Error Service Request Enable Reset */
#define ERAY_SIES	(*( ERAY_SIES_type *) 0xF001C038U)	/* Status Service Request Enable Set */
#define ERAY_SIER	(*( ERAY_SIES_type *) 0xF001C03CU)	/* Status Service Request Enable Reset */
#define ERAY_ILE	(*( ERAY_ILE_type *) 0xF001C040U)	/* Service Request Line Enable */
#define ERAY_T0C	(*( ERAY_T0C_type *) 0xF001C044U)	/* Timer 0 Configuration */
#define ERAY_T1C	(*( ERAY_T1C_type *) 0xF001C048U)	/* Timer 1 Configuration */
#define ERAY_STPW1	(*( ERAY_STPW1_type *) 0xF001C04CU)	/* Stop Watch Register 1 */
#define ERAY_STPW2	(*( ERAY_STPW2_type *) 0xF001C050U)	/* Stop Watch Register 2 */
#define ERAY_SUCC1	(*( ERAY_SUCC1_type *) 0xF001C080U)	/* SUC Configuration Register 1 */
#define ERAY_SUCC2	(*( ERAY_SUCC2_type *) 0xF001C084U)	/* SUC Configuration Register 2 */
#define ERAY_SUCC3	(*( ERAY_SUCC3_type *) 0xF001C088U)	/* SUC Configuration Register 3 */
#define ERAY_NEMC	(*( ERAY_NEMC_type *) 0xF001C08CU)	/* NEM Configuration Register */
#define ERAY_PRTC1	(*( ERAY_PRTC1_type *) 0xF001C090U)	/* PRT Configuration Register 1 */
#define ERAY_PRTC2	(*( ERAY_PRTC2_type *) 0xF001C094U)	/* PRT Configuration Register 2 */
#define ERAY_MHDC	(*( ERAY_MHDC_type *) 0xF001C098U)	/* MHD Configuration Register */
#define ERAY_GTUC01	(*( ERAY_GTUC01_type *) 0xF001C0A0U)	/* GTU Configuration Register 1 */
#define ERAY_GTUC02	(*( ERAY_GTUC02_type *) 0xF001C0A4U)	/* GTU Configuration Register 2 */
#define ERAY_GTUC03	(*( ERAY_GTUC03_type *) 0xF001C0A8U)	/* GTU Configuration Register 3 */
#define ERAY_GTUC04	(*( ERAY_GTUC04_type *) 0xF001C0ACU)	/* GTU Configuration Register 4 */
#define ERAY_GTUC05	(*( ERAY_GTUC05_type *) 0xF001C0B0U)	/* GTU Configuration Register 5 */
#define ERAY_GTUC06	(*( ERAY_GTUC06_type *) 0xF001C0B4U)	/* GTU Configuration Register 6 */
#define ERAY_GTUC07	(*( ERAY_GTUC07_type *) 0xF001C0B8U)	/* GTU Configuration Register 7 */
#define ERAY_GTUC08	(*( ERAY_GTUC08_type *) 0xF001C0BCU)	/* GTU Configuration Register 8 */
#define ERAY_GTUC09	(*( ERAY_GTUC09_type *) 0xF001C0C0U)	/* GTU Configuration Register 9 */
#define ERAY_GTUC10	(*( ERAY_GTUC10_type *) 0xF001C0C4U)	/* GTU Configuration Register 10 */
#define ERAY_GTUC11	(*( ERAY_GTUC11_type *) 0xF001C0C8U)	/* GTU Configuration Register 11 */
#define ERAY_CCSV	(*( ERAY_CCSV_type *) 0xF001C100U)	/* Communication Controller Status Vector */
#define ERAY_CCEV	(*( ERAY_CCEV_type *) 0xF001C104U)	/* Communication Controller Error Vector */
#define ERAY_SCV	(*( ERAY_SCV_type *) 0xF001C110U)	/* Slot Counter Value */
#define ERAY_MTCCV	(*( ERAY_MTCCV_type *) 0xF001C114U)	/* Macrotick and Cycle Counter Value */
#define ERAY_RCV	(*( ERAY_RCV_type *) 0xF001C118U)	/* Rate Correction Value */
#define ERAY_OCV	(*( ERAY_OCV_type *) 0xF001C11CU)	/* Offset Correction Value */
#define ERAY_SFS	(*( ERAY_SFS_type *) 0xF001C120U)	/* SYNC Frame Status */
#define ERAY_SWNIT	(*( ERAY_SWNIT_type *) 0xF001C124U)	/* Symbol Window and Network Idle Time Status */
#define ERAY_ACS	(*( ERAY_ACS_type *) 0xF001C128U)	/* Aggregated Channel Status */
#define ERAY_ESID01	(*( ERAY_ESID01_type *) 0xF001C130U)	/* Even Sync ID Symbol Window 01 */
#define ERAY_ESID02	(*( ERAY_ESID01_type *) 0xF001C134U)	/* Even Sync ID Symbol Window 02 */
#define ERAY_ESID03	(*( ERAY_ESID01_type *) 0xF001C138U)	/* Even Sync ID Symbol Window 03 */
#define ERAY_ESID04	(*( ERAY_ESID01_type *) 0xF001C13CU)	/* Even Sync ID Symbol Window 04 */
#define ERAY_ESID05	(*( ERAY_ESID01_type *) 0xF001C140U)	/* Even Sync ID Symbol Window 05 */
#define ERAY_ESID06	(*( ERAY_ESID01_type *) 0xF001C144U)	/* Even Sync ID Symbol Window 06 */
#define ERAY_ESID07	(*( ERAY_ESID01_type *) 0xF001C148U)	/* Even Sync ID Symbol Window 07 */
#define ERAY_ESID08	(*( ERAY_ESID01_type *) 0xF001C14CU)	/* Even Sync ID Symbol Window 08 */
#define ERAY_ESID09	(*( ERAY_ESID01_type *) 0xF001C150U)	/* Even Sync ID Symbol Window 09 */
#define ERAY_ESID10	(*( ERAY_ESID01_type *) 0xF001C154U)	/* Even Sync ID Symbol Window 10 */
#define ERAY_ESID11	(*( ERAY_ESID01_type *) 0xF001C158U)	/* Even Sync ID Symbol Window 11 */
#define ERAY_ESID12	(*( ERAY_ESID01_type *) 0xF001C15CU)	/* Even Sync ID Symbol Window 12 */
#define ERAY_ESID13	(*( ERAY_ESID01_type *) 0xF001C160U)	/* Even Sync ID Symbol Window 13 */
#define ERAY_ESID14	(*( ERAY_ESID01_type *) 0xF001C164U)	/* Even Sync ID Symbol Window 14 */
#define ERAY_ESID15	(*( ERAY_ESID01_type *) 0xF001C168U)	/* Even Sync ID Symbol Window 15 */
#define ERAY_OSID01	(*( ERAY_OSID01_type *) 0xF001C170U)	/* Odd Sync ID Symbol Window 01 */
#define ERAY_OSID02	(*( ERAY_OSID01_type *) 0xF001C174U)	/* Odd Sync ID Symbol Window 02 */
#define ERAY_OSID03	(*( ERAY_OSID01_type *) 0xF001C178U)	/* Odd Sync ID Symbol Window 03 */
#define ERAY_OSID04	(*( ERAY_OSID01_type *) 0xF001C17CU)	/* Odd Sync ID Symbol Window 04 */
#define ERAY_OSID05	(*( ERAY_OSID01_type *) 0xF001C180U)	/* Odd Sync ID Symbol Window 05 */
#define ERAY_OSID06	(*( ERAY_OSID01_type *) 0xF001C184U)	/* Odd Sync ID Symbol Window 06 */
#define ERAY_OSID07	(*( ERAY_OSID01_type *) 0xF001C188U)	/* Odd Sync ID Symbol Window 07 */
#define ERAY_OSID08	(*( ERAY_OSID01_type *) 0xF001C18CU)	/* Odd Sync ID Symbol Window 08 */
#define ERAY_OSID09	(*( ERAY_OSID01_type *) 0xF001C190U)	/* Odd Sync ID Symbol Window 09 */
#define ERAY_OSID10	(*( ERAY_OSID01_type *) 0xF001C194U)	/* Odd Sync ID Symbol Window 10 */
#define ERAY_OSID11	(*( ERAY_OSID01_type *) 0xF001C198U)	/* Odd Sync ID Symbol Window 11 */
#define ERAY_OSID12	(*( ERAY_OSID01_type *) 0xF001C19CU)	/* Odd Sync ID Symbol Window 12 */
#define ERAY_OSID13	(*( ERAY_OSID01_type *) 0xF001C1A0U)	/* Odd Sync ID Symbol Window 13 */
#define ERAY_OSID14	(*( ERAY_OSID01_type *) 0xF001C1A4U)	/* Odd Sync ID Symbol Window 14 */
#define ERAY_OSID15	(*( ERAY_OSID01_type *) 0xF001C1A8U)	/* Odd Sync ID Symbol Window 15 */
#define ERAY_NMV1	(*( ERAY_NMV1_type *) 0xF001C1B0U)	/* Network Management Vector 1 */
#define ERAY_NMV2	(*( ERAY_NMV1_type *) 0xF001C1B4U)	/* Network Management Vector 2 */
#define ERAY_NMV3	(*( ERAY_NMV1_type *) 0xF001C1B8U)	/* Network Management Vector 3 */
#define ERAY_MRC	(*( ERAY_MRC_type *) 0xF001C300U)	/* Message RAM Configuration */
#define ERAY_FRF	(*( ERAY_FRF_type *) 0xF001C304U)	/* FIFO Rejection Filter */
#define ERAY_FRFM	(*( ERAY_FRFM_type *) 0xF001C308U)	/* FIFO Rejection Filter Mask */
#define ERAY_FCL	(*( ERAY_FCL_type *) 0xF001C30CU)	/* FIFO Critical Level */
#define ERAY_MHDS	(*( ERAY_MHDS_type *) 0xF001C310U)	/* Message Handler Status */
#define ERAY_LDTS	(*( ERAY_LDTS_type *) 0xF001C314U)	/* Last Dynamic Transmit Slot */
#define ERAY_FSR	(*( ERAY_FSR_type *) 0xF001C318U)	/* FIFO Status Register */
#define ERAY_MHDF	(*( ERAY_MHDF_type *) 0xF001C31CU)	/* Message Handler Constraints Flags */
#define ERAY_TXRQ1	(*( ERAY_TXRQ1_type *) 0xF001C320U)	/* Transmission Request Register 1 */
#define ERAY_TXRQ2	(*( ERAY_TXRQ2_type *) 0xF001C324U)	/* Transmission Request Register 2 */
#define ERAY_TXRQ3	(*( ERAY_TXRQ3_type *) 0xF001C328U)	/* Transmission Request Register 3 */
#define ERAY_TXRQ4	(*( ERAY_TXRQ4_type *) 0xF001C32CU)	/* Transmission Request Register 4 */
#define ERAY_NDAT1	(*( ERAY_NDAT1_type *) 0xF001C330U)	/* New Data Register 1 */
#define ERAY_NDAT2	(*( ERAY_NDAT2_type *) 0xF001C334U)	/* New Data Register 2 */
#define ERAY_NDAT3	(*( ERAY_NDAT3_type *) 0xF001C338U)	/* New Data Register 3 */
#define ERAY_NDAT4	(*( ERAY_NDAT4_type *) 0xF001C33CU)	/* New Data Register 4 */
#define ERAY_MBSC1	(*( ERAY_MBSC1_type *) 0xF001C340U)	/* Message Buffer Status Changed 1 */
#define ERAY_MBSC2	(*( ERAY_MBSC2_type *) 0xF001C344U)	/* Message Buffer Status Changed 2 */
#define ERAY_MBSC3	(*( ERAY_MBSC3_type *) 0xF001C348U)	/* Message Buffer Status Changed 3 */
#define ERAY_MBSC4	(*( ERAY_MBSC4_type *) 0xF001C34CU)	/* Message Buffer Status Changed 4 */
#define ERAY_CREL	(*( ERAY_CREL_type *) 0xF001C3F0U)	/* Core Release Register */
#define ERAY_ENDN	(*( ERAY_ENDN_type *) 0xF001C3F4U)	/* Endian Register */
#define ERAY_WRDS01	(*( ERAY_WRDS01_type *) 0xF001C400U)	/* Write Data Section 01 */
#define ERAY_WRDS02	(*( ERAY_WRDS01_type *) 0xF001C404U)	/* Write Data Section 02 */
#define ERAY_WRDS03	(*( ERAY_WRDS01_type *) 0xF001C408U)	/* Write Data Section 03 */
#define ERAY_WRDS04	(*( ERAY_WRDS01_type *) 0xF001C40CU)	/* Write Data Section 04 */
#define ERAY_WRDS05	(*( ERAY_WRDS01_type *) 0xF001C410U)	/* Write Data Section 05 */
#define ERAY_WRDS06	(*( ERAY_WRDS01_type *) 0xF001C414U)	/* Write Data Section 06 */
#define ERAY_WRDS07	(*( ERAY_WRDS01_type *) 0xF001C418U)	/* Write Data Section 07 */
#define ERAY_WRDS08	(*( ERAY_WRDS01_type *) 0xF001C41CU)	/* Write Data Section 08 */
#define ERAY_WRDS09	(*( ERAY_WRDS01_type *) 0xF001C420U)	/* Write Data Section 09 */
#define ERAY_WRDS10	(*( ERAY_WRDS01_type *) 0xF001C424U)	/* Write Data Section 10 */
#define ERAY_WRDS11	(*( ERAY_WRDS01_type *) 0xF001C428U)	/* Write Data Section 11 */
#define ERAY_WRDS12	(*( ERAY_WRDS01_type *) 0xF001C42CU)	/* Write Data Section 12 */
#define ERAY_WRDS13	(*( ERAY_WRDS01_type *) 0xF001C430U)	/* Write Data Section 13 */
#define ERAY_WRDS14	(*( ERAY_WRDS01_type *) 0xF001C434U)	/* Write Data Section 14 */
#define ERAY_WRDS15	(*( ERAY_WRDS01_type *) 0xF001C438U)	/* Write Data Section 15 */
#define ERAY_WRDS16	(*( ERAY_WRDS01_type *) 0xF001C43CU)	/* Write Data Section 16 */
#define ERAY_WRDS17	(*( ERAY_WRDS01_type *) 0xF001C440U)	/* Write Data Section 17 */
#define ERAY_WRDS18	(*( ERAY_WRDS01_type *) 0xF001C444U)	/* Write Data Section 18 */
#define ERAY_WRDS19	(*( ERAY_WRDS01_type *) 0xF001C448U)	/* Write Data Section 19 */
#define ERAY_WRDS20	(*( ERAY_WRDS01_type *) 0xF001C44CU)	/* Write Data Section 20 */
#define ERAY_WRDS21	(*( ERAY_WRDS01_type *) 0xF001C450U)	/* Write Data Section 21 */
#define ERAY_WRDS22	(*( ERAY_WRDS01_type *) 0xF001C454U)	/* Write Data Section 22 */
#define ERAY_WRDS23	(*( ERAY_WRDS01_type *) 0xF001C458U)	/* Write Data Section 23 */
#define ERAY_WRDS24	(*( ERAY_WRDS01_type *) 0xF001C45CU)	/* Write Data Section 24 */
#define ERAY_WRDS25	(*( ERAY_WRDS01_type *) 0xF001C460U)	/* Write Data Section 25 */
#define ERAY_WRDS26	(*( ERAY_WRDS01_type *) 0xF001C464U)	/* Write Data Section 26 */
#define ERAY_WRDS27	(*( ERAY_WRDS01_type *) 0xF001C468U)	/* Write Data Section 27 */
#define ERAY_WRDS28	(*( ERAY_WRDS01_type *) 0xF001C46CU)	/* Write Data Section 28 */
#define ERAY_WRDS29	(*( ERAY_WRDS01_type *) 0xF001C470U)	/* Write Data Section 29 */
#define ERAY_WRDS30	(*( ERAY_WRDS01_type *) 0xF001C474U)	/* Write Data Section 30 */
#define ERAY_WRDS31	(*( ERAY_WRDS01_type *) 0xF001C478U)	/* Write Data Section 31 */
#define ERAY_WRDS32	(*( ERAY_WRDS01_type *) 0xF001C47CU)	/* Write Data Section 32 */
#define ERAY_WRDS33	(*( ERAY_WRDS01_type *) 0xF001C480U)	/* Write Data Section 33 */
#define ERAY_WRDS34	(*( ERAY_WRDS01_type *) 0xF001C484U)	/* Write Data Section 34 */
#define ERAY_WRDS35	(*( ERAY_WRDS01_type *) 0xF001C488U)	/* Write Data Section 35 */
#define ERAY_WRDS36	(*( ERAY_WRDS01_type *) 0xF001C48CU)	/* Write Data Section 36 */
#define ERAY_WRDS37	(*( ERAY_WRDS01_type *) 0xF001C490U)	/* Write Data Section 37 */
#define ERAY_WRDS38	(*( ERAY_WRDS01_type *) 0xF001C494U)	/* Write Data Section 38 */
#define ERAY_WRDS39	(*( ERAY_WRDS01_type *) 0xF001C498U)	/* Write Data Section 39 */
#define ERAY_WRDS40	(*( ERAY_WRDS01_type *) 0xF001C49CU)	/* Write Data Section 40 */
#define ERAY_WRDS41	(*( ERAY_WRDS01_type *) 0xF001C4A0U)	/* Write Data Section 41 */
#define ERAY_WRDS42	(*( ERAY_WRDS01_type *) 0xF001C4A4U)	/* Write Data Section 42 */
#define ERAY_WRDS43	(*( ERAY_WRDS01_type *) 0xF001C4A8U)	/* Write Data Section 43 */
#define ERAY_WRDS44	(*( ERAY_WRDS01_type *) 0xF001C4ACU)	/* Write Data Section 44 */
#define ERAY_WRDS45	(*( ERAY_WRDS01_type *) 0xF001C4B0U)	/* Write Data Section 45 */
#define ERAY_WRDS46	(*( ERAY_WRDS01_type *) 0xF001C4B4U)	/* Write Data Section 46 */
#define ERAY_WRDS47	(*( ERAY_WRDS01_type *) 0xF001C4B8U)	/* Write Data Section 47 */
#define ERAY_WRDS48	(*( ERAY_WRDS01_type *) 0xF001C4BCU)	/* Write Data Section 48 */
#define ERAY_WRDS49	(*( ERAY_WRDS01_type *) 0xF001C4C0U)	/* Write Data Section 49 */
#define ERAY_WRDS50	(*( ERAY_WRDS01_type *) 0xF001C4C4U)	/* Write Data Section 50 */
#define ERAY_WRDS51	(*( ERAY_WRDS01_type *) 0xF001C4C8U)	/* Write Data Section 51 */
#define ERAY_WRDS52	(*( ERAY_WRDS01_type *) 0xF001C4CCU)	/* Write Data Section 52 */
#define ERAY_WRDS53	(*( ERAY_WRDS01_type *) 0xF001C4D0U)	/* Write Data Section 53 */
#define ERAY_WRDS54	(*( ERAY_WRDS01_type *) 0xF001C4D4U)	/* Write Data Section 54 */
#define ERAY_WRDS55	(*( ERAY_WRDS01_type *) 0xF001C4D8U)	/* Write Data Section 55 */
#define ERAY_WRDS56	(*( ERAY_WRDS01_type *) 0xF001C4DCU)	/* Write Data Section 56 */
#define ERAY_WRDS57	(*( ERAY_WRDS01_type *) 0xF001C4E0U)	/* Write Data Section 57 */
#define ERAY_WRDS58	(*( ERAY_WRDS01_type *) 0xF001C4E4U)	/* Write Data Section 58 */
#define ERAY_WRDS59	(*( ERAY_WRDS01_type *) 0xF001C4E8U)	/* Write Data Section 59 */
#define ERAY_WRDS60	(*( ERAY_WRDS01_type *) 0xF001C4ECU)	/* Write Data Section 60 */
#define ERAY_WRDS61	(*( ERAY_WRDS01_type *) 0xF001C4F0U)	/* Write Data Section 61 */
#define ERAY_WRDS62	(*( ERAY_WRDS01_type *) 0xF001C4F4U)	/* Write Data Section 62 */
#define ERAY_WRDS63	(*( ERAY_WRDS01_type *) 0xF001C4F8U)	/* Write Data Section 63 */
#define ERAY_WRDS64	(*( ERAY_WRDS01_type *) 0xF001C4FCU)	/* Write Data Section 64 */
#define ERAY_WRHS1	(*( ERAY_WRHS1_type *) 0xF001C500U)	/* Write Header Section 1 */
#define ERAY_WRHS2	(*( ERAY_WRHS2_type *) 0xF001C504U)	/* Write Header Section 2 */
#define ERAY_WRHS3	(*( ERAY_WRHS3_type *) 0xF001C508U)	/* Write Header Section 3 */
#define ERAY_IBCM	(*( ERAY_IBCM_type *) 0xF001C510U)	/* Input Buffer Command Mask */
#define ERAY_IBCR	(*( ERAY_IBCR_type *) 0xF001C514U)	/* Input Buffer Command Request */
#define ERAY_RDDS01	(*( ERAY_RDDS01_type *) 0xF001C600U)	/* Read Data Section 01 */
#define ERAY_RDDS02	(*( ERAY_RDDS01_type *) 0xF001C604U)	/* Read Data Section 02 */
#define ERAY_RDDS03	(*( ERAY_RDDS01_type *) 0xF001C608U)	/* Read Data Section 03 */
#define ERAY_RDDS04	(*( ERAY_RDDS01_type *) 0xF001C60CU)	/* Read Data Section 04 */
#define ERAY_RDDS05	(*( ERAY_RDDS01_type *) 0xF001C610U)	/* Read Data Section 05 */
#define ERAY_RDDS06	(*( ERAY_RDDS01_type *) 0xF001C614U)	/* Read Data Section 06 */
#define ERAY_RDDS07	(*( ERAY_RDDS01_type *) 0xF001C618U)	/* Read Data Section 07 */
#define ERAY_RDDS08	(*( ERAY_RDDS01_type *) 0xF001C61CU)	/* Read Data Section 08 */
#define ERAY_RDDS09	(*( ERAY_RDDS01_type *) 0xF001C620U)	/* Read Data Section 09 */
#define ERAY_RDDS10	(*( ERAY_RDDS01_type *) 0xF001C624U)	/* Read Data Section 10 */
#define ERAY_RDDS11	(*( ERAY_RDDS01_type *) 0xF001C628U)	/* Read Data Section 11 */
#define ERAY_RDDS12	(*( ERAY_RDDS01_type *) 0xF001C62CU)	/* Read Data Section 12 */
#define ERAY_RDDS13	(*( ERAY_RDDS01_type *) 0xF001C630U)	/* Read Data Section 13 */
#define ERAY_RDDS14	(*( ERAY_RDDS01_type *) 0xF001C634U)	/* Read Data Section 14 */
#define ERAY_RDDS15	(*( ERAY_RDDS01_type *) 0xF001C638U)	/* Read Data Section 15 */
#define ERAY_RDDS16	(*( ERAY_RDDS01_type *) 0xF001C63CU)	/* Read Data Section 16 */
#define ERAY_RDDS17	(*( ERAY_RDDS01_type *) 0xF001C640U)	/* Read Data Section 17 */
#define ERAY_RDDS18	(*( ERAY_RDDS01_type *) 0xF001C644U)	/* Read Data Section 18 */
#define ERAY_RDDS19	(*( ERAY_RDDS01_type *) 0xF001C648U)	/* Read Data Section 19 */
#define ERAY_RDDS20	(*( ERAY_RDDS01_type *) 0xF001C64CU)	/* Read Data Section 20 */
#define ERAY_RDDS21	(*( ERAY_RDDS01_type *) 0xF001C650U)	/* Read Data Section 21 */
#define ERAY_RDDS22	(*( ERAY_RDDS01_type *) 0xF001C654U)	/* Read Data Section 22 */
#define ERAY_RDDS23	(*( ERAY_RDDS01_type *) 0xF001C658U)	/* Read Data Section 23 */
#define ERAY_RDDS24	(*( ERAY_RDDS01_type *) 0xF001C65CU)	/* Read Data Section 24 */
#define ERAY_RDDS25	(*( ERAY_RDDS01_type *) 0xF001C660U)	/* Read Data Section 25 */
#define ERAY_RDDS26	(*( ERAY_RDDS01_type *) 0xF001C664U)	/* Read Data Section 26 */
#define ERAY_RDDS27	(*( ERAY_RDDS01_type *) 0xF001C668U)	/* Read Data Section 27 */
#define ERAY_RDDS28	(*( ERAY_RDDS01_type *) 0xF001C66CU)	/* Read Data Section 28 */
#define ERAY_RDDS29	(*( ERAY_RDDS01_type *) 0xF001C670U)	/* Read Data Section 29 */
#define ERAY_RDDS30	(*( ERAY_RDDS01_type *) 0xF001C674U)	/* Read Data Section 30 */
#define ERAY_RDDS31	(*( ERAY_RDDS01_type *) 0xF001C678U)	/* Read Data Section 31 */
#define ERAY_RDDS32	(*( ERAY_RDDS01_type *) 0xF001C67CU)	/* Read Data Section 32 */
#define ERAY_RDDS33	(*( ERAY_RDDS01_type *) 0xF001C680U)	/* Read Data Section 33 */
#define ERAY_RDDS34	(*( ERAY_RDDS01_type *) 0xF001C684U)	/* Read Data Section 34 */
#define ERAY_RDDS35	(*( ERAY_RDDS01_type *) 0xF001C688U)	/* Read Data Section 35 */
#define ERAY_RDDS36	(*( ERAY_RDDS01_type *) 0xF001C68CU)	/* Read Data Section 36 */
#define ERAY_RDDS37	(*( ERAY_RDDS01_type *) 0xF001C690U)	/* Read Data Section 37 */
#define ERAY_RDDS38	(*( ERAY_RDDS01_type *) 0xF001C694U)	/* Read Data Section 38 */
#define ERAY_RDDS39	(*( ERAY_RDDS01_type *) 0xF001C698U)	/* Read Data Section 39 */
#define ERAY_RDDS40	(*( ERAY_RDDS01_type *) 0xF001C69CU)	/* Read Data Section 40 */
#define ERAY_RDDS41	(*( ERAY_RDDS01_type *) 0xF001C6A0U)	/* Read Data Section 41 */
#define ERAY_RDDS42	(*( ERAY_RDDS01_type *) 0xF001C6A4U)	/* Read Data Section 42 */
#define ERAY_RDDS43	(*( ERAY_RDDS01_type *) 0xF001C6A8U)	/* Read Data Section 43 */
#define ERAY_RDDS44	(*( ERAY_RDDS01_type *) 0xF001C6ACU)	/* Read Data Section 44 */
#define ERAY_RDDS45	(*( ERAY_RDDS01_type *) 0xF001C6B0U)	/* Read Data Section 45 */
#define ERAY_RDDS46	(*( ERAY_RDDS01_type *) 0xF001C6B4U)	/* Read Data Section 46 */
#define ERAY_RDDS47	(*( ERAY_RDDS01_type *) 0xF001C6B8U)	/* Read Data Section 47 */
#define ERAY_RDDS48	(*( ERAY_RDDS01_type *) 0xF001C6BCU)	/* Read Data Section 48 */
#define ERAY_RDDS49	(*( ERAY_RDDS01_type *) 0xF001C6C0U)	/* Read Data Section 49 */
#define ERAY_RDDS50	(*( ERAY_RDDS01_type *) 0xF001C6C4U)	/* Read Data Section 50 */
#define ERAY_RDDS51	(*( ERAY_RDDS01_type *) 0xF001C6C8U)	/* Read Data Section 51 */
#define ERAY_RDDS52	(*( ERAY_RDDS01_type *) 0xF001C6CCU)	/* Read Data Section 52 */
#define ERAY_RDDS53	(*( ERAY_RDDS01_type *) 0xF001C6D0U)	/* Read Data Section 53 */
#define ERAY_RDDS54	(*( ERAY_RDDS01_type *) 0xF001C6D4U)	/* Read Data Section 54 */
#define ERAY_RDDS55	(*( ERAY_RDDS01_type *) 0xF001C6D8U)	/* Read Data Section 55 */
#define ERAY_RDDS56	(*( ERAY_RDDS01_type *) 0xF001C6DCU)	/* Read Data Section 56 */
#define ERAY_RDDS57	(*( ERAY_RDDS01_type *) 0xF001C6E0U)	/* Read Data Section 57 */
#define ERAY_RDDS58	(*( ERAY_RDDS01_type *) 0xF001C6E4U)	/* Read Data Section 58 */
#define ERAY_RDDS59	(*( ERAY_RDDS01_type *) 0xF001C6E8U)	/* Read Data Section 59 */
#define ERAY_RDDS60	(*( ERAY_RDDS01_type *) 0xF001C6ECU)	/* Read Data Section 60 */
#define ERAY_RDDS61	(*( ERAY_RDDS01_type *) 0xF001C6F0U)	/* Read Data Section 61 */
#define ERAY_RDDS62	(*( ERAY_RDDS01_type *) 0xF001C6F4U)	/* Read Data Section 62 */
#define ERAY_RDDS63	(*( ERAY_RDDS01_type *) 0xF001C6F8U)	/* Read Data Section 63 */
#define ERAY_RDDS64	(*( ERAY_RDDS01_type *) 0xF001C6FCU)	/* Read Data Section 64 */
#define ERAY_RDHS1	(*( ERAY_WRHS1_type *) 0xF001C700U)	/* Read Header Section 1 */
#define ERAY_RDHS2	(*( ERAY_RDHS2_type *) 0xF001C704U)	/* Read Header Section 2 */
#define ERAY_RDHS3	(*( ERAY_RDHS3_type *) 0xF001C708U)	/* Read Header Section 3 */
#define ERAY_MBS	(*( ERAY_MBS_type *) 0xF001C70CU)	/* Message Buffer Status */
#define ERAY_OBCM	(*( ERAY_OBCM_type *) 0xF001C710U)	/* Output Buffer Command Mask */
#define ERAY_OBCR	(*( ERAY_OBCR_type *) 0xF001C714U)	/* Output Buffer Command Request */
#define ERAY_OTSS	(*( ERAY_OTSS_type *) 0xF001C870U)	/* OCDS Trigger Set Select */
#define ERAY_CLC	(*( ERAY_CLC_type *) 0xF001C000U)	/* Clock Control Register */
#define ERAY_OCS	(*( ASCLIN0_OCS_type *) 0xF001C8E8U)	/* OCDS Control and Status */
#define ERAY_ACCEN0	(*( XBAR_ACCEN0_type *) 0xF001C8FCU)	/* Access Enable Register 0 */
#define ERAY_ACCEN1	(*( XBAR_PRIOH0_type *) 0xF001C8F8U)	/* Access Enable Register 1 */
#define ERAY_KRST0	(*( SMU_KRST0_type *) 0xF001C8F4U)	/* Kernel Reset Register 0 */
#define ERAY_KRST1	(*( SMU_KRST1_type *) 0xF001C8F0U)	/* Kernel Reset Register 1 */
#define ERAY_KRSTCLR	(*( SMU_KRSTCLR_type *) 0xF001C8ECU)	/* Kernel Reset Status Clear Register */
#define ERAY_NDIC1	(*( ERAY_NDIC1_type *) 0xF001C3A8U)	/* New Data Interrupt Control 1 */
#define ERAY_NDIC2	(*( ERAY_NDIC2_type *) 0xF001C3ACU)	/* New Data Interrupt Control 2 */
#define ERAY_NDIC3	(*( ERAY_NDIC3_type *) 0xF001C3B0U)	/* New Data Interrupt Control 3 */
#define ERAY_NDIC4	(*( ERAY_NDIC4_type *) 0xF001C3B4U)	/* New Data Interrupt Control 4 */
#define ERAY_MSIC1	(*( ERAY_MSIC1_type *) 0xF001C3B8U)	/* Message Buffer Status Changed Interrupt Control 1 */
#define ERAY_MSIC2	(*( ERAY_MSIC2_type *) 0xF001C3BCU)	/* Message Buffer Status Changed Interrupt Control 2 */
#define ERAY_MSIC3	(*( ERAY_MSIC3_type *) 0xF001C3C0U)	/* Message Buffer Status Changed Interrupt Control 3 */
#define ERAY_MSIC4	(*( ERAY_MSIC4_type *) 0xF001C3C4U)	/* Message Buffer Status Changed Interrupt Control 4 */
#define STM0_CLC	(*( ASCLIN0_CLC_type *) 0xF0000000U)	/* Clock Control Register */
#define STM0_ID	(*( SENT_ID_type *) 0xF0000008U)	/* Module Identification Register */
#define STM0_TIM0	(*( STM0_TIM0_type *) 0xF0000010U)	/* Timer Register 0 */
#define STM0_TIM0SV	(*( STM0_TIM0_type *) 0xF0000050U)	/* Timer Register 0 Second View */
#define STM0_TIM1	(*( STM0_TIM1_type *) 0xF0000014U)	/* Timer Register 1 */
#define STM0_TIM2	(*( STM0_TIM2_type *) 0xF0000018U)	/* Timer Register 2 */
#define STM0_TIM3	(*( STM0_TIM3_type *) 0xF000001CU)	/* Timer Register 3 */
#define STM0_TIM4	(*( STM0_TIM4_type *) 0xF0000020U)	/* Timer Register 4 */
#define STM0_TIM5	(*( STM0_TIM5_type *) 0xF0000024U)	/* Timer Register 5 */
#define STM0_TIM6	(*( STM0_TIM6_type *) 0xF0000028U)	/* Timer Register 6 */
#define STM0_CAP	(*( STM0_CAP_type *) 0xF000002CU)	/* Timer Capture Register */
#define STM0_CAPSV	(*( STM0_CAP_type *) 0xF0000054U)	/* Timer Capture Register Second View */
#define STM0_CMP0	(*( STM0_CMP0_type *) 0xF0000030U)	/* Compare Register 0 */
#define STM0_CMP1	(*( STM0_CMP0_type *) 0xF0000034U)	/* Compare Register 1 */
#define STM0_CMCON	(*( STM0_CMCON_type *) 0xF0000038U)	/* Compare Match Control Register */
#define STM0_ICR	(*( STM0_ICR_type *) 0xF000003CU)	/* Interrupt Control Register */
#define STM0_ISCR	(*( STM0_ISCR_type *) 0xF0000040U)	/* Interrupt Set/Clear Register */
#define STM0_OCS	(*( ASCLIN0_OCS_type *) 0xF00000E8U)	/* OCDS Control and Status */
#define STM0_ACCEN0	(*( XBAR_ACCEN0_type *) 0xF00000FCU)	/* Access Enable Register 0 */
#define STM0_ACCEN1	(*( XBAR_PRIOH0_type *) 0xF00000F8U)	/* Access Enable Register 1 */
#define STM0_KRST0	(*( SMU_KRST0_type *) 0xF00000F4U)	/* Kernel Reset Register 0 */
#define STM0_KRST1	(*( SMU_KRST1_type *) 0xF00000F0U)	/* Kernel Reset Register 1 */
#define STM0_KRSTCLR	(*( SMU_KRSTCLR_type *) 0xF00000ECU)	/* Kernel Reset Status Clear Register */
#define GPT120_T2	(*( GPT120_T2_type *) 0xF0002E34U)	/* Timer T2 Register */
#define GPT120_T3	(*( GPT120_T3_type *) 0xF0002E38U)	/* Timer T3 Register */
#define GPT120_T4	(*( GPT120_T4_type *) 0xF0002E3CU)	/* Timer T4 Register */
#define GPT120_T3CON	(*( GPT120_T3CON_type *) 0xF0002E14U)	/* Timer T3 Control Register */
#define GPT120_T2CON	(*( GPT120_T2CON_type *) 0xF0002E10U)	/* Timer T2 Control Register */
#define GPT120_T4CON	(*( GPT120_T4CON_type *) 0xF0002E18U)	/* Timer T4 Control Register */
#define GPT120_T5	(*( GPT120_T5_type *) 0xF0002E40U)	/* Timer T5 Register */
#define GPT120_T6	(*( GPT120_T6_type *) 0xF0002E44U)	/* Timer T6 Register */
#define GPT120_CAPREL	(*( GPT120_CAPREL_type *) 0xF0002E30U)	/* Capture and Reload Register */
#define GPT120_T6CON	(*( GPT120_T6CON_type *) 0xF0002E20U)	/* Timer T6 Control Register */
#define GPT120_T5CON	(*( GPT120_T5CON_type *) 0xF0002E1CU)	/* Timer T5 Control Register */
#define GPT120_PISEL	(*( GPT120_PISEL_type *) 0xF0002E04U)	/* Port Input Select Register */
#define GPT120_ID	(*( MTU_ID_type *) 0xF0002E08U)	/* Identification Register */
#define GPT120_CLC	(*( ASCLIN0_CLC_type *) 0xF0002E00U)	/* Clock Control Register */
#define GPT120_OCS	(*( ASCLIN0_OCS_type *) 0xF0002EE8U)	/* OCDS Control and Status Register */
#define GPT120_ACCEN0	(*( XBAR_ACCEN0_type *) 0xF0002EFCU)	/* Access Enable Register 0 */
#define GPT120_ACCEN1	(*( XBAR_PRIOH0_type *) 0xF0002EF8U)	/* Access Enable Register 1 */
#define GPT120_KRST0	(*( SMU_KRST0_type *) 0xF0002EF4U)	/* Kernel Reset Register 0 */
#define GPT120_KRST1	(*( SMU_KRST1_type *) 0xF0002EF0U)	/* Kernel Reset Register 1 */
#define GPT120_KRSTCLR	(*( SMU_KRSTCLR_type *) 0xF0002EECU)	/* Kernel Reset Status Clear Register */
#define CCU60_T12	(*( CCU60_T12_type *) 0xF0002A20U)	/* Timer T12 Counter Register */
#define CCU61_T12	(*( CCU60_T12_type *) 0xF0002B20U)	/* Timer T12 Counter Register */
#define CCU60_T12PR	(*( CCU60_T12PR_type *) 0xF0002A24U)	/* Timer 12 Period Register */
#define CCU61_T12PR	(*( CCU60_T12PR_type *) 0xF0002B24U)	/* Timer 12 Period Register */
#define CCU60_CC60R	(*( CCU60_CC60R_type *) 0xF0002A30U)	/* Capture/Compare Register for Channel CC60 */
#define CCU60_CC61R	(*( CCU60_CC60R_type *) 0xF0002A34U)	/* Capture/Compare Register for Channel CC61 */
#define CCU60_CC62R	(*( CCU60_CC60R_type *) 0xF0002A38U)	/* Capture/Compare Register for Channel CC62 */
#define CCU61_CC60R	(*( CCU60_CC60R_type *) 0xF0002B30U)	/* Capture/Compare Register for Channel CC60 */
#define CCU61_CC61R	(*( CCU60_CC60R_type *) 0xF0002B34U)	/* Capture/Compare Register for Channel CC61 */
#define CCU61_CC62R	(*( CCU60_CC60R_type *) 0xF0002B38U)	/* Capture/Compare Register for Channel CC62 */
#define CCU60_CC60SR	(*( CCU60_CC60SR_type *) 0xF0002A40U)	/* Capture/Compare Shadow Reg. for Channel CC60 */
#define CCU60_CC61SR	(*( CCU60_CC60SR_type *) 0xF0002A44U)	/* Capture/Compare Shadow Reg. for Channel CC61 */
#define CCU60_CC62SR	(*( CCU60_CC60SR_type *) 0xF0002A48U)	/* Capture/Compare Shadow Reg. for Channel CC62 */
#define CCU61_CC60SR	(*( CCU60_CC60SR_type *) 0xF0002B40U)	/* Capture/Compare Shadow Reg. for Channel CC60 */
#define CCU61_CC61SR	(*( CCU60_CC60SR_type *) 0xF0002B44U)	/* Capture/Compare Shadow Reg. for Channel CC61 */
#define CCU61_CC62SR	(*( CCU60_CC60SR_type *) 0xF0002B48U)	/* Capture/Compare Shadow Reg. for Channel CC62 */
#define CCU60_T12DTC	(*( CCU60_T12DTC_type *) 0xF0002A28U)	/* Dead-Time Control Register for Timer12 */
#define CCU61_T12DTC	(*( CCU60_T12DTC_type *) 0xF0002B28U)	/* Dead-Time Control Register for Timer12 */
#define CCU60_CMPSTAT	(*( CCU60_CMPSTAT_type *) 0xF0002A60U)	/* Compare State Register */
#define CCU61_CMPSTAT	(*( CCU60_CMPSTAT_type *) 0xF0002B60U)	/* Compare State Register */
#define CCU60_CMPMODIF	(*( CCU60_CMPMODIF_type *) 0xF0002A64U)	/* Compare State Modification Register */
#define CCU61_CMPMODIF	(*( CCU60_CMPMODIF_type *) 0xF0002B64U)	/* Compare State Modification Register */
#define CCU60_T12MSEL	(*( CCU60_T12MSEL_type *) 0xF0002A68U)	/* T12 Mode Select Register */
#define CCU61_T12MSEL	(*( CCU60_T12MSEL_type *) 0xF0002B68U)	/* T12 Mode Select Register */
#define CCU60_TCTR0	(*( CCU60_TCTR0_type *) 0xF0002A70U)	/* Timer Control Register 0 */
#define CCU61_TCTR0	(*( CCU60_TCTR0_type *) 0xF0002B70U)	/* Timer Control Register 0 */
#define CCU60_TCTR2	(*( CCU60_TCTR2_type *) 0xF0002A74U)	/* Timer Control Register 2 */
#define CCU61_TCTR2	(*( CCU60_TCTR2_type *) 0xF0002B74U)	/* Timer Control Register 2 */
#define CCU60_TCTR4	(*( CCU60_TCTR4_type *) 0xF0002A78U)	/* Timer Control Register 4 */
#define CCU61_TCTR4	(*( CCU60_TCTR4_type *) 0xF0002B78U)	/* Timer Control Register 4 */
#define CCU60_T13	(*( CCU60_T13_type *) 0xF0002A50U)	/* Timer T13 Counter Register */
#define CCU61_T13	(*( CCU60_T13_type *) 0xF0002B50U)	/* Timer T13 Counter Register */
#define CCU60_T13PR	(*( CCU60_T13PR_type *) 0xF0002A54U)	/* Timer 13 Period Register */
#define CCU61_T13PR	(*( CCU60_T13PR_type *) 0xF0002B54U)	/* Timer 13 Period Register */
#define CCU60_CC63R	(*( CCU60_CC63R_type *) 0xF0002A58U)	/* Compare Register for T13 */
#define CCU61_CC63R	(*( CCU60_CC63R_type *) 0xF0002B58U)	/* Compare Register for T13 */
#define CCU60_CC63SR	(*( CCU60_CC63SR_type *) 0xF0002A5CU)	/* Compare Shadow Register for T13 */
#define CCU61_CC63SR	(*( CCU60_CC63SR_type *) 0xF0002B5CU)	/* Compare Shadow Register for T13 */
#define CCU60_MODCTR	(*( CCU60_MODCTR_type *) 0xF0002A80U)	/* Modulation Control Register */
#define CCU61_MODCTR	(*( CCU60_MODCTR_type *) 0xF0002B80U)	/* Modulation Control Register */
#define CCU60_TRPCTR	(*( CCU60_TRPCTR_type *) 0xF0002A84U)	/* Trap Control Register */
#define CCU61_TRPCTR	(*( CCU60_TRPCTR_type *) 0xF0002B84U)	/* Trap Control Register */
#define CCU60_PSLR	(*( CCU60_PSLR_type *) 0xF0002A88U)	/* Passive State Level Register */
#define CCU61_PSLR	(*( CCU60_PSLR_type *) 0xF0002B88U)	/* Passive State Level Register */
#define CCU60_MCMCTR	(*( CCU60_MCMCTR_type *) 0xF0002A94U)	/* Multi-Channel Mode Control Register */
#define CCU61_MCMCTR	(*( CCU60_MCMCTR_type *) 0xF0002B94U)	/* Multi-Channel Mode Control Register */
#define CCU60_MCMOUTS	(*( CCU60_MCMOUTS_type *) 0xF0002A8CU)	/* Multi-Channel Mode Output Shadow Register */
#define CCU61_MCMOUTS	(*( CCU60_MCMOUTS_type *) 0xF0002B8CU)	/* Multi-Channel Mode Output Shadow Register */
#define CCU60_MCMOUT	(*( CCU60_MCMOUT_type *) 0xF0002A90U)	/* Multi-Channel Mode Output Register */
#define CCU61_MCMOUT	(*( CCU60_MCMOUT_type *) 0xF0002B90U)	/* Multi-Channel Mode Output Register */
#define CCU60_IS	(*( CCU60_IS_type *) 0xF0002AA0U)	/* Interrupt Status Register */
#define CCU61_IS	(*( CCU60_IS_type *) 0xF0002BA0U)	/* Interrupt Status Register */
#define CCU60_ISS	(*( CCU60_ISS_type *) 0xF0002AA4U)	/* Interrupt Status Set Register */
#define CCU61_ISS	(*( CCU60_ISS_type *) 0xF0002BA4U)	/* Interrupt Status Set Register */
#define CCU60_ISR	(*( CCU60_ISR_type *) 0xF0002AA8U)	/* Interrupt Status Reset Register */
#define CCU61_ISR	(*( CCU60_ISR_type *) 0xF0002BA8U)	/* Interrupt Status Reset Register */
#define CCU60_IEN	(*( CCU60_IEN_type *) 0xF0002AB0U)	/* Interrupt Enable Register */
#define CCU61_IEN	(*( CCU60_IEN_type *) 0xF0002BB0U)	/* Interrupt Enable Register */
#define CCU60_INP	(*( CCU60_INP_type *) 0xF0002AACU)	/* Interrupt Node Pointer Register */
#define CCU61_INP	(*( CCU60_INP_type *) 0xF0002BACU)	/* Interrupt Node Pointer Register */
#define CCU60_ID	(*( CCU60_ID_type *) 0xF0002A08U)	/* Module Identification Register */
#define CCU61_ID	(*( CCU60_ID_type *) 0xF0002B08U)	/* Module Identification Register */
#define CCU60_PISEL0	(*( CCU60_PISEL0_type *) 0xF0002A10U)	/* Port Input Select Register 0 */
#define CCU61_PISEL0	(*( CCU60_PISEL0_type *) 0xF0002B10U)	/* Port Input Select Register 0 */
#define CCU60_PISEL2	(*( CCU60_PISEL2_type *) 0xF0002A14U)	/* Port Input Select Register 2 */
#define CCU61_PISEL2	(*( CCU60_PISEL2_type *) 0xF0002B14U)	/* Port Input Select Register 2 */
#define CCU60_MCFG	(*( CCU60_MCFG_type *) 0xF0002A04U)	/* Module Configuration Register */
#define CCU61_MCFG	(*( CCU60_MCFG_type *) 0xF0002B04U)	/* Module Configuration Register */
#define CCU60_IMON	(*( CCU60_IMON_type *) 0xF0002A98U)	/* Input Monitoring Register */
#define CCU61_IMON	(*( CCU60_IMON_type *) 0xF0002B98U)	/* Input Monitoring Register */
#define CCU60_LI	(*( CCU60_LI_type *) 0xF0002A9CU)	/* Lost Indicator Register */
#define CCU61_LI	(*( CCU60_LI_type *) 0xF0002B9CU)	/* Lost Indicator Register */
#define CCU60_KSCSR	(*( CCU60_KSCSR_type *) 0xF0002A1CU)	/* Kernel State Control Sensitivity Register */
#define CCU61_KSCSR	(*( CCU60_KSCSR_type *) 0xF0002B1CU)	/* Kernel State Control Sensitivity Register */
#define CCU60_CLC	(*( ASCLIN0_CLC_type *) 0xF0002A00U)	/* Clock Control Register */
#define CCU61_CLC	(*( ASCLIN0_CLC_type *) 0xF0002B00U)	/* Clock Control Register */
#define CCU60_OCS	(*( SMU_OCS_type *) 0xF0002AE8U)	/* OCDS Control and Status Register */
#define CCU61_OCS	(*( SMU_OCS_type *) 0xF0002BE8U)	/* OCDS Control and Status Register */
#define CCU60_ACCEN0	(*( XBAR_ACCEN0_type *) 0xF0002AFCU)	/* Access Enable Register 0 */
#define CCU61_ACCEN0	(*( XBAR_ACCEN0_type *) 0xF0002BFCU)	/* Access Enable Register 0 */
#define CCU60_ACCEN1	(*( XBAR_PRIOH0_type *) 0xF0002AF8U)	/* Access Enable Register 1 */
#define CCU61_ACCEN1	(*( XBAR_PRIOH0_type *) 0xF0002BF8U)	/* Access Enable Register 1 */
#define CCU60_KRST0	(*( SMU_KRST0_type *) 0xF0002AF4U)	/* Kernel Reset Register 0 */
#define CCU61_KRST0	(*( SMU_KRST0_type *) 0xF0002BF4U)	/* Kernel Reset Register 0 */
#define CCU60_KRST1	(*( SMU_KRST1_type *) 0xF0002AF0U)	/* Kernel Reset Register 1 */
#define CCU61_KRST1	(*( SMU_KRST1_type *) 0xF0002BF0U)	/* Kernel Reset Register 1 */
#define CCU60_KRSTCLR	(*( SMU_KRSTCLR_type *) 0xF0002AECU)	/* Kernel Reset Status Clear Register */
#define CCU61_KRSTCLR	(*( SMU_KRSTCLR_type *) 0xF0002BECU)	/* Kernel Reset Status Clear Register */
#define CCU60_MOSEL	(*( CCU60_MOSEL_type *) 0xF0002A0CU)	/* CCU60 Module Output Select Register */
#define GTM_REV	(*( GTM_REV_type *) 0xF0100000U)	/* GTM Version Control Register */
#define GTM_RST	(*( GTM_RST_type *) 0xF0100004U)	/* GTM Global Reset Register */
#define GTM_CTRL	(*( GTM_CTRL_type *) 0xF0100008U)	/* GTM Global Control Register */
#define GTM_AEI_ADDR_XPT	(*( GTM_AEI_ADDR_XPT_type *) 0xF010000CU)	/* GTM AEI Timeout Exception Address Register */
#define GTM_IRQ_NOTIFY	(*( GTM_IRQ_NOTIFY_type *) 0xF0100010U)	/* GTM Interrupt Notification Register */
#define GTM_IRQ_EN	(*( GTM_IRQ_EN_type *) 0xF0100014U)	/* GTM Interrupt Enable Register */
#define GTM_IRQ_FORCINT	(*( GTM_IRQ_FORCINT_type *) 0xF0100018U)	/* GTM Software Interrupt Generation Register */
#define GTM_IRQ_MODE	(*( GTM_IRQ_MODE_type *) 0xF010001CU)	/* GTM Top Level Interrupts Mode Selection */
#define GTM_BRIDGE_MODE	(*( GTM_BRIDGE_MODE_type *) 0xF0100030U)	/* GTM to SPB BRIDGE MODE */
#define GTM_BRIDGE_PTR1	(*( GTM_BRIDGE_PTR1_type *) 0xF0100034U)	/* GTM to SPB BRIDGE PTR1 */
#define GTM_BRIDGE_PTR2	(*( GTM_BRIDGE_PTR2_type *) 0xF0100038U)	/* GTM to SPB BRIDGE PTR2 */
#define GTM_EIRQ_EN	(*( GTM_EIRQ_EN_type *) 0xF0100020U)	/* GTM Error Interrupt Enable Register */
#define GTM_TIM0_AUX_IN_SRC	(*( GTM_TIM0_AUX_IN_SRC_type *) 0xF0100040U)	/* GTM TIM0 AUX_IN_SRC */
#define GTM_HW_CONF	(*( GTM_HW_CONF_type *) 0xF0100024U)	/* GTM Hardware Configuration */
#define GTM_CMU_CLK_EN	(*( GTM_CMU_CLK_EN_type *) 0xF0100300U)	/* CMU Clock Enable Register */
#define GTM_CMU_GCLK_NUM	(*( GTM_CMU_GCLK_NUM_type *) 0xF0100304U)	/* CMU Global Clock Control Numerator Register */
#define GTM_CMU_GCLK_DEN	(*( GTM_CMU_GCLK_DEN_type *) 0xF0100308U)	/* CMU Global Clock Control Denominator Register */
#define GTM_CMU_CLK_0_CTRL	(*( GTM_CMU_CLK_0_CTRL_type *) 0xF010030CU)	/* CMU Control For Clock Source 0 Register */
#define GTM_CMU_CLK_1_CTRL	(*( GTM_CMU_CLK_0_CTRL_type *) 0xF0100310U)	/* CMU Control For Clock Source 1 Register */
#define GTM_CMU_CLK_2_CTRL	(*( GTM_CMU_CLK_0_CTRL_type *) 0xF0100314U)	/* CMU Control For Clock Source 2 Register */
#define GTM_CMU_CLK_3_CTRL	(*( GTM_CMU_CLK_0_CTRL_type *) 0xF0100318U)	/* CMU Control For Clock Source 3 Register */
#define GTM_CMU_CLK_4_CTRL	(*( GTM_CMU_CLK_0_CTRL_type *) 0xF010031CU)	/* CMU Control For Clock Source 4 Register */
#define GTM_CMU_CLK_5_CTRL	(*( GTM_CMU_CLK_0_CTRL_type *) 0xF0100320U)	/* CMU Control For Clock Source 5 Register */
#define GTM_CMU_CLK_6_CTRL	(*( GTM_CMU_CLK_6_CTRL_type *) 0xF0100324U)	/* CMU Control For Clock Source 6 Register */
#define GTM_CMU_CLK_7_CTRL	(*( GTM_CMU_CLK_7_CTRL_type *) 0xF0100328U)	/* CMU Control For Clock Source 7 Register */
#define GTM_CMU_ECLK_0_NUM	(*( GTM_CMU_ECLK_0_NUM_type *) 0xF010032CU)	/* CMU External Clock 0 Control Numerator Register */
#define GTM_CMU_ECLK_1_NUM	(*( GTM_CMU_ECLK_0_NUM_type *) 0xF0100334U)	/* CMU External Clock 1 Control Numerator Register */
#define GTM_CMU_ECLK_2_NUM	(*( GTM_CMU_ECLK_0_NUM_type *) 0xF010033CU)	/* CMU External Clock 2 Control Numerator Register */
#define GTM_CMU_ECLK_0_DEN	(*( GTM_CMU_ECLK_0_DEN_type *) 0xF0100330U)	/* CMU External Clock 0 Control Denominator Register */
#define GTM_CMU_ECLK_1_DEN	(*( GTM_CMU_ECLK_0_DEN_type *) 0xF0100338U)	/* CMU External Clock 1 Control Denominator Register */
#define GTM_CMU_ECLK_2_DEN	(*( GTM_CMU_ECLK_0_DEN_type *) 0xF0100340U)	/* CMU External Clock 2 Control Denominator Register */
#define GTM_CMU_FXCLK_CTRL	(*( GTM_CMU_FXCLK_CTRL_type *) 0xF0100344U)	/* CMU FXCLK Control Register */
#define GTM_TBU_CHEN	(*( GTM_TBU_CHEN_type *) 0xF0100100U)	/* TBU Global Channel Enable Register */
#define GTM_TBU_CH0_CTRL	(*( GTM_TBU_CH0_CTRL_type *) 0xF0100104U)	/* TBU Channel 0 Control Register */
#define GTM_TBU_CH0_BASE	(*( GTM_TBU_CH0_BASE_type *) 0xF0100108U)	/* TBU Channel 0 Base Register */
#define GTM_TBU_CH1_CTRL	(*( GTM_TBU_CH1_CTRL_type *) 0xF010010CU)	/* TBU Channel 1 Control Register */
#define GTM_TBU_CH2_CTRL	(*( GTM_TBU_CH1_CTRL_type *) 0xF0100114U)	/* TBU Channel 2 Control Register */
#define GTM_TBU_CH1_BASE	(*( GTM_TBU_CH1_BASE_type *) 0xF0100110U)	/* TBU Channel 1 Base Register */
#define GTM_TBU_CH2_BASE	(*( GTM_TBU_CH1_BASE_type *) 0xF0100118U)	/* TBU Channel 2 Base Register */
#define GTM_TIM0_CH0_CTRL	(*( GTM_TIM0_CH0_CTRL_type *) 0xF0101024U)	/* TIM Channel 0 Control Register */
#define GTM_TIM0_CH1_CTRL	(*( GTM_TIM0_CH0_CTRL_type *) 0xF01010A4U)	/* TIM Channel 1 Control Register */
#define GTM_TIM0_CH2_CTRL	(*( GTM_TIM0_CH0_CTRL_type *) 0xF0101124U)	/* TIM Channel 2 Control Register */
#define GTM_TIM0_CH3_CTRL	(*( GTM_TIM0_CH0_CTRL_type *) 0xF01011A4U)	/* TIM Channel 3 Control Register */
#define GTM_TIM0_CH4_CTRL	(*( GTM_TIM0_CH0_CTRL_type *) 0xF0101224U)	/* TIM Channel 4 Control Register */
#define GTM_TIM0_CH5_CTRL	(*( GTM_TIM0_CH0_CTRL_type *) 0xF01012A4U)	/* TIM Channel 5 Control Register */
#define GTM_TIM0_CH6_CTRL	(*( GTM_TIM0_CH0_CTRL_type *) 0xF0101324U)	/* TIM Channel 6 Control Register */
#define GTM_TIM0_CH7_CTRL	(*( GTM_TIM0_CH0_CTRL_type *) 0xF01013A4U)	/* TIM Channel 7 Control Register */
#define GTM_TIM0_CH0_FLT_RE	(*( GTM_TIM0_CH0_FLT_RE_type *) 0xF010101CU)	/* GTM_TIM0 Channel 0 Filter Parameter 0 Register */
#define GTM_TIM0_CH1_FLT_RE	(*( GTM_TIM0_CH0_FLT_RE_type *) 0xF010109CU)	/* GTM_TIM0 Channel 1 Filter Parameter 0 Register */
#define GTM_TIM0_CH2_FLT_RE	(*( GTM_TIM0_CH0_FLT_RE_type *) 0xF010111CU)	/* GTM_TIM0 Channel 2 Filter Parameter 0 Register */
#define GTM_TIM0_CH3_FLT_RE	(*( GTM_TIM0_CH0_FLT_RE_type *) 0xF010119CU)	/* GTM_TIM0 Channel 3 Filter Parameter 0 Register */
#define GTM_TIM0_CH4_FLT_RE	(*( GTM_TIM0_CH0_FLT_RE_type *) 0xF010121CU)	/* GTM_TIM0 Channel 4 Filter Parameter 0 Register */
#define GTM_TIM0_CH5_FLT_RE	(*( GTM_TIM0_CH0_FLT_RE_type *) 0xF010129CU)	/* GTM_TIM0 Channel 5 Filter Parameter 0 Register */
#define GTM_TIM0_CH6_FLT_RE	(*( GTM_TIM0_CH0_FLT_RE_type *) 0xF010131CU)	/* GTM_TIM0 Channel 6 Filter Parameter 0 Register */
#define GTM_TIM0_CH7_FLT_RE	(*( GTM_TIM0_CH0_FLT_RE_type *) 0xF010139CU)	/* GTM_TIM0 Channel 7 Filter Parameter 0 Register */
#define GTM_TIM0_CH0_FLT_FE	(*( GTM_TIM0_CH0_FLT_FE_type *) 0xF0101020U)	/* TIM0 Channel 0 Filter Parameter 1 Register */
#define GTM_TIM0_CH1_FLT_FE	(*( GTM_TIM0_CH0_FLT_FE_type *) 0xF01010A0U)	/* TIM0 Channel 1 Filter Parameter 1 Register */
#define GTM_TIM0_CH2_FLT_FE	(*( GTM_TIM0_CH0_FLT_FE_type *) 0xF0101120U)	/* TIM0 Channel 2 Filter Parameter 1 Register */
#define GTM_TIM0_CH3_FLT_FE	(*( GTM_TIM0_CH0_FLT_FE_type *) 0xF01011A0U)	/* TIM0 Channel 3 Filter Parameter 1 Register */
#define GTM_TIM0_CH4_FLT_FE	(*( GTM_TIM0_CH0_FLT_FE_type *) 0xF0101220U)	/* TIM0 Channel 4 Filter Parameter 1 Register */
#define GTM_TIM0_CH5_FLT_FE	(*( GTM_TIM0_CH0_FLT_FE_type *) 0xF01012A0U)	/* TIM0 Channel 5 Filter Parameter 1 Register */
#define GTM_TIM0_CH6_FLT_FE	(*( GTM_TIM0_CH0_FLT_FE_type *) 0xF0101320U)	/* TIM0 Channel 6 Filter Parameter 1 Register */
#define GTM_TIM0_CH7_FLT_FE	(*( GTM_TIM0_CH0_FLT_FE_type *) 0xF01013A0U)	/* TIM0 Channel 7 Filter Parameter 1 Register */
#define GTM_TIM0_CH0_GPR0	(*( GTM_TIM0_CH0_GPR0_type *) 0xF0101000U)	/* TIM0 Channel 0 General Purpose 0 Register */
#define GTM_TIM0_CH1_GPR0	(*( GTM_TIM0_CH0_GPR0_type *) 0xF0101080U)	/* TIM0 Channel 1 General Purpose 0 Register */
#define GTM_TIM0_CH2_GPR0	(*( GTM_TIM0_CH0_GPR0_type *) 0xF0101100U)	/* TIM0 Channel 2 General Purpose 0 Register */
#define GTM_TIM0_CH3_GPR0	(*( GTM_TIM0_CH0_GPR0_type *) 0xF0101180U)	/* TIM0 Channel 3 General Purpose 0 Register */
#define GTM_TIM0_CH4_GPR0	(*( GTM_TIM0_CH0_GPR0_type *) 0xF0101200U)	/* TIM0 Channel 4 General Purpose 0 Register */
#define GTM_TIM0_CH5_GPR0	(*( GTM_TIM0_CH0_GPR0_type *) 0xF0101280U)	/* TIM0 Channel 5 General Purpose 0 Register */
#define GTM_TIM0_CH6_GPR0	(*( GTM_TIM0_CH0_GPR0_type *) 0xF0101300U)	/* TIM0 Channel 6 General Purpose 0 Register */
#define GTM_TIM0_CH7_GPR0	(*( GTM_TIM0_CH0_GPR0_type *) 0xF0101380U)	/* TIM0 Channel 7 General Purpose 0 Register */
#define GTM_TIM0_CH0_GPR1	(*( GTM_TIM0_CH0_GPR1_type *) 0xF0101004U)	/* TIM0 Channel 0 General Purpose 1 Register */
#define GTM_TIM0_CH1_GPR1	(*( GTM_TIM0_CH0_GPR1_type *) 0xF0101084U)	/* TIM0 Channel 1 General Purpose 1 Register */
#define GTM_TIM0_CH2_GPR1	(*( GTM_TIM0_CH0_GPR1_type *) 0xF0101104U)	/* TIM0 Channel 2 General Purpose 1 Register */
#define GTM_TIM0_CH3_GPR1	(*( GTM_TIM0_CH0_GPR1_type *) 0xF0101184U)	/* TIM0 Channel 3 General Purpose 1 Register */
#define GTM_TIM0_CH4_GPR1	(*( GTM_TIM0_CH0_GPR1_type *) 0xF0101204U)	/* TIM0 Channel 4 General Purpose 1 Register */
#define GTM_TIM0_CH5_GPR1	(*( GTM_TIM0_CH0_GPR1_type *) 0xF0101284U)	/* TIM0 Channel 5 General Purpose 1 Register */
#define GTM_TIM0_CH6_GPR1	(*( GTM_TIM0_CH0_GPR1_type *) 0xF0101304U)	/* TIM0 Channel 6 General Purpose 1 Register */
#define GTM_TIM0_CH7_GPR1	(*( GTM_TIM0_CH0_GPR1_type *) 0xF0101384U)	/* TIM0 Channel 7 General Purpose 1 Register */
#define GTM_TIM0_CH0_CNT	(*( GTM_TIM0_CH0_CNT_type *) 0xF0101008U)	/* TIM0 Channel 0 SMU Counter Register */
#define GTM_TIM0_CH1_CNT	(*( GTM_TIM0_CH0_CNT_type *) 0xF0101088U)	/* TIM0 Channel 1 SMU Counter Register */
#define GTM_TIM0_CH2_CNT	(*( GTM_TIM0_CH0_CNT_type *) 0xF0101108U)	/* TIM0 Channel 2 SMU Counter Register */
#define GTM_TIM0_CH3_CNT	(*( GTM_TIM0_CH0_CNT_type *) 0xF0101188U)	/* TIM0 Channel 3 SMU Counter Register */
#define GTM_TIM0_CH4_CNT	(*( GTM_TIM0_CH0_CNT_type *) 0xF0101208U)	/* TIM0 Channel 4 SMU Counter Register */
#define GTM_TIM0_CH5_CNT	(*( GTM_TIM0_CH0_CNT_type *) 0xF0101288U)	/* TIM0 Channel 5 SMU Counter Register */
#define GTM_TIM0_CH6_CNT	(*( GTM_TIM0_CH0_CNT_type *) 0xF0101308U)	/* TIM0 Channel 6 SMU Counter Register */
#define GTM_TIM0_CH7_CNT	(*( GTM_TIM0_CH0_CNT_type *) 0xF0101388U)	/* TIM0 Channel 7 SMU Counter Register */
#define GTM_TIM0_CH0_CNTS	(*( GTM_TIM0_CH0_CNTS_type *) 0xF0101010U)	/* TIM0 Channel 0 SMU Shadow Counter Register */
#define GTM_TIM0_CH1_CNTS	(*( GTM_TIM0_CH0_CNTS_type *) 0xF0101090U)	/* TIM0 Channel 1 SMU Shadow Counter Register */
#define GTM_TIM0_CH2_CNTS	(*( GTM_TIM0_CH0_CNTS_type *) 0xF0101110U)	/* TIM0 Channel 2 SMU Shadow Counter Register */
#define GTM_TIM0_CH3_CNTS	(*( GTM_TIM0_CH0_CNTS_type *) 0xF0101190U)	/* TIM0 Channel 3 SMU Shadow Counter Register */
#define GTM_TIM0_CH4_CNTS	(*( GTM_TIM0_CH0_CNTS_type *) 0xF0101210U)	/* TIM0 Channel 4 SMU Shadow Counter Register */
#define GTM_TIM0_CH5_CNTS	(*( GTM_TIM0_CH0_CNTS_type *) 0xF0101290U)	/* TIM0 Channel 5 SMU Shadow Counter Register */
#define GTM_TIM0_CH6_CNTS	(*( GTM_TIM0_CH0_CNTS_type *) 0xF0101310U)	/* TIM0 Channel 6 SMU Shadow Counter Register */
#define GTM_TIM0_CH7_CNTS	(*( GTM_TIM0_CH0_CNTS_type *) 0xF0101390U)	/* TIM0 Channel 7 SMU Shadow Counter Register */
#define GTM_TIM0_CH0_IRQ_NOTIFY	(*( GTM_TIM0_CH0_IRQ_NOTIFY_type *) 0xF010102CU)	/* TIM0 Channel 0 Interrupt Notification Register */
#define GTM_TIM0_CH1_IRQ_NOTIFY	(*( GTM_TIM0_CH0_IRQ_NOTIFY_type *) 0xF01010ACU)	/* TIM0 Channel 1 Interrupt Notification Register */
#define GTM_TIM0_CH2_IRQ_NOTIFY	(*( GTM_TIM0_CH0_IRQ_NOTIFY_type *) 0xF010112CU)	/* TIM0 Channel 2 Interrupt Notification Register */
#define GTM_TIM0_CH3_IRQ_NOTIFY	(*( GTM_TIM0_CH0_IRQ_NOTIFY_type *) 0xF01011ACU)	/* TIM0 Channel 3 Interrupt Notification Register */
#define GTM_TIM0_CH4_IRQ_NOTIFY	(*( GTM_TIM0_CH0_IRQ_NOTIFY_type *) 0xF010122CU)	/* TIM0 Channel 4 Interrupt Notification Register */
#define GTM_TIM0_CH5_IRQ_NOTIFY	(*( GTM_TIM0_CH0_IRQ_NOTIFY_type *) 0xF01012ACU)	/* TIM0 Channel 5 Interrupt Notification Register */
#define GTM_TIM0_CH6_IRQ_NOTIFY	(*( GTM_TIM0_CH0_IRQ_NOTIFY_type *) 0xF010132CU)	/* TIM0 Channel 6 Interrupt Notification Register */
#define GTM_TIM0_CH7_IRQ_NOTIFY	(*( GTM_TIM0_CH0_IRQ_NOTIFY_type *) 0xF01013ACU)	/* TIM0 Channel 7 Interrupt Notification Register */
#define GTM_TIM0_CH0_IRQ_EN	(*( GTM_TIM0_CH0_IRQ_EN_type *) 0xF0101030U)	/* TIM0 Channel 0 Interrupt Enable Register */
#define GTM_TIM0_CH1_IRQ_EN	(*( GTM_TIM0_CH0_IRQ_EN_type *) 0xF01010B0U)	/* TIM0 Channel 1 Interrupt Enable Register */
#define GTM_TIM0_CH2_IRQ_EN	(*( GTM_TIM0_CH0_IRQ_EN_type *) 0xF0101130U)	/* TIM0 Channel 2 Interrupt Enable Register */
#define GTM_TIM0_CH3_IRQ_EN	(*( GTM_TIM0_CH0_IRQ_EN_type *) 0xF01011B0U)	/* TIM0 Channel 3 Interrupt Enable Register */
#define GTM_TIM0_CH4_IRQ_EN	(*( GTM_TIM0_CH0_IRQ_EN_type *) 0xF0101230U)	/* TIM0 Channel 4 Interrupt Enable Register */
#define GTM_TIM0_CH5_IRQ_EN	(*( GTM_TIM0_CH0_IRQ_EN_type *) 0xF01012B0U)	/* TIM0 Channel 5 Interrupt Enable Register */
#define GTM_TIM0_CH6_IRQ_EN	(*( GTM_TIM0_CH0_IRQ_EN_type *) 0xF0101330U)	/* TIM0 Channel 6 Interrupt Enable Register */
#define GTM_TIM0_CH7_IRQ_EN	(*( GTM_TIM0_CH0_IRQ_EN_type *) 0xF01013B0U)	/* TIM0 Channel 7 Interrupt Enable Register */
#define GTM_TIM0_CH0_IRQ_FORCINT	(*( GTM_TIM0_CH0_IRQ_FORCINT_type *) 0xF0101034U)	/* TIM0 Channel 0 Software Interrupt Force Register */
#define GTM_TIM0_CH1_IRQ_FORCINT	(*( GTM_TIM0_CH0_IRQ_FORCINT_type *) 0xF01010B4U)	/* TIM0 Channel 1 Software Interrupt Force Register */
#define GTM_TIM0_CH2_IRQ_FORCINT	(*( GTM_TIM0_CH0_IRQ_FORCINT_type *) 0xF0101134U)	/* TIM0 Channel 2 Software Interrupt Force Register */
#define GTM_TIM0_CH3_IRQ_FORCINT	(*( GTM_TIM0_CH0_IRQ_FORCINT_type *) 0xF01011B4U)	/* TIM0 Channel 3 Software Interrupt Force Register */
#define GTM_TIM0_CH4_IRQ_FORCINT	(*( GTM_TIM0_CH0_IRQ_FORCINT_type *) 0xF0101234U)	/* TIM0 Channel 4 Software Interrupt Force Register */
#define GTM_TIM0_CH5_IRQ_FORCINT	(*( GTM_TIM0_CH0_IRQ_FORCINT_type *) 0xF01012B4U)	/* TIM0 Channel 5 Software Interrupt Force Register */
#define GTM_TIM0_CH6_IRQ_FORCINT	(*( GTM_TIM0_CH0_IRQ_FORCINT_type *) 0xF0101334U)	/* TIM0 Channel 6 Software Interrupt Force Register */
#define GTM_TIM0_CH7_IRQ_FORCINT	(*( GTM_TIM0_CH0_IRQ_FORCINT_type *) 0xF01013B4U)	/* TIM0 Channel 7 Software Interrupt Force Register */
#define GTM_TIM0_CH0_IRQ_MODE	(*( GTM_TIM0_CH0_IRQ_MODE_type *) 0xF0101038U)	/* TIM0 IRQ Mode Configuration Register */
#define GTM_TIM0_CH1_IRQ_MODE	(*( GTM_TIM0_CH0_IRQ_MODE_type *) 0xF01010B8U)	/* TIM0 IRQ Mode Configuration Register */
#define GTM_TIM0_CH2_IRQ_MODE	(*( GTM_TIM0_CH0_IRQ_MODE_type *) 0xF0101138U)	/* TIM0 IRQ Mode Configuration Register */
#define GTM_TIM0_CH3_IRQ_MODE	(*( GTM_TIM0_CH0_IRQ_MODE_type *) 0xF01011B8U)	/* TIM0 IRQ Mode Configuration Register */
#define GTM_TIM0_CH4_IRQ_MODE	(*( GTM_TIM0_CH0_IRQ_MODE_type *) 0xF0101238U)	/* TIM0 IRQ Mode Configuration Register */
#define GTM_TIM0_CH5_IRQ_MODE	(*( GTM_TIM0_CH0_IRQ_MODE_type *) 0xF01012B8U)	/* TIM0 IRQ Mode Configuration Register */
#define GTM_TIM0_CH6_IRQ_MODE	(*( GTM_TIM0_CH0_IRQ_MODE_type *) 0xF0101338U)	/* TIM0 IRQ Mode Configuration Register */
#define GTM_TIM0_CH7_IRQ_MODE	(*( GTM_TIM0_CH0_IRQ_MODE_type *) 0xF01013B8U)	/* TIM0 IRQ Mode Configuration Register */
#define GTM_TIM0_RST	(*( GTM_TIM0_RST_type *) 0xF010107CU)	/* TIM0 Global Software Reset Register */
#define GTM_TIM0_IN_SRC	(*( GTM_TIM0_IN_SRC_type *) 0xF0101078U)	/* TIM0_IN_SRC Long Name */
#define GTM_TIM0_CH0_EIRQ_EN	(*( GTM_TIM0_CH0_EIRQ_EN_type *) 0xF010103CU)	/* TIM0 Channel 0 Error Interrupt Enable Register */
#define GTM_TIM0_CH1_EIRQ_EN	(*( GTM_TIM0_CH0_EIRQ_EN_type *) 0xF01010BCU)	/* TIM0 Channel 1 Error Interrupt Enable Register */
#define GTM_TIM0_CH2_EIRQ_EN	(*( GTM_TIM0_CH0_EIRQ_EN_type *) 0xF010113CU)	/* TIM0 Channel 2 Error Interrupt Enable Register */
#define GTM_TIM0_CH3_EIRQ_EN	(*( GTM_TIM0_CH0_EIRQ_EN_type *) 0xF01011BCU)	/* TIM0 Channel 3 Error Interrupt Enable Register */
#define GTM_TIM0_CH4_EIRQ_EN	(*( GTM_TIM0_CH0_EIRQ_EN_type *) 0xF010123CU)	/* TIM0 Channel 4 Error Interrupt Enable Register */
#define GTM_TIM0_CH5_EIRQ_EN	(*( GTM_TIM0_CH0_EIRQ_EN_type *) 0xF01012BCU)	/* TIM0 Channel 5 Error Interrupt Enable Register */
#define GTM_TIM0_CH6_EIRQ_EN	(*( GTM_TIM0_CH0_EIRQ_EN_type *) 0xF010133CU)	/* TIM0 Channel 6 Error Interrupt Enable Register */
#define GTM_TIM0_CH7_EIRQ_EN	(*( GTM_TIM0_CH0_EIRQ_EN_type *) 0xF01013BCU)	/* TIM0 Channel 7 Error Interrupt Enable Register */
#define GTM_TIM0_CH0_TDUV	(*( GTM_TIM0_CH0_TDUV_type *) 0xF0101018U)	/* TIM0 Channel 0 TDUV Register */
#define GTM_TIM0_CH1_TDUV	(*( GTM_TIM0_CH0_TDUV_type *) 0xF0101098U)	/* TIM0 Channel 1 TDUV Register */
#define GTM_TIM0_CH2_TDUV	(*( GTM_TIM0_CH0_TDUV_type *) 0xF0101118U)	/* TIM0 Channel 2 TDUV Register */
#define GTM_TIM0_CH3_TDUV	(*( GTM_TIM0_CH0_TDUV_type *) 0xF0101198U)	/* TIM0 Channel 3 TDUV Register */
#define GTM_TIM0_CH4_TDUV	(*( GTM_TIM0_CH0_TDUV_type *) 0xF0101218U)	/* TIM0 Channel 4 TDUV Register */
#define GTM_TIM0_CH5_TDUV	(*( GTM_TIM0_CH0_TDUV_type *) 0xF0101298U)	/* TIM0 Channel 5 TDUV Register */
#define GTM_TIM0_CH6_TDUV	(*( GTM_TIM0_CH0_TDUV_type *) 0xF0101318U)	/* TIM0 Channel 6 TDUV Register */
#define GTM_TIM0_CH7_TDUV	(*( GTM_TIM0_CH0_TDUV_type *) 0xF0101398U)	/* TIM0 Channel 7 TDUV Register */
#define GTM_TIM0_CH0_TDUC	(*( GTM_TIM0_CH0_TDUC_type *) 0xF0101014U)	/* TIM0 Channel 0 TDUC Register */
#define GTM_TIM0_CH1_TDUC	(*( GTM_TIM0_CH0_TDUC_type *) 0xF0101094U)	/* TIM0 Channel 1 TDUC Register */
#define GTM_TIM0_CH2_TDUC	(*( GTM_TIM0_CH0_TDUC_type *) 0xF0101114U)	/* TIM0 Channel 2 TDUC Register */
#define GTM_TIM0_CH3_TDUC	(*( GTM_TIM0_CH0_TDUC_type *) 0xF0101194U)	/* TIM0 Channel 3 TDUC Register */
#define GTM_TIM0_CH4_TDUC	(*( GTM_TIM0_CH0_TDUC_type *) 0xF0101214U)	/* TIM0 Channel 4 TDUC Register */
#define GTM_TIM0_CH5_TDUC	(*( GTM_TIM0_CH0_TDUC_type *) 0xF0101294U)	/* TIM0 Channel 5 TDUC Register */
#define GTM_TIM0_CH6_TDUC	(*( GTM_TIM0_CH0_TDUC_type *) 0xF0101314U)	/* TIM0 Channel 6 TDUC Register */
#define GTM_TIM0_CH7_TDUC	(*( GTM_TIM0_CH0_TDUC_type *) 0xF0101394U)	/* TIM0 Channel 7 TDUC Register */
#define GTM_TIM0_CH0_ECNT	(*( GTM_TIM0_CH0_ECNT_type *) 0xF010100CU)	/* TIM0 Channel 0 Edge Counter Register */
#define GTM_TIM0_CH1_ECNT	(*( GTM_TIM0_CH0_ECNT_type *) 0xF010108CU)	/* TIM0 Channel 1 Edge Counter Register */
#define GTM_TIM0_CH2_ECNT	(*( GTM_TIM0_CH0_ECNT_type *) 0xF010110CU)	/* TIM0 Channel 2 Edge Counter Register */
#define GTM_TIM0_CH3_ECNT	(*( GTM_TIM0_CH0_ECNT_type *) 0xF010118CU)	/* TIM0 Channel 3 Edge Counter Register */
#define GTM_TIM0_CH4_ECNT	(*( GTM_TIM0_CH0_ECNT_type *) 0xF010120CU)	/* TIM0 Channel 4 Edge Counter Register */
#define GTM_TIM0_CH5_ECNT	(*( GTM_TIM0_CH0_ECNT_type *) 0xF010128CU)	/* TIM0 Channel 5 Edge Counter Register */
#define GTM_TIM0_CH6_ECNT	(*( GTM_TIM0_CH0_ECNT_type *) 0xF010130CU)	/* TIM0 Channel 6 Edge Counter Register */
#define GTM_TIM0_CH7_ECNT	(*( GTM_TIM0_CH0_ECNT_type *) 0xF010138CU)	/* TIM0 Channel 7 Edge Counter Register */
#define GTM_TIM0_CH0_ECTRL	(*( GTM_TIM0_CH0_ECTRL_type *) 0xF0101028U)	/* TIM0 Channel 0 External Capture Control Register */
#define GTM_TIM0_CH1_ECTRL	(*( GTM_TIM0_CH0_ECTRL_type *) 0xF01010A8U)	/* TIM0 Channel 1 External Capture Control Register */
#define GTM_TIM0_CH2_ECTRL	(*( GTM_TIM0_CH0_ECTRL_type *) 0xF0101128U)	/* TIM0 Channel 2 External Capture Control Register */
#define GTM_TIM0_CH3_ECTRL	(*( GTM_TIM0_CH0_ECTRL_type *) 0xF01011A8U)	/* TIM0 Channel 3 External Capture Control Register */
#define GTM_TIM0_CH4_ECTRL	(*( GTM_TIM0_CH0_ECTRL_type *) 0xF0101228U)	/* TIM0 Channel 4 External Capture Control Register */
#define GTM_TIM0_CH5_ECTRL	(*( GTM_TIM0_CH0_ECTRL_type *) 0xF01012A8U)	/* TIM0 Channel 5 External Capture Control Register */
#define GTM_TIM0_CH6_ECTRL	(*( GTM_TIM0_CH0_ECTRL_type *) 0xF0101328U)	/* TIM0 Channel 6 External Capture Control Register */
#define GTM_TIM0_CH7_ECTRL	(*( GTM_TIM0_CH0_ECTRL_type *) 0xF01013A8U)	/* TIM0 Channel 7 External Capture Control Register */
#define GTM_TIM0_INP_VAL	(*( GTM_TIM0_INP_VAL_type *) 0xF0101074U)	/* TIM0 Input Value Register */
#define GTM_TOM0_TGC0_GLB_CTRL	(*( GTM_TOM0_TGC0_GLB_CTRL_type *) 0xF0108030U)	/* TOM0 TGC0 Global Control Register */
#define GTM_TOM1_TGC0_GLB_CTRL	(*( GTM_TOM0_TGC0_GLB_CTRL_type *) 0xF0108830U)	/* TOM1 TGC0 Global Control Register */
#define GTM_TOM0_TGC1_GLB_CTRL	(*( GTM_TOM0_TGC0_GLB_CTRL_type *) 0xF0108230U)	/* TOM0 TGC1 Global Control Register */
#define GTM_TOM1_TGC1_GLB_CTRL	(*( GTM_TOM0_TGC0_GLB_CTRL_type *) 0xF0108A30U)	/* TOM1 TGC1 Global Control Register */
#define GTM_TOM0_TGC0_ENDIS_CTRL	(*( GTM_TOM0_TGC0_ENDIS_CTRL_type *) 0xF0108070U)	/* TOM0 TGC0 Enable/Disable Control Register */
#define GTM_TOM1_TGC0_ENDIS_CTRL	(*( GTM_TOM0_TGC0_ENDIS_CTRL_type *) 0xF0108870U)	/* TOM1 TGC0 Enable/Disable Control Register */
#define GTM_TOM0_TGC1_ENDIS_CTRL	(*( GTM_TOM0_TGC0_ENDIS_CTRL_type *) 0xF0108270U)	/* TOM0 TGC1 Enable/Disable Control Register */
#define GTM_TOM1_TGC1_ENDIS_CTRL	(*( GTM_TOM0_TGC0_ENDIS_CTRL_type *) 0xF0108A70U)	/* TOM1 TGC1 Enable/Disable Control Register */
#define GTM_TOM0_TGC0_ENDIS_STAT	(*( GTM_TOM0_TGC0_ENDIS_STAT_type *) 0xF0108074U)	/* TOM0 TGC0 Enable/Disable Status Register */
#define GTM_TOM1_TGC0_ENDIS_STAT	(*( GTM_TOM0_TGC0_ENDIS_STAT_type *) 0xF0108874U)	/* TOM1 TGC0 Enable/Disable Status Register */
#define GTM_TOM0_TGC1_ENDIS_STAT	(*( GTM_TOM0_TGC0_ENDIS_STAT_type *) 0xF0108274U)	/* TOM0 TGC1 Enable/Disable Status Register */
#define GTM_TOM1_TGC1_ENDIS_STAT	(*( GTM_TOM0_TGC0_ENDIS_STAT_type *) 0xF0108A74U)	/* TOM1 TGC1 Enable/Disable Status Register */
#define GTM_TOM0_TGC0_ACT_TB	(*( GTM_TOM0_TGC0_ACT_TB_type *) 0xF0108034U)	/* TOM0 TGC0 Action Time Base Register */
#define GTM_TOM1_TGC0_ACT_TB	(*( GTM_TOM0_TGC0_ACT_TB_type *) 0xF0108834U)	/* TOM1 TGC0 Action Time Base Register */
#define GTM_TOM0_TGC1_ACT_TB	(*( GTM_TOM0_TGC0_ACT_TB_type *) 0xF0108234U)	/* TOM0 TGC1 Action Time Base Register */
#define GTM_TOM1_TGC1_ACT_TB	(*( GTM_TOM0_TGC0_ACT_TB_type *) 0xF0108A34U)	/* TOM1 TGC1 Action Time Base Register */
#define GTM_TOM0_TGC0_OUTEN_CTRL	(*( GTM_TOM0_TGC0_OUTEN_CTRL_type *) 0xF0108078U)	/* TOM0 TGC0 Output Enable Control Register */
#define GTM_TOM1_TGC0_OUTEN_CTRL	(*( GTM_TOM0_TGC0_OUTEN_CTRL_type *) 0xF0108878U)	/* TOM1 TGC0 Output Enable Control Register */
#define GTM_TOM0_TGC1_OUTEN_CTRL	(*( GTM_TOM0_TGC0_OUTEN_CTRL_type *) 0xF0108278U)	/* TOM0 TGC1 Output Enable Control Register */
#define GTM_TOM1_TGC1_OUTEN_CTRL	(*( GTM_TOM0_TGC0_OUTEN_CTRL_type *) 0xF0108A78U)	/* TOM1 TGC1 Output Enable Control Register */
#define GTM_TOM0_TGC0_OUTEN_STAT	(*( GTM_TOM0_TGC0_OUTEN_STAT_type *) 0xF010807CU)	/* TOM0 TGC0 Output Enable Status Register */
#define GTM_TOM1_TGC0_OUTEN_STAT	(*( GTM_TOM0_TGC0_OUTEN_STAT_type *) 0xF010887CU)	/* TOM1 TGC0 Output Enable Status Register */
#define GTM_TOM0_TGC1_OUTEN_STAT	(*( GTM_TOM0_TGC0_OUTEN_STAT_type *) 0xF010827CU)	/* TOM0 TGC1 Output Enable Status Register */
#define GTM_TOM1_TGC1_OUTEN_STAT	(*( GTM_TOM0_TGC0_OUTEN_STAT_type *) 0xF0108A7CU)	/* TOM1 TGC1 Output Enable Status Register */
#define GTM_TOM0_TGC0_FUPD_CTRL	(*( GTM_TOM0_TGC0_FUPD_CTRL_type *) 0xF0108038U)	/* TOM0 TGC0 Force Update Control Register */
#define GTM_TOM1_TGC0_FUPD_CTRL	(*( GTM_TOM0_TGC0_FUPD_CTRL_type *) 0xF0108838U)	/* TOM1 TGC0 Force Update Control Register */
#define GTM_TOM0_TGC1_FUPD_CTRL	(*( GTM_TOM0_TGC0_FUPD_CTRL_type *) 0xF0108238U)	/* TOM0 TGC1 Force Update Control Register */
#define GTM_TOM1_TGC1_FUPD_CTRL	(*( GTM_TOM0_TGC0_FUPD_CTRL_type *) 0xF0108A38U)	/* TOM1 TGC1 Force Update Control Register */
#define GTM_TOM0_TGC0_INT_TRIG	(*( GTM_TOM0_TGC0_INT_TRIG_type *) 0xF010803CU)	/* TOM0 TGC0 Internal Trigger Control Register */
#define GTM_TOM1_TGC0_INT_TRIG	(*( GTM_TOM0_TGC0_INT_TRIG_type *) 0xF010883CU)	/* TOM1 TGC0 Internal Trigger Control Register */
#define GTM_TOM0_TGC1_INT_TRIG	(*( GTM_TOM0_TGC0_INT_TRIG_type *) 0xF010823CU)	/* TOM0 TGC1 Internal Trigger Control Register */
#define GTM_TOM1_TGC1_INT_TRIG	(*( GTM_TOM0_TGC0_INT_TRIG_type *) 0xF0108A3CU)	/* TOM1 TGC1 Internal Trigger Control Register */
#define GTM_TOM0_CH0_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xF0108000U)	/* TOM0 Channel 0 Control Register’ */
#define GTM_TOM0_CH1_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xF0108040U)	/* TOM0 Channel 1 Control Register’ */
#define GTM_TOM0_CH2_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xF0108080U)	/* TOM0 Channel 2 Control Register’ */
#define GTM_TOM0_CH3_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xF01080C0U)	/* TOM0 Channel 3 Control Register’ */
#define GTM_TOM0_CH4_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xF0108100U)	/* TOM0 Channel 4 Control Register’ */
#define GTM_TOM0_CH5_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xF0108140U)	/* TOM0 Channel 5 Control Register’ */
#define GTM_TOM0_CH6_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xF0108180U)	/* TOM0 Channel 6 Control Register’ */
#define GTM_TOM0_CH7_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xF01081C0U)	/* TOM0 Channel 7 Control Register’ */
#define GTM_TOM0_CH8_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xF0108200U)	/* TOM0 Channel 8 Control Register’ */
#define GTM_TOM0_CH9_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xF0108240U)	/* TOM0 Channel 9 Control Register’ */
#define GTM_TOM0_CH10_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xF0108280U)	/* TOM0 Channel 10 Control Register’ */
#define GTM_TOM0_CH11_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xF01082C0U)	/* TOM0 Channel 11 Control Register’ */
#define GTM_TOM0_CH12_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xF0108300U)	/* TOM0 Channel 12 Control Register’ */
#define GTM_TOM0_CH13_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xF0108340U)	/* TOM0 Channel 13 Control Register’ */
#define GTM_TOM0_CH14_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xF0108380U)	/* TOM0 Channel 14 Control Register’ */
#define GTM_TOM1_CH0_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xF0108800U)	/* TOM1 Channel 0 Control Register’ */
#define GTM_TOM1_CH1_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xF0108840U)	/* TOM1 Channel 1 Control Register’ */
#define GTM_TOM1_CH2_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xF0108880U)	/* TOM1 Channel 2 Control Register’ */
#define GTM_TOM1_CH3_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xF01088C0U)	/* TOM1 Channel 3 Control Register’ */
#define GTM_TOM1_CH4_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xF0108900U)	/* TOM1 Channel 4 Control Register’ */
#define GTM_TOM1_CH5_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xF0108940U)	/* TOM1 Channel 5 Control Register’ */
#define GTM_TOM1_CH6_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xF0108980U)	/* TOM1 Channel 6 Control Register’ */
#define GTM_TOM1_CH7_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xF01089C0U)	/* TOM1 Channel 7 Control Register’ */
#define GTM_TOM1_CH8_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xF0108A00U)	/* TOM1 Channel 8 Control Register’ */
#define GTM_TOM1_CH9_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xF0108A40U)	/* TOM1 Channel 9 Control Register’ */
#define GTM_TOM1_CH10_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xF0108A80U)	/* TOM1 Channel 10 Control Register’ */
#define GTM_TOM1_CH11_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xF0108AC0U)	/* TOM1 Channel 11 Control Register’ */
#define GTM_TOM1_CH12_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xF0108B00U)	/* TOM1 Channel 12 Control Register’ */
#define GTM_TOM1_CH13_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xF0108B40U)	/* TOM1 Channel 13 Control Register’ */
#define GTM_TOM1_CH14_CTRL	(*( GTM_TOM0_CH0_CTRL_type *) 0xF0108B80U)	/* TOM1 Channel 14 Control Register’ */
#define GTM_TOM0_CH15_CTRL	(*( GTM_TOM0_CH15_CTRL_type *) 0xF01083C0U)	/* TOM0 Channel 15 Control Register */
#define GTM_TOM1_CH15_CTRL	(*( GTM_TOM0_CH15_CTRL_type *) 0xF0108BC0U)	/* TOM1 Channel 15 Control Register */
#define GTM_TOM0_CH0_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xF0108014U)	/* TOM0 Channel 0 CCU0 Counter Register */
#define GTM_TOM0_CH1_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xF0108054U)	/* TOM0 Channel 1 CCU0 Counter Register */
#define GTM_TOM0_CH2_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xF0108094U)	/* TOM0 Channel 2 CCU0 Counter Register */
#define GTM_TOM0_CH3_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xF01080D4U)	/* TOM0 Channel 3 CCU0 Counter Register */
#define GTM_TOM0_CH4_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xF0108114U)	/* TOM0 Channel 4 CCU0 Counter Register */
#define GTM_TOM0_CH5_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xF0108154U)	/* TOM0 Channel 5 CCU0 Counter Register */
#define GTM_TOM0_CH6_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xF0108194U)	/* TOM0 Channel 6 CCU0 Counter Register */
#define GTM_TOM0_CH7_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xF01081D4U)	/* TOM0 Channel 7 CCU0 Counter Register */
#define GTM_TOM0_CH8_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xF0108214U)	/* TOM0 Channel 8 CCU0 Counter Register */
#define GTM_TOM0_CH9_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xF0108254U)	/* TOM0 Channel 9 CCU0 Counter Register */
#define GTM_TOM0_CH10_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xF0108294U)	/* TOM0 Channel 10 CCU0 Counter Register */
#define GTM_TOM0_CH11_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xF01082D4U)	/* TOM0 Channel 11 CCU0 Counter Register */
#define GTM_TOM0_CH12_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xF0108314U)	/* TOM0 Channel 12 CCU0 Counter Register */
#define GTM_TOM0_CH13_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xF0108354U)	/* TOM0 Channel 13 CCU0 Counter Register */
#define GTM_TOM0_CH14_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xF0108394U)	/* TOM0 Channel 14 CCU0 Counter Register */
#define GTM_TOM0_CH15_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xF01083D4U)	/* TOM0 Channel 15 CCU0 Counter Register */
#define GTM_TOM1_CH0_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xF0108814U)	/* TOM1 Channel 0 CCU0 Counter Register */
#define GTM_TOM1_CH1_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xF0108854U)	/* TOM1 Channel 1 CCU0 Counter Register */
#define GTM_TOM1_CH2_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xF0108894U)	/* TOM1 Channel 2 CCU0 Counter Register */
#define GTM_TOM1_CH3_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xF01088D4U)	/* TOM1 Channel 3 CCU0 Counter Register */
#define GTM_TOM1_CH4_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xF0108914U)	/* TOM1 Channel 4 CCU0 Counter Register */
#define GTM_TOM1_CH5_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xF0108954U)	/* TOM1 Channel 5 CCU0 Counter Register */
#define GTM_TOM1_CH6_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xF0108994U)	/* TOM1 Channel 6 CCU0 Counter Register */
#define GTM_TOM1_CH7_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xF01089D4U)	/* TOM1 Channel 7 CCU0 Counter Register */
#define GTM_TOM1_CH8_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xF0108A14U)	/* TOM1 Channel 8 CCU0 Counter Register */
#define GTM_TOM1_CH9_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xF0108A54U)	/* TOM1 Channel 9 CCU0 Counter Register */
#define GTM_TOM1_CH10_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xF0108A94U)	/* TOM1 Channel 10 CCU0 Counter Register */
#define GTM_TOM1_CH11_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xF0108AD4U)	/* TOM1 Channel 11 CCU0 Counter Register */
#define GTM_TOM1_CH12_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xF0108B14U)	/* TOM1 Channel 12 CCU0 Counter Register */
#define GTM_TOM1_CH13_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xF0108B54U)	/* TOM1 Channel 13 CCU0 Counter Register */
#define GTM_TOM1_CH14_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xF0108B94U)	/* TOM1 Channel 14 CCU0 Counter Register */
#define GTM_TOM1_CH15_CN0	(*( GTM_TOM0_CH0_CN0_type *) 0xF0108BD4U)	/* TOM1 Channel 15 CCU0 Counter Register */
#define GTM_TOM0_CH0_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xF010800CU)	/* TOM0 Channel 0 CCU0 Compare Register */
#define GTM_TOM0_CH1_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xF010804CU)	/* TOM0 Channel 1 CCU0 Compare Register */
#define GTM_TOM0_CH2_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xF010808CU)	/* TOM0 Channel 2 CCU0 Compare Register */
#define GTM_TOM0_CH3_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xF01080CCU)	/* TOM0 Channel 3 CCU0 Compare Register */
#define GTM_TOM0_CH4_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xF010810CU)	/* TOM0 Channel 4 CCU0 Compare Register */
#define GTM_TOM0_CH5_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xF010814CU)	/* TOM0 Channel 5 CCU0 Compare Register */
#define GTM_TOM0_CH6_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xF010818CU)	/* TOM0 Channel 6 CCU0 Compare Register */
#define GTM_TOM0_CH7_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xF01081CCU)	/* TOM0 Channel 7 CCU0 Compare Register */
#define GTM_TOM0_CH8_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xF010820CU)	/* TOM0 Channel 8 CCU0 Compare Register */
#define GTM_TOM0_CH9_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xF010824CU)	/* TOM0 Channel 9 CCU0 Compare Register */
#define GTM_TOM0_CH10_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xF010828CU)	/* TOM0 Channel 10 CCU0 Compare Register */
#define GTM_TOM0_CH11_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xF01082CCU)	/* TOM0 Channel 11 CCU0 Compare Register */
#define GTM_TOM0_CH12_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xF010830CU)	/* TOM0 Channel 12 CCU0 Compare Register */
#define GTM_TOM0_CH13_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xF010834CU)	/* TOM0 Channel 13 CCU0 Compare Register */
#define GTM_TOM0_CH14_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xF010838CU)	/* TOM0 Channel 14 CCU0 Compare Register */
#define GTM_TOM0_CH15_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xF01083CCU)	/* TOM0 Channel 15 CCU0 Compare Register */
#define GTM_TOM1_CH0_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xF010880CU)	/* TOM1 Channel 0 CCU0 Compare Register */
#define GTM_TOM1_CH1_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xF010884CU)	/* TOM1 Channel 1 CCU0 Compare Register */
#define GTM_TOM1_CH2_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xF010888CU)	/* TOM1 Channel 2 CCU0 Compare Register */
#define GTM_TOM1_CH3_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xF01088CCU)	/* TOM1 Channel 3 CCU0 Compare Register */
#define GTM_TOM1_CH4_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xF010890CU)	/* TOM1 Channel 4 CCU0 Compare Register */
#define GTM_TOM1_CH5_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xF010894CU)	/* TOM1 Channel 5 CCU0 Compare Register */
#define GTM_TOM1_CH6_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xF010898CU)	/* TOM1 Channel 6 CCU0 Compare Register */
#define GTM_TOM1_CH7_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xF01089CCU)	/* TOM1 Channel 7 CCU0 Compare Register */
#define GTM_TOM1_CH8_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xF0108A0CU)	/* TOM1 Channel 8 CCU0 Compare Register */
#define GTM_TOM1_CH9_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xF0108A4CU)	/* TOM1 Channel 9 CCU0 Compare Register */
#define GTM_TOM1_CH10_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xF0108A8CU)	/* TOM1 Channel 10 CCU0 Compare Register */
#define GTM_TOM1_CH11_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xF0108ACCU)	/* TOM1 Channel 11 CCU0 Compare Register */
#define GTM_TOM1_CH12_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xF0108B0CU)	/* TOM1 Channel 12 CCU0 Compare Register */
#define GTM_TOM1_CH13_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xF0108B4CU)	/* TOM1 Channel 13 CCU0 Compare Register */
#define GTM_TOM1_CH14_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xF0108B8CU)	/* TOM1 Channel 14 CCU0 Compare Register */
#define GTM_TOM1_CH15_CM0	(*( GTM_TOM0_CH0_CM0_type *) 0xF0108BCCU)	/* TOM1 Channel 15 CCU0 Compare Register */
#define GTM_TOM0_CH0_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xF0108004U)	/* TOM0 Channel 0 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH1_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xF0108044U)	/* TOM0 Channel 1 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH2_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xF0108084U)	/* TOM0 Channel 2 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH3_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xF01080C4U)	/* TOM0 Channel 3 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH4_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xF0108104U)	/* TOM0 Channel 4 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH5_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xF0108144U)	/* TOM0 Channel 5 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH6_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xF0108184U)	/* TOM0 Channel 6 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH7_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xF01081C4U)	/* TOM0 Channel 7 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH8_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xF0108204U)	/* TOM0 Channel 8 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH9_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xF0108244U)	/* TOM0 Channel 9 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH10_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xF0108284U)	/* TOM0 Channel 10 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH11_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xF01082C4U)	/* TOM0 Channel 11 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH12_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xF0108304U)	/* TOM0 Channel 12 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH13_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xF0108344U)	/* TOM0 Channel 13 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH14_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xF0108384U)	/* TOM0 Channel 14 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH15_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xF01083C4U)	/* TOM0 Channel 15 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH0_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xF0108804U)	/* TOM1 Channel 0 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH1_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xF0108844U)	/* TOM1 Channel 1 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH2_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xF0108884U)	/* TOM1 Channel 2 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH3_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xF01088C4U)	/* TOM1 Channel 3 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH4_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xF0108904U)	/* TOM1 Channel 4 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH5_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xF0108944U)	/* TOM1 Channel 5 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH6_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xF0108984U)	/* TOM1 Channel 6 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH7_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xF01089C4U)	/* TOM1 Channel 7 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH8_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xF0108A04U)	/* TOM1 Channel 8 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH9_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xF0108A44U)	/* TOM1 Channel 9 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH10_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xF0108A84U)	/* TOM1 Channel 10 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH11_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xF0108AC4U)	/* TOM1 Channel 11 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH12_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xF0108B04U)	/* TOM1 Channel 12 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH13_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xF0108B44U)	/* TOM1 Channel 13 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH14_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xF0108B84U)	/* TOM1 Channel 14 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH15_SR0	(*( GTM_TOM0_CH0_SR0_type *) 0xF0108BC4U)	/* TOM1 Channel 15 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH0_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xF0108010U)	/* TOM0 Channel 0 CCU1 Compare Register */
#define GTM_TOM0_CH1_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xF0108050U)	/* TOM0 Channel 1 CCU1 Compare Register */
#define GTM_TOM0_CH2_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xF0108090U)	/* TOM0 Channel 2 CCU1 Compare Register */
#define GTM_TOM0_CH3_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xF01080D0U)	/* TOM0 Channel 3 CCU1 Compare Register */
#define GTM_TOM0_CH4_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xF0108110U)	/* TOM0 Channel 4 CCU1 Compare Register */
#define GTM_TOM0_CH5_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xF0108150U)	/* TOM0 Channel 5 CCU1 Compare Register */
#define GTM_TOM0_CH6_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xF0108190U)	/* TOM0 Channel 6 CCU1 Compare Register */
#define GTM_TOM0_CH7_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xF01081D0U)	/* TOM0 Channel 7 CCU1 Compare Register */
#define GTM_TOM0_CH8_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xF0108210U)	/* TOM0 Channel 8 CCU1 Compare Register */
#define GTM_TOM0_CH9_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xF0108250U)	/* TOM0 Channel 9 CCU1 Compare Register */
#define GTM_TOM0_CH10_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xF0108290U)	/* TOM0 Channel 10 CCU1 Compare Register */
#define GTM_TOM0_CH11_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xF01082D0U)	/* TOM0 Channel 11 CCU1 Compare Register */
#define GTM_TOM0_CH12_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xF0108310U)	/* TOM0 Channel 12 CCU1 Compare Register */
#define GTM_TOM0_CH13_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xF0108350U)	/* TOM0 Channel 13 CCU1 Compare Register */
#define GTM_TOM0_CH14_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xF0108390U)	/* TOM0 Channel 14 CCU1 Compare Register */
#define GTM_TOM0_CH15_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xF01083D0U)	/* TOM0 Channel 15 CCU1 Compare Register */
#define GTM_TOM1_CH0_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xF0108810U)	/* TOM1 Channel 0 CCU1 Compare Register */
#define GTM_TOM1_CH1_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xF0108850U)	/* TOM1 Channel 1 CCU1 Compare Register */
#define GTM_TOM1_CH2_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xF0108890U)	/* TOM1 Channel 2 CCU1 Compare Register */
#define GTM_TOM1_CH3_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xF01088D0U)	/* TOM1 Channel 3 CCU1 Compare Register */
#define GTM_TOM1_CH4_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xF0108910U)	/* TOM1 Channel 4 CCU1 Compare Register */
#define GTM_TOM1_CH5_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xF0108950U)	/* TOM1 Channel 5 CCU1 Compare Register */
#define GTM_TOM1_CH6_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xF0108990U)	/* TOM1 Channel 6 CCU1 Compare Register */
#define GTM_TOM1_CH7_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xF01089D0U)	/* TOM1 Channel 7 CCU1 Compare Register */
#define GTM_TOM1_CH8_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xF0108A10U)	/* TOM1 Channel 8 CCU1 Compare Register */
#define GTM_TOM1_CH9_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xF0108A50U)	/* TOM1 Channel 9 CCU1 Compare Register */
#define GTM_TOM1_CH10_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xF0108A90U)	/* TOM1 Channel 10 CCU1 Compare Register */
#define GTM_TOM1_CH11_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xF0108AD0U)	/* TOM1 Channel 11 CCU1 Compare Register */
#define GTM_TOM1_CH12_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xF0108B10U)	/* TOM1 Channel 12 CCU1 Compare Register */
#define GTM_TOM1_CH13_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xF0108B50U)	/* TOM1 Channel 13 CCU1 Compare Register */
#define GTM_TOM1_CH14_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xF0108B90U)	/* TOM1 Channel 14 CCU1 Compare Register */
#define GTM_TOM1_CH15_CM1	(*( GTM_TOM0_CH0_CM1_type *) 0xF0108BD0U)	/* TOM1 Channel 15 CCU1 Compare Register */
#define GTM_TOM0_CH0_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xF0108008U)	/* TOM0 Channel 0 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH1_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xF0108048U)	/* TOM0 Channel 1 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH2_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xF0108088U)	/* TOM0 Channel 2 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH3_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xF01080C8U)	/* TOM0 Channel 3 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH4_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xF0108108U)	/* TOM0 Channel 4 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH5_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xF0108148U)	/* TOM0 Channel 5 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH6_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xF0108188U)	/* TOM0 Channel 6 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH7_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xF01081C8U)	/* TOM0 Channel 7 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH8_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xF0108208U)	/* TOM0 Channel 8 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH9_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xF0108248U)	/* TOM0 Channel 9 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH10_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xF0108288U)	/* TOM0 Channel 10 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH11_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xF01082C8U)	/* TOM0 Channel 11 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH12_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xF0108308U)	/* TOM0 Channel 12 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH13_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xF0108348U)	/* TOM0 Channel 13 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH14_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xF0108388U)	/* TOM0 Channel 14 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH15_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xF01083C8U)	/* TOM0 Channel 15 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH0_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xF0108808U)	/* TOM1 Channel 0 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH1_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xF0108848U)	/* TOM1 Channel 1 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH2_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xF0108888U)	/* TOM1 Channel 2 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH3_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xF01088C8U)	/* TOM1 Channel 3 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH4_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xF0108908U)	/* TOM1 Channel 4 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH5_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xF0108948U)	/* TOM1 Channel 5 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH6_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xF0108988U)	/* TOM1 Channel 6 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH7_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xF01089C8U)	/* TOM1 Channel 7 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH8_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xF0108A08U)	/* TOM1 Channel 8 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH9_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xF0108A48U)	/* TOM1 Channel 9 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH10_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xF0108A88U)	/* TOM1 Channel 10 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH11_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xF0108AC8U)	/* TOM1 Channel 11 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH12_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xF0108B08U)	/* TOM1 Channel 12 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH13_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xF0108B48U)	/* TOM1 Channel 13 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH14_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xF0108B88U)	/* TOM1 Channel 14 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH15_SR1	(*( GTM_TOM0_CH0_SR1_type *) 0xF0108BC8U)	/* TOM1 Channel 15 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH0_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xF0108018U)	/* TOM0 Channel Status Register */
#define GTM_TOM0_CH1_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xF0108058U)	/* TOM0 Channel Status Register */
#define GTM_TOM0_CH2_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xF0108098U)	/* TOM0 Channel Status Register */
#define GTM_TOM0_CH3_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xF01080D8U)	/* TOM0 Channel Status Register */
#define GTM_TOM0_CH4_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xF0108118U)	/* TOM0 Channel Status Register */
#define GTM_TOM0_CH5_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xF0108158U)	/* TOM0 Channel Status Register */
#define GTM_TOM0_CH6_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xF0108198U)	/* TOM0 Channel Status Register */
#define GTM_TOM0_CH7_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xF01081D8U)	/* TOM0 Channel Status Register */
#define GTM_TOM0_CH8_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xF0108218U)	/* TOM0 Channel Status Register */
#define GTM_TOM0_CH9_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xF0108258U)	/* TOM0 Channel Status Register */
#define GTM_TOM0_CH10_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xF0108298U)	/* TOM0 Channel Status Register */
#define GTM_TOM0_CH11_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xF01082D8U)	/* TOM0 Channel Status Register */
#define GTM_TOM0_CH12_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xF0108318U)	/* TOM0 Channel Status Register */
#define GTM_TOM0_CH13_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xF0108358U)	/* TOM0 Channel Status Register */
#define GTM_TOM0_CH14_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xF0108398U)	/* TOM0 Channel Status Register */
#define GTM_TOM0_CH15_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xF01083D8U)	/* TOM0 Channel Status Register */
#define GTM_TOM1_CH0_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xF0108818U)	/* TOM1 Channel Status Register */
#define GTM_TOM1_CH1_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xF0108858U)	/* TOM1 Channel Status Register */
#define GTM_TOM1_CH2_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xF0108898U)	/* TOM1 Channel Status Register */
#define GTM_TOM1_CH3_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xF01088D8U)	/* TOM1 Channel Status Register */
#define GTM_TOM1_CH4_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xF0108918U)	/* TOM1 Channel Status Register */
#define GTM_TOM1_CH5_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xF0108958U)	/* TOM1 Channel Status Register */
#define GTM_TOM1_CH6_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xF0108998U)	/* TOM1 Channel Status Register */
#define GTM_TOM1_CH7_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xF01089D8U)	/* TOM1 Channel Status Register */
#define GTM_TOM1_CH8_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xF0108A18U)	/* TOM1 Channel Status Register */
#define GTM_TOM1_CH9_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xF0108A58U)	/* TOM1 Channel Status Register */
#define GTM_TOM1_CH10_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xF0108A98U)	/* TOM1 Channel Status Register */
#define GTM_TOM1_CH11_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xF0108AD8U)	/* TOM1 Channel Status Register */
#define GTM_TOM1_CH12_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xF0108B18U)	/* TOM1 Channel Status Register */
#define GTM_TOM1_CH13_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xF0108B58U)	/* TOM1 Channel Status Register */
#define GTM_TOM1_CH14_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xF0108B98U)	/* TOM1 Channel Status Register */
#define GTM_TOM1_CH15_STAT	(*( GTM_TOM0_CH0_STAT_type *) 0xF0108BD8U)	/* TOM1 Channel Status Register */
#define GTM_TOM0_CH0_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xF010801CU)	/* TOM0 Channel 0 Interrupt Notification Register */
#define GTM_TOM0_CH1_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xF010805CU)	/* TOM0 Channel 1 Interrupt Notification Register */
#define GTM_TOM0_CH2_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xF010809CU)	/* TOM0 Channel 2 Interrupt Notification Register */
#define GTM_TOM0_CH3_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xF01080DCU)	/* TOM0 Channel 3 Interrupt Notification Register */
#define GTM_TOM0_CH4_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xF010811CU)	/* TOM0 Channel 4 Interrupt Notification Register */
#define GTM_TOM0_CH5_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xF010815CU)	/* TOM0 Channel 5 Interrupt Notification Register */
#define GTM_TOM0_CH6_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xF010819CU)	/* TOM0 Channel 6 Interrupt Notification Register */
#define GTM_TOM0_CH7_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xF01081DCU)	/* TOM0 Channel 7 Interrupt Notification Register */
#define GTM_TOM0_CH8_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xF010821CU)	/* TOM0 Channel 8 Interrupt Notification Register */
#define GTM_TOM0_CH9_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xF010825CU)	/* TOM0 Channel 9 Interrupt Notification Register */
#define GTM_TOM0_CH10_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xF010829CU)	/* TOM0 Channel 10 Interrupt Notification Register */
#define GTM_TOM0_CH11_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xF01082DCU)	/* TOM0 Channel 11 Interrupt Notification Register */
#define GTM_TOM0_CH12_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xF010831CU)	/* TOM0 Channel 12 Interrupt Notification Register */
#define GTM_TOM0_CH13_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xF010835CU)	/* TOM0 Channel 13 Interrupt Notification Register */
#define GTM_TOM0_CH14_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xF010839CU)	/* TOM0 Channel 14 Interrupt Notification Register */
#define GTM_TOM0_CH15_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xF01083DCU)	/* TOM0 Channel 15 Interrupt Notification Register */
#define GTM_TOM1_CH0_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xF010881CU)	/* TOM1 Channel 0 Interrupt Notification Register */
#define GTM_TOM1_CH1_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xF010885CU)	/* TOM1 Channel 1 Interrupt Notification Register */
#define GTM_TOM1_CH2_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xF010889CU)	/* TOM1 Channel 2 Interrupt Notification Register */
#define GTM_TOM1_CH3_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xF01088DCU)	/* TOM1 Channel 3 Interrupt Notification Register */
#define GTM_TOM1_CH4_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xF010891CU)	/* TOM1 Channel 4 Interrupt Notification Register */
#define GTM_TOM1_CH5_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xF010895CU)	/* TOM1 Channel 5 Interrupt Notification Register */
#define GTM_TOM1_CH6_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xF010899CU)	/* TOM1 Channel 6 Interrupt Notification Register */
#define GTM_TOM1_CH7_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xF01089DCU)	/* TOM1 Channel 7 Interrupt Notification Register */
#define GTM_TOM1_CH8_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xF0108A1CU)	/* TOM1 Channel 8 Interrupt Notification Register */
#define GTM_TOM1_CH9_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xF0108A5CU)	/* TOM1 Channel 9 Interrupt Notification Register */
#define GTM_TOM1_CH10_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xF0108A9CU)	/* TOM1 Channel 10 Interrupt Notification Register */
#define GTM_TOM1_CH11_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xF0108ADCU)	/* TOM1 Channel 11 Interrupt Notification Register */
#define GTM_TOM1_CH12_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xF0108B1CU)	/* TOM1 Channel 12 Interrupt Notification Register */
#define GTM_TOM1_CH13_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xF0108B5CU)	/* TOM1 Channel 13 Interrupt Notification Register */
#define GTM_TOM1_CH14_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xF0108B9CU)	/* TOM1 Channel 14 Interrupt Notification Register */
#define GTM_TOM1_CH15_IRQ_NOTIFY	(*( GTM_TOM0_CH0_IRQ_NOTIFY_type *) 0xF0108BDCU)	/* TOM1 Channel 15 Interrupt Notification Register */
#define GTM_TOM0_CH0_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xF0108020U)	/* TOM0 Channel 0 Interrupt Enable Register */
#define GTM_TOM0_CH1_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xF0108060U)	/* TOM0 Channel 1 Interrupt Enable Register */
#define GTM_TOM0_CH2_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xF01080A0U)	/* TOM0 Channel 2 Interrupt Enable Register */
#define GTM_TOM0_CH3_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xF01080E0U)	/* TOM0 Channel 3 Interrupt Enable Register */
#define GTM_TOM0_CH4_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xF0108120U)	/* TOM0 Channel 4 Interrupt Enable Register */
#define GTM_TOM0_CH5_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xF0108160U)	/* TOM0 Channel 5 Interrupt Enable Register */
#define GTM_TOM0_CH6_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xF01081A0U)	/* TOM0 Channel 6 Interrupt Enable Register */
#define GTM_TOM0_CH7_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xF01081E0U)	/* TOM0 Channel 7 Interrupt Enable Register */
#define GTM_TOM0_CH8_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xF0108220U)	/* TOM0 Channel 8 Interrupt Enable Register */
#define GTM_TOM0_CH9_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xF0108260U)	/* TOM0 Channel 9 Interrupt Enable Register */
#define GTM_TOM0_CH10_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xF01082A0U)	/* TOM0 Channel 10 Interrupt Enable Register */
#define GTM_TOM0_CH11_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xF01082E0U)	/* TOM0 Channel 11 Interrupt Enable Register */
#define GTM_TOM0_CH12_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xF0108320U)	/* TOM0 Channel 12 Interrupt Enable Register */
#define GTM_TOM0_CH13_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xF0108360U)	/* TOM0 Channel 13 Interrupt Enable Register */
#define GTM_TOM0_CH14_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xF01083A0U)	/* TOM0 Channel 14 Interrupt Enable Register */
#define GTM_TOM0_CH15_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xF01083E0U)	/* TOM0 Channel 15 Interrupt Enable Register */
#define GTM_TOM1_CH0_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xF0108820U)	/* TOM1 Channel 0 Interrupt Enable Register */
#define GTM_TOM1_CH1_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xF0108860U)	/* TOM1 Channel 1 Interrupt Enable Register */
#define GTM_TOM1_CH2_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xF01088A0U)	/* TOM1 Channel 2 Interrupt Enable Register */
#define GTM_TOM1_CH3_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xF01088E0U)	/* TOM1 Channel 3 Interrupt Enable Register */
#define GTM_TOM1_CH4_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xF0108920U)	/* TOM1 Channel 4 Interrupt Enable Register */
#define GTM_TOM1_CH5_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xF0108960U)	/* TOM1 Channel 5 Interrupt Enable Register */
#define GTM_TOM1_CH6_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xF01089A0U)	/* TOM1 Channel 6 Interrupt Enable Register */
#define GTM_TOM1_CH7_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xF01089E0U)	/* TOM1 Channel 7 Interrupt Enable Register */
#define GTM_TOM1_CH8_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xF0108A20U)	/* TOM1 Channel 8 Interrupt Enable Register */
#define GTM_TOM1_CH9_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xF0108A60U)	/* TOM1 Channel 9 Interrupt Enable Register */
#define GTM_TOM1_CH10_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xF0108AA0U)	/* TOM1 Channel 10 Interrupt Enable Register */
#define GTM_TOM1_CH11_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xF0108AE0U)	/* TOM1 Channel 11 Interrupt Enable Register */
#define GTM_TOM1_CH12_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xF0108B20U)	/* TOM1 Channel 12 Interrupt Enable Register */
#define GTM_TOM1_CH13_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xF0108B60U)	/* TOM1 Channel 13 Interrupt Enable Register */
#define GTM_TOM1_CH14_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xF0108BA0U)	/* TOM1 Channel 14 Interrupt Enable Register */
#define GTM_TOM1_CH15_IRQ_EN	(*( GTM_TOM0_CH0_IRQ_EN_type *) 0xF0108BE0U)	/* TOM1 Channel 15 Interrupt Enable Register */
#define GTM_TOM0_CH0_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xF0108024U)	/* TOM0 Channel 0 Software Interrupt Generation Register */
#define GTM_TOM0_CH1_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xF0108064U)	/* TOM0 Channel 1 Software Interrupt Generation Register */
#define GTM_TOM0_CH2_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xF01080A4U)	/* TOM0 Channel 2 Software Interrupt Generation Register */
#define GTM_TOM0_CH3_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xF01080E4U)	/* TOM0 Channel 3 Software Interrupt Generation Register */
#define GTM_TOM0_CH4_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xF0108124U)	/* TOM0 Channel 4 Software Interrupt Generation Register */
#define GTM_TOM0_CH5_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xF0108164U)	/* TOM0 Channel 5 Software Interrupt Generation Register */
#define GTM_TOM0_CH6_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xF01081A4U)	/* TOM0 Channel 6 Software Interrupt Generation Register */
#define GTM_TOM0_CH7_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xF01081E4U)	/* TOM0 Channel 7 Software Interrupt Generation Register */
#define GTM_TOM0_CH8_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xF0108224U)	/* TOM0 Channel 8 Software Interrupt Generation Register */
#define GTM_TOM0_CH9_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xF0108264U)	/* TOM0 Channel 9 Software Interrupt Generation Register */
#define GTM_TOM0_CH10_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xF01082A4U)	/* TOM0 Channel 10 Software Interrupt Generation Register */
#define GTM_TOM0_CH11_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xF01082E4U)	/* TOM0 Channel 11 Software Interrupt Generation Register */
#define GTM_TOM0_CH12_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xF0108324U)	/* TOM0 Channel 12 Software Interrupt Generation Register */
#define GTM_TOM0_CH13_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xF0108364U)	/* TOM0 Channel 13 Software Interrupt Generation Register */
#define GTM_TOM0_CH14_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xF01083A4U)	/* TOM0 Channel 14 Software Interrupt Generation Register */
#define GTM_TOM0_CH15_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xF01083E4U)	/* TOM0 Channel 15 Software Interrupt Generation Register */
#define GTM_TOM1_CH0_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xF0108824U)	/* TOM1 Channel 0 Software Interrupt Generation Register */
#define GTM_TOM1_CH1_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xF0108864U)	/* TOM1 Channel 1 Software Interrupt Generation Register */
#define GTM_TOM1_CH2_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xF01088A4U)	/* TOM1 Channel 2 Software Interrupt Generation Register */
#define GTM_TOM1_CH3_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xF01088E4U)	/* TOM1 Channel 3 Software Interrupt Generation Register */
#define GTM_TOM1_CH4_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xF0108924U)	/* TOM1 Channel 4 Software Interrupt Generation Register */
#define GTM_TOM1_CH5_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xF0108964U)	/* TOM1 Channel 5 Software Interrupt Generation Register */
#define GTM_TOM1_CH6_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xF01089A4U)	/* TOM1 Channel 6 Software Interrupt Generation Register */
#define GTM_TOM1_CH7_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xF01089E4U)	/* TOM1 Channel 7 Software Interrupt Generation Register */
#define GTM_TOM1_CH8_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xF0108A24U)	/* TOM1 Channel 8 Software Interrupt Generation Register */
#define GTM_TOM1_CH9_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xF0108A64U)	/* TOM1 Channel 9 Software Interrupt Generation Register */
#define GTM_TOM1_CH10_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xF0108AA4U)	/* TOM1 Channel 10 Software Interrupt Generation Register */
#define GTM_TOM1_CH11_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xF0108AE4U)	/* TOM1 Channel 11 Software Interrupt Generation Register */
#define GTM_TOM1_CH12_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xF0108B24U)	/* TOM1 Channel 12 Software Interrupt Generation Register */
#define GTM_TOM1_CH13_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xF0108B64U)	/* TOM1 Channel 13 Software Interrupt Generation Register */
#define GTM_TOM1_CH14_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xF0108BA4U)	/* TOM1 Channel 14 Software Interrupt Generation Register */
#define GTM_TOM1_CH15_IRQ_FORCINT	(*( GTM_TOM0_CH0_IRQ_FORCINT_type *) 0xF0108BE4U)	/* TOM1 Channel 15 Software Interrupt Generation Register */
#define GTM_TOM0_CH0_IRQ_MODE	(*( GTM_TIM0_CH0_IRQ_MODE_type *) 0xF0108028U)	/* TOM0 IRQ Mode Configuration Register */
#define GTM_TOM0_CH1_IRQ_MODE	(*( GTM_TIM0_CH0_IRQ_MODE_type *) 0xF0108068U)	/* TOM0 IRQ Mode Configuration Register */
#define GTM_TOM0_CH2_IRQ_MODE	(*( GTM_TIM0_CH0_IRQ_MODE_type *) 0xF01080A8U)	/* TOM0 IRQ Mode Configuration Register */
#define GTM_TOM0_CH3_IRQ_MODE	(*( GTM_TIM0_CH0_IRQ_MODE_type *) 0xF01080E8U)	/* TOM0 IRQ Mode Configuration Register */
#define GTM_TOM0_CH4_IRQ_MODE	(*( GTM_TIM0_CH0_IRQ_MODE_type *) 0xF0108128U)	/* TOM0 IRQ Mode Configuration Register */
#define GTM_TOM0_CH5_IRQ_MODE	(*( GTM_TIM0_CH0_IRQ_MODE_type *) 0xF0108168U)	/* TOM0 IRQ Mode Configuration Register */
#define GTM_TOM0_CH6_IRQ_MODE	(*( GTM_TIM0_CH0_IRQ_MODE_type *) 0xF01081A8U)	/* TOM0 IRQ Mode Configuration Register */
#define GTM_TOM0_CH7_IRQ_MODE	(*( GTM_TIM0_CH0_IRQ_MODE_type *) 0xF01081E8U)	/* TOM0 IRQ Mode Configuration Register */
#define GTM_TOM0_CH8_IRQ_MODE	(*( GTM_TIM0_CH0_IRQ_MODE_type *) 0xF0108228U)	/* TOM0 IRQ Mode Configuration Register */
#define GTM_TOM0_CH9_IRQ_MODE	(*( GTM_TIM0_CH0_IRQ_MODE_type *) 0xF0108268U)	/* TOM0 IRQ Mode Configuration Register */
#define GTM_TOM0_CH10_IRQ_MODE	(*( GTM_TIM0_CH0_IRQ_MODE_type *) 0xF01082A8U)	/* TOM0 IRQ Mode Configuration Register */
#define GTM_TOM0_CH11_IRQ_MODE	(*( GTM_TIM0_CH0_IRQ_MODE_type *) 0xF01082E8U)	/* TOM0 IRQ Mode Configuration Register */
#define GTM_TOM0_CH12_IRQ_MODE	(*( GTM_TIM0_CH0_IRQ_MODE_type *) 0xF0108328U)	/* TOM0 IRQ Mode Configuration Register */
#define GTM_TOM0_CH13_IRQ_MODE	(*( GTM_TIM0_CH0_IRQ_MODE_type *) 0xF0108368U)	/* TOM0 IRQ Mode Configuration Register */
#define GTM_TOM0_CH14_IRQ_MODE	(*( GTM_TIM0_CH0_IRQ_MODE_type *) 0xF01083A8U)	/* TOM0 IRQ Mode Configuration Register */
#define GTM_TOM0_CH15_IRQ_MODE	(*( GTM_TIM0_CH0_IRQ_MODE_type *) 0xF01083E8U)	/* TOM0 IRQ Mode Configuration Register */
#define GTM_TOM1_CH0_IRQ_MODE	(*( GTM_TIM0_CH0_IRQ_MODE_type *) 0xF0108828U)	/* TOM1 IRQ Mode Configuration Register */
#define GTM_TOM1_CH1_IRQ_MODE	(*( GTM_TIM0_CH0_IRQ_MODE_type *) 0xF0108868U)	/* TOM1 IRQ Mode Configuration Register */
#define GTM_TOM1_CH2_IRQ_MODE	(*( GTM_TIM0_CH0_IRQ_MODE_type *) 0xF01088A8U)	/* TOM1 IRQ Mode Configuration Register */
#define GTM_TOM1_CH3_IRQ_MODE	(*( GTM_TIM0_CH0_IRQ_MODE_type *) 0xF01088E8U)	/* TOM1 IRQ Mode Configuration Register */
#define GTM_TOM1_CH4_IRQ_MODE	(*( GTM_TIM0_CH0_IRQ_MODE_type *) 0xF0108928U)	/* TOM1 IRQ Mode Configuration Register */
#define GTM_TOM1_CH5_IRQ_MODE	(*( GTM_TIM0_CH0_IRQ_MODE_type *) 0xF0108968U)	/* TOM1 IRQ Mode Configuration Register */
#define GTM_TOM1_CH6_IRQ_MODE	(*( GTM_TIM0_CH0_IRQ_MODE_type *) 0xF01089A8U)	/* TOM1 IRQ Mode Configuration Register */
#define GTM_TOM1_CH7_IRQ_MODE	(*( GTM_TIM0_CH0_IRQ_MODE_type *) 0xF01089E8U)	/* TOM1 IRQ Mode Configuration Register */
#define GTM_TOM1_CH8_IRQ_MODE	(*( GTM_TIM0_CH0_IRQ_MODE_type *) 0xF0108A28U)	/* TOM1 IRQ Mode Configuration Register */
#define GTM_TOM1_CH9_IRQ_MODE	(*( GTM_TIM0_CH0_IRQ_MODE_type *) 0xF0108A68U)	/* TOM1 IRQ Mode Configuration Register */
#define GTM_TOM1_CH10_IRQ_MODE	(*( GTM_TIM0_CH0_IRQ_MODE_type *) 0xF0108AA8U)	/* TOM1 IRQ Mode Configuration Register */
#define GTM_TOM1_CH11_IRQ_MODE	(*( GTM_TIM0_CH0_IRQ_MODE_type *) 0xF0108AE8U)	/* TOM1 IRQ Mode Configuration Register */
#define GTM_TOM1_CH12_IRQ_MODE	(*( GTM_TIM0_CH0_IRQ_MODE_type *) 0xF0108B28U)	/* TOM1 IRQ Mode Configuration Register */
#define GTM_TOM1_CH13_IRQ_MODE	(*( GTM_TIM0_CH0_IRQ_MODE_type *) 0xF0108B68U)	/* TOM1 IRQ Mode Configuration Register */
#define GTM_TOM1_CH14_IRQ_MODE	(*( GTM_TIM0_CH0_IRQ_MODE_type *) 0xF0108BA8U)	/* TOM1 IRQ Mode Configuration Register */
#define GTM_TOM1_CH15_IRQ_MODE	(*( GTM_TIM0_CH0_IRQ_MODE_type *) 0xF0108BE8U)	/* TOM1 IRQ Mode Configuration Register */
#define GTM_DTM1_CTRL	(*( GTM_DTM1_CTRL_type *) 0xF0113040U)	/* DTM1 Control Register */
#define GTM_DTM5_CTRL	(*( GTM_DTM1_CTRL_type *) 0xF0113140U)	/* DTM5 Control Register */
#define GTM_DTM1_CH_CTRL1	(*( GTM_DTM1_CH_CTRL1_type *) 0xF0113044U)	/* DTM1 Channel Control1 Register */
#define GTM_DTM5_CH_CTRL1	(*( GTM_DTM1_CH_CTRL1_type *) 0xF0113144U)	/* DTM5 Channel Control1 Register */
#define GTM_DTM1_CH_CTRL2	(*( GTM_DTM1_CH_CTRL2_type *) 0xF0113048U)	/* DTM1 Channel Control2 Register */
#define GTM_DTM5_CH_CTRL2	(*( GTM_DTM1_CH_CTRL2_type *) 0xF0113148U)	/* DTM5 Channel Control2 Register */
#define GTM_DTM1_CH_CTRL2_SR	(*( GTM_DTM1_CH_CTRL2_SR_type *) 0xF011304CU)	/* DTM1 Channel Control2 Shadow Register */
#define GTM_DTM5_CH_CTRL2_SR	(*( GTM_DTM1_CH_CTRL2_SR_type *) 0xF011314CU)	/* DTM5 Channel Control2 Shadow Register */
#define GTM_DTM1_PS_CTRL	(*( GTM_DTM1_PS_CTRL_type *) 0xF0113050U)	/* DTM1 Phase Shift Control Register */
#define GTM_DTM5_PS_CTRL	(*( GTM_DTM1_PS_CTRL_type *) 0xF0113150U)	/* DTM5 Phase Shift Control Register */
#define GTM_DTM1_CH0_DTV	(*( GTM_DTM1_CH0_DTV_type *) 0xF0113054U)	/* DTM1 Channel0 Dead Time Value Register */
#define GTM_DTM1_CH1_DTV	(*( GTM_DTM1_CH0_DTV_type *) 0xF0113058U)	/* DTM1 Channel1 Dead Time Value Register */
#define GTM_DTM1_CH2_DTV	(*( GTM_DTM1_CH0_DTV_type *) 0xF011305CU)	/* DTM1 Channel2 Dead Time Value Register */
#define GTM_DTM1_CH3_DTV	(*( GTM_DTM1_CH0_DTV_type *) 0xF0113060U)	/* DTM1 Channel3 Dead Time Value Register */
#define GTM_DTM5_CH0_DTV	(*( GTM_DTM1_CH0_DTV_type *) 0xF0113154U)	/* DTM5 Channel0 Dead Time Value Register */
#define GTM_DTM5_CH1_DTV	(*( GTM_DTM1_CH0_DTV_type *) 0xF0113158U)	/* DTM5 Channel1 Dead Time Value Register */
#define GTM_DTM5_CH2_DTV	(*( GTM_DTM1_CH0_DTV_type *) 0xF011315CU)	/* DTM5 Channel2 Dead Time Value Register */
#define GTM_DTM5_CH3_DTV	(*( GTM_DTM1_CH0_DTV_type *) 0xF0113160U)	/* DTM5 Channel3 Dead Time Value Register */
#define GTM_ICM_IRQG_0	(*( GTM_ICM_IRQG_0_type *) 0xF0100600U)	/* GTM Infrastructure Interrupt Group */
#define GTM_ICM_IRQG_2	(*( GTM_ICM_IRQG_2_type *) 0xF0100608U)	/* TIM Interrupt Group 0 */
#define GTM_ICM_IRQG_6	(*( GTM_ICM_IRQG_6_type *) 0xF0100618U)	/* TOM Interrupt Group 0 */
#define GTM_ICM_IRQG_MEI	(*( GTM_ICM_IRQG_MEI_type *) 0xF0100630U)	/* ICM Module Error Interrupt Register */
#define GTM_ICM_IRQG_CEI1	(*( GTM_ICM_IRQG_CEI1_type *) 0xF0100638U)	/* ICM Channel Error Interrupt 1 Register */
#define GTM_CLC	(*( ASCLIN0_CLC_type *) 0xF019FD00U)	/* Clock Control Register */
#define GTM_OCS	(*( ASCLIN0_OCS_type *) 0xF019FDE8U)	/* OCDS Control and Status */
#define GTM_ACCEN0	(*( XBAR_ACCEN0_type *) 0xF019FDFCU)	/* Access Enable Register 0 */
#define GTM_ACCEN1	(*( XBAR_PRIOH0_type *) 0xF019FDF8U)	/* Access Enable Register 1 */
#define GTM_KRST0	(*( SMU_KRST0_type *) 0xF019FDF4U)	/* Kernel Reset Register 0 */
#define GTM_KRST1	(*( SMU_KRST1_type *) 0xF019FDF0U)	/* Kernel Reset Register 1 */
#define GTM_KRSTCLR	(*( SMU_KRSTCLR_type *) 0xF019FDECU)	/* Kernel Reset Status Clear Register */
#define GTM_TIM0INSEL	(*( GTM_TIM0INSEL_type *) 0xF019FD10U)	/* TIM0 Input Select Register */
#define GTM_TOUTSEL0	(*( GTM_TOUTSEL0_type *) 0xF019FD30U)	/* Timer Output Select Register */
#define GTM_TOUTSEL1	(*( GTM_TOUTSEL0_type *) 0xF019FD34U)	/* Timer Output Select Register */
#define GTM_TOUTSEL2	(*( GTM_TOUTSEL0_type *) 0xF019FD38U)	/* Timer Output Select Register */
#define GTM_TOUTSEL3	(*( GTM_TOUTSEL0_type *) 0xF019FD3CU)	/* Timer Output Select Register */
#define GTM_TOUTSEL4	(*( GTM_TOUTSEL0_type *) 0xF019FD40U)	/* Timer Output Select Register */
#define GTM_TOUTSEL5	(*( GTM_TOUTSEL0_type *) 0xF019FD44U)	/* Timer Output Select Register */
#define GTM_TOUTSEL6	(*( GTM_TOUTSEL0_type *) 0xF019FD48U)	/* Timer Output Select Register */
#define GTM_TOUTSEL7	(*( GTM_TOUTSEL0_type *) 0xF019FD4CU)	/* Timer Output Select Register */
#define GTM_ADCTRIG0OUT0	(*( GTM_ADCTRIG0OUT0_type *) 0xF019FDB0U)	/* ADC Trigger 0 Output Select 0 Register */
#define GTM_ADCTRIG1OUT0	(*( GTM_ADCTRIG0OUT0_type *) 0xF019FDB8U)	/* ADC Trigger 1 Output Select 0 Register */
#define GTM_CANOUTSEL	(*( GTM_CANOUTSEL_type *) 0xF019FDA0U)	/* CAN Output Select Register */
#define GTM_OTSS	(*( GTM_OTSS_type *) 0xF019FDD0U)	/* OCDS Trigger Set Select Register */
#define GTM_OTSC0	(*( GTM_OTSC0_type *) 0xF019FDD4U)	/* OCDS Trigger Set Control 0 Register */
#define GTM_ODA	(*( GTM_ODA_type *) 0xF019FDDCU)	/* OCDS Debug Access Register */
#define GTM_OTBU0T	(*( GTM_OTBU0T_type *) 0xF019FDC4U)	/* OCDS TBU0 Trigger Register */
#define GTM_OTBU1T	(*( GTM_OTBU1T_type *) 0xF019FDC8U)	/* OCDS TBU1 Trigger Register */
#define GTM_OTBU2T	(*( GTM_OTBU1T_type *) 0xF019FDCCU)	/* OCDS TBU2 Trigger Register */
#define VADC_ID	(*( VADC_ID_type *) 0xF0020008U)	/* Module Identification Register */
#define VADC_CLC	(*( ASCLIN0_CLC_type *) 0xF0020000U)	/* Clock Control Register */
#define VADC_OCS	(*( SMU_OCS_type *) 0xF0020028U)	/* OCDS Control and Status Register */
#define VADC_ACCEN0	(*( XBAR_ACCEN0_type *) 0xF002003CU)	/* Access Enable Register 0 */
#define VADC_KRST0	(*( SMU_KRST0_type *) 0xF0020034U)	/* Kernel Reset Register 0 */
#define VADC_KRST1	(*( SMU_KRST1_type *) 0xF0020030U)	/* Kernel Reset Register 1 */
#define VADC_KRSTCLR	(*( SMU_KRSTCLR_type *) 0xF002002CU)	/* Kernel Reset Status Clear Register */
#define VADC_GLOBCFG	(*( VADC_GLOBCFG_type *) 0xF0020080U)	/* Global Configuration Register */
#define VADC_G0CHASS	(*( VADC_G0CHASS_type *) 0xF0020488U)	/* Channel Assignment Register, Group 0 */
#define VADC_G1CHASS	(*( VADC_G0CHASS_type *) 0xF0020888U)	/* Channel Assignment Register, Group 1 */
#define VADC_G2CHASS	(*( VADC_G0CHASS_type *) 0xF0020C88U)	/* Channel Assignment Register, Group 2 */
#define VADC_G3CHASS	(*( VADC_G0CHASS_type *) 0xF0021088U)	/* Channel Assignment Register, Group 3 */
#define VADC_G0RRASS	(*( VADC_G0RRASS_type *) 0xF002048CU)	/* Result Assignment Register, Group 0 */
#define VADC_G1RRASS	(*( VADC_G0RRASS_type *) 0xF002088CU)	/* Result Assignment Register, Group 1 */
#define VADC_G2RRASS	(*( VADC_G0RRASS_type *) 0xF0020C8CU)	/* Result Assignment Register, Group 2 */
#define VADC_G3RRASS	(*( VADC_G0RRASS_type *) 0xF002108CU)	/* Result Assignment Register, Group 3 */
#define VADC_ACCPROT0	(*( VADC_ACCPROT0_type *) 0xF0020088U)	/* Access Protection Register */
#define VADC_ACCPROT1	(*( VADC_ACCPROT1_type *) 0xF002008CU)	/* Access Protection Register */
#define VADC_G0QCTRL0	(*( VADC_G0QCTRL0_type *) 0xF0020500U)	/* Queue 0 Source Control Register, Group 0 */
#define VADC_G1QCTRL0	(*( VADC_G0QCTRL0_type *) 0xF0020900U)	/* Queue 0 Source Control Register, Group 1 */
#define VADC_G2QCTRL0	(*( VADC_G0QCTRL0_type *) 0xF0020D00U)	/* Queue 0 Source Control Register, Group 2 */
#define VADC_G3QCTRL0	(*( VADC_G0QCTRL0_type *) 0xF0021100U)	/* Queue 0 Source Control Register, Group 3 */
#define VADC_G0QMR0	(*( VADC_G0QMR0_type *) 0xF0020504U)	/* Queue 0 Mode Register, Group 0 */
#define VADC_G1QMR0	(*( VADC_G0QMR0_type *) 0xF0020904U)	/* Queue 0 Mode Register, Group 1 */
#define VADC_G2QMR0	(*( VADC_G0QMR0_type *) 0xF0020D04U)	/* Queue 0 Mode Register, Group 2 */
#define VADC_G3QMR0	(*( VADC_G0QMR0_type *) 0xF0021104U)	/* Queue 0 Mode Register, Group 3 */
#define VADC_G0QSR0	(*( VADC_G0QSR0_type *) 0xF0020508U)	/* Queue 0 Status Register, Group 0 */
#define VADC_G1QSR0	(*( VADC_G0QSR0_type *) 0xF0020908U)	/* Queue 0 Status Register, Group 1 */
#define VADC_G2QSR0	(*( VADC_G0QSR0_type *) 0xF0020D08U)	/* Queue 0 Status Register, Group 2 */
#define VADC_G3QSR0	(*( VADC_G0QSR0_type *) 0xF0021108U)	/* Queue 0 Status Register, Group 3 */
#define VADC_G0QINR0	(*( VADC_G0QINR0_type *) 0xF0020510U)	/* Queue 0 Input Register, Group 0 */
#define VADC_G1QINR0	(*( VADC_G0QINR0_type *) 0xF0020910U)	/* Queue 0 Input Register, Group 1 */
#define VADC_G2QINR0	(*( VADC_G0QINR0_type *) 0xF0020D10U)	/* Queue 0 Input Register, Group 2 */
#define VADC_G3QINR0	(*( VADC_G0QINR0_type *) 0xF0021110U)	/* Queue 0 Input Register, Group 3 */
#define VADC_G0Q0R0	(*( VADC_G0Q0R0_type *) 0xF002050CU)	/* Queue 0 Register 0, Group 0 */
#define VADC_G1Q0R0	(*( VADC_G0Q0R0_type *) 0xF002090CU)	/* Queue 0 Register 0, Group 1 */
#define VADC_G2Q0R0	(*( VADC_G0Q0R0_type *) 0xF0020D0CU)	/* Queue 0 Register 0, Group 2 */
#define VADC_G3Q0R0	(*( VADC_G0Q0R0_type *) 0xF002110CU)	/* Queue 0 Register 0, Group 3 */
#define VADC_G0QBUR0	(*( VADC_G0Q0R0_type *) 0xF0020510U)	/* Queue 0 Backup Register, Group 0 */
#define VADC_G1QBUR0	(*( VADC_G0Q0R0_type *) 0xF0020910U)	/* Queue 0 Backup Register, Group 1 */
#define VADC_G2QBUR0	(*( VADC_G0Q0R0_type *) 0xF0020D10U)	/* Queue 0 Backup Register, Group 2 */
#define VADC_G3QBUR0	(*( VADC_G0Q0R0_type *) 0xF0021110U)	/* Queue 0 Backup Register, Group 3 */
#define VADC_G0QCTRL3	(*( VADC_G0QCTRL0_type *) 0xF0020540U)	/* Queue 3 Source Control Register, Group 0 */
#define VADC_G1QCTRL3	(*( VADC_G0QCTRL0_type *) 0xF0020940U)	/* Queue 3 Source Control Register, Group 1 */
#define VADC_G2QCTRL3	(*( VADC_G0QCTRL0_type *) 0xF0020D40U)	/* Queue 3 Source Control Register, Group 2 */
#define VADC_G3QCTRL3	(*( VADC_G0QCTRL0_type *) 0xF0021140U)	/* Queue 3 Source Control Register, Group 3 */
#define VADC_G0QMR3	(*( VADC_G0QMR0_type *) 0xF0020544U)	/* Queue 3 Mode Register, Group 0 */
#define VADC_G1QMR3	(*( VADC_G0QMR0_type *) 0xF0020944U)	/* Queue 3 Mode Register, Group 1 */
#define VADC_G2QMR3	(*( VADC_G0QMR0_type *) 0xF0020D44U)	/* Queue 3 Mode Register, Group 2 */
#define VADC_G3QMR3	(*( VADC_G0QMR0_type *) 0xF0021144U)	/* Queue 3 Mode Register, Group 3 */
#define VADC_G0QSR3	(*( VADC_G0QSR3_type *) 0xF0020548U)	/* Queue 3 Status Register, Group 0 */
#define VADC_G1QSR3	(*( VADC_G0QSR3_type *) 0xF0020948U)	/* Queue 3 Status Register, Group 1 */
#define VADC_G2QSR3	(*( VADC_G0QSR3_type *) 0xF0020D48U)	/* Queue 3 Status Register, Group 2 */
#define VADC_G3QSR3	(*( VADC_G0QSR3_type *) 0xF0021148U)	/* Queue 3 Status Register, Group 3 */
#define VADC_G0QINR3	(*( VADC_G0QINR3_type *) 0xF0020550U)	/* Queue 3 Input Register, Group 0 */
#define VADC_G1QINR3	(*( VADC_G0QINR3_type *) 0xF0020950U)	/* Queue 3 Input Register, Group 1 */
#define VADC_G2QINR3	(*( VADC_G0QINR3_type *) 0xF0020D50U)	/* Queue 3 Input Register, Group 2 */
#define VADC_G3QINR3	(*( VADC_G0QINR3_type *) 0xF0021150U)	/* Queue 3 Input Register, Group 3 */
#define VADC_G0Q0R3	(*( VADC_G0Q0R3_type *) 0xF002054CU)	/* Queue 3 Register 0, Group 0 */
#define VADC_G1Q0R3	(*( VADC_G0Q0R3_type *) 0xF002094CU)	/* Queue 3 Register 0, Group 1 */
#define VADC_G2Q0R3	(*( VADC_G0Q0R3_type *) 0xF0020D4CU)	/* Queue 3 Register 0, Group 2 */
#define VADC_G3Q0R3	(*( VADC_G0Q0R3_type *) 0xF002114CU)	/* Queue 3 Register 0, Group 3 */
#define VADC_G0QBUR3	(*( VADC_G0Q0R3_type *) 0xF0020550U)	/* Queue 3 Backup Register, Group 0 */
#define VADC_G1QBUR3	(*( VADC_G0Q0R3_type *) 0xF0020950U)	/* Queue 3 Backup Register, Group 1 */
#define VADC_G2QBUR3	(*( VADC_G0Q0R3_type *) 0xF0020D50U)	/* Queue 3 Backup Register, Group 2 */
#define VADC_G3QBUR3	(*( VADC_G0Q0R3_type *) 0xF0021150U)	/* Queue 3 Backup Register, Group 3 */
#define VADC_G0TRCTR	(*( VADC_G0TRCTR_type *) 0xF0020554U)	/* Trigger Control Register, Group 0 */
#define VADC_G1TRCTR	(*( VADC_G0TRCTR_type *) 0xF0020954U)	/* Trigger Control Register, Group 1 */
#define VADC_G2TRCTR	(*( VADC_G0TRCTR_type *) 0xF0020D54U)	/* Trigger Control Register, Group 2 */
#define VADC_G3TRCTR	(*( VADC_G0TRCTR_type *) 0xF0021154U)	/* Trigger Control Register, Group 3 */
#define VADC_G0ASCTRL	(*( VADC_G0QCTRL0_type *) 0xF0020520U)	/* Autoscan Source Control Register, Group 0 */
#define VADC_G1ASCTRL	(*( VADC_G0QCTRL0_type *) 0xF0020920U)	/* Autoscan Source Control Register, Group 1 */
#define VADC_G2ASCTRL	(*( VADC_G0QCTRL0_type *) 0xF0020D20U)	/* Autoscan Source Control Register, Group 2 */
#define VADC_G3ASCTRL	(*( VADC_G0QCTRL0_type *) 0xF0021120U)	/* Autoscan Source Control Register, Group 3 */
#define VADC_G0ASMR	(*( VADC_G0ASMR_type *) 0xF0020524U)	/* Autoscan Source Mode Register, Group 0 */
#define VADC_G1ASMR	(*( VADC_G0ASMR_type *) 0xF0020924U)	/* Autoscan Source Mode Register, Group 1 */
#define VADC_G2ASMR	(*( VADC_G0ASMR_type *) 0xF0020D24U)	/* Autoscan Source Mode Register, Group 2 */
#define VADC_G3ASMR	(*( VADC_G0ASMR_type *) 0xF0021124U)	/* Autoscan Source Mode Register, Group 3 */
#define VADC_G0ASSEL	(*( VADC_G0ASSEL_type *) 0xF0020528U)	/* Autoscan Source Channel Select Register, Group 0 */
#define VADC_G1ASSEL	(*( VADC_G0ASSEL_type *) 0xF0020928U)	/* Autoscan Source Channel Select Register, Group 1 */
#define VADC_G2ASSEL	(*( VADC_G0ASSEL_type *) 0xF0020D28U)	/* Autoscan Source Channel Select Register, Group 2 */
#define VADC_G3ASSEL	(*( VADC_G0ASSEL_type *) 0xF0021128U)	/* Autoscan Source Channel Select Register, Group 3 */
#define VADC_G0ASPND	(*( VADC_G0ASPND_type *) 0xF002052CU)	/* Autoscan Source Pending Register, Group 0 */
#define VADC_G1ASPND	(*( VADC_G0ASPND_type *) 0xF002092CU)	/* Autoscan Source Pending Register, Group 1 */
#define VADC_G2ASPND	(*( VADC_G0ASPND_type *) 0xF0020D2CU)	/* Autoscan Source Pending Register, Group 2 */
#define VADC_G3ASPND	(*( VADC_G0ASPND_type *) 0xF002112CU)	/* Autoscan Source Pending Register, Group 3 */
#define VADC_BRSCTRL	(*( VADC_BRSCTRL_type *) 0xF0020200U)	/* Background Request Source Control Register */
#define VADC_BRSMR	(*( VADC_G0ASMR_type *) 0xF0020204U)	/* Background Request Source Mode Register */
#define VADC_BRSSEL0	(*( VADC_BRSSEL0_type *) 0xF0020180U)	/* Background Request Source Channel Select Register, Group 0 */
#define VADC_BRSSEL1	(*( VADC_BRSSEL0_type *) 0xF0020184U)	/* Background Request Source Channel Select Register, Group 1 */
#define VADC_BRSSEL2	(*( VADC_BRSSEL0_type *) 0xF0020188U)	/* Background Request Source Channel Select Register, Group 2 */
#define VADC_BRSSEL3	(*( VADC_BRSSEL0_type *) 0xF002018CU)	/* Background Request Source Channel Select Register, Group 3 */
#define VADC_BRSPND0	(*( VADC_BRSPND0_type *) 0xF00201C0U)	/* Background Request Source Pending Register, Group 0 */
#define VADC_BRSPND1	(*( VADC_BRSPND0_type *) 0xF00201C4U)	/* Background Request Source Pending Register, Group 1 */
#define VADC_BRSPND2	(*( VADC_BRSPND0_type *) 0xF00201C8U)	/* Background Request Source Pending Register, Group 2 */
#define VADC_BRSPND3	(*( VADC_BRSPND0_type *) 0xF00201CCU)	/* Background Request Source Pending Register, Group 3 */
#define VADC_G0ARBCFG	(*( VADC_G0ARBCFG_type *) 0xF0020480U)	/* Arbitration Configuration Register, Group 0 */
#define VADC_G1ARBCFG	(*( VADC_G0ARBCFG_type *) 0xF0020880U)	/* Arbitration Configuration Register, Group 1 */
#define VADC_G2ARBCFG	(*( VADC_G0ARBCFG_type *) 0xF0020C80U)	/* Arbitration Configuration Register, Group 2 */
#define VADC_G3ARBCFG	(*( VADC_G0ARBCFG_type *) 0xF0021080U)	/* Arbitration Configuration Register, Group 3 */
#define VADC_G0ARBPR	(*( VADC_G0ARBPR_type *) 0xF0020484U)	/* Arbitration Priority Register, Group 0 */
#define VADC_G1ARBPR	(*( VADC_G0ARBPR_type *) 0xF0020884U)	/* Arbitration Priority Register, Group 1 */
#define VADC_G2ARBPR	(*( VADC_G0ARBPR_type *) 0xF0020C84U)	/* Arbitration Priority Register, Group 2 */
#define VADC_G3ARBPR	(*( VADC_G0ARBPR_type *) 0xF0021084U)	/* Arbitration Priority Register, Group 3 */
#define VADC_G0CHCTR0	(*( VADC_G0CHCTR0_type *) 0xF0020600U)	/* Group 0, Channel 0 Ctrl. Reg. */
#define VADC_G0CHCTR1	(*( VADC_G0CHCTR0_type *) 0xF0020604U)	/* Group 0, Channel 1 Ctrl. Reg. */
#define VADC_G0CHCTR2	(*( VADC_G0CHCTR0_type *) 0xF0020608U)	/* Group 0, Channel 2 Ctrl. Reg. */
#define VADC_G0CHCTR3	(*( VADC_G0CHCTR0_type *) 0xF002060CU)	/* Group 0, Channel 3 Ctrl. Reg. */
#define VADC_G0CHCTR4	(*( VADC_G0CHCTR0_type *) 0xF0020610U)	/* Group 0, Channel 4 Ctrl. Reg. */
#define VADC_G0CHCTR5	(*( VADC_G0CHCTR0_type *) 0xF0020614U)	/* Group 0, Channel 5 Ctrl. Reg. */
#define VADC_G0CHCTR6	(*( VADC_G0CHCTR0_type *) 0xF0020618U)	/* Group 0, Channel 6 Ctrl. Reg. */
#define VADC_G0CHCTR7	(*( VADC_G0CHCTR0_type *) 0xF002061CU)	/* Group 0, Channel 7 Ctrl. Reg. */
#define VADC_G0CHCTR8	(*( VADC_G0CHCTR0_type *) 0xF0020620U)	/* Group 0, Channel 8 Ctrl. Reg. */
#define VADC_G0CHCTR9	(*( VADC_G0CHCTR0_type *) 0xF0020624U)	/* Group 0, Channel 9 Ctrl. Reg. */
#define VADC_G0CHCTR10	(*( VADC_G0CHCTR0_type *) 0xF0020628U)	/* Group 0, Channel 10 Ctrl. Reg. */
#define VADC_G0CHCTR11	(*( VADC_G0CHCTR0_type *) 0xF002062CU)	/* Group 0, Channel 11 Ctrl. Reg. */
#define VADC_G1CHCTR0	(*( VADC_G0CHCTR0_type *) 0xF0020A00U)	/* Group 1, Channel 0 Ctrl. Reg. */
#define VADC_G1CHCTR1	(*( VADC_G0CHCTR0_type *) 0xF0020A04U)	/* Group 1, Channel 1 Ctrl. Reg. */
#define VADC_G1CHCTR2	(*( VADC_G0CHCTR0_type *) 0xF0020A08U)	/* Group 1, Channel 2 Ctrl. Reg. */
#define VADC_G1CHCTR3	(*( VADC_G0CHCTR0_type *) 0xF0020A0CU)	/* Group 1, Channel 3 Ctrl. Reg. */
#define VADC_G1CHCTR4	(*( VADC_G0CHCTR0_type *) 0xF0020A10U)	/* Group 1, Channel 4 Ctrl. Reg. */
#define VADC_G1CHCTR5	(*( VADC_G0CHCTR0_type *) 0xF0020A14U)	/* Group 1, Channel 5 Ctrl. Reg. */
#define VADC_G1CHCTR6	(*( VADC_G0CHCTR0_type *) 0xF0020A18U)	/* Group 1, Channel 6 Ctrl. Reg. */
#define VADC_G1CHCTR7	(*( VADC_G0CHCTR0_type *) 0xF0020A1CU)	/* Group 1, Channel 7 Ctrl. Reg. */
#define VADC_G1CHCTR8	(*( VADC_G0CHCTR0_type *) 0xF0020A20U)	/* Group 1, Channel 8 Ctrl. Reg. */
#define VADC_G1CHCTR9	(*( VADC_G0CHCTR0_type *) 0xF0020A24U)	/* Group 1, Channel 9 Ctrl. Reg. */
#define VADC_G1CHCTR10	(*( VADC_G0CHCTR0_type *) 0xF0020A28U)	/* Group 1, Channel 10 Ctrl. Reg. */
#define VADC_G1CHCTR11	(*( VADC_G0CHCTR0_type *) 0xF0020A2CU)	/* Group 1, Channel 11 Ctrl. Reg. */
#define VADC_G2CHCTR0	(*( VADC_G0CHCTR0_type *) 0xF0020E00U)	/* Group 2, Channel 0 Ctrl. Reg. */
#define VADC_G3CHCTR0	(*( VADC_G0CHCTR0_type *) 0xF0021200U)	/* Group 3, Channel 0 Ctrl. Reg. */
#define VADC_G0ICLASS0	(*( VADC_G0ICLASS0_type *) 0xF00204A0U)	/* Input Class Register 0, Group 0 */
#define VADC_G1ICLASS0	(*( VADC_G0ICLASS0_type *) 0xF00208A0U)	/* Input Class Register 0, Group 1 */
#define VADC_G2ICLASS0	(*( VADC_G0ICLASS0_type *) 0xF0020CA0U)	/* Input Class Register 0, Group 2 */
#define VADC_G3ICLASS0	(*( VADC_G0ICLASS0_type *) 0xF00210A0U)	/* Input Class Register 0, Group 3 */
#define VADC_G0ICLASS1	(*( VADC_G0ICLASS0_type *) 0xF00204A4U)	/* Input Class Register 1, Group 0 */
#define VADC_G1ICLASS1	(*( VADC_G0ICLASS0_type *) 0xF00208A4U)	/* Input Class Register 1, Group 1 */
#define VADC_G2ICLASS1	(*( VADC_G0ICLASS0_type *) 0xF0020CA4U)	/* Input Class Register 1, Group 2 */
#define VADC_G3ICLASS1	(*( VADC_G0ICLASS0_type *) 0xF00210A4U)	/* Input Class Register 1, Group 3 */
#define VADC_GLOBICLASS0	(*( VADC_G0ICLASS0_type *) 0xF00200A0U)	/* Input Class Register 0, Global */
#define VADC_GLOBICLASS1	(*( VADC_G0ICLASS0_type *) 0xF00200A4U)	/* Input Class Register 1, Global */
#define VADC_G0ALIAS	(*( VADC_G0ALIAS_type *) 0xF00204B0U)	/* Alias Register, Group 0 */
#define VADC_G1ALIAS	(*( VADC_G0ALIAS_type *) 0xF00208B0U)	/* Alias Register, Group 1 */
#define VADC_G2ALIAS	(*( VADC_G0ALIAS_type *) 0xF0020CB0U)	/* Alias Register, Group 2 */
#define VADC_G3ALIAS	(*( VADC_G0ALIAS_type *) 0xF00210B0U)	/* Alias Register, Group 3 */
#define VADC_G0BOUND	(*( VADC_G0BOUND_type *) 0xF00204B8U)	/* Boundary Select Register, Group 0 */
#define VADC_G1BOUND	(*( VADC_G0BOUND_type *) 0xF00208B8U)	/* Boundary Select Register, Group 1 */
#define VADC_G2BOUND	(*( VADC_G0BOUND_type *) 0xF0020CB8U)	/* Boundary Select Register, Group 2 */
#define VADC_G3BOUND	(*( VADC_G0BOUND_type *) 0xF00210B8U)	/* Boundary Select Register, Group 3 */
#define VADC_GLOBBOUND	(*( VADC_G0BOUND_type *) 0xF00200B8U)	/* Global Boundary Select Register */
#define VADC_G0BFL	(*( VADC_G0BFL_type *) 0xF00204C8U)	/* Boundary Flag Register, Group 0 */
#define VADC_G1BFL	(*( VADC_G0BFL_type *) 0xF00208C8U)	/* Boundary Flag Register, Group 1 */
#define VADC_G2BFL	(*( VADC_G0BFL_type *) 0xF0020CC8U)	/* Boundary Flag Register, Group 2 */
#define VADC_G3BFL	(*( VADC_G0BFL_type *) 0xF00210C8U)	/* Boundary Flag Register, Group 3 */
#define VADC_G0BFLS	(*( VADC_G0BFLS_type *) 0xF00204CCU)	/* Boundary Flag Software Register, Group 0 */
#define VADC_G1BFLS	(*( VADC_G0BFLS_type *) 0xF00208CCU)	/* Boundary Flag Software Register, Group 1 */
#define VADC_G2BFLS	(*( VADC_G0BFLS_type *) 0xF0020CCCU)	/* Boundary Flag Software Register, Group 2 */
#define VADC_G3BFLS	(*( VADC_G0BFLS_type *) 0xF00210CCU)	/* Boundary Flag Software Register, Group 3 */
#define VADC_G0BFLC	(*( VADC_G0BFLC_type *) 0xF00204D0U)	/* Boundary Flag Control Register, Group 0 */
#define VADC_G1BFLC	(*( VADC_G0BFLC_type *) 0xF00208D0U)	/* Boundary Flag Control Register, Group 1 */
#define VADC_G2BFLC	(*( VADC_G0BFLC_type *) 0xF0020CD0U)	/* Boundary Flag Control Register, Group 2 */
#define VADC_G3BFLC	(*( VADC_G0BFLC_type *) 0xF00210D0U)	/* Boundary Flag Control Register, Group 3 */
#define VADC_G0BFLNP	(*( VADC_G0BFLNP_type *) 0xF00204D4U)	/* Boundary Flag Node Pointer Register, Group 0 */
#define VADC_G1BFLNP	(*( VADC_G0BFLNP_type *) 0xF00208D4U)	/* Boundary Flag Node Pointer Register, Group 1 */
#define VADC_G2BFLNP	(*( VADC_G0BFLNP_type *) 0xF0020CD4U)	/* Boundary Flag Node Pointer Register, Group 2 */
#define VADC_G3BFLNP	(*( VADC_G0BFLNP_type *) 0xF00210D4U)	/* Boundary Flag Node Pointer Register, Group 3 */
#define VADC_G0RCR0	(*( VADC_G0RCR0_type *) 0xF0020680U)	/* Group 0 Result Control Reg. 0 */
#define VADC_G0RCR1	(*( VADC_G0RCR0_type *) 0xF0020684U)	/* Group 0 Result Control Reg. 1 */
#define VADC_G0RCR2	(*( VADC_G0RCR0_type *) 0xF0020688U)	/* Group 0 Result Control Reg. 2 */
#define VADC_G0RCR3	(*( VADC_G0RCR0_type *) 0xF002068CU)	/* Group 0 Result Control Reg. 3 */
#define VADC_G0RCR4	(*( VADC_G0RCR0_type *) 0xF0020690U)	/* Group 0 Result Control Reg. 4 */
#define VADC_G0RCR5	(*( VADC_G0RCR0_type *) 0xF0020694U)	/* Group 0 Result Control Reg. 5 */
#define VADC_G0RCR6	(*( VADC_G0RCR0_type *) 0xF0020698U)	/* Group 0 Result Control Reg. 6 */
#define VADC_G0RCR7	(*( VADC_G0RCR0_type *) 0xF002069CU)	/* Group 0 Result Control Reg. 7 */
#define VADC_G0RCR8	(*( VADC_G0RCR0_type *) 0xF00206A0U)	/* Group 0 Result Control Reg. 8 */
#define VADC_G0RCR9	(*( VADC_G0RCR0_type *) 0xF00206A4U)	/* Group 0 Result Control Reg. 9 */
#define VADC_G0RCR10	(*( VADC_G0RCR0_type *) 0xF00206A8U)	/* Group 0 Result Control Reg. 10 */
#define VADC_G0RCR11	(*( VADC_G0RCR0_type *) 0xF00206ACU)	/* Group 0 Result Control Reg. 11 */
#define VADC_G0RCR12	(*( VADC_G0RCR0_type *) 0xF00206B0U)	/* Group 0 Result Control Reg. 12 */
#define VADC_G0RCR13	(*( VADC_G0RCR0_type *) 0xF00206B4U)	/* Group 0 Result Control Reg. 13 */
#define VADC_G0RCR14	(*( VADC_G0RCR0_type *) 0xF00206B8U)	/* Group 0 Result Control Reg. 14 */
#define VADC_G0RCR15	(*( VADC_G0RCR0_type *) 0xF00206BCU)	/* Group 0 Result Control Reg. 15 */
#define VADC_G1RCR0	(*( VADC_G0RCR0_type *) 0xF0020A80U)	/* Group 1 Result Control Reg. 0 */
#define VADC_G1RCR1	(*( VADC_G0RCR0_type *) 0xF0020A84U)	/* Group 1 Result Control Reg. 1 */
#define VADC_G1RCR2	(*( VADC_G0RCR0_type *) 0xF0020A88U)	/* Group 1 Result Control Reg. 2 */
#define VADC_G1RCR3	(*( VADC_G0RCR0_type *) 0xF0020A8CU)	/* Group 1 Result Control Reg. 3 */
#define VADC_G1RCR4	(*( VADC_G0RCR0_type *) 0xF0020A90U)	/* Group 1 Result Control Reg. 4 */
#define VADC_G1RCR5	(*( VADC_G0RCR0_type *) 0xF0020A94U)	/* Group 1 Result Control Reg. 5 */
#define VADC_G1RCR6	(*( VADC_G0RCR0_type *) 0xF0020A98U)	/* Group 1 Result Control Reg. 6 */
#define VADC_G1RCR7	(*( VADC_G0RCR0_type *) 0xF0020A9CU)	/* Group 1 Result Control Reg. 7 */
#define VADC_G1RCR8	(*( VADC_G0RCR0_type *) 0xF0020AA0U)	/* Group 1 Result Control Reg. 8 */
#define VADC_G1RCR9	(*( VADC_G0RCR0_type *) 0xF0020AA4U)	/* Group 1 Result Control Reg. 9 */
#define VADC_G1RCR10	(*( VADC_G0RCR0_type *) 0xF0020AA8U)	/* Group 1 Result Control Reg. 10 */
#define VADC_G1RCR11	(*( VADC_G0RCR0_type *) 0xF0020AACU)	/* Group 1 Result Control Reg. 11 */
#define VADC_G1RCR12	(*( VADC_G0RCR0_type *) 0xF0020AB0U)	/* Group 1 Result Control Reg. 12 */
#define VADC_G1RCR13	(*( VADC_G0RCR0_type *) 0xF0020AB4U)	/* Group 1 Result Control Reg. 13 */
#define VADC_G1RCR14	(*( VADC_G0RCR0_type *) 0xF0020AB8U)	/* Group 1 Result Control Reg. 14 */
#define VADC_G1RCR15	(*( VADC_G0RCR0_type *) 0xF0020ABCU)	/* Group 1 Result Control Reg. 15 */
#define VADC_G2RCR0	(*( VADC_G0RCR0_type *) 0xF0020E80U)	/* Group 2 Result Control Reg. 0 */
#define VADC_G2RCR1	(*( VADC_G0RCR0_type *) 0xF0020E84U)	/* Group 2 Result Control Reg. 1 */
#define VADC_G2RCR2	(*( VADC_G0RCR0_type *) 0xF0020E88U)	/* Group 2 Result Control Reg. 2 */
#define VADC_G2RCR3	(*( VADC_G0RCR0_type *) 0xF0020E8CU)	/* Group 2 Result Control Reg. 3 */
#define VADC_G2RCR4	(*( VADC_G0RCR0_type *) 0xF0020E90U)	/* Group 2 Result Control Reg. 4 */
#define VADC_G2RCR5	(*( VADC_G0RCR0_type *) 0xF0020E94U)	/* Group 2 Result Control Reg. 5 */
#define VADC_G2RCR6	(*( VADC_G0RCR0_type *) 0xF0020E98U)	/* Group 2 Result Control Reg. 6 */
#define VADC_G2RCR7	(*( VADC_G0RCR0_type *) 0xF0020E9CU)	/* Group 2 Result Control Reg. 7 */
#define VADC_G2RCR8	(*( VADC_G0RCR0_type *) 0xF0020EA0U)	/* Group 2 Result Control Reg. 8 */
#define VADC_G2RCR9	(*( VADC_G0RCR0_type *) 0xF0020EA4U)	/* Group 2 Result Control Reg. 9 */
#define VADC_G2RCR10	(*( VADC_G0RCR0_type *) 0xF0020EA8U)	/* Group 2 Result Control Reg. 10 */
#define VADC_G2RCR11	(*( VADC_G0RCR0_type *) 0xF0020EACU)	/* Group 2 Result Control Reg. 11 */
#define VADC_G2RCR12	(*( VADC_G0RCR0_type *) 0xF0020EB0U)	/* Group 2 Result Control Reg. 12 */
#define VADC_G2RCR13	(*( VADC_G0RCR0_type *) 0xF0020EB4U)	/* Group 2 Result Control Reg. 13 */
#define VADC_G2RCR14	(*( VADC_G0RCR0_type *) 0xF0020EB8U)	/* Group 2 Result Control Reg. 14 */
#define VADC_G2RCR15	(*( VADC_G0RCR0_type *) 0xF0020EBCU)	/* Group 2 Result Control Reg. 15 */
#define VADC_G3RCR0	(*( VADC_G0RCR0_type *) 0xF0021280U)	/* Group 3 Result Control Reg. 0 */
#define VADC_G3RCR1	(*( VADC_G0RCR0_type *) 0xF0021284U)	/* Group 3 Result Control Reg. 1 */
#define VADC_G3RCR2	(*( VADC_G0RCR0_type *) 0xF0021288U)	/* Group 3 Result Control Reg. 2 */
#define VADC_G3RCR3	(*( VADC_G0RCR0_type *) 0xF002128CU)	/* Group 3 Result Control Reg. 3 */
#define VADC_G3RCR4	(*( VADC_G0RCR0_type *) 0xF0021290U)	/* Group 3 Result Control Reg. 4 */
#define VADC_G3RCR5	(*( VADC_G0RCR0_type *) 0xF0021294U)	/* Group 3 Result Control Reg. 5 */
#define VADC_G3RCR6	(*( VADC_G0RCR0_type *) 0xF0021298U)	/* Group 3 Result Control Reg. 6 */
#define VADC_G3RCR7	(*( VADC_G0RCR0_type *) 0xF002129CU)	/* Group 3 Result Control Reg. 7 */
#define VADC_G3RCR8	(*( VADC_G0RCR0_type *) 0xF00212A0U)	/* Group 3 Result Control Reg. 8 */
#define VADC_G3RCR9	(*( VADC_G0RCR0_type *) 0xF00212A4U)	/* Group 3 Result Control Reg. 9 */
#define VADC_G3RCR10	(*( VADC_G0RCR0_type *) 0xF00212A8U)	/* Group 3 Result Control Reg. 10 */
#define VADC_G3RCR11	(*( VADC_G0RCR0_type *) 0xF00212ACU)	/* Group 3 Result Control Reg. 11 */
#define VADC_G3RCR12	(*( VADC_G0RCR0_type *) 0xF00212B0U)	/* Group 3 Result Control Reg. 12 */
#define VADC_G3RCR13	(*( VADC_G0RCR0_type *) 0xF00212B4U)	/* Group 3 Result Control Reg. 13 */
#define VADC_G3RCR14	(*( VADC_G0RCR0_type *) 0xF00212B8U)	/* Group 3 Result Control Reg. 14 */
#define VADC_G3RCR15	(*( VADC_G0RCR0_type *) 0xF00212BCU)	/* Group 3 Result Control Reg. 15 */
#define VADC_G0RES0	(*( VADC_G0RES0_type *) 0xF0020700U)	/* Group 0 Result Register 0 */
#define VADC_G0RES1	(*( VADC_G0RES0_type *) 0xF0020704U)	/* Group 0 Result Register 1 */
#define VADC_G0RES2	(*( VADC_G0RES0_type *) 0xF0020708U)	/* Group 0 Result Register 2 */
#define VADC_G0RES3	(*( VADC_G0RES0_type *) 0xF002070CU)	/* Group 0 Result Register 3 */
#define VADC_G0RES4	(*( VADC_G0RES0_type *) 0xF0020710U)	/* Group 0 Result Register 4 */
#define VADC_G0RES5	(*( VADC_G0RES0_type *) 0xF0020714U)	/* Group 0 Result Register 5 */
#define VADC_G0RES6	(*( VADC_G0RES0_type *) 0xF0020718U)	/* Group 0 Result Register 6 */
#define VADC_G0RES7	(*( VADC_G0RES0_type *) 0xF002071CU)	/* Group 0 Result Register 7 */
#define VADC_G0RES8	(*( VADC_G0RES0_type *) 0xF0020720U)	/* Group 0 Result Register 8 */
#define VADC_G0RES9	(*( VADC_G0RES0_type *) 0xF0020724U)	/* Group 0 Result Register 9 */
#define VADC_G0RES10	(*( VADC_G0RES0_type *) 0xF0020728U)	/* Group 0 Result Register 10 */
#define VADC_G0RES11	(*( VADC_G0RES0_type *) 0xF002072CU)	/* Group 0 Result Register 11 */
#define VADC_G0RES12	(*( VADC_G0RES0_type *) 0xF0020730U)	/* Group 0 Result Register 12 */
#define VADC_G0RES13	(*( VADC_G0RES0_type *) 0xF0020734U)	/* Group 0 Result Register 13 */
#define VADC_G0RES14	(*( VADC_G0RES0_type *) 0xF0020738U)	/* Group 0 Result Register 14 */
#define VADC_G0RES15	(*( VADC_G0RES0_type *) 0xF002073CU)	/* Group 0 Result Register 15 */
#define VADC_G1RES0	(*( VADC_G0RES0_type *) 0xF0020B00U)	/* Group 1 Result Register 0 */
#define VADC_G1RES1	(*( VADC_G0RES0_type *) 0xF0020B04U)	/* Group 1 Result Register 1 */
#define VADC_G1RES2	(*( VADC_G0RES0_type *) 0xF0020B08U)	/* Group 1 Result Register 2 */
#define VADC_G1RES3	(*( VADC_G0RES0_type *) 0xF0020B0CU)	/* Group 1 Result Register 3 */
#define VADC_G1RES4	(*( VADC_G0RES0_type *) 0xF0020B10U)	/* Group 1 Result Register 4 */
#define VADC_G1RES5	(*( VADC_G0RES0_type *) 0xF0020B14U)	/* Group 1 Result Register 5 */
#define VADC_G1RES6	(*( VADC_G0RES0_type *) 0xF0020B18U)	/* Group 1 Result Register 6 */
#define VADC_G1RES7	(*( VADC_G0RES0_type *) 0xF0020B1CU)	/* Group 1 Result Register 7 */
#define VADC_G1RES8	(*( VADC_G0RES0_type *) 0xF0020B20U)	/* Group 1 Result Register 8 */
#define VADC_G1RES9	(*( VADC_G0RES0_type *) 0xF0020B24U)	/* Group 1 Result Register 9 */
#define VADC_G1RES10	(*( VADC_G0RES0_type *) 0xF0020B28U)	/* Group 1 Result Register 10 */
#define VADC_G1RES11	(*( VADC_G0RES0_type *) 0xF0020B2CU)	/* Group 1 Result Register 11 */
#define VADC_G1RES12	(*( VADC_G0RES0_type *) 0xF0020B30U)	/* Group 1 Result Register 12 */
#define VADC_G1RES13	(*( VADC_G0RES0_type *) 0xF0020B34U)	/* Group 1 Result Register 13 */
#define VADC_G1RES14	(*( VADC_G0RES0_type *) 0xF0020B38U)	/* Group 1 Result Register 14 */
#define VADC_G1RES15	(*( VADC_G0RES0_type *) 0xF0020B3CU)	/* Group 1 Result Register 15 */
#define VADC_G2RES0	(*( VADC_G0RES0_type *) 0xF0020F00U)	/* Group 2 Result Register 0 */
#define VADC_G2RES1	(*( VADC_G0RES0_type *) 0xF0020F04U)	/* Group 2 Result Register 1 */
#define VADC_G2RES2	(*( VADC_G0RES0_type *) 0xF0020F08U)	/* Group 2 Result Register 2 */
#define VADC_G2RES3	(*( VADC_G0RES0_type *) 0xF0020F0CU)	/* Group 2 Result Register 3 */
#define VADC_G2RES4	(*( VADC_G0RES0_type *) 0xF0020F10U)	/* Group 2 Result Register 4 */
#define VADC_G2RES5	(*( VADC_G0RES0_type *) 0xF0020F14U)	/* Group 2 Result Register 5 */
#define VADC_G2RES6	(*( VADC_G0RES0_type *) 0xF0020F18U)	/* Group 2 Result Register 6 */
#define VADC_G2RES7	(*( VADC_G0RES0_type *) 0xF0020F1CU)	/* Group 2 Result Register 7 */
#define VADC_G2RES8	(*( VADC_G0RES0_type *) 0xF0020F20U)	/* Group 2 Result Register 8 */
#define VADC_G2RES9	(*( VADC_G0RES0_type *) 0xF0020F24U)	/* Group 2 Result Register 9 */
#define VADC_G2RES10	(*( VADC_G0RES0_type *) 0xF0020F28U)	/* Group 2 Result Register 10 */
#define VADC_G2RES11	(*( VADC_G0RES0_type *) 0xF0020F2CU)	/* Group 2 Result Register 11 */
#define VADC_G2RES12	(*( VADC_G0RES0_type *) 0xF0020F30U)	/* Group 2 Result Register 12 */
#define VADC_G2RES13	(*( VADC_G0RES0_type *) 0xF0020F34U)	/* Group 2 Result Register 13 */
#define VADC_G2RES14	(*( VADC_G0RES0_type *) 0xF0020F38U)	/* Group 2 Result Register 14 */
#define VADC_G2RES15	(*( VADC_G0RES0_type *) 0xF0020F3CU)	/* Group 2 Result Register 15 */
#define VADC_G3RES0	(*( VADC_G0RES0_type *) 0xF0021300U)	/* Group 3 Result Register 0 */
#define VADC_G3RES1	(*( VADC_G0RES0_type *) 0xF0021304U)	/* Group 3 Result Register 1 */
#define VADC_G3RES2	(*( VADC_G0RES0_type *) 0xF0021308U)	/* Group 3 Result Register 2 */
#define VADC_G3RES3	(*( VADC_G0RES0_type *) 0xF002130CU)	/* Group 3 Result Register 3 */
#define VADC_G3RES4	(*( VADC_G0RES0_type *) 0xF0021310U)	/* Group 3 Result Register 4 */
#define VADC_G3RES5	(*( VADC_G0RES0_type *) 0xF0021314U)	/* Group 3 Result Register 5 */
#define VADC_G3RES6	(*( VADC_G0RES0_type *) 0xF0021318U)	/* Group 3 Result Register 6 */
#define VADC_G3RES7	(*( VADC_G0RES0_type *) 0xF002131CU)	/* Group 3 Result Register 7 */
#define VADC_G3RES8	(*( VADC_G0RES0_type *) 0xF0021320U)	/* Group 3 Result Register 8 */
#define VADC_G3RES9	(*( VADC_G0RES0_type *) 0xF0021324U)	/* Group 3 Result Register 9 */
#define VADC_G3RES10	(*( VADC_G0RES0_type *) 0xF0021328U)	/* Group 3 Result Register 10 */
#define VADC_G3RES11	(*( VADC_G0RES0_type *) 0xF002132CU)	/* Group 3 Result Register 11 */
#define VADC_G3RES12	(*( VADC_G0RES0_type *) 0xF0021330U)	/* Group 3 Result Register 12 */
#define VADC_G3RES13	(*( VADC_G0RES0_type *) 0xF0021334U)	/* Group 3 Result Register 13 */
#define VADC_G3RES14	(*( VADC_G0RES0_type *) 0xF0021338U)	/* Group 3 Result Register 14 */
#define VADC_G3RES15	(*( VADC_G0RES0_type *) 0xF002133CU)	/* Group 3 Result Register 15 */
#define VADC_G0RESD0	(*( VADC_G0RES0_type *) 0xF0020780U)	/* Group 0 Result Reg. 0, Debug */
#define VADC_G0RESD1	(*( VADC_G0RES0_type *) 0xF0020784U)	/* Group 0 Result Reg. 1, Debug */
#define VADC_G0RESD2	(*( VADC_G0RES0_type *) 0xF0020788U)	/* Group 0 Result Reg. 2, Debug */
#define VADC_G0RESD3	(*( VADC_G0RES0_type *) 0xF002078CU)	/* Group 0 Result Reg. 3, Debug */
#define VADC_G0RESD4	(*( VADC_G0RES0_type *) 0xF0020790U)	/* Group 0 Result Reg. 4, Debug */
#define VADC_G0RESD5	(*( VADC_G0RES0_type *) 0xF0020794U)	/* Group 0 Result Reg. 5, Debug */
#define VADC_G0RESD6	(*( VADC_G0RES0_type *) 0xF0020798U)	/* Group 0 Result Reg. 6, Debug */
#define VADC_G0RESD7	(*( VADC_G0RES0_type *) 0xF002079CU)	/* Group 0 Result Reg. 7, Debug */
#define VADC_G0RESD8	(*( VADC_G0RES0_type *) 0xF00207A0U)	/* Group 0 Result Reg. 8, Debug */
#define VADC_G0RESD9	(*( VADC_G0RES0_type *) 0xF00207A4U)	/* Group 0 Result Reg. 9, Debug */
#define VADC_G0RESD10	(*( VADC_G0RES0_type *) 0xF00207A8U)	/* Group 0 Result Reg. 10, Debug */
#define VADC_G0RESD11	(*( VADC_G0RES0_type *) 0xF00207ACU)	/* Group 0 Result Reg. 11, Debug */
#define VADC_G0RESD12	(*( VADC_G0RES0_type *) 0xF00207B0U)	/* Group 0 Result Reg. 12, Debug */
#define VADC_G0RESD13	(*( VADC_G0RES0_type *) 0xF00207B4U)	/* Group 0 Result Reg. 13, Debug */
#define VADC_G0RESD14	(*( VADC_G0RES0_type *) 0xF00207B8U)	/* Group 0 Result Reg. 14, Debug */
#define VADC_G0RESD15	(*( VADC_G0RES0_type *) 0xF00207BCU)	/* Group 0 Result Reg. 15, Debug */
#define VADC_G1RESD0	(*( VADC_G0RES0_type *) 0xF0020B80U)	/* Group 1 Result Reg. 0, Debug */
#define VADC_G1RESD1	(*( VADC_G0RES0_type *) 0xF0020B84U)	/* Group 1 Result Reg. 1, Debug */
#define VADC_G1RESD2	(*( VADC_G0RES0_type *) 0xF0020B88U)	/* Group 1 Result Reg. 2, Debug */
#define VADC_G1RESD3	(*( VADC_G0RES0_type *) 0xF0020B8CU)	/* Group 1 Result Reg. 3, Debug */
#define VADC_G1RESD4	(*( VADC_G0RES0_type *) 0xF0020B90U)	/* Group 1 Result Reg. 4, Debug */
#define VADC_G1RESD5	(*( VADC_G0RES0_type *) 0xF0020B94U)	/* Group 1 Result Reg. 5, Debug */
#define VADC_G1RESD6	(*( VADC_G0RES0_type *) 0xF0020B98U)	/* Group 1 Result Reg. 6, Debug */
#define VADC_G1RESD7	(*( VADC_G0RES0_type *) 0xF0020B9CU)	/* Group 1 Result Reg. 7, Debug */
#define VADC_G1RESD8	(*( VADC_G0RES0_type *) 0xF0020BA0U)	/* Group 1 Result Reg. 8, Debug */
#define VADC_G1RESD9	(*( VADC_G0RES0_type *) 0xF0020BA4U)	/* Group 1 Result Reg. 9, Debug */
#define VADC_G1RESD10	(*( VADC_G0RES0_type *) 0xF0020BA8U)	/* Group 1 Result Reg. 10, Debug */
#define VADC_G1RESD11	(*( VADC_G0RES0_type *) 0xF0020BACU)	/* Group 1 Result Reg. 11, Debug */
#define VADC_G1RESD12	(*( VADC_G0RES0_type *) 0xF0020BB0U)	/* Group 1 Result Reg. 12, Debug */
#define VADC_G1RESD13	(*( VADC_G0RES0_type *) 0xF0020BB4U)	/* Group 1 Result Reg. 13, Debug */
#define VADC_G1RESD14	(*( VADC_G0RES0_type *) 0xF0020BB8U)	/* Group 1 Result Reg. 14, Debug */
#define VADC_G1RESD15	(*( VADC_G0RES0_type *) 0xF0020BBCU)	/* Group 1 Result Reg. 15, Debug */
#define VADC_G2RESD0	(*( VADC_G0RES0_type *) 0xF0020F80U)	/* Group 2 Result Reg. 0, Debug */
#define VADC_G2RESD1	(*( VADC_G0RES0_type *) 0xF0020F84U)	/* Group 2 Result Reg. 1, Debug */
#define VADC_G2RESD2	(*( VADC_G0RES0_type *) 0xF0020F88U)	/* Group 2 Result Reg. 2, Debug */
#define VADC_G2RESD3	(*( VADC_G0RES0_type *) 0xF0020F8CU)	/* Group 2 Result Reg. 3, Debug */
#define VADC_G2RESD4	(*( VADC_G0RES0_type *) 0xF0020F90U)	/* Group 2 Result Reg. 4, Debug */
#define VADC_G2RESD5	(*( VADC_G0RES0_type *) 0xF0020F94U)	/* Group 2 Result Reg. 5, Debug */
#define VADC_G2RESD6	(*( VADC_G0RES0_type *) 0xF0020F98U)	/* Group 2 Result Reg. 6, Debug */
#define VADC_G2RESD7	(*( VADC_G0RES0_type *) 0xF0020F9CU)	/* Group 2 Result Reg. 7, Debug */
#define VADC_G2RESD8	(*( VADC_G0RES0_type *) 0xF0020FA0U)	/* Group 2 Result Reg. 8, Debug */
#define VADC_G2RESD9	(*( VADC_G0RES0_type *) 0xF0020FA4U)	/* Group 2 Result Reg. 9, Debug */
#define VADC_G2RESD10	(*( VADC_G0RES0_type *) 0xF0020FA8U)	/* Group 2 Result Reg. 10, Debug */
#define VADC_G2RESD11	(*( VADC_G0RES0_type *) 0xF0020FACU)	/* Group 2 Result Reg. 11, Debug */
#define VADC_G2RESD12	(*( VADC_G0RES0_type *) 0xF0020FB0U)	/* Group 2 Result Reg. 12, Debug */
#define VADC_G2RESD13	(*( VADC_G0RES0_type *) 0xF0020FB4U)	/* Group 2 Result Reg. 13, Debug */
#define VADC_G2RESD14	(*( VADC_G0RES0_type *) 0xF0020FB8U)	/* Group 2 Result Reg. 14, Debug */
#define VADC_G2RESD15	(*( VADC_G0RES0_type *) 0xF0020FBCU)	/* Group 2 Result Reg. 15, Debug */
#define VADC_G3RESD0	(*( VADC_G0RES0_type *) 0xF0021380U)	/* Group 3 Result Reg. 0, Debug */
#define VADC_G3RESD1	(*( VADC_G0RES0_type *) 0xF0021384U)	/* Group 3 Result Reg. 1, Debug */
#define VADC_G3RESD2	(*( VADC_G0RES0_type *) 0xF0021388U)	/* Group 3 Result Reg. 2, Debug */
#define VADC_G3RESD3	(*( VADC_G0RES0_type *) 0xF002138CU)	/* Group 3 Result Reg. 3, Debug */
#define VADC_G3RESD4	(*( VADC_G0RES0_type *) 0xF0021390U)	/* Group 3 Result Reg. 4, Debug */
#define VADC_G3RESD5	(*( VADC_G0RES0_type *) 0xF0021394U)	/* Group 3 Result Reg. 5, Debug */
#define VADC_G3RESD6	(*( VADC_G0RES0_type *) 0xF0021398U)	/* Group 3 Result Reg. 6, Debug */
#define VADC_G3RESD7	(*( VADC_G0RES0_type *) 0xF002139CU)	/* Group 3 Result Reg. 7, Debug */
#define VADC_G3RESD8	(*( VADC_G0RES0_type *) 0xF00213A0U)	/* Group 3 Result Reg. 8, Debug */
#define VADC_G3RESD9	(*( VADC_G0RES0_type *) 0xF00213A4U)	/* Group 3 Result Reg. 9, Debug */
#define VADC_G3RESD10	(*( VADC_G0RES0_type *) 0xF00213A8U)	/* Group 3 Result Reg. 10, Debug */
#define VADC_G3RESD11	(*( VADC_G0RES0_type *) 0xF00213ACU)	/* Group 3 Result Reg. 11, Debug */
#define VADC_G3RESD12	(*( VADC_G0RES0_type *) 0xF00213B0U)	/* Group 3 Result Reg. 12, Debug */
#define VADC_G3RESD13	(*( VADC_G0RES0_type *) 0xF00213B4U)	/* Group 3 Result Reg. 13, Debug */
#define VADC_G3RESD14	(*( VADC_G0RES0_type *) 0xF00213B8U)	/* Group 3 Result Reg. 14, Debug */
#define VADC_G3RESD15	(*( VADC_G0RES0_type *) 0xF00213BCU)	/* Group 3 Result Reg. 15, Debug */
#define VADC_GLOBRCR	(*( VADC_GLOBRCR_type *) 0xF0020280U)	/* Global Result Control Register */
#define VADC_GLOBRES	(*( VADC_GLOBRES_type *) 0xF0020300U)	/* Global Result Register */
#define VADC_GLOBRESD	(*( VADC_GLOBRES_type *) 0xF0020380U)	/* Global Result Register, Debug */
#define VADC_G0VFR	(*( VADC_G0VFR_type *) 0xF00205F8U)	/* Valid Flag Register, Group 0 */
#define VADC_G1VFR	(*( VADC_G0VFR_type *) 0xF00209F8U)	/* Valid Flag Register, Group 1 */
#define VADC_G2VFR	(*( VADC_G0VFR_type *) 0xF0020DF8U)	/* Valid Flag Register, Group 2 */
#define VADC_G3VFR	(*( VADC_G0VFR_type *) 0xF00211F8U)	/* Valid Flag Register, Group 3 */
#define VADC_G0SYNCTR	(*( VADC_G0SYNCTR_type *) 0xF00204C0U)	/* Synchronization Control Register, Group 0 */
#define VADC_G1SYNCTR	(*( VADC_G0SYNCTR_type *) 0xF00208C0U)	/* Synchronization Control Register, Group 1 */
#define VADC_G2SYNCTR	(*( VADC_G0SYNCTR_type *) 0xF0020CC0U)	/* Synchronization Control Register, Group 2 */
#define VADC_G3SYNCTR	(*( VADC_G0SYNCTR_type *) 0xF00210C0U)	/* Synchronization Control Register, Group 3 */
#define VADC_GLOBTF	(*( VADC_GLOBTF_type *) 0xF0020160U)	/* Global Test Functions Register */
#define VADC_GLOBTE	(*( VADC_GLOBTE_type *) 0xF0020164U)	/* Global Test Enable Register */
#define VADC_G0EMUXCTR	(*( VADC_G0EMUXCTR_type *) 0xF00205F0U)	/* E0ternal Multiplexer Control Register, Group x */
#define VADC_G1EMUXCTR	(*( VADC_G0EMUXCTR_type *) 0xF00209F0U)	/* E1ternal Multiplexer Control Register, Group x */
#define VADC_G2EMUXCTR	(*( VADC_G0EMUXCTR_type *) 0xF0020DF0U)	/* E2ternal Multiplexer Control Register, Group x */
#define VADC_G3EMUXCTR	(*( VADC_G0EMUXCTR_type *) 0xF00211F0U)	/* E3ternal Multiplexer Control Register, Group x */
#define VADC_EMUXSEL	(*( VADC_EMUXSEL_type *) 0xF00203F0U)	/* External Multiplexer Select Register */
#define VADC_G0SEFLAG	(*( VADC_G0SEFLAG_type *) 0xF0020588U)	/* Source Event Flag Register, Group 0 */
#define VADC_G1SEFLAG	(*( VADC_G0SEFLAG_type *) 0xF0020988U)	/* Source Event Flag Register, Group 1 */
#define VADC_G2SEFLAG	(*( VADC_G0SEFLAG_type *) 0xF0020D88U)	/* Source Event Flag Register, Group 2 */
#define VADC_G3SEFLAG	(*( VADC_G0SEFLAG_type *) 0xF0021188U)	/* Source Event Flag Register, Group 3 */
#define VADC_G0CEFLAG	(*( VADC_G0CEFLAG_type *) 0xF0020580U)	/* Channel Event Flag Register, Group 0 */
#define VADC_G1CEFLAG	(*( VADC_G0CEFLAG_type *) 0xF0020980U)	/* Channel Event Flag Register, Group 1 */
#define VADC_G2CEFLAG	(*( VADC_G0CEFLAG_type *) 0xF0020D80U)	/* Channel Event Flag Register, Group 2 */
#define VADC_G3CEFLAG	(*( VADC_G0CEFLAG_type *) 0xF0021180U)	/* Channel Event Flag Register, Group 3 */
#define VADC_G0REFLAG	(*( VADC_G0REFLAG_type *) 0xF0020584U)	/* Result Event Flag Register, Group 0 */
#define VADC_G1REFLAG	(*( VADC_G0REFLAG_type *) 0xF0020984U)	/* Result Event Flag Register, Group 1 */
#define VADC_G2REFLAG	(*( VADC_G0REFLAG_type *) 0xF0020D84U)	/* Result Event Flag Register, Group 2 */
#define VADC_G3REFLAG	(*( VADC_G0REFLAG_type *) 0xF0021184U)	/* Result Event Flag Register, Group 3 */
#define VADC_G0SEFCLR	(*( VADC_G0SEFCLR_type *) 0xF0020598U)	/* Source Event Flag Clear Register, Group 0 */
#define VADC_G1SEFCLR	(*( VADC_G0SEFCLR_type *) 0xF0020998U)	/* Source Event Flag Clear Register, Group 1 */
#define VADC_G2SEFCLR	(*( VADC_G0SEFCLR_type *) 0xF0020D98U)	/* Source Event Flag Clear Register, Group 2 */
#define VADC_G3SEFCLR	(*( VADC_G0SEFCLR_type *) 0xF0021198U)	/* Source Event Flag Clear Register, Group 3 */
#define VADC_G0CEFCLR	(*( VADC_G0CEFCLR_type *) 0xF0020590U)	/* Channel Event Flag Clear Register, Group 0 */
#define VADC_G1CEFCLR	(*( VADC_G0CEFCLR_type *) 0xF0020990U)	/* Channel Event Flag Clear Register, Group 1 */
#define VADC_G2CEFCLR	(*( VADC_G0CEFCLR_type *) 0xF0020D90U)	/* Channel Event Flag Clear Register, Group 2 */
#define VADC_G3CEFCLR	(*( VADC_G0CEFCLR_type *) 0xF0021190U)	/* Channel Event Flag Clear Register, Group 3 */
#define VADC_G0REFCLR	(*( VADC_G0REFCLR_type *) 0xF0020594U)	/* Result Event Flag Clear Register, Group 0 */
#define VADC_G1REFCLR	(*( VADC_G0REFCLR_type *) 0xF0020994U)	/* Result Event Flag Clear Register, Group 1 */
#define VADC_G2REFCLR	(*( VADC_G0REFCLR_type *) 0xF0020D94U)	/* Result Event Flag Clear Register, Group 2 */
#define VADC_G3REFCLR	(*( VADC_G0REFCLR_type *) 0xF0021194U)	/* Result Event Flag Clear Register, Group 3 */
#define VADC_GLOBEFLAG	(*( VADC_GLOBEFLAG_type *) 0xF00200E0U)	/* Global Event Flag Register */
#define VADC_G0SEVNP	(*( VADC_G0SEVNP_type *) 0xF00205C0U)	/* Source Event Node Pointer Register, Group 0 */
#define VADC_G1SEVNP	(*( VADC_G0SEVNP_type *) 0xF00209C0U)	/* Source Event Node Pointer Register, Group 1 */
#define VADC_G2SEVNP	(*( VADC_G0SEVNP_type *) 0xF0020DC0U)	/* Source Event Node Pointer Register, Group 2 */
#define VADC_G3SEVNP	(*( VADC_G0SEVNP_type *) 0xF00211C0U)	/* Source Event Node Pointer Register, Group 3 */
#define VADC_G0CEVNP0	(*( VADC_G0CEVNP0_type *) 0xF00205A0U)	/* Channel Event Node Pointer Register 0, Group 0 */
#define VADC_G1CEVNP0	(*( VADC_G0CEVNP0_type *) 0xF00209A0U)	/* Channel Event Node Pointer Register 0, Group 1 */
#define VADC_G2CEVNP0	(*( VADC_G0CEVNP0_type *) 0xF0020DA0U)	/* Channel Event Node Pointer Register 0, Group 2 */
#define VADC_G3CEVNP0	(*( VADC_G0CEVNP0_type *) 0xF00211A0U)	/* Channel Event Node Pointer Register 0, Group 3 */
#define VADC_G0CEVNP1	(*( VADC_G0CEVNP1_type *) 0xF00205A4U)	/* Channel Event Node Pointer Register 1, Group 0 */
#define VADC_G1CEVNP1	(*( VADC_G0CEVNP1_type *) 0xF00209A4U)	/* Channel Event Node Pointer Register 1, Group 1 */
#define VADC_G2CEVNP1	(*( VADC_G0CEVNP1_type *) 0xF0020DA4U)	/* Channel Event Node Pointer Register 1, Group 2 */
#define VADC_G3CEVNP1	(*( VADC_G0CEVNP1_type *) 0xF00211A4U)	/* Channel Event Node Pointer Register 1, Group 3 */
#define VADC_G0REVNP0	(*( VADC_G0REVNP0_type *) 0xF00205B0U)	/* Result Event Node Pointer Register 0, Group 0 */
#define VADC_G1REVNP0	(*( VADC_G0REVNP0_type *) 0xF00209B0U)	/* Result Event Node Pointer Register 0, Group 1 */
#define VADC_G2REVNP0	(*( VADC_G0REVNP0_type *) 0xF0020DB0U)	/* Result Event Node Pointer Register 0, Group 2 */
#define VADC_G3REVNP0	(*( VADC_G0REVNP0_type *) 0xF00211B0U)	/* Result Event Node Pointer Register 0, Group 3 */
#define VADC_G0REVNP1	(*( VADC_G0REVNP1_type *) 0xF00205B4U)	/* Result Event Node Pointer Register 1, Group 0 */
#define VADC_G1REVNP1	(*( VADC_G0REVNP1_type *) 0xF00209B4U)	/* Result Event Node Pointer Register 1, Group 1 */
#define VADC_G2REVNP1	(*( VADC_G0REVNP1_type *) 0xF0020DB4U)	/* Result Event Node Pointer Register 1, Group 2 */
#define VADC_G3REVNP1	(*( VADC_G0REVNP1_type *) 0xF00211B4U)	/* Result Event Node Pointer Register 1, Group 3 */
#define VADC_GLOBEVNP	(*( VADC_GLOBEVNP_type *) 0xF0020140U)	/* Global Event Node Pointer Register */
#define VADC_G0SRACT	(*( VADC_G0SRACT_type *) 0xF00205C8U)	/* Service Request Software Activation Trigger, Group 0 */
#define VADC_G1SRACT	(*( VADC_G0SRACT_type *) 0xF00209C8U)	/* Service Request Software Activation Trigger, Group 1 */
#define VADC_G2SRACT	(*( VADC_G0SRACT_type *) 0xF0020DC8U)	/* Service Request Software Activation Trigger, Group 2 */
#define VADC_G3SRACT	(*( VADC_G0SRACT_type *) 0xF00211C8U)	/* Service Request Software Activation Trigger, Group 3 */
#define P00_ID	(*( MTU_ID_type *) 0xF003A008U)	/* Identification Register */
#define P02_ID	(*( MTU_ID_type *) 0xF003A208U)	/* Identification Register */
#define P10_ID	(*( MTU_ID_type *) 0xF003B008U)	/* Identification Register */
#define P11_ID	(*( MTU_ID_type *) 0xF003B108U)	/* Identification Register */
#define P13_ID	(*( MTU_ID_type *) 0xF003B308U)	/* Identification Register */
#define P14_ID	(*( MTU_ID_type *) 0xF003B408U)	/* Identification Register */
#define P15_ID	(*( MTU_ID_type *) 0xF003B508U)	/* Identification Register */
#define P20_ID	(*( MTU_ID_type *) 0xF003C008U)	/* Identification Register */
#define P21_ID	(*( MTU_ID_type *) 0xF003C108U)	/* Identification Register */
#define P22_ID	(*( MTU_ID_type *) 0xF003C208U)	/* Identification Register */
#define P23_ID	(*( MTU_ID_type *) 0xF003C308U)	/* Identification Register */
#define P33_ID	(*( MTU_ID_type *) 0xF003D308U)	/* Identification Register */
#define P34_ID	(*( MTU_ID_type *) 0xF003D408U)	/* Identification Register */
#define P40_ID	(*( MTU_ID_type *) 0xF003E008U)	/* Identification Register */
#define P41_ID	(*( MTU_ID_type *) 0xF003E108U)	/* Identification Register */
#define P00_IOCR0	(*( P00_IOCR0_type *) 0xF003A010U)	/* Port 00 Input/Output Control Register 0 */
#define P02_IOCR0	(*( P00_IOCR0_type *) 0xF003A210U)	/* Port 02 Input/Output Control Register 0 */
#define P13_IOCR0	(*( P00_IOCR0_type *) 0xF003B310U)	/* Port 13 Input/Output Control Register 0 */
#define P14_IOCR0	(*( P00_IOCR0_type *) 0xF003B410U)	/* Port 14 Input/Output Control Register 0 */
#define P15_IOCR0	(*( P00_IOCR0_type *) 0xF003B510U)	/* Port 15 Input/Output Control Register 0 */
#define P22_IOCR0	(*( P00_IOCR0_type *) 0xF003C210U)	/* Port 22 Input/Output Control Register 0 */
#define P33_IOCR0	(*( P00_IOCR0_type *) 0xF003D310U)	/* Port 33 Input/Output Control Register 0 */
#define P34_IOCR0	(*( P00_IOCR0_type *) 0xF003D410U)	/* Port 34 Input/Output Control Register 0 */
#define P00_IOCR4	(*( P00_IOCR4_type *) 0xF003A014U)	/* Port 00 Input/Output Control Register 4 */
#define P02_IOCR4	(*( P00_IOCR4_type *) 0xF003A214U)	/* Port 02 Input/Output Control Register 4 */
#define P14_IOCR4	(*( P00_IOCR4_type *) 0xF003B414U)	/* Port 14 Input/Output Control Register 4 */
#define P15_IOCR4	(*( P00_IOCR4_type *) 0xF003B514U)	/* Port 15 Input/Output Control Register 4 */
#define P21_IOCR4	(*( P00_IOCR4_type *) 0xF003C114U)	/* Port 21 Input/Output Control Register 4 */
#define P33_IOCR4	(*( P00_IOCR4_type *) 0xF003D314U)	/* Port 33 Input/Output Control Register 4 */
#define P00_IOCR8	(*( P00_IOCR8_type *) 0xF003A018U)	/* Port 00 Input/Output Control Register 8 */
#define P11_IOCR8	(*( P00_IOCR8_type *) 0xF003B118U)	/* Port 11 Input/Output Control Register 8 */
#define P20_IOCR8	(*( P00_IOCR8_type *) 0xF003C018U)	/* Port 20 Input/Output Control Register 8 */
#define P33_IOCR8	(*( P00_IOCR8_type *) 0xF003D318U)	/* Port 33 Input/Output Control Register 8 */
#define P00_PDR0	(*( P00_PDR0_type *) 0xF003A040U)	/* Port 00 Pad Driver Mode 0 Register */
#define P02_PDR0	(*( P00_PDR0_type *) 0xF003A240U)	/* Port 02 Pad Driver Mode 0 Register */
#define P14_PDR0	(*( P00_PDR0_type *) 0xF003B440U)	/* Port 14 Pad Driver Mode 0 Register */
#define P15_PDR0	(*( P00_PDR0_type *) 0xF003B540U)	/* Port 15 Pad Driver Mode 0 Register */
#define P33_PDR0	(*( P00_PDR0_type *) 0xF003D340U)	/* Port 33 Pad Driver Mode 0 Register */
#define P40_PDISC	(*( P40_PDISC_type *) 0xF003E060U)	/* Port 40 Pin Function Decision Control Register */
#define P41_PDISC	(*( P40_PDISC_type *) 0xF003E160U)	/* Port 41 Pin Function Decision Control Register */
#define P00_OUT	(*( P00_OUT_type *) 0xF003A000U)	/* Port 00 Output Register */
#define P02_OUT	(*( P00_OUT_type *) 0xF003A200U)	/* Port 02 Output Register */
#define P10_OUT	(*( P00_OUT_type *) 0xF003B000U)	/* Port 10 Output Register */
#define P11_OUT	(*( P00_OUT_type *) 0xF003B100U)	/* Port 11 Output Register */
#define P13_OUT	(*( P00_OUT_type *) 0xF003B300U)	/* Port 13 Output Register */
#define P14_OUT	(*( P00_OUT_type *) 0xF003B400U)	/* Port 14 Output Register */
#define P15_OUT	(*( P00_OUT_type *) 0xF003B500U)	/* Port 15 Output Register */
#define P20_OUT	(*( P00_OUT_type *) 0xF003C000U)	/* Port 20 Output Register */
#define P21_OUT	(*( P00_OUT_type *) 0xF003C100U)	/* Port 21 Output Register */
#define P22_OUT	(*( P00_OUT_type *) 0xF003C200U)	/* Port 22 Output Register */
#define P23_OUT	(*( P00_OUT_type *) 0xF003C300U)	/* Port 23 Output Register */
#define P33_OUT	(*( P00_OUT_type *) 0xF003D300U)	/* Port 33 Output Register */
#define P34_OUT	(*( P00_OUT_type *) 0xF003D400U)	/* Port 34 Output Register */
#define P00_OMR	(*( P00_OMR_type *) 0xF003A004U)	/* Port 00 Output Modification Register */
#define P02_OMR	(*( P00_OMR_type *) 0xF003A204U)	/* Port 02 Output Modification Register */
#define P10_OMR	(*( P00_OMR_type *) 0xF003B004U)	/* Port 10 Output Modification Register */
#define P11_OMR	(*( P00_OMR_type *) 0xF003B104U)	/* Port 11 Output Modification Register */
#define P13_OMR	(*( P00_OMR_type *) 0xF003B304U)	/* Port 13 Output Modification Register */
#define P14_OMR	(*( P00_OMR_type *) 0xF003B404U)	/* Port 14 Output Modification Register */
#define P15_OMR	(*( P00_OMR_type *) 0xF003B504U)	/* Port 15 Output Modification Register */
#define P20_OMR	(*( P00_OMR_type *) 0xF003C004U)	/* Port 20 Output Modification Register */
#define P21_OMR	(*( P00_OMR_type *) 0xF003C104U)	/* Port 21 Output Modification Register */
#define P22_OMR	(*( P00_OMR_type *) 0xF003C204U)	/* Port 22 Output Modification Register */
#define P23_OMR	(*( P00_OMR_type *) 0xF003C304U)	/* Port 23 Output Modification Register */
#define P33_OMR	(*( P00_OMR_type *) 0xF003D304U)	/* Port 33 Output Modification Register */
#define P34_OMR	(*( P00_OMR_type *) 0xF003D404U)	/* Port 34 Output Modification Register */
#define P00_OMSR	(*( P00_OMSR_type *) 0xF003A090U)	/* Port 00 Output Modification Set Register */
#define P02_OMSR	(*( P00_OMSR_type *) 0xF003A290U)	/* Port 02 Output Modification Set Register */
#define P10_OMSR	(*( P00_OMSR_type *) 0xF003B090U)	/* Port 10 Output Modification Set Register */
#define P11_OMSR	(*( P00_OMSR_type *) 0xF003B190U)	/* Port 11 Output Modification Set Register */
#define P13_OMSR	(*( P00_OMSR_type *) 0xF003B390U)	/* Port 13 Output Modification Set Register */
#define P14_OMSR	(*( P00_OMSR_type *) 0xF003B490U)	/* Port 14 Output Modification Set Register */
#define P15_OMSR	(*( P00_OMSR_type *) 0xF003B590U)	/* Port 15 Output Modification Set Register */
#define P20_OMSR	(*( P00_OMSR_type *) 0xF003C090U)	/* Port 20 Output Modification Set Register */
#define P21_OMSR	(*( P00_OMSR_type *) 0xF003C190U)	/* Port 21 Output Modification Set Register */
#define P22_OMSR	(*( P00_OMSR_type *) 0xF003C290U)	/* Port 22 Output Modification Set Register */
#define P23_OMSR	(*( P00_OMSR_type *) 0xF003C390U)	/* Port 23 Output Modification Set Register */
#define P33_OMSR	(*( P00_OMSR_type *) 0xF003D390U)	/* Port 33 Output Modification Set Register */
#define P34_OMSR	(*( P00_OMSR_type *) 0xF003D490U)	/* Port 34 Output Modification Set Register */
#define P00_OMSR0	(*( P00_OMSR0_type *) 0xF003A070U)	/* Port 00 Output Modification Set Register 0 */
#define P02_OMSR0	(*( P00_OMSR0_type *) 0xF003A270U)	/* Port 02 Output Modification Set Register 0 */
#define P10_OMSR0	(*( P00_OMSR0_type *) 0xF003B070U)	/* Port 10 Output Modification Set Register 0 */
#define P11_OMSR0	(*( P00_OMSR0_type *) 0xF003B170U)	/* Port 11 Output Modification Set Register 0 */
#define P13_OMSR0	(*( P00_OMSR0_type *) 0xF003B370U)	/* Port 13 Output Modification Set Register 0 */
#define P14_OMSR0	(*( P00_OMSR0_type *) 0xF003B470U)	/* Port 14 Output Modification Set Register 0 */
#define P15_OMSR0	(*( P00_OMSR0_type *) 0xF003B570U)	/* Port 15 Output Modification Set Register 0 */
#define P20_OMSR0	(*( P00_OMSR0_type *) 0xF003C070U)	/* Port 20 Output Modification Set Register 0 */
#define P21_OMSR0	(*( P00_OMSR0_type *) 0xF003C170U)	/* Port 21 Output Modification Set Register 0 */
#define P22_OMSR0	(*( P00_OMSR0_type *) 0xF003C270U)	/* Port 22 Output Modification Set Register 0 */
#define P23_OMSR0	(*( P00_OMSR0_type *) 0xF003C370U)	/* Port 23 Output Modification Set Register 0 */
#define P33_OMSR0	(*( P00_OMSR0_type *) 0xF003D370U)	/* Port 33 Output Modification Set Register 0 */
#define P34_OMSR0	(*( P00_OMSR0_type *) 0xF003D470U)	/* Port 34 Output Modification Set Register 0 */
#define P00_OMSR4	(*( P00_OMSR4_type *) 0xF003A074U)	/* Port 00 Output Modification Set Register 4 */
#define P02_OMSR4	(*( P00_OMSR4_type *) 0xF003A274U)	/* Port 02 Output Modification Set Register 4 */
#define P10_OMSR4	(*( P00_OMSR4_type *) 0xF003B074U)	/* Port 10 Output Modification Set Register 4 */
#define P11_OMSR4	(*( P00_OMSR4_type *) 0xF003B174U)	/* Port 11 Output Modification Set Register 4 */
#define P14_OMSR4	(*( P00_OMSR4_type *) 0xF003B474U)	/* Port 14 Output Modification Set Register 4 */
#define P15_OMSR4	(*( P00_OMSR4_type *) 0xF003B574U)	/* Port 15 Output Modification Set Register 4 */
#define P20_OMSR4	(*( P00_OMSR4_type *) 0xF003C074U)	/* Port 20 Output Modification Set Register 4 */
#define P21_OMSR4	(*( P00_OMSR4_type *) 0xF003C174U)	/* Port 21 Output Modification Set Register 4 */
#define P22_OMSR4	(*( P00_OMSR4_type *) 0xF003C274U)	/* Port 22 Output Modification Set Register 4 */
#define P33_OMSR4	(*( P00_OMSR4_type *) 0xF003D374U)	/* Port 33 Output Modification Set Register 4 */
#define P00_OMSR8	(*( P00_OMSR8_type *) 0xF003A078U)	/* Port 00 Output Modification Set Register 8 */
#define P02_OMSR8	(*( P00_OMSR8_type *) 0xF003A278U)	/* Port 02 Output Modification Set Register 8 */
#define P11_OMSR8	(*( P00_OMSR8_type *) 0xF003B178U)	/* Port 11 Output Modification Set Register 8 */
#define P14_OMSR8	(*( P00_OMSR8_type *) 0xF003B478U)	/* Port 14 Output Modification Set Register 8 */
#define P15_OMSR8	(*( P00_OMSR8_type *) 0xF003B578U)	/* Port 15 Output Modification Set Register 8 */
#define P20_OMSR8	(*( P00_OMSR8_type *) 0xF003C078U)	/* Port 20 Output Modification Set Register 8 */
#define P33_OMSR8	(*( P00_OMSR8_type *) 0xF003D378U)	/* Port 33 Output Modification Set Register 8 */
#define P00_OMSR12	(*( P00_OMSR12_type *) 0xF003A07CU)	/* Port 00 Output Modification Set Register 12 */
#define P11_OMSR12	(*( P00_OMSR12_type *) 0xF003B17CU)	/* Port 11 Output Modification Set Register 12 */
#define P20_OMSR12	(*( P00_OMSR12_type *) 0xF003C07CU)	/* Port 20 Output Modification Set Register 12 */
#define P33_OMSR12	(*( P00_OMSR12_type *) 0xF003D37CU)	/* Port 33 Output Modification Set Register 12 */
#define P00_OMCR	(*( P00_OMCR_type *) 0xF003A094U)	/* Port 00 Output Modification Clear Register */
#define P02_OMCR	(*( P00_OMCR_type *) 0xF003A294U)	/* Port 02 Output Modification Clear Register */
#define P10_OMCR	(*( P00_OMCR_type *) 0xF003B094U)	/* Port 10 Output Modification Clear Register */
#define P11_OMCR	(*( P00_OMCR_type *) 0xF003B194U)	/* Port 11 Output Modification Clear Register */
#define P13_OMCR	(*( P00_OMCR_type *) 0xF003B394U)	/* Port 13 Output Modification Clear Register */
#define P14_OMCR	(*( P00_OMCR_type *) 0xF003B494U)	/* Port 14 Output Modification Clear Register */
#define P15_OMCR	(*( P00_OMCR_type *) 0xF003B594U)	/* Port 15 Output Modification Clear Register */
#define P20_OMCR	(*( P00_OMCR_type *) 0xF003C094U)	/* Port 20 Output Modification Clear Register */
#define P21_OMCR	(*( P00_OMCR_type *) 0xF003C194U)	/* Port 21 Output Modification Clear Register */
#define P22_OMCR	(*( P00_OMCR_type *) 0xF003C294U)	/* Port 22 Output Modification Clear Register */
#define P23_OMCR	(*( P00_OMCR_type *) 0xF003C394U)	/* Port 23 Output Modification Clear Register */
#define P33_OMCR	(*( P00_OMCR_type *) 0xF003D394U)	/* Port 33 Output Modification Clear Register */
#define P34_OMCR	(*( P00_OMCR_type *) 0xF003D494U)	/* Port 34 Output Modification Clear Register */
#define P00_OMCR0	(*( P00_OMCR0_type *) 0xF003A080U)	/* Port 00 Output Modification Clear Register 0 */
#define P02_OMCR0	(*( P00_OMCR0_type *) 0xF003A280U)	/* Port 02 Output Modification Clear Register 0 */
#define P10_OMCR0	(*( P00_OMCR0_type *) 0xF003B080U)	/* Port 10 Output Modification Clear Register 0 */
#define P11_OMCR0	(*( P00_OMCR0_type *) 0xF003B180U)	/* Port 11 Output Modification Clear Register 0 */
#define P13_OMCR0	(*( P00_OMCR0_type *) 0xF003B380U)	/* Port 13 Output Modification Clear Register 0 */
#define P14_OMCR0	(*( P00_OMCR0_type *) 0xF003B480U)	/* Port 14 Output Modification Clear Register 0 */
#define P15_OMCR0	(*( P00_OMCR0_type *) 0xF003B580U)	/* Port 15 Output Modification Clear Register 0 */
#define P20_OMCR0	(*( P00_OMCR0_type *) 0xF003C080U)	/* Port 20 Output Modification Clear Register 0 */
#define P21_OMCR0	(*( P00_OMCR0_type *) 0xF003C180U)	/* Port 21 Output Modification Clear Register 0 */
#define P22_OMCR0	(*( P00_OMCR0_type *) 0xF003C280U)	/* Port 22 Output Modification Clear Register 0 */
#define P23_OMCR0	(*( P00_OMCR0_type *) 0xF003C380U)	/* Port 23 Output Modification Clear Register 0 */
#define P33_OMCR0	(*( P00_OMCR0_type *) 0xF003D380U)	/* Port 33 Output Modification Clear Register 0 */
#define P34_OMCR0	(*( P00_OMCR0_type *) 0xF003D480U)	/* Port 34 Output Modification Clear Register 0 */
#define P00_OMCR4	(*( P00_OMCR4_type *) 0xF003A084U)	/* Port 00 Output Modification Clear Register 4 */
#define P02_OMCR4	(*( P00_OMCR4_type *) 0xF003A284U)	/* Port 02 Output Modification Clear Register 4 */
#define P10_OMCR4	(*( P00_OMCR4_type *) 0xF003B084U)	/* Port 10 Output Modification Clear Register 4 */
#define P11_OMCR4	(*( P00_OMCR4_type *) 0xF003B184U)	/* Port 11 Output Modification Clear Register 4 */
#define P14_OMCR4	(*( P00_OMCR4_type *) 0xF003B484U)	/* Port 14 Output Modification Clear Register 4 */
#define P15_OMCR4	(*( P00_OMCR4_type *) 0xF003B584U)	/* Port 15 Output Modification Clear Register 4 */
#define P20_OMCR4	(*( P00_OMCR4_type *) 0xF003C084U)	/* Port 20 Output Modification Clear Register 4 */
#define P21_OMCR4	(*( P00_OMCR4_type *) 0xF003C184U)	/* Port 21 Output Modification Clear Register 4 */
#define P22_OMCR4	(*( P00_OMCR4_type *) 0xF003C284U)	/* Port 22 Output Modification Clear Register 4 */
#define P33_OMCR4	(*( P00_OMCR4_type *) 0xF003D384U)	/* Port 33 Output Modification Clear Register 4 */
#define P00_OMCR8	(*( P00_OMCR8_type *) 0xF003A088U)	/* Port 00 Output Modification Clear Register 8 */
#define P02_OMCR8	(*( P00_OMCR8_type *) 0xF003A288U)	/* Port 02 Output Modification Clear Register 8 */
#define P11_OMCR8	(*( P00_OMCR8_type *) 0xF003B188U)	/* Port 11 Output Modification Clear Register 8 */
#define P14_OMCR8	(*( P00_OMCR8_type *) 0xF003B488U)	/* Port 14 Output Modification Clear Register 8 */
#define P15_OMCR8	(*( P00_OMCR8_type *) 0xF003B588U)	/* Port 15 Output Modification Clear Register 8 */
#define P20_OMCR8	(*( P00_OMCR8_type *) 0xF003C088U)	/* Port 20 Output Modification Clear Register 8 */
#define P33_OMCR8	(*( P00_OMCR8_type *) 0xF003D388U)	/* Port 33 Output Modification Clear Register 8 */
#define P00_OMCR12	(*( P00_OMCR12_type *) 0xF003A08CU)	/* Port 00 Output Modification Clear Register 12 */
#define P11_OMCR12	(*( P00_OMCR12_type *) 0xF003B18CU)	/* Port 11 Output Modification Clear Register 12 */
#define P20_OMCR12	(*( P00_OMCR12_type *) 0xF003C08CU)	/* Port 20 Output Modification Clear Register 12 */
#define P33_OMCR12	(*( P00_OMCR12_type *) 0xF003D38CU)	/* Port 33 Output Modification Clear Register 12 */
#define P00_ESR	(*( P00_ESR_type *) 0xF003A050U)	/* Port 00 Emergency Stop Register */
#define P02_ESR	(*( P00_ESR_type *) 0xF003A250U)	/* Port 02 Emergency Stop Register */
#define P10_ESR	(*( P00_ESR_type *) 0xF003B050U)	/* Port 10 Emergency Stop Register */
#define P11_ESR	(*( P00_ESR_type *) 0xF003B150U)	/* Port 11 Emergency Stop Register */
#define P13_ESR	(*( P00_ESR_type *) 0xF003B350U)	/* Port 13 Emergency Stop Register */
#define P14_ESR	(*( P00_ESR_type *) 0xF003B450U)	/* Port 14 Emergency Stop Register */
#define P15_ESR	(*( P00_ESR_type *) 0xF003B550U)	/* Port 15 Emergency Stop Register */
#define P20_ESR	(*( P00_ESR_type *) 0xF003C050U)	/* Port 20 Emergency Stop Register */
#define P21_ESR	(*( P00_ESR_type *) 0xF003C150U)	/* Port 21 Emergency Stop Register */
#define P22_ESR	(*( P00_ESR_type *) 0xF003C250U)	/* Port 22 Emergency Stop Register */
#define P23_ESR	(*( P00_ESR_type *) 0xF003C350U)	/* Port 23 Emergency Stop Register */
#define P33_ESR	(*( P00_ESR_type *) 0xF003D350U)	/* Port 33 Emergency Stop Register */
#define P34_ESR	(*( P00_ESR_type *) 0xF003D450U)	/* Port 34 Emergency Stop Register */
#define P00_IN	(*( P00_IN_type *) 0xF003A024U)	/* Port 00 Input Register */
#define P02_IN	(*( P00_IN_type *) 0xF003A224U)	/* Port 02 Input Register */
#define P10_IN	(*( P00_IN_type *) 0xF003B024U)	/* Port 10 Input Register */
#define P11_IN	(*( P00_IN_type *) 0xF003B124U)	/* Port 11 Input Register */
#define P13_IN	(*( P00_IN_type *) 0xF003B324U)	/* Port 13 Input Register */
#define P14_IN	(*( P00_IN_type *) 0xF003B424U)	/* Port 14 Input Register */
#define P15_IN	(*( P00_IN_type *) 0xF003B524U)	/* Port 15 Input Register */
#define P20_IN	(*( P00_IN_type *) 0xF003C024U)	/* Port 20 Input Register */
#define P21_IN	(*( P00_IN_type *) 0xF003C124U)	/* Port 21 Input Register */
#define P22_IN	(*( P00_IN_type *) 0xF003C224U)	/* Port 22 Input Register */
#define P23_IN	(*( P00_IN_type *) 0xF003C324U)	/* Port 23 Input Register */
#define P33_IN	(*( P00_IN_type *) 0xF003D324U)	/* Port 33 Input Register */
#define P34_IN	(*( P00_IN_type *) 0xF003D424U)	/* Port 34 Input Register */
#define P40_IN	(*( P00_IN_type *) 0xF003E024U)	/* Port 40 Input Register */
#define P41_IN	(*( P00_IN_type *) 0xF003E124U)	/* Port 41 Input Register */
#define P00_ACCEN0	(*( P00_ACCEN0_type *) 0xF003A0FCU)	/* Port 00 Access Enable Register 0 */
#define P02_ACCEN0	(*( P00_ACCEN0_type *) 0xF003A2FCU)	/* Port 02 Access Enable Register 0 */
#define P10_ACCEN0	(*( P00_ACCEN0_type *) 0xF003B0FCU)	/* Port 10 Access Enable Register 0 */
#define P11_ACCEN0	(*( P00_ACCEN0_type *) 0xF003B1FCU)	/* Port 11 Access Enable Register 0 */
#define P13_ACCEN0	(*( P00_ACCEN0_type *) 0xF003B3FCU)	/* Port 13 Access Enable Register 0 */
#define P14_ACCEN0	(*( P00_ACCEN0_type *) 0xF003B4FCU)	/* Port 14 Access Enable Register 0 */
#define P15_ACCEN0	(*( P00_ACCEN0_type *) 0xF003B5FCU)	/* Port 15 Access Enable Register 0 */
#define P20_ACCEN0	(*( P00_ACCEN0_type *) 0xF003C0FCU)	/* Port 20 Access Enable Register 0 */
#define P21_ACCEN0	(*( P00_ACCEN0_type *) 0xF003C1FCU)	/* Port 21 Access Enable Register 0 */
#define P22_ACCEN0	(*( P00_ACCEN0_type *) 0xF003C2FCU)	/* Port 22 Access Enable Register 0 */
#define P23_ACCEN0	(*( P00_ACCEN0_type *) 0xF003C3FCU)	/* Port 23 Access Enable Register 0 */
#define P33_ACCEN0	(*( P00_ACCEN0_type *) 0xF003D3FCU)	/* Port 33 Access Enable Register 0 */
#define P34_ACCEN0	(*( P00_ACCEN0_type *) 0xF003D4FCU)	/* Port 34 Access Enable Register 0 */
#define P40_ACCEN0	(*( P00_ACCEN0_type *) 0xF003E0FCU)	/* Port 40 Access Enable Register 0 */
#define P41_ACCEN0	(*( P00_ACCEN0_type *) 0xF003E1FCU)	/* Port 41 Access Enable Register 0 */
#define P00_ACCEN1	(*( XBAR_PRIOH0_type *) 0xF003A0F8U)	/* Port 00 Access Enable Register 1 */
#define P02_ACCEN1	(*( XBAR_PRIOH0_type *) 0xF003A2F8U)	/* Port 02 Access Enable Register 1 */
#define P10_ACCEN1	(*( XBAR_PRIOH0_type *) 0xF003B0F8U)	/* Port 10 Access Enable Register 1 */
#define P11_ACCEN1	(*( XBAR_PRIOH0_type *) 0xF003B1F8U)	/* Port 11 Access Enable Register 1 */
#define P13_ACCEN1	(*( XBAR_PRIOH0_type *) 0xF003B3F8U)	/* Port 13 Access Enable Register 1 */
#define P14_ACCEN1	(*( XBAR_PRIOH0_type *) 0xF003B4F8U)	/* Port 14 Access Enable Register 1 */
#define P15_ACCEN1	(*( XBAR_PRIOH0_type *) 0xF003B5F8U)	/* Port 15 Access Enable Register 1 */
#define P20_ACCEN1	(*( XBAR_PRIOH0_type *) 0xF003C0F8U)	/* Port 20 Access Enable Register 1 */
#define P21_ACCEN1	(*( XBAR_PRIOH0_type *) 0xF003C1F8U)	/* Port 21 Access Enable Register 1 */
#define P22_ACCEN1	(*( XBAR_PRIOH0_type *) 0xF003C2F8U)	/* Port 22 Access Enable Register 1 */
#define P23_ACCEN1	(*( XBAR_PRIOH0_type *) 0xF003C3F8U)	/* Port 23 Access Enable Register 1 */
#define P33_ACCEN1	(*( XBAR_PRIOH0_type *) 0xF003D3F8U)	/* Port 33 Access Enable Register 1 */
#define P34_ACCEN1	(*( XBAR_PRIOH0_type *) 0xF003D4F8U)	/* Port 34 Access Enable Register 1 */
#define P40_ACCEN1	(*( XBAR_PRIOH0_type *) 0xF003E0F8U)	/* Port 40 Access Enable Register 1 */
#define P41_ACCEN1	(*( XBAR_PRIOH0_type *) 0xF003E1F8U)	/* Port 41 Access Enable Register 1 */
#define P00_IOCR12	(*( P00_IOCR12_type *) 0xF003A01CU)	/* Port 00 Input/Output Control Register 12 */
#define P00_PDR1	(*( P00_PDR1_type *) 0xF003A044U)	/* Port 00 Pad Driver Mode 1 Register */
#define P02_IOCR8	(*( P02_IOCR8_type *) 0xF003A218U)	/* Port 02 Input/Output Control Register 8 */
#define P02_PDR1	(*( P02_PDR1_type *) 0xF003A244U)	/* Port 02 Pad Driver Mode 1 Register */
#define P10_IOCR0	(*( P10_IOCR0_type *) 0xF003B010U)	/* Port 10 Input/Output Control Register 0 */
#define P10_IOCR4	(*( P10_IOCR4_type *) 0xF003B014U)	/* Port 10 Input/Output Control Register 4 */
#define P10_PDR0	(*( P10_PDR0_type *) 0xF003B040U)	/* Port 10 Pad Driver Mode 0 Register */
#define P11_IOCR0	(*( P11_IOCR0_type *) 0xF003B110U)	/* Port 11 Input/Output Control Register 0 */
#define P11_IOCR4	(*( P11_IOCR4_type *) 0xF003B114U)	/* Port 11 Input/Output Control Register 4 */
#define P11_IOCR12	(*( P11_IOCR12_type *) 0xF003B11CU)	/* Port 11 Input/Output Control Register 12 */
#define P11_PDR0	(*( P11_PDR0_type *) 0xF003B140U)	/* Port 11 Pad Driver Mode 0 Register */
#define P11_PDR1	(*( P11_PDR1_type *) 0xF003B144U)	/* Port 11 Pad Driver Mode 1 Register */
#define P13_PDR0	(*( P13_PDR0_type *) 0xF003B340U)	/* Port 13 Pad Driver Mode 0 Register */
#define P14_IOCR8	(*( P14_IOCR8_type *) 0xF003B418U)	/* Port 14 Input/Output Control Register 8 */
#define P14_PDR1	(*( P02_PDR1_type *) 0xF003B444U)	/* Port 14 Pad Driver Mode 1 Register */
#define P15_IOCR8	(*( P15_IOCR8_type *) 0xF003B518U)	/* Port 15 Input/Output Control Register 8 */
#define P15_PDR1	(*( P02_PDR1_type *) 0xF003B544U)	/* Port 15 Pad Driver Mode 1 Register */
#define P20_IOCR0	(*( P20_IOCR0_type *) 0xF003C010U)	/* Port 20 Input/Output Control Register 0 */
#define P20_IOCR4	(*( P20_IOCR4_type *) 0xF003C014U)	/* Port 20 Input/Output Control Register 4 */
#define P20_IOCR12	(*( P20_IOCR12_type *) 0xF003C01CU)	/* Port 20 Input/Output Control Register 12 */
#define P20_PDR0	(*( P20_PDR0_type *) 0xF003C040U)	/* Port 20 Pad Driver Mode 0 Register */
#define P20_PDR1	(*( P20_PDR1_type *) 0xF003C044U)	/* Port 20 Pad Driver Mode 1 Register */
#define P21_IOCR0	(*( P21_IOCR0_type *) 0xF003C110U)	/* Port 21 Input/Output Control Register 0 */
#define P21_PDR0	(*( P21_PDR0_type *) 0xF003C140U)	/* Port 21 Pad Driver Mode 0 Register */
#define P22_IOCR4	(*( P22_IOCR4_type *) 0xF003C214U)	/* Port 22 Input/Output Control Register 4 */
#define P22_PDR0	(*( P22_PDR0_type *) 0xF003C240U)	/* Port 22 Pad Driver Mode 0 Register */
#define P23_IOCR0	(*( P23_IOCR0_type *) 0xF003C310U)	/* Port 23 Input/Output Control Register 0 */
#define P23_PDR0	(*( P23_PDR0_type *) 0xF003C340U)	/* Port 23 Pad Driver Mode 0 Register */
#define P33_IOCR12	(*( P33_IOCR12_type *) 0xF003D31CU)	/* Port 33 Input/Output Control Register 12 */
#define P33_PDR1	(*( P33_PDR1_type *) 0xF003D344U)	/* Port 33 Pad Driver Mode 1 Register */
#define P34_PDR0	(*( P34_PDR0_type *) 0xF003D440U)	/* Port 34 Pad Driver Mode 0 Register */
#define P40_IOCR0	(*( P00_IOCR0_type *) 0xF003E010U)	/* Port 40 Input/Output Control Register 0 */
#define P40_IOCR4	(*( P00_IOCR4_type *) 0xF003E014U)	/* Port 40 Input/Output Control Register 4 */
#define P40_IOCR8	(*( P40_IOCR8_type *) 0xF003E018U)	/* Port 40 Input/Output Control Register 8 */
#define P40_PCSR	(*( P40_PCSR_type *) 0xF003E064U)	/* Port 40 Pin Controller Select Register */
#define P41_IOCR0	(*( P00_IOCR0_type *) 0xF003E110U)	/* Port 41 Input/Output Control Register 0 */
#define P41_IOCR4	(*( P00_IOCR4_type *) 0xF003E114U)	/* Port 41 Input/Output Control Register 4 */
#define P41_IOCR8	(*( P41_IOCR8_type *) 0xF003E118U)	/* Port 41 Input/Output Control Register 8 */
#define P41_PCSR	(*( P40_PCSR_type *) 0xF003E164U)	/* Port 41 Pin Controller Select Register */
/*lint -restore */
#endif /* Os_TC23x_DEFS_H */

/* -- End expansion of <_tc23x.h> -- */

/* These macros can be used to disable and enable individual interrupts by
 * SRC name or configuration name [$TargetHT 167] [$TargetHT 168] [$TargetHT 169]
 */
#define Os_Disable_SRC_CANINT6() SRC_CANINT6.U = 0x400U
#define Os_Disable_SRC_CAN_CAN0_INT6_ISR() Os_Disable_SRC_CANINT6()
#define Os_Enable_SRC_CANINT6() SRC_CANINT6.U = 0x401U
#define Os_Enable_SRC_CAN_CAN0_INT6_ISR() Os_Enable_SRC_CANINT6()
#define Os_IntChannel_SRC_CAN_CAN0_INT6_ISR (&SRC_CANINT6.U)
#define Os_Disable_SRC_CANINT3() SRC_CANINT3.U = 0x400U
#define Os_Disable_SRC_CAN_CAN0_INT3_ISR() Os_Disable_SRC_CANINT3()
#define Os_Enable_SRC_CANINT3() SRC_CANINT3.U = 0x402U
#define Os_Enable_SRC_CAN_CAN0_INT3_ISR() Os_Enable_SRC_CANINT3()
#define Os_IntChannel_SRC_CAN_CAN0_INT3_ISR (&SRC_CANINT3.U)
#define Os_Disable_SRC_CANINT0() SRC_CANINT0.U = 0x400U
#define Os_Disable_SRC_CAN_CAN0_INT0_ISR() Os_Disable_SRC_CANINT0()
#define Os_Enable_SRC_CANINT0() SRC_CANINT0.U = 0x403U
#define Os_Enable_SRC_CAN_CAN0_INT0_ISR() Os_Enable_SRC_CANINT0()
#define Os_IntChannel_SRC_CAN_CAN0_INT0_ISR (&SRC_CANINT0.U)
#define Os_Disable_SRC_CAN1INT7() SRC_CAN1INT7.U = 0x400U
#define Os_Disable_SRC_CAN_CAN0_INT7_ISR() Os_Disable_SRC_CAN1INT7()
#define Os_Enable_SRC_CAN1INT7() SRC_CAN1INT7.U = 0x404U
#define Os_Enable_SRC_CAN_CAN0_INT7_ISR() Os_Enable_SRC_CAN1INT7()
#define Os_IntChannel_SRC_CAN_CAN0_INT7_ISR (&SRC_CAN1INT7.U)
#define Os_Disable_SRC_CANINT4() SRC_CANINT4.U = 0x400U
#define Os_Disable_SRC_CAN_CAN0_INT4_ISR() Os_Disable_SRC_CANINT4()
#define Os_Enable_SRC_CANINT4() SRC_CANINT4.U = 0x405U
#define Os_Enable_SRC_CAN_CAN0_INT4_ISR() Os_Enable_SRC_CANINT4()
#define Os_IntChannel_SRC_CAN_CAN0_INT4_ISR (&SRC_CANINT4.U)
#define Os_Disable_SRC_CANINT1() SRC_CANINT1.U = 0x400U
#define Os_Disable_SRC_CAN_CAN0_INT1_ISR() Os_Disable_SRC_CANINT1()
#define Os_Enable_SRC_CANINT1() SRC_CANINT1.U = 0x406U
#define Os_Enable_SRC_CAN_CAN0_INT1_ISR() Os_Enable_SRC_CANINT1()
#define Os_IntChannel_SRC_CAN_CAN0_INT1_ISR (&SRC_CANINT1.U)
#define Os_Disable_SRC_CANINT8() SRC_CANINT8.U = 0x400U
#define Os_Disable_SRC_CAN_CAN0_INT8_ISR() Os_Disable_SRC_CANINT8()
#define Os_Enable_SRC_CANINT8() SRC_CANINT8.U = 0x407U
#define Os_Enable_SRC_CAN_CAN0_INT8_ISR() Os_Enable_SRC_CANINT8()
#define Os_IntChannel_SRC_CAN_CAN0_INT8_ISR (&SRC_CANINT8.U)
#define Os_Disable_SRC_CANINT5() SRC_CANINT5.U = 0x400U
#define Os_Disable_SRC_CAN_CAN0_INT5_ISR() Os_Disable_SRC_CANINT5()
#define Os_Enable_SRC_CANINT5() SRC_CANINT5.U = 0x408U
#define Os_Enable_SRC_CAN_CAN0_INT5_ISR() Os_Enable_SRC_CANINT5()
#define Os_IntChannel_SRC_CAN_CAN0_INT5_ISR (&SRC_CANINT5.U)
#define Os_Disable_SRC_CANINT2() SRC_CANINT2.U = 0x400U
#define Os_Disable_SRC_CAN_CAN0_INT2_ISR() Os_Disable_SRC_CANINT2()
#define Os_Enable_SRC_CANINT2() SRC_CANINT2.U = 0x409U
#define Os_Enable_SRC_CAN_CAN0_INT2_ISR() Os_Enable_SRC_CANINT2()
#define Os_IntChannel_SRC_CAN_CAN0_INT2_ISR (&SRC_CANINT2.U)
#define Os_Disable_SRC_DMACH6() SRC_DMACH6.U = 0x400U
#define Os_Disable_DMA_ISR_QSPI3RX() Os_Disable_SRC_DMACH6()
#define Os_Enable_SRC_DMACH6() SRC_DMACH6.U = 0x40aU
#define Os_Enable_DMA_ISR_QSPI3RX() Os_Enable_SRC_DMACH6()
#define Os_IntChannel_DMA_ISR_QSPI3RX (&SRC_DMACH6.U)
#define Os_Disable_SRC_DMACH7() SRC_DMACH7.U = 0x400U
#define Os_Disable_DMA_ISR_QSPI3TX() Os_Disable_SRC_DMACH7()
#define Os_Enable_SRC_DMACH7() SRC_DMACH7.U = 0x40bU
#define Os_Enable_DMA_ISR_QSPI3TX() Os_Enable_SRC_DMACH7()
#define Os_IntChannel_DMA_ISR_QSPI3TX (&SRC_DMACH7.U)
#define Os_Disable_SRC_DMACH4() SRC_DMACH4.U = 0x400U
#define Os_Disable_DMA_ISR_QSPI2RX() Os_Disable_SRC_DMACH4()
#define Os_Enable_SRC_DMACH4() SRC_DMACH4.U = 0x40cU
#define Os_Enable_DMA_ISR_QSPI2RX() Os_Enable_SRC_DMACH4()
#define Os_IntChannel_DMA_ISR_QSPI2RX (&SRC_DMACH4.U)
#define Os_Disable_SRC_DMACH5() SRC_DMACH5.U = 0x400U
#define Os_Disable_DMA_ISR_QSPI2TX() Os_Disable_SRC_DMACH5()
#define Os_Enable_SRC_DMACH5() SRC_DMACH5.U = 0x40dU
#define Os_Enable_DMA_ISR_QSPI2TX() Os_Enable_SRC_DMACH5()
#define Os_IntChannel_DMA_ISR_QSPI2TX (&SRC_DMACH5.U)
#define Os_Disable_SRC_STM0SR0() SRC_STM0SR0.U = 0x400U
#define Os_Disable_MAIN_OSISR_P_PIM1ms() Os_Disable_SRC_STM0SR0()
#define Os_Enable_SRC_STM0SR0() SRC_STM0SR0.U = 0x40eU
#define Os_Enable_MAIN_OSISR_P_PIM1ms() Os_Enable_SRC_STM0SR0()
#define Os_IntChannel_MAIN_OSISR_P_PIM1ms (&SRC_STM0SR0.U)
#define Os_Disable_SRC_QSPI3ERR() SRC_QSPI3ERR.U = 0x400U
#define Os_Disable_SRC_QSPI_QSPI3_ERR_ISR() Os_Disable_SRC_QSPI3ERR()
#define Os_Enable_SRC_QSPI3ERR() SRC_QSPI3ERR.U = 0x40fU
#define Os_Enable_SRC_QSPI_QSPI3_ERR_ISR() Os_Enable_SRC_QSPI3ERR()
#define Os_IntChannel_SRC_QSPI_QSPI3_ERR_ISR (&SRC_QSPI3ERR.U)
#define Os_Disable_SRC_QSPI3PT() SRC_QSPI3PT.U = 0x400U
#define Os_Disable_SRC_QSPI_QSPI3_PT_ISR() Os_Disable_SRC_QSPI3PT()
#define Os_Enable_SRC_QSPI3PT() SRC_QSPI3PT.U = 0x410U
#define Os_Enable_SRC_QSPI_QSPI3_PT_ISR() Os_Enable_SRC_QSPI3PT()
#define Os_IntChannel_SRC_QSPI_QSPI3_PT_ISR (&SRC_QSPI3PT.U)
#define Os_Disable_SRC_QSPI3U() SRC_QSPI3U.U = 0x400U
#define Os_Disable_SRC_QSPI_QSPI3_U_ISR() Os_Disable_SRC_QSPI3U()
#define Os_Enable_SRC_QSPI3U() SRC_QSPI3U.U = 0x411U
#define Os_Enable_SRC_QSPI_QSPI3_U_ISR() Os_Enable_SRC_QSPI3U()
#define Os_IntChannel_SRC_QSPI_QSPI3_U_ISR (&SRC_QSPI3U.U)
#define Os_Disable_SRC_QSPI2ERR() SRC_QSPI2ERR.U = 0x400U
#define Os_Disable_SRC_QSPI_QSPI2_ERR_ISR() Os_Disable_SRC_QSPI2ERR()
#define Os_Enable_SRC_QSPI2ERR() SRC_QSPI2ERR.U = 0x412U
#define Os_Enable_SRC_QSPI_QSPI2_ERR_ISR() Os_Enable_SRC_QSPI2ERR()
#define Os_IntChannel_SRC_QSPI_QSPI2_ERR_ISR (&SRC_QSPI2ERR.U)
#define Os_Disable_SRC_QSPI2PT() SRC_QSPI2PT.U = 0x400U
#define Os_Disable_SRC_QSPI_QSPI2_PT_ISR() Os_Disable_SRC_QSPI2PT()
#define Os_Enable_SRC_QSPI2PT() SRC_QSPI2PT.U = 0x413U
#define Os_Enable_SRC_QSPI_QSPI2_PT_ISR() Os_Enable_SRC_QSPI2PT()
#define Os_IntChannel_SRC_QSPI_QSPI2_PT_ISR (&SRC_QSPI2PT.U)
#define Os_Disable_SRC_QSPI2U() SRC_QSPI2U.U = 0x400U
#define Os_Disable_SRC_QSPI_QSPI2_U_ISR() Os_Disable_SRC_QSPI2U()
#define Os_Enable_SRC_QSPI2U() SRC_QSPI2U.U = 0x414U
#define Os_Enable_SRC_QSPI_QSPI2_U_ISR() Os_Enable_SRC_QSPI2U()
#define Os_IntChannel_SRC_QSPI_QSPI2_U_ISR (&SRC_QSPI2U.U)
#define Os_Disable_SRC_GPSR00() SRC_GPSR00.U = 0x400U
#define Os_Disable_TSKSRV_ACTIVATION_MANAGER_IT() Os_Disable_SRC_GPSR00()
#define Os_Enable_SRC_GPSR00() SRC_GPSR00.U = 0x415U
#define Os_Enable_TSKSRV_ACTIVATION_MANAGER_IT() Os_Enable_SRC_GPSR00()
#define Os_IntChannel_TSKSRV_ACTIVATION_MANAGER_IT (&SRC_GPSR00.U)
#define Os_Disable_SRC_VADCG0SR0() SRC_VADCG0SR0.U = 0x400U
#define Os_Disable_ISR_GRP_0_END_OF_CONV() Os_Disable_SRC_VADCG0SR0()
#define Os_Enable_SRC_VADCG0SR0() SRC_VADCG0SR0.U = 0x416U
#define Os_Enable_ISR_GRP_0_END_OF_CONV() Os_Enable_SRC_VADCG0SR0()
#define Os_IntChannel_ISR_GRP_0_END_OF_CONV (&SRC_VADCG0SR0.U)
#define Os_Disable_SRC_GTMTOM07() SRC_GTMTOM07.U = 0x400U
#define Os_Disable_SRC_GTM_GTM0_TOM0_7_ISR() Os_Disable_SRC_GTMTOM07()
#define Os_Enable_SRC_GTMTOM07() SRC_GTMTOM07.U = 0x417U
#define Os_Enable_SRC_GTM_GTM0_TOM0_7_ISR() Os_Enable_SRC_GTMTOM07()
#define Os_IntChannel_SRC_GTM_GTM0_TOM0_7_ISR (&SRC_GTMTOM07.U)
#define Os_Disable_SRC_GTMTIM03() SRC_GTMTIM03.U = 0x400U
#define Os_Disable_SRC_GTM_GTM0_TIM0_3_ISR() Os_Disable_SRC_GTMTIM03()
#define Os_Enable_SRC_GTMTIM03() SRC_GTMTIM03.U = 0x418U
#define Os_Enable_SRC_GTM_GTM0_TIM0_3_ISR() Os_Enable_SRC_GTMTIM03()
#define Os_IntChannel_SRC_GTM_GTM0_TIM0_3_ISR (&SRC_GTMTIM03.U)

/* These macros can be used to disable and enable in one call, all of the
 * configured individual interrupts that are defined as Os_Disable_x and
 * Os_Enable_x above
 * [$TargetHT 170] [$TargetHT 171]
*/
#define Os_DisableAllConfiguredInterrupts() Os_Disable_SRC_CAN_CAN0_INT6_ISR();\
  Os_Disable_SRC_CAN_CAN0_INT3_ISR();\
  Os_Disable_SRC_CAN_CAN0_INT0_ISR();\
  Os_Disable_SRC_CAN_CAN0_INT7_ISR();\
  Os_Disable_SRC_CAN_CAN0_INT4_ISR();\
  Os_Disable_SRC_CAN_CAN0_INT1_ISR();\
  Os_Disable_SRC_CAN_CAN0_INT8_ISR();\
  Os_Disable_SRC_CAN_CAN0_INT5_ISR();\
  Os_Disable_SRC_CAN_CAN0_INT2_ISR();\
  Os_Disable_DMA_ISR_QSPI3RX();\
  Os_Disable_DMA_ISR_QSPI3TX();\
  Os_Disable_DMA_ISR_QSPI2RX();\
  Os_Disable_DMA_ISR_QSPI2TX();\
  Os_Disable_MAIN_OSISR_P_PIM1ms();\
  Os_Disable_SRC_QSPI_QSPI3_ERR_ISR();\
  Os_Disable_SRC_QSPI_QSPI3_PT_ISR();\
  Os_Disable_SRC_QSPI_QSPI3_U_ISR();\
  Os_Disable_SRC_QSPI_QSPI2_ERR_ISR();\
  Os_Disable_SRC_QSPI_QSPI2_PT_ISR();\
  Os_Disable_SRC_QSPI_QSPI2_U_ISR();\
  Os_Disable_TSKSRV_ACTIVATION_MANAGER_IT();\
  Os_Disable_ISR_GRP_0_END_OF_CONV();\
  Os_Disable_SRC_GTM_GTM0_TOM0_7_ISR();\
  Os_Disable_SRC_GTM_GTM0_TIM0_3_ISR()
#define Os_EnableAllConfiguredInterrupts() Os_Enable_SRC_CAN_CAN0_INT6_ISR();\
  Os_Enable_SRC_CAN_CAN0_INT3_ISR();\
  Os_Enable_SRC_CAN_CAN0_INT0_ISR();\
  Os_Enable_SRC_CAN_CAN0_INT7_ISR();\
  Os_Enable_SRC_CAN_CAN0_INT4_ISR();\
  Os_Enable_SRC_CAN_CAN0_INT1_ISR();\
  Os_Enable_SRC_CAN_CAN0_INT8_ISR();\
  Os_Enable_SRC_CAN_CAN0_INT5_ISR();\
  Os_Enable_SRC_CAN_CAN0_INT2_ISR();\
  Os_Enable_DMA_ISR_QSPI3RX();\
  Os_Enable_DMA_ISR_QSPI3TX();\
  Os_Enable_DMA_ISR_QSPI2RX();\
  Os_Enable_DMA_ISR_QSPI2TX();\
  Os_Enable_MAIN_OSISR_P_PIM1ms();\
  Os_Enable_SRC_QSPI_QSPI3_ERR_ISR();\
  Os_Enable_SRC_QSPI_QSPI3_PT_ISR();\
  Os_Enable_SRC_QSPI_QSPI3_U_ISR();\
  Os_Enable_SRC_QSPI_QSPI2_ERR_ISR();\
  Os_Enable_SRC_QSPI_QSPI2_PT_ISR();\
  Os_Enable_SRC_QSPI_QSPI2_U_ISR();\
  Os_Enable_TSKSRV_ACTIVATION_MANAGER_IT();\
  Os_Enable_ISR_GRP_0_END_OF_CONV();\
  Os_Enable_SRC_GTM_GTM0_TOM0_7_ISR();\
  Os_Enable_SRC_GTM_GTM0_TIM0_3_ISR()
#endif /* OS_DISABLEINTERRUPTS_H */
